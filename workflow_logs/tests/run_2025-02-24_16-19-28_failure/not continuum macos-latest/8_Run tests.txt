2025-02-24T16:21:38.0748120Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T16:21:38.0757760Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T16:21:38.0813250Z shell: /bin/bash -l {0}
2025-02-24T16:21:38.0813530Z env:
2025-02-24T16:21:38.0813700Z   CACHE_NUMBER: 0
2025-02-24T16:21:38.0814260Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:21:38.0815700Z   CODECOV_TOKEN: ***
2025-02-24T16:21:38.0815980Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-02-24T16:21:38.0816250Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-02-24T16:21:38.0816560Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:21:38.0816900Z ##[endgroup]
2025-02-24T16:21:53.4226990Z ============================= test session starts ==============================
2025-02-24T16:21:53.4227650Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T16:21:53.4228150Z rootdir: /Users/runner/work/tardis/tardis
2025-02-24T16:21:53.4228430Z configfile: pyproject.toml
2025-02-24T16:21:53.4228880Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-02-24T16:21:53.4230350Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T16:21:53.4231100Z 
2025-02-24T16:21:56.9777080Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T16:21:59.3320510Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T16:22:00.9707870Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T16:22:02.5406760Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T16:22:02.5491500Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T16:22:03.8333140Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T16:22:04.1965700Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T16:22:04.1971710Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T16:22:08.9084090Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T16:22:08.9347830Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T16:22:08.9984390Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T16:22:46.9831880Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T16:22:47.0074660Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T16:22:47.0196240Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T16:22:47.0463150Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T16:22:47.0718950Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T16:22:47.4266020Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T16:22:48.1591150Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T16:22:48.1857580Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T16:22:48.4783140Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T16:22:48.4883490Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T16:23:30.5530590Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T16:23:31.4434950Z ............                                                             [ 10%]
2025-02-24T16:23:34.0260640Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T16:23:34.0697720Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T16:23:35.9578240Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T16:23:37.4368580Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T16:23:39.7756610Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T16:23:41.9015420Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T16:24:34.8071970Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T16:24:45.7701370Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T16:24:47.0058590Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T16:24:49.7153380Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T16:24:51.7172790Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T16:24:54.5665250Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T16:24:57.3381110Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T16:24:58.4711160Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T16:25:02.1304790Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T16:25:04.8024430Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T16:25:07.9128360Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T16:25:10.3177060Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T16:25:13.2682470Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T16:25:16.3374280Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T16:25:16.8917240Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T16:25:17.2881680Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T16:25:17.2984100Z ......                                                                   [ 62%]
2025-02-24T16:25:17.5997030Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T16:27:18.2095360Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T16:27:18.2214560Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T16:27:41.9023810Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T16:27:52.9773290Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T16:27:53.6089610Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T16:28:05.7129100Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T16:28:05.7340270Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T16:28:06.2164020Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T16:28:06.2220980Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T16:28:07.7435760Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T16:28:07.7578080Z ..........                                                               [ 69%]
2025-02-24T16:28:07.9105240Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T16:28:07.9386760Z .........                                                                [ 72%]
2025-02-24T16:28:43.0604380Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T16:29:58.4112690Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T16:31:37.7110500Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T16:31:37.7899680Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T16:31:40.2069970Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T16:31:45.7373760Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T16:31:45.9024970Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T16:31:45.9131860Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T16:31:45.9452720Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T16:31:54.3048340Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T16:31:54.3170720Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T16:31:58.1790770Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T16:31:58.5594340Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T16:31:59.3288680Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T16:31:59.4288970Z XX.........                                                              [ 84%]
2025-02-24T16:31:59.4622630Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T16:31:59.6925620Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T16:32:00.0647380Z .....                                                                    [ 85%]
2025-02-24T16:32:10.5645820Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T16:32:10.5878390Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T16:32:10.5916810Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T16:32:11.8763260Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T16:32:11.8922330Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T16:32:14.6821620Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T16:32:14.6822390Z                                                                          [ 86%]
2025-02-24T16:32:15.2171580Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T16:32:17.5004580Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T16:32:19.1820300Z ......                                                                   [ 88%]
2025-02-24T16:32:23.4454550Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T16:32:28.0714510Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T16:32:31.0324840Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T16:32:38.0777480Z ....                                                                     [ 92%]
2025-02-24T16:32:43.8539560Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T16:32:51.0113330Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T16:32:51.3871560Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T16:32:51.4278190Z ....                                                                     [ 96%]
2025-02-24T16:32:52.3113080Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T16:32:52.7838970Z ..................                                                       [ 98%]
2025-02-24T16:36:04.6382790Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T16:36:12.7272150Z ......                                                                   [100%]
2025-02-24T16:36:12.7278330Z 
2025-02-24T16:36:12.7278720Z =================================== FAILURES ===================================
2025-02-24T16:36:12.7279350Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T16:36:12.7279690Z 
2025-02-24T16:36:12.7279890Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T16:36:12.7308210Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T16:36:12.7315360Z 
2025-02-24T16:36:12.7431890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7432230Z         if err_msg is None:
2025-02-24T16:36:12.7432520Z             if left.shape != right.shape:
2025-02-24T16:36:12.7432790Z                 raise_assert_detail(
2025-02-24T16:36:12.7433250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7433580Z                 )
2025-02-24T16:36:12.7433780Z     
2025-02-24T16:36:12.7434020Z             diff = 0
2025-02-24T16:36:12.7434250Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7434580Z                 # count up differences
2025-02-24T16:36:12.7434900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7435270Z                     diff += 1
2025-02-24T16:36:12.7435430Z     
2025-02-24T16:36:12.7435670Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7436030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7436410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7436800Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7437050Z E           
2025-02-24T16:36:12.7437300Z E           numpy array values are different (0.09581 %)
2025-02-24T16:36:12.7437830Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:36:12.7438640Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:36:12.7439080Z 
2025-02-24T16:36:12.7439370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7439690Z 
2025-02-24T16:36:12.7439830Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7440040Z 
2025-02-24T16:36:12.7440230Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x165c359a0>
2025-02-24T16:36:12.7440690Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x165c37e30>
2025-02-24T16:36:12.7440960Z 
2025-02-24T16:36:12.7441090Z     def test_calculate_sobolev_line_opacity(
2025-02-24T16:36:12.7441370Z         nb_simulation_verysimple, regression_data
2025-02-24T16:36:12.7441580Z     ):
2025-02-24T16:36:12.7441750Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:36:12.7441970Z     
2025-02-24T16:36:12.7442220Z         actual = calculate_sobolev_line_opacity(
2025-02-24T16:36:12.7442790Z             legacy_plasma.lines,
2025-02-24T16:36:12.7442990Z             legacy_plasma.level_number_density,
2025-02-24T16:36:12.7563080Z             legacy_plasma.time_explosion,
2025-02-24T16:36:12.7563440Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:36:12.7563650Z         )
2025-02-24T16:36:12.7563860Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:12.7564180Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.7564330Z 
2025-02-24T16:36:12.7564470Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T16:36:12.7564840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7565240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7565520Z     ???
2025-02-24T16:36:12.7566080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7566320Z 
2025-02-24T16:36:12.7566370Z >   ???
2025-02-24T16:36:12.7566630Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T16:36:12.7566860Z E   
2025-02-24T16:36:12.7567140Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:36:12.7567490Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:36:12.7567740Z E          ...
2025-02-24T16:36:12.7567990Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:36:12.7568270Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:36:12.7568620Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:36:12.7568950Z E          ...
2025-02-24T16:36:12.7569230Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:36:12.7569550Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:36:12.7569850Z E   At positional index 54, first diff: 14 != 12
2025-02-24T16:36:12.7570160Z 
2025-02-24T16:36:12.7570280Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7570580Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:12.7574280Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:36:12.7574940Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:36:12.7575500Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:36:12.7575690Z 
2025-02-24T16:36:12.7601620Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.93s/it]
2025-02-24T16:36:12.7601960Z 
2025-02-24T16:36:12.7602220Z Packets:                                                                                   4030/? [00:12<00:00, 31657.91it/s][A
2025-02-24T16:36:12.7602550Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:12.7603160Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:36:12.7603750Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T16:36:12.7603950Z 
2025-02-24T16:36:12.7604130Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x165c359a0>
2025-02-24T16:36:12.7604630Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x165bfb8c0>
2025-02-24T16:36:12.7604900Z 
2025-02-24T16:36:12.7605060Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T16:36:12.7605380Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:36:12.7605580Z     
2025-02-24T16:36:12.7605740Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T16:36:12.7606000Z             legacy_plasma.lines,
2025-02-24T16:36:12.7606200Z             legacy_plasma.level_number_density,
2025-02-24T16:36:12.7606410Z             legacy_plasma.time_explosion,
2025-02-24T16:36:12.7606640Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:36:12.7607240Z         )
2025-02-24T16:36:12.7607400Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T16:36:12.7607640Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T16:36:12.7607870Z >       npt.assert_allclose(actual, expected)
2025-02-24T16:36:12.7608010Z 
2025-02-24T16:36:12.7608100Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T16:36:12.7608350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7608510Z 
2025-02-24T16:36:12.7608720Z args = (<function assert_allclose.<locals>.compare at 0x31b0a3e20>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:12.7609170Z        [1., 1., 1.,.....,
2025-02-24T16:36:12.7609440Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:12.7609920Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:12.7610180Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:36:12.7610570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:12.7610930Z 
2025-02-24T16:36:12.7611050Z     @wraps(func)
2025-02-24T16:36:12.7611240Z     def inner(*args, **kwds):
2025-02-24T16:36:12.7611460Z         with self._recreate_cm():
2025-02-24T16:36:12.7611750Z >           return func(*args, **kwds)
2025-02-24T16:36:12.7611940Z E           AssertionError: 
2025-02-24T16:36:12.7612200Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:12.7612450Z E           
2025-02-24T16:36:12.7612700Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:36:12.7612920Z E           Max absolute difference: 0.99984222
2025-02-24T16:36:12.7613150Z E           Max relative difference: 6337.12154973
2025-02-24T16:36:12.7613380Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:12.7613650Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:12.7613860Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:36:12.7614070Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:12.7614280Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:12.7614490Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:36:12.7614630Z 
2025-02-24T16:36:12.7614860Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:12.7615270Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T16:36:12.7615500Z 
2025-02-24T16:36:12.7615670Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T16:36:12.7616490Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x3060d1ca0>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x3060d30e0>, 'electron')]
2025-02-24T16:36:12.7617340Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x1535735f0>
2025-02-24T16:36:12.7617850Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x31ee4d8e0>
2025-02-24T16:36:12.7618120Z 
2025-02-24T16:36:12.7618190Z     def test_rate_matrix_solver(
2025-02-24T16:36:12.7618380Z         new_chianti_atomic_dataset_si,
2025-02-24T16:36:12.7618560Z         rate_solver_list,
2025-02-24T16:36:12.7618800Z         collisional_simulation_state,
2025-02-24T16:36:12.7619090Z         regression_data,
2025-02-24T16:36:12.7619340Z     ):
2025-02-24T16:36:12.7619530Z         rate_matrix_solver = RateMatrix(
2025-02-24T16:36:12.7619850Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T16:36:12.7620070Z         )
2025-02-24T16:36:12.7620280Z     
2025-02-24T16:36:12.7620480Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T16:36:12.7620840Z             collisional_simulation_state.t_radiative,
2025-02-24T16:36:12.7621180Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T16:36:12.7621520Z         )
2025-02-24T16:36:12.7621950Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T16:36:12.7622320Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T16:36:12.7622670Z         )
2025-02-24T16:36:12.7622830Z     
2025-02-24T16:36:12.7623100Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T16:36:12.7623380Z     
2025-02-24T16:36:12.7623540Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:12.7623700Z 
2025-02-24T16:36:12.7623820Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T16:36:12.7624080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7624420Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T16:36:12.7624770Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T16:36:12.7625120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T16:36:12.7625450Z     return store.select(
2025-02-24T16:36:12.7625760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T16:36:12.7626080Z     return it.get_result()
2025-02-24T16:36:12.7626390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T16:36:12.7626760Z     results = self.func(self.start, self.stop, where)
2025-02-24T16:36:12.7627110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T16:36:12.7627490Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T16:36:12.7627950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T16:36:12.7628450Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T16:36:12.7628850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T16:36:12.7629190Z     ret = node[0][start:stop]
2025-02-24T16:36:12.7629500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T16:36:12.7629910Z     return self.read(start, stop, step)[0]
2025-02-24T16:36:12.7630330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T16:36:12.7630770Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T16:36:12.7631080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7631300Z 
2025-02-24T16:36:12.7631390Z self = ObjectAtom()
2025-02-24T16:36:12.7631670Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T16:36:12.7631850Z 
2025-02-24T16:36:12.7631950Z     def fromarray(self, array):
2025-02-24T16:36:12.7632260Z         # We have to check for an empty array because of a possible
2025-02-24T16:36:12.7632610Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T16:36:12.7632930Z         # record when in fact it is empty.
2025-02-24T16:36:12.7633180Z         if array.size == 0:
2025-02-24T16:36:12.7633380Z             return None
2025-02-24T16:36:12.7633600Z >       return pickle.loads(array.tobytes())
2025-02-24T16:36:12.7633930Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:36:12.7634130Z 
2025-02-24T16:36:12.7634350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T16:36:12.7634770Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:12.7635180Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:36:12.7635730Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:36:12.7636190Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:12.7636760Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:36:12.7637520Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T16:36:12.7637740Z 
2025-02-24T16:36:12.7637840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7638120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7638360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7638610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7638960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7639210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7639400Z err_msg = None
2025-02-24T16:36:12.7639490Z 
2025-02-24T16:36:12.7639570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7639780Z         if err_msg is None:
2025-02-24T16:36:12.7639950Z             if left.shape != right.shape:
2025-02-24T16:36:12.7640160Z                 raise_assert_detail(
2025-02-24T16:36:12.7640400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7640640Z                 )
2025-02-24T16:36:12.7640780Z     
2025-02-24T16:36:12.7640890Z             diff = 0
2025-02-24T16:36:12.7641060Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7641280Z                 # count up differences
2025-02-24T16:36:12.7654130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7654430Z                     diff += 1
2025-02-24T16:36:12.7654590Z     
2025-02-24T16:36:12.7654730Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7654980Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7655310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7655610Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7655810Z E           
2025-02-24T16:36:12.7655990Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7656360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7656860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7657140Z 
2025-02-24T16:36:12.7657390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7657700Z 
2025-02-24T16:36:12.7657840Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7658050Z 
2025-02-24T16:36:12.7658220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9614c0>
2025-02-24T16:36:12.7658620Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>, attr = 'lines'
2025-02-24T16:36:12.7658850Z 
2025-02-24T16:36:12.7658960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7659220Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7659440Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7659590Z         try:
2025-02-24T16:36:12.7659780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7660210Z         except KeyError:
2025-02-24T16:36:12.7660420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7660630Z     
2025-02-24T16:36:12.7660760Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7660950Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7661140Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7661380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7661610Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7661800Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7662020Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7662210Z             else:
2025-02-24T16:36:12.7662440Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.7662660Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.7662810Z 
2025-02-24T16:36:12.7662910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.7663160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7663430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7663650Z     ???
2025-02-24T16:36:12.7663810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7663970Z 
2025-02-24T16:36:12.7664010Z >   ???
2025-02-24T16:36:12.7664170Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7664380Z E   
2025-02-24T16:36:12.7664540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7664790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7664990Z E          ...
2025-02-24T16:36:12.7665140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7665370Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7665630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7665830Z E          ...
2025-02-24T16:36:12.7665970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7666210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7666450Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7666590Z 
2025-02-24T16:36:12.7666660Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7666940Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T16:36:12.7667170Z 
2025-02-24T16:36:12.7667340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d961310>
2025-02-24T16:36:12.7667700Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>
2025-02-24T16:36:12.7667940Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.7668070Z 
2025-02-24T16:36:12.7668170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7668430Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7668640Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7668800Z         try:
2025-02-24T16:36:12.7668980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7669210Z         except KeyError:
2025-02-24T16:36:12.7669420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7669630Z     
2025-02-24T16:36:12.7669760Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7669950Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7670200Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7670430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7670670Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7670850Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7671070Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7671220Z 
2025-02-24T16:36:12.7671320Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7671560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7671980Z 
2025-02-24T16:36:12.7672090Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.7672330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.7672540Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7672760Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.7673000Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.7673260Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.7673480Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7674220Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.7674400Z err_msg = None
2025-02-24T16:36:12.7674480Z 
2025-02-24T16:36:12.7674570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7674780Z         if err_msg is None:
2025-02-24T16:36:12.7674960Z             if left.shape != right.shape:
2025-02-24T16:36:12.7675160Z                 raise_assert_detail(
2025-02-24T16:36:12.7675400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7675640Z                 )
2025-02-24T16:36:12.7675770Z     
2025-02-24T16:36:12.7675880Z             diff = 0
2025-02-24T16:36:12.7676070Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7676280Z                 # count up differences
2025-02-24T16:36:12.7676550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7676820Z                     diff += 1
2025-02-24T16:36:12.7676970Z     
2025-02-24T16:36:12.7677110Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7677350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7677670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7677960Z E           AssertionError: Series are different
2025-02-24T16:36:12.7678140Z E           
2025-02-24T16:36:12.7678300Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.7678730Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.7679360Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7679950Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7680280Z 
2025-02-24T16:36:12.7680510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7680980Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T16:36:12.7681210Z 
2025-02-24T16:36:12.7681380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d960950>
2025-02-24T16:36:12.7681730Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>
2025-02-24T16:36:12.7681990Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.7682240Z 
2025-02-24T16:36:12.7682350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7682610Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7682820Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7682980Z         try:
2025-02-24T16:36:12.7683160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7683400Z         except KeyError:
2025-02-24T16:36:12.7683600Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7683820Z     
2025-02-24T16:36:12.7683950Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7684130Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7684330Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7684610Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7684840Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7685030Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7685240Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7685400Z 
2025-02-24T16:36:12.7685490Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7685740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7685890Z 
2025-02-24T16:36:12.7686000Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.7686240Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.7686450Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.7686660Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.7686900Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.7687140Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.7687360Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.7687570Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.7687740Z err_msg = None
2025-02-24T16:36:12.7687820Z 
2025-02-24T16:36:12.7687900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7688110Z         if err_msg is None:
2025-02-24T16:36:12.7688280Z             if left.shape != right.shape:
2025-02-24T16:36:12.7688580Z                 raise_assert_detail(
2025-02-24T16:36:12.7688820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7689040Z                 )
2025-02-24T16:36:12.7689170Z     
2025-02-24T16:36:12.7689280Z             diff = 0
2025-02-24T16:36:12.7689450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7689680Z                 # count up differences
2025-02-24T16:36:12.7689950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7690210Z                     diff += 1
2025-02-24T16:36:12.7690370Z     
2025-02-24T16:36:12.7690500Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7690750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7691070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7691360Z E           AssertionError: Series are different
2025-02-24T16:36:12.7691550Z E           
2025-02-24T16:36:12.7691700Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.7692160Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.7692830Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.7693640Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.7694060Z 
2025-02-24T16:36:12.7694300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7694760Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T16:36:12.7694990Z 
2025-02-24T16:36:12.7695100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7695380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7695650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7695920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7696210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7696460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7696660Z err_msg = None
2025-02-24T16:36:12.7696750Z 
2025-02-24T16:36:12.7696830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7697040Z         if err_msg is None:
2025-02-24T16:36:12.7697220Z             if left.shape != right.shape:
2025-02-24T16:36:12.7697420Z                 raise_assert_detail(
2025-02-24T16:36:12.7697660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7697900Z                 )
2025-02-24T16:36:12.7698030Z     
2025-02-24T16:36:12.7698150Z             diff = 0
2025-02-24T16:36:12.7698330Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7698550Z                 # count up differences
2025-02-24T16:36:12.7698810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7699210Z                     diff += 1
2025-02-24T16:36:12.7699370Z     
2025-02-24T16:36:12.7699500Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7699750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7700070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7700360Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7700560Z E           
2025-02-24T16:36:12.7700730Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7701100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7701600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7701880Z 
2025-02-24T16:36:12.7702120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7702420Z 
2025-02-24T16:36:12.7702720Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7702920Z 
2025-02-24T16:36:12.7703090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9618e0>
2025-02-24T16:36:12.7703660Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>, attr = 'nu'
2025-02-24T16:36:12.7703890Z 
2025-02-24T16:36:12.7704080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7704410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7704710Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7704890Z         try:
2025-02-24T16:36:12.7705210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7705590Z         except KeyError:
2025-02-24T16:36:12.7705950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7706270Z     
2025-02-24T16:36:12.7706560Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7706980Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7707280Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7707630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7707870Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7708080Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7708310Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7708530Z 
2025-02-24T16:36:12.7708690Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7708980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7709260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7709560Z     ???
2025-02-24T16:36:12.7709800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7710050Z 
2025-02-24T16:36:12.7710190Z >   ???
2025-02-24T16:36:12.7710380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7710730Z E   
2025-02-24T16:36:12.7710920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7711230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7711540Z E          ...
2025-02-24T16:36:12.7711750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7712040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7712360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7712580Z E          ...
2025-02-24T16:36:12.7712750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7713020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7713340Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7713560Z 
2025-02-24T16:36:12.7713680Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7714000Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T16:36:12.7714340Z 
2025-02-24T16:36:12.7714460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7714750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7715090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7715450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7715750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7716090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7716420Z err_msg = None
2025-02-24T16:36:12.7716530Z 
2025-02-24T16:36:12.7716630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7722420Z         if err_msg is None:
2025-02-24T16:36:12.7722620Z             if left.shape != right.shape:
2025-02-24T16:36:12.7722820Z                 raise_assert_detail(
2025-02-24T16:36:12.7723290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7723520Z                 )
2025-02-24T16:36:12.7723650Z     
2025-02-24T16:36:12.7723760Z             diff = 0
2025-02-24T16:36:12.7723940Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7724150Z                 # count up differences
2025-02-24T16:36:12.7724410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7724670Z                     diff += 1
2025-02-24T16:36:12.7724820Z     
2025-02-24T16:36:12.7724940Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7725180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7725640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7725930Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7726130Z E           
2025-02-24T16:36:12.7726290Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7726650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7727150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7727430Z 
2025-02-24T16:36:12.7727680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7727990Z 
2025-02-24T16:36:12.7728130Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7728340Z 
2025-02-24T16:36:12.7728510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9600b0>
2025-02-24T16:36:12.7728880Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>
2025-02-24T16:36:12.7729140Z attr = 'wavelength_cm'
2025-02-24T16:36:12.7729240Z 
2025-02-24T16:36:12.7729350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7729620Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7729840Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7730010Z         try:
2025-02-24T16:36:12.7730210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7730450Z         except KeyError:
2025-02-24T16:36:12.7730670Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7730890Z     
2025-02-24T16:36:12.7731020Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7731220Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7731420Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7731670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7731910Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7732110Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7732330Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7732490Z 
2025-02-24T16:36:12.7732590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7732840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7733130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7733360Z     ???
2025-02-24T16:36:12.7733530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7733690Z 
2025-02-24T16:36:12.7733740Z >   ???
2025-02-24T16:36:12.7733910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7734230Z E   
2025-02-24T16:36:12.7734410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7734670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7734880Z E          ...
2025-02-24T16:36:12.7735030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7735260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7735520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7735720Z E          ...
2025-02-24T16:36:12.7735870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7736100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7736380Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7736530Z 
2025-02-24T16:36:12.7736600Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7736860Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T16:36:12.7737080Z 
2025-02-24T16:36:12.7737180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7737460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7737700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7737950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7738220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7738460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7738660Z err_msg = None
2025-02-24T16:36:12.7738740Z 
2025-02-24T16:36:12.7738830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7739030Z         if err_msg is None:
2025-02-24T16:36:12.7739270Z             if left.shape != right.shape:
2025-02-24T16:36:12.7739470Z                 raise_assert_detail(
2025-02-24T16:36:12.7739710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7739940Z                 )
2025-02-24T16:36:12.7740060Z     
2025-02-24T16:36:12.7740180Z             diff = 0
2025-02-24T16:36:12.7740360Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7740570Z                 # count up differences
2025-02-24T16:36:12.7740830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7741080Z                     diff += 1
2025-02-24T16:36:12.7741230Z     
2025-02-24T16:36:12.7741360Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7742420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7742820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7743150Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7743360Z E           
2025-02-24T16:36:12.7743530Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7743910Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7744620Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7744920Z 
2025-02-24T16:36:12.7745170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7745480Z 
2025-02-24T16:36:12.7745850Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7746060Z 
2025-02-24T16:36:12.7746240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9603b0>
2025-02-24T16:36:12.7746640Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>, attr = 'f_lu'
2025-02-24T16:36:12.7746880Z 
2025-02-24T16:36:12.7746990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7747260Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7747490Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7747650Z         try:
2025-02-24T16:36:12.7747850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7748160Z         except KeyError:
2025-02-24T16:36:12.7748380Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7748600Z     
2025-02-24T16:36:12.7748730Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7748920Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7749140Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7749380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7749620Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7749810Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7750040Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7750220Z 
2025-02-24T16:36:12.7750320Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7750580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7750860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7751090Z     ???
2025-02-24T16:36:12.7751260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7751420Z 
2025-02-24T16:36:12.7751470Z >   ???
2025-02-24T16:36:12.7751640Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7751850Z E   
2025-02-24T16:36:12.7752020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7752280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7752480Z E          ...
2025-02-24T16:36:12.7752640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7752880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7753150Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7753350Z E          ...
2025-02-24T16:36:12.7753500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7753740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7753990Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7754140Z 
2025-02-24T16:36:12.7754210Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7754500Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T16:36:12.7754730Z 
2025-02-24T16:36:12.7754840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7755120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7755390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7755630Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7755910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7756160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7756350Z err_msg = None
2025-02-24T16:36:12.7756430Z 
2025-02-24T16:36:12.7756520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7756720Z         if err_msg is None:
2025-02-24T16:36:12.7756890Z             if left.shape != right.shape:
2025-02-24T16:36:12.7757090Z                 raise_assert_detail(
2025-02-24T16:36:12.7757470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7757690Z                 )
2025-02-24T16:36:12.7757820Z     
2025-02-24T16:36:12.7757940Z             diff = 0
2025-02-24T16:36:12.7758110Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7758320Z                 # count up differences
2025-02-24T16:36:12.7758580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7758840Z                     diff += 1
2025-02-24T16:36:12.7758990Z     
2025-02-24T16:36:12.7759120Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7759350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7759710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7760000Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7760190Z E           
2025-02-24T16:36:12.7760360Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7760720Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7761200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7761470Z 
2025-02-24T16:36:12.7761710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7762010Z 
2025-02-24T16:36:12.7762140Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7762340Z 
2025-02-24T16:36:12.7762510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d911dc0>
2025-02-24T16:36:12.7762860Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>
2025-02-24T16:36:12.7763100Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.7763200Z 
2025-02-24T16:36:12.7763310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7763570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7763780Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7763940Z         try:
2025-02-24T16:36:12.7764120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7764360Z         except KeyError:
2025-02-24T16:36:12.7764570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7764780Z     
2025-02-24T16:36:12.7764910Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7765100Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7765300Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7765530Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7765760Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7765950Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7766160Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7766360Z             else:
2025-02-24T16:36:12.7766510Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.7766730Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.7766880Z 
2025-02-24T16:36:12.7766980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.7767230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7767500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7767720Z     ???
2025-02-24T16:36:12.7767880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7768170Z 
2025-02-24T16:36:12.7768220Z >   ???
2025-02-24T16:36:12.7768380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7768590Z E   
2025-02-24T16:36:12.7768760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7769020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7769230Z E          ...
2025-02-24T16:36:12.7769380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7769620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7769880Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7770150Z E          ...
2025-02-24T16:36:12.7770300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7770530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7770770Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7770920Z 
2025-02-24T16:36:12.7770980Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7771260Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T16:36:12.7771480Z 
2025-02-24T16:36:12.7771580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7771850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7772100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7772340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7772620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7772860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7773050Z err_msg = None
2025-02-24T16:36:12.7773130Z 
2025-02-24T16:36:12.7773220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7773420Z         if err_msg is None:
2025-02-24T16:36:12.7773600Z             if left.shape != right.shape:
2025-02-24T16:36:12.7773790Z                 raise_assert_detail(
2025-02-24T16:36:12.7774020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7774240Z                 )
2025-02-24T16:36:12.7774370Z     
2025-02-24T16:36:12.7774480Z             diff = 0
2025-02-24T16:36:12.7774660Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7774870Z                 # count up differences
2025-02-24T16:36:12.7775120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7775380Z                     diff += 1
2025-02-24T16:36:12.7775530Z     
2025-02-24T16:36:12.7775660Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7775900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7776210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7776490Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7776710Z E           
2025-02-24T16:36:12.7776880Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7777230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7777710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7778070Z 
2025-02-24T16:36:12.7778300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7778630Z 
2025-02-24T16:36:12.7778780Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7779030Z 
2025-02-24T16:36:12.7779260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9134d0>
2025-02-24T16:36:12.7779740Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>
2025-02-24T16:36:12.7780060Z attr = 'beta_sobolev'
2025-02-24T16:36:12.7780220Z 
2025-02-24T16:36:12.7780350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7780620Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7780960Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7781130Z         try:
2025-02-24T16:36:12.7781390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7781630Z         except KeyError:
2025-02-24T16:36:12.7788980Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7789220Z     
2025-02-24T16:36:12.7789360Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7789550Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7789750Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7789980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7790220Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7790400Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7790620Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7790810Z             else:
2025-02-24T16:36:12.7790970Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.7791190Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.7791340Z 
2025-02-24T16:36:12.7791440Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.7791690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7791960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7792190Z     ???
2025-02-24T16:36:12.7792350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7792500Z 
2025-02-24T16:36:12.7792550Z >   ???
2025-02-24T16:36:12.7792720Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7792920Z E   
2025-02-24T16:36:12.7793080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7793330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7793530Z E          ...
2025-02-24T16:36:12.7793680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7793910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7794170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7794370Z E          ...
2025-02-24T16:36:12.7794520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7794750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7794990Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7795130Z 
2025-02-24T16:36:12.7795200Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7795470Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T16:36:12.7795690Z 
2025-02-24T16:36:12.7795790Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7796090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7796340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7796590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7796860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7797230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7797420Z err_msg = None
2025-02-24T16:36:12.7797500Z 
2025-02-24T16:36:12.7797580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7797790Z         if err_msg is None:
2025-02-24T16:36:12.7797960Z             if left.shape != right.shape:
2025-02-24T16:36:12.7798160Z                 raise_assert_detail(
2025-02-24T16:36:12.7798390Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7798620Z                 )
2025-02-24T16:36:12.7798740Z     
2025-02-24T16:36:12.7798850Z             diff = 0
2025-02-24T16:36:12.7799080Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7799300Z                 # count up differences
2025-02-24T16:36:12.7799560Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7799810Z                     diff += 1
2025-02-24T16:36:12.7799970Z     
2025-02-24T16:36:12.7800100Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7800340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7800640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7800930Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7801130Z E           
2025-02-24T16:36:12.7801290Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7801650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7802130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7802400Z 
2025-02-24T16:36:12.7802630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7802930Z 
2025-02-24T16:36:12.7803060Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7803260Z 
2025-02-24T16:36:12.7803430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9125d0>
2025-02-24T16:36:12.7803820Z plasma = <tardis.plasma.base.BasePlasma object at 0x3060d0e60>, attr = 'j_blues'
2025-02-24T16:36:12.7804050Z 
2025-02-24T16:36:12.7804150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7804410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7804620Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7804780Z         try:
2025-02-24T16:36:12.7804970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7805200Z         except KeyError:
2025-02-24T16:36:12.7805410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7805630Z     
2025-02-24T16:36:12.7805750Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7805940Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7806130Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7806360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7806590Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7806780Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7807000Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7807200Z             else:
2025-02-24T16:36:12.7807350Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.7807570Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.7807760Z 
2025-02-24T16:36:12.7807850Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.7808100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7808370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7808590Z     ???
2025-02-24T16:36:12.7808750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7808900Z 
2025-02-24T16:36:12.7808950Z >   ???
2025-02-24T16:36:12.7809110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7809320Z E   
2025-02-24T16:36:12.7809490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7809790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7810000Z E          ...
2025-02-24T16:36:12.7810150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7810390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7810640Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7810840Z E          ...
2025-02-24T16:36:12.7810980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7811220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7811450Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7811600Z 
2025-02-24T16:36:12.7811660Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7811920Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T16:36:12.7812140Z 
2025-02-24T16:36:12.7812240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7812520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7812760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7813000Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7813280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7813630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7813820Z err_msg = None
2025-02-24T16:36:12.7813900Z 
2025-02-24T16:36:12.7813980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7814190Z         if err_msg is None:
2025-02-24T16:36:12.7814360Z             if left.shape != right.shape:
2025-02-24T16:36:12.7814550Z                 raise_assert_detail(
2025-02-24T16:36:12.7814790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7815020Z                 )
2025-02-24T16:36:12.7815140Z     
2025-02-24T16:36:12.7815250Z             diff = 0
2025-02-24T16:36:12.7815430Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7815640Z                 # count up differences
2025-02-24T16:36:12.7815900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7816160Z                     diff += 1
2025-02-24T16:36:12.7816310Z     
2025-02-24T16:36:12.7816430Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7816670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7816980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7817260Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7817460Z E           
2025-02-24T16:36:12.7817620Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7817980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7818720Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7818990Z 
2025-02-24T16:36:12.7819220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7819510Z 
2025-02-24T16:36:12.7819640Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7819910Z 
2025-02-24T16:36:12.7820080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9104a0>
2025-02-24T16:36:12.7820470Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>, attr = 'lines'
2025-02-24T16:36:12.7820690Z 
2025-02-24T16:36:12.7820800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7821060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7821260Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7821420Z         try:
2025-02-24T16:36:12.7821610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7821840Z         except KeyError:
2025-02-24T16:36:12.7822050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7822260Z     
2025-02-24T16:36:12.7822390Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7822570Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7822770Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7823000Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7823230Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7823420Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7823630Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7823830Z             else:
2025-02-24T16:36:12.7823990Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.7824200Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.7824350Z 
2025-02-24T16:36:12.7824450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.7824690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7824960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7825180Z     ???
2025-02-24T16:36:12.7825330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7825490Z 
2025-02-24T16:36:12.7825540Z >   ???
2025-02-24T16:36:12.7825700Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7825900Z E   
2025-02-24T16:36:12.7826070Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7826320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7826520Z E          ...
2025-02-24T16:36:12.7826660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7826890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7827150Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7827360Z E          ...
2025-02-24T16:36:12.7827500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7827750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7828000Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7828140Z 
2025-02-24T16:36:12.7828210Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7828490Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T16:36:12.7828710Z 
2025-02-24T16:36:12.7828940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d912120>
2025-02-24T16:36:12.7829300Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>
2025-02-24T16:36:12.7829600Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.7829720Z 
2025-02-24T16:36:12.7829830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7830080Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7830300Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7830450Z         try:
2025-02-24T16:36:12.7830640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7830870Z         except KeyError:
2025-02-24T16:36:12.7831070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7831290Z     
2025-02-24T16:36:12.7831410Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7831640Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7831830Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7832070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7832290Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7832480Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7832700Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7832840Z 
2025-02-24T16:36:12.7832940Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7833180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7833340Z 
2025-02-24T16:36:12.7833450Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.7833690Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.7833900Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7834120Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.7834350Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.7834590Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.7834810Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7835020Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.7835190Z err_msg = None
2025-02-24T16:36:12.7835270Z 
2025-02-24T16:36:12.7835350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7835560Z         if err_msg is None:
2025-02-24T16:36:12.7835730Z             if left.shape != right.shape:
2025-02-24T16:36:12.7835920Z                 raise_assert_detail(
2025-02-24T16:36:12.7836160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7836380Z                 )
2025-02-24T16:36:12.7836500Z     
2025-02-24T16:36:12.7836620Z             diff = 0
2025-02-24T16:36:12.7836790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7837000Z                 # count up differences
2025-02-24T16:36:12.7837260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7837520Z                     diff += 1
2025-02-24T16:36:12.7837670Z     
2025-02-24T16:36:12.7837790Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7838030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7838340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7838610Z E           AssertionError: Series are different
2025-02-24T16:36:12.7838800Z E           
2025-02-24T16:36:12.7838950Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.7839390Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.7840060Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7840640Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7841010Z 
2025-02-24T16:36:12.7841240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7841700Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T16:36:12.7841940Z 
2025-02-24T16:36:12.7842100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d912e70>
2025-02-24T16:36:12.7842450Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>
2025-02-24T16:36:12.7842700Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.7842820Z 
2025-02-24T16:36:12.7842940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7843230Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7843550Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7843790Z         try:
2025-02-24T16:36:12.7844060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7844380Z         except KeyError:
2025-02-24T16:36:12.7844690Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7844990Z     
2025-02-24T16:36:12.7854920Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7855140Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7855370Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7855620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7855890Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7856090Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7856310Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7856470Z 
2025-02-24T16:36:12.7856570Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7856840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7857000Z 
2025-02-24T16:36:12.7857120Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.7857370Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.7857580Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.7857790Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.7858030Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.7858280Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.7858490Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.7858700Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.7858880Z err_msg = None
2025-02-24T16:36:12.7858960Z 
2025-02-24T16:36:12.7859040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7859240Z         if err_msg is None:
2025-02-24T16:36:12.7859420Z             if left.shape != right.shape:
2025-02-24T16:36:12.7859610Z                 raise_assert_detail(
2025-02-24T16:36:12.7859850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7860070Z                 )
2025-02-24T16:36:12.7860200Z     
2025-02-24T16:36:12.7860310Z             diff = 0
2025-02-24T16:36:12.7860510Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7860880Z                 # count up differences
2025-02-24T16:36:12.7861140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7861390Z                     diff += 1
2025-02-24T16:36:12.7861540Z     
2025-02-24T16:36:12.7861670Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7861910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7862220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7862490Z E           AssertionError: Series are different
2025-02-24T16:36:12.7862680Z E           
2025-02-24T16:36:12.7862890Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.7863330Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.7863990Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.7864660Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.7865040Z 
2025-02-24T16:36:12.7865290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7865740Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T16:36:12.7865960Z 
2025-02-24T16:36:12.7866070Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7866350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7866610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7866860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7867150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7867400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7867600Z err_msg = None
2025-02-24T16:36:12.7867680Z 
2025-02-24T16:36:12.7867770Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7867980Z         if err_msg is None:
2025-02-24T16:36:12.7868160Z             if left.shape != right.shape:
2025-02-24T16:36:12.7868360Z                 raise_assert_detail(
2025-02-24T16:36:12.7868610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7868840Z                 )
2025-02-24T16:36:12.7868970Z     
2025-02-24T16:36:12.7869080Z             diff = 0
2025-02-24T16:36:12.7869270Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7869490Z                 # count up differences
2025-02-24T16:36:12.7869760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7888390Z                     diff += 1
2025-02-24T16:36:12.7888990Z     
2025-02-24T16:36:12.7889390Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7891190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7892040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7892840Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7893420Z E           
2025-02-24T16:36:12.7893870Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7894880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7897010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7897810Z 
2025-02-24T16:36:12.7898500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7899360Z 
2025-02-24T16:36:12.7899740Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7900330Z 
2025-02-24T16:36:12.7900820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d910770>
2025-02-24T16:36:12.7901940Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>, attr = 'nu'
2025-02-24T16:36:12.7902570Z 
2025-02-24T16:36:12.7902890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7903650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7904290Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7904790Z         try:
2025-02-24T16:36:12.7905340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7906030Z         except KeyError:
2025-02-24T16:36:12.7906640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7907300Z     
2025-02-24T16:36:12.7907730Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7908290Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7908890Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7909570Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7910250Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7910800Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7911420Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7911860Z 
2025-02-24T16:36:12.7912140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7912840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7913590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7914240Z     ???
2025-02-24T16:36:12.7914680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7915130Z 
2025-02-24T16:36:12.7915300Z >   ???
2025-02-24T16:36:12.7915770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7916370Z E   
2025-02-24T16:36:12.7916860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7917610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7918200Z E          ...
2025-02-24T16:36:12.7918630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7919300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7920050Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7920720Z E          ...
2025-02-24T16:36:12.7921210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7922100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7922810Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7923230Z 
2025-02-24T16:36:12.7923420Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7924210Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T16:36:12.7924840Z 
2025-02-24T16:36:12.7925120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7925860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7926520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7927380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7928250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7928920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7929480Z err_msg = None
2025-02-24T16:36:12.7929750Z 
2025-02-24T16:36:12.7930020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7930600Z         if err_msg is None:
2025-02-24T16:36:12.7931090Z             if left.shape != right.shape:
2025-02-24T16:36:12.7931660Z                 raise_assert_detail(
2025-02-24T16:36:12.7932330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7933020Z                 )
2025-02-24T16:36:12.7933430Z     
2025-02-24T16:36:12.7933790Z             diff = 0
2025-02-24T16:36:12.7934290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7934940Z                 # count up differences
2025-02-24T16:36:12.7935700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7935860Z                     diff += 1
2025-02-24T16:36:12.7936020Z     
2025-02-24T16:36:12.7936210Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7936540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7936930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7937170Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7937350Z E           
2025-02-24T16:36:12.7937610Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7938220Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7938850Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7938870Z 
2025-02-24T16:36:12.7939550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7939560Z 
2025-02-24T16:36:12.7939940Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7939950Z 
2025-02-24T16:36:12.7940420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d913e30>
2025-02-24T16:36:12.7940760Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>
2025-02-24T16:36:12.7940950Z attr = 'wavelength_cm'
2025-02-24T16:36:12.7940960Z 
2025-02-24T16:36:12.7941270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7941530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7941730Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7941910Z         try:
2025-02-24T16:36:12.7942550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7942720Z         except KeyError:
2025-02-24T16:36:12.7943040Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7943190Z     
2025-02-24T16:36:12.7943400Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7943610Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7943800Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7944100Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7944290Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7944490Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7944900Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7944910Z 
2025-02-24T16:36:12.7945180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7945440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7945750Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7945910Z     ???
2025-02-24T16:36:12.7946140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7946150Z 
2025-02-24T16:36:12.7946310Z >   ???
2025-02-24T16:36:12.7946590Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7946740Z E   
2025-02-24T16:36:12.7947020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7947260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7947420Z E          ...
2025-02-24T16:36:12.7947600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7947890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7948160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7948330Z E          ...
2025-02-24T16:36:12.7948530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7948810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7949040Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7949050Z 
2025-02-24T16:36:12.7949240Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7949650Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T16:36:12.7949660Z 
2025-02-24T16:36:12.7949940Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7950220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7950430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7950740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7951040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7951240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7951410Z err_msg = None
2025-02-24T16:36:12.7951420Z 
2025-02-24T16:36:12.7951670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7951860Z         if err_msg is None:
2025-02-24T16:36:12.7952590Z             if left.shape != right.shape:
2025-02-24T16:36:12.7952910Z                 raise_assert_detail(
2025-02-24T16:36:12.7953260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7953430Z                 )
2025-02-24T16:36:12.7953580Z     
2025-02-24T16:36:12.7953750Z             diff = 0
2025-02-24T16:36:12.7954020Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7954240Z                 # count up differences
2025-02-24T16:36:12.7954930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7955260Z                     diff += 1
2025-02-24T16:36:12.7955350Z     
2025-02-24T16:36:12.7955830Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7955970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7956130Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7956240Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7956300Z E           
2025-02-24T16:36:12.7956400Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7956640Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7956970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7956980Z 
2025-02-24T16:36:12.7957270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7957280Z 
2025-02-24T16:36:12.7957440Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7957440Z 
2025-02-24T16:36:12.7957630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d912ab0>
2025-02-24T16:36:12.7957790Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>, attr = 'f_lu'
2025-02-24T16:36:12.7957800Z 
2025-02-24T16:36:12.7957920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7958020Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7958080Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7958140Z         try:
2025-02-24T16:36:12.7958260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7958330Z         except KeyError:
2025-02-24T16:36:12.7958460Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7958510Z     
2025-02-24T16:36:12.7958600Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7958680Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7958750Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7958870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7958930Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7959000Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7959120Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7959130Z 
2025-02-24T16:36:12.7959240Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.7959340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7959470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7959530Z     ???
2025-02-24T16:36:12.7959620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7959630Z 
2025-02-24T16:36:12.7959670Z >   ???
2025-02-24T16:36:12.7959780Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7959830Z E   
2025-02-24T16:36:12.7959940Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7960050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7960110Z E          ...
2025-02-24T16:36:12.7960190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7960300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7960400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7960450Z E          ...
2025-02-24T16:36:12.7960530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7960830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7960920Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7960930Z 
2025-02-24T16:36:12.7961000Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7961180Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T16:36:12.7961190Z 
2025-02-24T16:36:12.7961310Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7961430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7961510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7961770Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7961880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7961970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7962030Z err_msg = None
2025-02-24T16:36:12.7962030Z 
2025-02-24T16:36:12.7962120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7962180Z         if err_msg is None:
2025-02-24T16:36:12.7962260Z             if left.shape != right.shape:
2025-02-24T16:36:12.7962330Z                 raise_assert_detail(
2025-02-24T16:36:12.7962450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7962500Z                 )
2025-02-24T16:36:12.7962550Z     
2025-02-24T16:36:12.7962600Z             diff = 0
2025-02-24T16:36:12.7962690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.7962760Z                 # count up differences
2025-02-24T16:36:12.7962900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.7962960Z                     diff += 1
2025-02-24T16:36:12.7963010Z     
2025-02-24T16:36:12.7963080Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.7963200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.7963340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.7963440Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.7963490Z E           
2025-02-24T16:36:12.7963580Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.7963800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7964350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.7964410Z 
2025-02-24T16:36:12.7965150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.7965170Z 
2025-02-24T16:36:12.7965540Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.7965550Z 
2025-02-24T16:36:12.7966020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d911880>
2025-02-24T16:36:12.7966360Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>
2025-02-24T16:36:12.7966540Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.7966560Z 
2025-02-24T16:36:12.7966870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.7967130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.7967320Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.7967470Z         try:
2025-02-24T16:36:12.7968810Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.7968990Z         except KeyError:
2025-02-24T16:36:12.7969300Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.7969470Z     
2025-02-24T16:36:12.7969660Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.7969870Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.7970050Z             if attr == "selected_atoms":
2025-02-24T16:36:12.7970350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.7970540Z             elif actual.ndim == 1:
2025-02-24T16:36:12.7970740Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.7971180Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.7971340Z             else:
2025-02-24T16:36:12.7971550Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.7971780Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.7971800Z 
2025-02-24T16:36:12.7972080Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.7972320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7972660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.7974880Z     ???
2025-02-24T16:36:12.7975200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.7975210Z 
2025-02-24T16:36:12.7975410Z >   ???
2025-02-24T16:36:12.7975730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.7975890Z E   
2025-02-24T16:36:12.7976190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.7976440Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7976610Z E          ...
2025-02-24T16:36:12.7976800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7977110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7977380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.7977550Z E          ...
2025-02-24T16:36:12.7977770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.7978060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.7978290Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.7978300Z 
2025-02-24T16:36:12.7978500Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.7979100Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T16:36:12.7979110Z 
2025-02-24T16:36:12.7979430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7979720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7979950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7980470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.7980890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.7981230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.7981400Z err_msg = None
2025-02-24T16:36:12.7981410Z 
2025-02-24T16:36:12.7981910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.7982100Z         if err_msg is None:
2025-02-24T16:36:12.7982340Z             if left.shape != right.shape:
2025-02-24T16:36:12.7982560Z                 raise_assert_detail(
2025-02-24T16:36:12.7982900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.7983200Z                 )
2025-02-24T16:36:12.7983360Z     
2025-02-24T16:36:12.7983550Z             diff = 0
2025-02-24T16:36:12.7983970Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8058860Z                 # count up differences
2025-02-24T16:36:12.8060310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8060480Z                     diff += 1
2025-02-24T16:36:12.8060630Z     
2025-02-24T16:36:12.8060830Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8061130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8061580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8061840Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8062000Z E           
2025-02-24T16:36:12.8062250Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8062890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8063840Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8063860Z 
2025-02-24T16:36:12.8064520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8064530Z 
2025-02-24T16:36:12.8064890Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8064900Z 
2025-02-24T16:36:12.8065380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d911670>
2025-02-24T16:36:12.8065730Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>
2025-02-24T16:36:12.8065920Z attr = 'beta_sobolev'
2025-02-24T16:36:12.8065940Z 
2025-02-24T16:36:12.8066700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8066950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8067030Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8067090Z         try:
2025-02-24T16:36:12.8067230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8067300Z         except KeyError:
2025-02-24T16:36:12.8067420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8067470Z     
2025-02-24T16:36:12.8067540Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8067610Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8067680Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8067800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8067870Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8067940Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8068030Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8068080Z             else:
2025-02-24T16:36:12.8068150Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8068340Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8068340Z 
2025-02-24T16:36:12.8068450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8068550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8068680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8068730Z     ???
2025-02-24T16:36:12.8068820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8068820Z 
2025-02-24T16:36:12.8068870Z >   ???
2025-02-24T16:36:12.8068970Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8069020Z E   
2025-02-24T16:36:12.8069130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8069220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8069550Z E          ...
2025-02-24T16:36:12.8069620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8069730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8069830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8069880Z E          ...
2025-02-24T16:36:12.8069960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8070060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8070150Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8070160Z 
2025-02-24T16:36:12.8070230Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8070390Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T16:36:12.8070480Z 
2025-02-24T16:36:12.8070600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8070720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8070800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8070920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8071030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8071110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8071160Z err_msg = None
2025-02-24T16:36:12.8071170Z 
2025-02-24T16:36:12.8071260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8071320Z         if err_msg is None:
2025-02-24T16:36:12.8071390Z             if left.shape != right.shape:
2025-02-24T16:36:12.8071460Z                 raise_assert_detail(
2025-02-24T16:36:12.8071590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8071640Z                 )
2025-02-24T16:36:12.8071690Z     
2025-02-24T16:36:12.8071750Z             diff = 0
2025-02-24T16:36:12.8071840Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8071910Z                 # count up differences
2025-02-24T16:36:12.8072060Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8072120Z                     diff += 1
2025-02-24T16:36:12.8072170Z     
2025-02-24T16:36:12.8072240Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8072360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8072510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8072610Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8072660Z E           
2025-02-24T16:36:12.8072750Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8072990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8073220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8073230Z 
2025-02-24T16:36:12.8073500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8073500Z 
2025-02-24T16:36:12.8073650Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8073650Z 
2025-02-24T16:36:12.8073840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9127b0>
2025-02-24T16:36:12.8074360Z plasma = <tardis.plasma.base.BasePlasma object at 0x319248350>, attr = 'j_blues'
2025-02-24T16:36:12.8074370Z 
2025-02-24T16:36:12.8074490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8074590Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8074650Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8074700Z         try:
2025-02-24T16:36:12.8074830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8074900Z         except KeyError:
2025-02-24T16:36:12.8075020Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8075070Z     
2025-02-24T16:36:12.8075130Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8075460Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8075530Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8075650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8075720Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8075790Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8075890Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8075940Z             else:
2025-02-24T16:36:12.8076010Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8076100Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8076110Z 
2025-02-24T16:36:12.8076220Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8076320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8076440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8076500Z     ???
2025-02-24T16:36:12.8076600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8076600Z 
2025-02-24T16:36:12.8076660Z >   ???
2025-02-24T16:36:12.8076760Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8076820Z E   
2025-02-24T16:36:12.8076930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8077020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8077070Z E          ...
2025-02-24T16:36:12.8077140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8077250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8077340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8077390Z E          ...
2025-02-24T16:36:12.8077470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8077570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8077660Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8077660Z 
2025-02-24T16:36:12.8077730Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8077890Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T16:36:12.8077900Z 
2025-02-24T16:36:12.8078010Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8078130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8078220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8078330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8078440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8078530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8078580Z err_msg = None
2025-02-24T16:36:12.8078580Z 
2025-02-24T16:36:12.8078670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8078730Z         if err_msg is None:
2025-02-24T16:36:12.8078820Z             if left.shape != right.shape:
2025-02-24T16:36:12.8078880Z                 raise_assert_detail(
2025-02-24T16:36:12.8079070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8079130Z                 )
2025-02-24T16:36:12.8079170Z     
2025-02-24T16:36:12.8079230Z             diff = 0
2025-02-24T16:36:12.8079320Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8079390Z                 # count up differences
2025-02-24T16:36:12.8079530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8079580Z                     diff += 1
2025-02-24T16:36:12.8079630Z     
2025-02-24T16:36:12.8079700Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8079810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8080000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8080100Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8080150Z E           
2025-02-24T16:36:12.8080240Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8080460Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8080680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8080690Z 
2025-02-24T16:36:12.8080950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8080950Z 
2025-02-24T16:36:12.8081090Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8081100Z 
2025-02-24T16:36:12.8081290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d910d40>
2025-02-24T16:36:12.8081470Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>, attr = 'lines'
2025-02-24T16:36:12.8081480Z 
2025-02-24T16:36:12.8081600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8081690Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8081750Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8081790Z         try:
2025-02-24T16:36:12.8081920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8081980Z         except KeyError:
2025-02-24T16:36:12.8082090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8082140Z     
2025-02-24T16:36:12.8082200Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8082270Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8082340Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8082460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8082530Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8082600Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8082700Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8082740Z             else:
2025-02-24T16:36:12.8082820Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8082910Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8082910Z 
2025-02-24T16:36:12.8083010Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8083120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8083240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8083290Z     ???
2025-02-24T16:36:12.8083390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8083450Z 
2025-02-24T16:36:12.8083500Z >   ???
2025-02-24T16:36:12.8083610Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8083660Z E   
2025-02-24T16:36:12.8083770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8083860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8083920Z E          ...
2025-02-24T16:36:12.8083990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8084100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8084190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8084240Z E          ...
2025-02-24T16:36:12.8084360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8084470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8084560Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8084560Z 
2025-02-24T16:36:12.8084630Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8084810Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T16:36:12.8084810Z 
2025-02-24T16:36:12.8085000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d910c80>
2025-02-24T16:36:12.8085130Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>
2025-02-24T16:36:12.8085200Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.8085210Z 
2025-02-24T16:36:12.8085320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8085410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8085480Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8085530Z         try:
2025-02-24T16:36:12.8085650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8085710Z         except KeyError:
2025-02-24T16:36:12.8085820Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8085870Z     
2025-02-24T16:36:12.8085940Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8086020Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8086080Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8086200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8086270Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8086340Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8086430Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8086430Z 
2025-02-24T16:36:12.8086530Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8086620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8086630Z 
2025-02-24T16:36:12.8086740Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8086810Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8086890Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8086960Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8087080Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8087140Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8087230Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8087280Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8087340Z err_msg = None
2025-02-24T16:36:12.8087340Z 
2025-02-24T16:36:12.8087420Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8087480Z         if err_msg is None:
2025-02-24T16:36:12.8087560Z             if left.shape != right.shape:
2025-02-24T16:36:12.8087620Z                 raise_assert_detail(
2025-02-24T16:36:12.8087740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8087790Z                 )
2025-02-24T16:36:12.8087890Z     
2025-02-24T16:36:12.8087940Z             diff = 0
2025-02-24T16:36:12.8088030Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8088100Z                 # count up differences
2025-02-24T16:36:12.8088230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8088290Z                     diff += 1
2025-02-24T16:36:12.8088340Z     
2025-02-24T16:36:12.8088400Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8088510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8088650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8088790Z E           AssertionError: Series are different
2025-02-24T16:36:12.8088840Z E           
2025-02-24T16:36:12.8088920Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.8089230Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8089500Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8089780Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8089790Z 
2025-02-24T16:36:12.8090040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8090210Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T16:36:12.8090210Z 
2025-02-24T16:36:12.8090390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d910b30>
2025-02-24T16:36:12.8090510Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>
2025-02-24T16:36:12.8090580Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.8090590Z 
2025-02-24T16:36:12.8090700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8090790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8090850Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8090890Z         try:
2025-02-24T16:36:12.8091010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8091070Z         except KeyError:
2025-02-24T16:36:12.8091180Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8091230Z     
2025-02-24T16:36:12.8091290Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8091360Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8091420Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8091530Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8091600Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8091670Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8091750Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8091760Z 
2025-02-24T16:36:12.8091850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8091950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8092150Z 
2025-02-24T16:36:12.8092310Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8092380Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8092470Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8092530Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8092650Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8092710Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8092800Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8092860Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8093150Z err_msg = None
2025-02-24T16:36:12.8093160Z 
2025-02-24T16:36:12.8093250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8093300Z         if err_msg is None:
2025-02-24T16:36:12.8093380Z             if left.shape != right.shape:
2025-02-24T16:36:12.8093440Z                 raise_assert_detail(
2025-02-24T16:36:12.8093560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8093610Z                 )
2025-02-24T16:36:12.8093650Z     
2025-02-24T16:36:12.8093710Z             diff = 0
2025-02-24T16:36:12.8093800Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8093860Z                 # count up differences
2025-02-24T16:36:12.8094000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8094060Z                     diff += 1
2025-02-24T16:36:12.8094110Z     
2025-02-24T16:36:12.8094170Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8094290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8094420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8094510Z E           AssertionError: Series are different
2025-02-24T16:36:12.8094560Z E           
2025-02-24T16:36:12.8094640Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.8094950Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8095260Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8095580Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8095590Z 
2025-02-24T16:36:12.8095840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8095990Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T16:36:12.8096000Z 
2025-02-24T16:36:12.8096110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8096220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8096410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8096520Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8096640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8096720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8096770Z err_msg = None
2025-02-24T16:36:12.8096770Z 
2025-02-24T16:36:12.8096860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8096930Z         if err_msg is None:
2025-02-24T16:36:12.8097000Z             if left.shape != right.shape:
2025-02-24T16:36:12.8097070Z                 raise_assert_detail(
2025-02-24T16:36:12.8097240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8097300Z                 )
2025-02-24T16:36:12.8097350Z     
2025-02-24T16:36:12.8097410Z             diff = 0
2025-02-24T16:36:12.8097510Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8097580Z                 # count up differences
2025-02-24T16:36:12.8097720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8097780Z                     diff += 1
2025-02-24T16:36:12.8097830Z     
2025-02-24T16:36:12.8097900Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8098010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8098160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8098250Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8098300Z E           
2025-02-24T16:36:12.8098400Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8098620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8098860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8098860Z 
2025-02-24T16:36:12.8099110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8099120Z 
2025-02-24T16:36:12.8099260Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8099270Z 
2025-02-24T16:36:12.8099440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9126f0>
2025-02-24T16:36:12.8099610Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>, attr = 'nu'
2025-02-24T16:36:12.8099620Z 
2025-02-24T16:36:12.8099730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8099830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8099890Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8099940Z         try:
2025-02-24T16:36:12.8100070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8100130Z         except KeyError:
2025-02-24T16:36:12.8100250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8100300Z     
2025-02-24T16:36:12.8100360Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8100440Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8100520Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8100630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8100700Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8100770Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8100920Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8100920Z 
2025-02-24T16:36:12.8101020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8101120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8101240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8101300Z     ???
2025-02-24T16:36:12.8101390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8101390Z 
2025-02-24T16:36:12.8101440Z >   ???
2025-02-24T16:36:12.8101550Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8101650Z E   
2025-02-24T16:36:12.8101760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8101850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8101910Z E          ...
2025-02-24T16:36:12.8101970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8102090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8102180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8102230Z E          ...
2025-02-24T16:36:12.8102300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8102410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8102500Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8102500Z 
2025-02-24T16:36:12.8102570Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8102730Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T16:36:12.8102740Z 
2025-02-24T16:36:12.8102850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8102970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8103050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8103170Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8103280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8103360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8103420Z err_msg = None
2025-02-24T16:36:12.8103420Z 
2025-02-24T16:36:12.8103510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8103570Z         if err_msg is None:
2025-02-24T16:36:12.8103650Z             if left.shape != right.shape:
2025-02-24T16:36:12.8103710Z                 raise_assert_detail(
2025-02-24T16:36:12.8103840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8103890Z                 )
2025-02-24T16:36:12.8103940Z     
2025-02-24T16:36:12.8104030Z             diff = 0
2025-02-24T16:36:12.8104170Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8104260Z                 # count up differences
2025-02-24T16:36:12.8104400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8104470Z                     diff += 1
2025-02-24T16:36:12.8104510Z     
2025-02-24T16:36:12.8104580Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8104700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8104840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8104940Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8104990Z E           
2025-02-24T16:36:12.8105080Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8105310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8105660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8105670Z 
2025-02-24T16:36:12.8105920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8105930Z 
2025-02-24T16:36:12.8106070Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8106140Z 
2025-02-24T16:36:12.8106320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d913e90>
2025-02-24T16:36:12.8106470Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>
2025-02-24T16:36:12.8106540Z attr = 'wavelength_cm'
2025-02-24T16:36:12.8106540Z 
2025-02-24T16:36:12.8106650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8106770Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8106830Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8106880Z         try:
2025-02-24T16:36:12.8107000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8107080Z         except KeyError:
2025-02-24T16:36:12.8107200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8107250Z     
2025-02-24T16:36:12.8107320Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8107390Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8107460Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8107580Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8107640Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8107730Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8107820Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8107830Z 
2025-02-24T16:36:12.8107930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8108030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8108160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8108210Z     ???
2025-02-24T16:36:12.8108400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8108400Z 
2025-02-24T16:36:12.8108460Z >   ???
2025-02-24T16:36:12.8108560Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8108610Z E   
2025-02-24T16:36:12.8108720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8108810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8108860Z E          ...
2025-02-24T16:36:12.8108930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8109040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8109130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8109180Z E          ...
2025-02-24T16:36:12.8109250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8109350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8109440Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8109440Z 
2025-02-24T16:36:12.8109500Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8109670Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T16:36:12.8109670Z 
2025-02-24T16:36:12.8109780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8109890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8110320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8110430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8110540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8110620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8110670Z err_msg = None
2025-02-24T16:36:12.8110670Z 
2025-02-24T16:36:12.8110760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8110820Z         if err_msg is None:
2025-02-24T16:36:12.8110900Z             if left.shape != right.shape:
2025-02-24T16:36:12.8110960Z                 raise_assert_detail(
2025-02-24T16:36:12.8111450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8111510Z                 )
2025-02-24T16:36:12.8111560Z     
2025-02-24T16:36:12.8111610Z             diff = 0
2025-02-24T16:36:12.8111710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8111780Z                 # count up differences
2025-02-24T16:36:12.8111920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8111970Z                     diff += 1
2025-02-24T16:36:12.8112020Z     
2025-02-24T16:36:12.8112090Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8112210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8119660Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8119800Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8119870Z E           
2025-02-24T16:36:12.8119970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8120200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8120430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8120430Z 
2025-02-24T16:36:12.8120680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8120690Z 
2025-02-24T16:36:12.8120830Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8120830Z 
2025-02-24T16:36:12.8121010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d911310>
2025-02-24T16:36:12.8121170Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>, attr = 'f_lu'
2025-02-24T16:36:12.8121170Z 
2025-02-24T16:36:12.8121290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8121380Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8121440Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8121480Z         try:
2025-02-24T16:36:12.8121600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8121660Z         except KeyError:
2025-02-24T16:36:12.8121770Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8121820Z     
2025-02-24T16:36:12.8121880Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8121950Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8122020Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8122130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8122190Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8122270Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8122570Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8122570Z 
2025-02-24T16:36:12.8122670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8122760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8122880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8122930Z     ???
2025-02-24T16:36:12.8123020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8123020Z 
2025-02-24T16:36:12.8123070Z >   ???
2025-02-24T16:36:12.8123170Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8123270Z E   
2025-02-24T16:36:12.8123380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8123460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8123520Z E          ...
2025-02-24T16:36:12.8123580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8123690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8123790Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8123830Z E          ...
2025-02-24T16:36:12.8123900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8124000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8124090Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8124090Z 
2025-02-24T16:36:12.8124150Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8124320Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T16:36:12.8124320Z 
2025-02-24T16:36:12.8124430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8124540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8124630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8124740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8124850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8124930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8124980Z err_msg = None
2025-02-24T16:36:12.8124980Z 
2025-02-24T16:36:12.8125070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8125130Z         if err_msg is None:
2025-02-24T16:36:12.8125200Z             if left.shape != right.shape:
2025-02-24T16:36:12.8125270Z                 raise_assert_detail(
2025-02-24T16:36:12.8125390Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8125450Z                 )
2025-02-24T16:36:12.8125500Z     
2025-02-24T16:36:12.8125550Z             diff = 0
2025-02-24T16:36:12.8125640Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8125710Z                 # count up differences
2025-02-24T16:36:12.8125870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8125920Z                     diff += 1
2025-02-24T16:36:12.8125980Z     
2025-02-24T16:36:12.8126040Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8126160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8126300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8126390Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8126440Z E           
2025-02-24T16:36:12.8126540Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8126760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8127040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8127050Z 
2025-02-24T16:36:12.8127300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8127300Z 
2025-02-24T16:36:12.8127510Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8127510Z 
2025-02-24T16:36:12.8127690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c4440>
2025-02-24T16:36:12.8127820Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>
2025-02-24T16:36:12.8127880Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.8127890Z 
2025-02-24T16:36:12.8128000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8128090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8128160Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8128200Z         try:
2025-02-24T16:36:12.8128320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8128380Z         except KeyError:
2025-02-24T16:36:12.8128490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8128540Z     
2025-02-24T16:36:12.8128610Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8128680Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8128750Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8128860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8128930Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8129010Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8129090Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8129150Z             else:
2025-02-24T16:36:12.8129230Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8129310Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8129320Z 
2025-02-24T16:36:12.8129420Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8129510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8129640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8129690Z     ???
2025-02-24T16:36:12.8129780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8129790Z 
2025-02-24T16:36:12.8129830Z >   ???
2025-02-24T16:36:12.8129940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8129990Z E   
2025-02-24T16:36:12.8130090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8130190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8130240Z E          ...
2025-02-24T16:36:12.8130310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8130420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8130510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8130560Z E          ...
2025-02-24T16:36:12.8130630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8130740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8130820Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8130830Z 
2025-02-24T16:36:12.8130890Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8131060Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T16:36:12.8131060Z 
2025-02-24T16:36:12.8131160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8131350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8131430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8131540Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8131650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8131730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8131790Z err_msg = None
2025-02-24T16:36:12.8131790Z 
2025-02-24T16:36:12.8131880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8131990Z         if err_msg is None:
2025-02-24T16:36:12.8132070Z             if left.shape != right.shape:
2025-02-24T16:36:12.8132130Z                 raise_assert_detail(
2025-02-24T16:36:12.8132250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8132300Z                 )
2025-02-24T16:36:12.8132350Z     
2025-02-24T16:36:12.8132400Z             diff = 0
2025-02-24T16:36:12.8132490Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8132560Z                 # count up differences
2025-02-24T16:36:12.8132700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8132760Z                     diff += 1
2025-02-24T16:36:12.8132800Z     
2025-02-24T16:36:12.8132870Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8132990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8133130Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8133230Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8133280Z E           
2025-02-24T16:36:12.8133370Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8133590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8133810Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8133820Z 
2025-02-24T16:36:12.8134070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8134070Z 
2025-02-24T16:36:12.8134210Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8134210Z 
2025-02-24T16:36:12.8134390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c4500>
2025-02-24T16:36:12.8134530Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>
2025-02-24T16:36:12.8134580Z attr = 'beta_sobolev'
2025-02-24T16:36:12.8134580Z 
2025-02-24T16:36:12.8134700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8134790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8134850Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8134900Z         try:
2025-02-24T16:36:12.8135020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8135080Z         except KeyError:
2025-02-24T16:36:12.8135200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8135250Z     
2025-02-24T16:36:12.8135320Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8135400Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8135580Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8135700Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8135780Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8135850Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8135950Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8136010Z             else:
2025-02-24T16:36:12.8136080Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8136170Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8136180Z 
2025-02-24T16:36:12.8136270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8136380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8136590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8136650Z     ???
2025-02-24T16:36:12.8136750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8136750Z 
2025-02-24T16:36:12.8136800Z >   ???
2025-02-24T16:36:12.8136910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8136960Z E   
2025-02-24T16:36:12.8137070Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8137160Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8137210Z E          ...
2025-02-24T16:36:12.8137290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8137400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8137500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8137550Z E          ...
2025-02-24T16:36:12.8137620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8137730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8137810Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8137820Z 
2025-02-24T16:36:12.8137890Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8138060Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T16:36:12.8138060Z 
2025-02-24T16:36:12.8138170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8138280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8138360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8138480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8138590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8138680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8138730Z err_msg = None
2025-02-24T16:36:12.8138730Z 
2025-02-24T16:36:12.8138820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8138890Z         if err_msg is None:
2025-02-24T16:36:12.8138970Z             if left.shape != right.shape:
2025-02-24T16:36:12.8139030Z                 raise_assert_detail(
2025-02-24T16:36:12.8139160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8139210Z                 )
2025-02-24T16:36:12.8139260Z     
2025-02-24T16:36:12.8139310Z             diff = 0
2025-02-24T16:36:12.8139410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8139480Z                 # count up differences
2025-02-24T16:36:12.8139630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8139680Z                     diff += 1
2025-02-24T16:36:12.8139740Z     
2025-02-24T16:36:12.8139810Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8139920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8140070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8140230Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8140290Z E           
2025-02-24T16:36:12.8140380Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8140610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8140840Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8140890Z 
2025-02-24T16:36:12.8141150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8141160Z 
2025-02-24T16:36:12.8141300Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8141300Z 
2025-02-24T16:36:12.8141480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c4680>
2025-02-24T16:36:12.8141650Z plasma = <tardis.plasma.base.BasePlasma object at 0x13e6c5c10>, attr = 'j_blues'
2025-02-24T16:36:12.8141650Z 
2025-02-24T16:36:12.8141770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8141860Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8141920Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8141980Z         try:
2025-02-24T16:36:12.8142090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8142150Z         except KeyError:
2025-02-24T16:36:12.8142260Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8142320Z     
2025-02-24T16:36:12.8142390Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8142470Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8142540Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8142660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8142730Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8142800Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8142900Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8142950Z             else:
2025-02-24T16:36:12.8143030Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8143120Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8143130Z 
2025-02-24T16:36:12.8143230Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8143330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8143450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8143510Z     ???
2025-02-24T16:36:12.8143610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8143610Z 
2025-02-24T16:36:12.8143660Z >   ???
2025-02-24T16:36:12.8143760Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8143810Z E   
2025-02-24T16:36:12.8143910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8144000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8144050Z E          ...
2025-02-24T16:36:12.8144120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8144220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8144320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8144370Z E          ...
2025-02-24T16:36:12.8144440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8144600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8144680Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8144680Z 
2025-02-24T16:36:12.8144750Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8144920Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T16:36:12.8144920Z 
2025-02-24T16:36:12.8145030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8145140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8145210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8145390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8145500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8145580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8145640Z err_msg = None
2025-02-24T16:36:12.8145640Z 
2025-02-24T16:36:12.8145720Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8145790Z         if err_msg is None:
2025-02-24T16:36:12.8145870Z             if left.shape != right.shape:
2025-02-24T16:36:12.8145930Z                 raise_assert_detail(
2025-02-24T16:36:12.8146050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8146100Z                 )
2025-02-24T16:36:12.8146150Z     
2025-02-24T16:36:12.8146200Z             diff = 0
2025-02-24T16:36:12.8146290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8146360Z                 # count up differences
2025-02-24T16:36:12.8146510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8146570Z                     diff += 1
2025-02-24T16:36:12.8146620Z     
2025-02-24T16:36:12.8146680Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8146800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8147010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8147150Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8147210Z E           
2025-02-24T16:36:12.8147300Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8147520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8147760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8147770Z 
2025-02-24T16:36:12.8148010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8148020Z 
2025-02-24T16:36:12.8148160Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8148160Z 
2025-02-24T16:36:12.8148340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c5400>
2025-02-24T16:36:12.8148620Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>, attr = 'lines'
2025-02-24T16:36:12.8148620Z 
2025-02-24T16:36:12.8148740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8148830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8148890Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8148940Z         try:
2025-02-24T16:36:12.8149060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8149330Z         except KeyError:
2025-02-24T16:36:12.8149450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8149490Z     
2025-02-24T16:36:12.8149560Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8149630Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8149700Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8149810Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8149870Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8149940Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8150020Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8150140Z             else:
2025-02-24T16:36:12.8150210Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8150300Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8150300Z 
2025-02-24T16:36:12.8150400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8150500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8150620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8150660Z     ???
2025-02-24T16:36:12.8150760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8150760Z 
2025-02-24T16:36:12.8150810Z >   ???
2025-02-24T16:36:12.8150910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8150950Z E   
2025-02-24T16:36:12.8151060Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8151150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8151190Z E          ...
2025-02-24T16:36:12.8151270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8151370Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8151470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8151520Z E          ...
2025-02-24T16:36:12.8151590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8151690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8151770Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8151770Z 
2025-02-24T16:36:12.8151840Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8152020Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T16:36:12.8152030Z 
2025-02-24T16:36:12.8152200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c54c0>
2025-02-24T16:36:12.8152330Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>
2025-02-24T16:36:12.8152400Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.8152400Z 
2025-02-24T16:36:12.8152510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8152600Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8152660Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8152710Z         try:
2025-02-24T16:36:12.8152830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8152890Z         except KeyError:
2025-02-24T16:36:12.8153000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8153050Z     
2025-02-24T16:36:12.8153110Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8153190Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8153250Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8153360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8153420Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8153490Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8153580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8153590Z 
2025-02-24T16:36:12.8153680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8154110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8154110Z 
2025-02-24T16:36:12.8154230Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8154300Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8154390Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8154450Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8154560Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8154630Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8154710Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8154960Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8155010Z err_msg = None
2025-02-24T16:36:12.8155010Z 
2025-02-24T16:36:12.8155100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8155160Z         if err_msg is None:
2025-02-24T16:36:12.8155230Z             if left.shape != right.shape:
2025-02-24T16:36:12.8155300Z                 raise_assert_detail(
2025-02-24T16:36:12.8155410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8155470Z                 )
2025-02-24T16:36:12.8155510Z     
2025-02-24T16:36:12.8155570Z             diff = 0
2025-02-24T16:36:12.8155650Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8155720Z                 # count up differences
2025-02-24T16:36:12.8155860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8155920Z                     diff += 1
2025-02-24T16:36:12.8155970Z     
2025-02-24T16:36:12.8156040Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8156150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8156290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8156370Z E           AssertionError: Series are different
2025-02-24T16:36:12.8156420Z E           
2025-02-24T16:36:12.8156500Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.8156810Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8157090Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8157370Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8157370Z 
2025-02-24T16:36:12.8157620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8157810Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T16:36:12.8157810Z 
2025-02-24T16:36:12.8157980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c5580>
2025-02-24T16:36:12.8158110Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>
2025-02-24T16:36:12.8158230Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.8158240Z 
2025-02-24T16:36:12.8158350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8158440Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8158500Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8158540Z         try:
2025-02-24T16:36:12.8158660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8158720Z         except KeyError:
2025-02-24T16:36:12.8158830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8158910Z     
2025-02-24T16:36:12.8158990Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8159060Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8159210Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8159320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8159400Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8159480Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8159570Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8159580Z 
2025-02-24T16:36:12.8159680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8159770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8159770Z 
2025-02-24T16:36:12.8159890Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8159950Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8160040Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8160110Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8160230Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8160300Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8160390Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8160450Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8160510Z err_msg = None
2025-02-24T16:36:12.8160510Z 
2025-02-24T16:36:12.8160590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8160650Z         if err_msg is None:
2025-02-24T16:36:12.8160720Z             if left.shape != right.shape:
2025-02-24T16:36:12.8160780Z                 raise_assert_detail(
2025-02-24T16:36:12.8160900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8160950Z                 )
2025-02-24T16:36:12.8160990Z     
2025-02-24T16:36:12.8161040Z             diff = 0
2025-02-24T16:36:12.8161130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8161190Z                 # count up differences
2025-02-24T16:36:12.8161340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8161390Z                     diff += 1
2025-02-24T16:36:12.8161440Z     
2025-02-24T16:36:12.8161510Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8161620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8161770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8161840Z E           AssertionError: Series are different
2025-02-24T16:36:12.8161890Z E           
2025-02-24T16:36:12.8161970Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.8162270Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8162590Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8162980Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8163030Z 
2025-02-24T16:36:12.8163280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8163440Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T16:36:12.8163450Z 
2025-02-24T16:36:12.8163550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8163660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8163740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8163850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8163960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8164040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8164090Z err_msg = None
2025-02-24T16:36:12.8164090Z 
2025-02-24T16:36:12.8164180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8164240Z         if err_msg is None:
2025-02-24T16:36:12.8164310Z             if left.shape != right.shape:
2025-02-24T16:36:12.8164370Z                 raise_assert_detail(
2025-02-24T16:36:12.8164490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8164540Z                 )
2025-02-24T16:36:12.8164580Z     
2025-02-24T16:36:12.8164630Z             diff = 0
2025-02-24T16:36:12.8164720Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8164780Z                 # count up differences
2025-02-24T16:36:12.8164920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8164980Z                     diff += 1
2025-02-24T16:36:12.8165030Z     
2025-02-24T16:36:12.8165100Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8165220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8165350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8165450Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8165490Z E           
2025-02-24T16:36:12.8165590Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8165800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8166020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8166030Z 
2025-02-24T16:36:12.8168750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8168930Z 
2025-02-24T16:36:12.8169080Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8169080Z 
2025-02-24T16:36:12.8169260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c57c0>
2025-02-24T16:36:12.8169410Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>, attr = 'nu'
2025-02-24T16:36:12.8169410Z 
2025-02-24T16:36:12.8169520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8183380Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8183540Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8183600Z         try:
2025-02-24T16:36:12.8184030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8184090Z         except KeyError:
2025-02-24T16:36:12.8184210Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8184260Z     
2025-02-24T16:36:12.8184330Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8184410Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8184470Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8184590Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8184660Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8184730Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8184830Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8184830Z 
2025-02-24T16:36:12.8184940Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8185030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8185160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8185210Z     ???
2025-02-24T16:36:12.8185310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8185310Z 
2025-02-24T16:36:12.8185360Z >   ???
2025-02-24T16:36:12.8185460Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8185510Z E   
2025-02-24T16:36:12.8185620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8185710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8185760Z E          ...
2025-02-24T16:36:12.8185830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8185940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8186030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8186080Z E          ...
2025-02-24T16:36:12.8186150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8186260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8186340Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8186550Z 
2025-02-24T16:36:12.8186620Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8186950Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T16:36:12.8187240Z 
2025-02-24T16:36:12.8187360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8187670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8187930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8188230Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8188550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8188850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8191560Z err_msg = None
2025-02-24T16:36:12.8191850Z 
2025-02-24T16:36:12.8191990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8194890Z         if err_msg is None:
2025-02-24T16:36:12.8195110Z             if left.shape != right.shape:
2025-02-24T16:36:12.8195690Z                 raise_assert_detail(
2025-02-24T16:36:12.8195950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8196200Z                 )
2025-02-24T16:36:12.8196350Z     
2025-02-24T16:36:12.8196470Z             diff = 0
2025-02-24T16:36:12.8196670Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8196900Z                 # count up differences
2025-02-24T16:36:12.8198200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8199040Z                     diff += 1
2025-02-24T16:36:12.8384740Z     
2025-02-24T16:36:12.8385080Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8385830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8386170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8386490Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8386730Z E           
2025-02-24T16:36:12.8387640Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8388100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8388680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8389010Z 
2025-02-24T16:36:12.8389280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8389630Z 
2025-02-24T16:36:12.8389770Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8390020Z 
2025-02-24T16:36:12.8390220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c5880>
2025-02-24T16:36:12.8390630Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>
2025-02-24T16:36:12.8390890Z attr = 'wavelength_cm'
2025-02-24T16:36:12.8391000Z 
2025-02-24T16:36:12.8391130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8391440Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8391680Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8391840Z         try:
2025-02-24T16:36:12.8392050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8392300Z         except KeyError:
2025-02-24T16:36:12.8392530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8392750Z     
2025-02-24T16:36:12.8392900Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8393100Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8393310Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8393560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8393810Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8394010Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8394270Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8394460Z 
2025-02-24T16:36:12.8394570Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8394900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8395230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8395510Z     ???
2025-02-24T16:36:12.8395720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8395930Z 
2025-02-24T16:36:12.8396350Z >   ???
2025-02-24T16:36:12.8396570Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8396830Z E   
2025-02-24T16:36:12.8397030Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8397350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8397580Z E          ...
2025-02-24T16:36:12.8397760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8398040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8398360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8398610Z E          ...
2025-02-24T16:36:12.8398810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8399260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8399550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8399750Z 
2025-02-24T16:36:12.8399850Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8400180Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T16:36:12.8400450Z 
2025-02-24T16:36:12.8400590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8400950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8401270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8401550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8401880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8402180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8402410Z err_msg = None
2025-02-24T16:36:12.8402540Z 
2025-02-24T16:36:12.8402650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8402910Z         if err_msg is None:
2025-02-24T16:36:12.8403150Z             if left.shape != right.shape:
2025-02-24T16:36:12.8403390Z                 raise_assert_detail(
2025-02-24T16:36:12.8403690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8404000Z                 )
2025-02-24T16:36:12.8404180Z     
2025-02-24T16:36:12.8404330Z             diff = 0
2025-02-24T16:36:12.8404570Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8404860Z                 # count up differences
2025-02-24T16:36:12.8405180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8405520Z                     diff += 1
2025-02-24T16:36:12.8405740Z     
2025-02-24T16:36:12.8405910Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8406210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8406590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8406940Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8407200Z E           
2025-02-24T16:36:12.8407420Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8407810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8408340Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8408630Z 
2025-02-24T16:36:12.8408880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8409320Z 
2025-02-24T16:36:12.8409460Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8409680Z 
2025-02-24T16:36:12.8409860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c5940>
2025-02-24T16:36:12.8410290Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>, attr = 'f_lu'
2025-02-24T16:36:12.8410520Z 
2025-02-24T16:36:12.8410640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8410920Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8411150Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8411320Z         try:
2025-02-24T16:36:12.8411600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8411850Z         except KeyError:
2025-02-24T16:36:12.8412080Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8412310Z     
2025-02-24T16:36:12.8412450Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8412650Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8412870Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8413120Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8413360Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8413560Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8413800Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8413960Z 
2025-02-24T16:36:12.8414060Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8414330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8414630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8414870Z     ???
2025-02-24T16:36:12.8415050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8415210Z 
2025-02-24T16:36:12.8415260Z >   ???
2025-02-24T16:36:12.8415440Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8415670Z E   
2025-02-24T16:36:12.8415850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8416120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8416330Z E          ...
2025-02-24T16:36:12.8416490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8416740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8417010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8417230Z E          ...
2025-02-24T16:36:12.8417380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8417640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8417900Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8418060Z 
2025-02-24T16:36:12.8418130Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8418430Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T16:36:12.8418670Z 
2025-02-24T16:36:12.8418780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8419080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8419350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8419620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8419930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8420190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8420400Z err_msg = None
2025-02-24T16:36:12.8420490Z 
2025-02-24T16:36:12.8420580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8420810Z         if err_msg is None:
2025-02-24T16:36:12.8421000Z             if left.shape != right.shape:
2025-02-24T16:36:12.8421300Z                 raise_assert_detail(
2025-02-24T16:36:12.8421550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8421790Z                 )
2025-02-24T16:36:12.8421920Z     
2025-02-24T16:36:12.8422050Z             diff = 0
2025-02-24T16:36:12.8422240Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8422450Z                 # count up differences
2025-02-24T16:36:12.8422740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8423010Z                     diff += 1
2025-02-24T16:36:12.8423170Z     
2025-02-24T16:36:12.8423300Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8423610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8423940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8424240Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8424620Z E           
2025-02-24T16:36:12.8424800Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8425180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8425700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8425990Z 
2025-02-24T16:36:12.8426320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8426700Z 
2025-02-24T16:36:12.8426840Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8427090Z 
2025-02-24T16:36:12.8427290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c60c0>
2025-02-24T16:36:12.8427670Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>
2025-02-24T16:36:12.8427930Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.8428040Z 
2025-02-24T16:36:12.8428170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8428450Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8428690Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8428850Z         try:
2025-02-24T16:36:12.8429060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8429310Z         except KeyError:
2025-02-24T16:36:12.8429540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8429770Z     
2025-02-24T16:36:12.8429910Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8430120Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8430340Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8430600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8430840Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8431040Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8431280Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8431500Z             else:
2025-02-24T16:36:12.8431660Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8431890Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8432050Z 
2025-02-24T16:36:12.8432160Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8432440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8432720Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8433210Z     ???
2025-02-24T16:36:12.8433390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8433560Z 
2025-02-24T16:36:12.8433600Z >   ???
2025-02-24T16:36:12.8433790Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8434020Z E   
2025-02-24T16:36:12.8434190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8434450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8434660Z E          ...
2025-02-24T16:36:12.8434820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8447630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8448600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8448810Z E          ...
2025-02-24T16:36:12.8448960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8449210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8449460Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8449620Z 
2025-02-24T16:36:12.8449690Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8449980Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T16:36:12.8450220Z 
2025-02-24T16:36:12.8450330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8450660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8450920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8451180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8451480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8451730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8451930Z err_msg = None
2025-02-24T16:36:12.8452020Z 
2025-02-24T16:36:12.8452120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8452340Z         if err_msg is None:
2025-02-24T16:36:12.8452520Z             if left.shape != right.shape:
2025-02-24T16:36:12.8452720Z                 raise_assert_detail(
2025-02-24T16:36:12.8452980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8453220Z                 )
2025-02-24T16:36:12.8453350Z     
2025-02-24T16:36:12.8453470Z             diff = 0
2025-02-24T16:36:12.8453650Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8453880Z                 # count up differences
2025-02-24T16:36:12.8454300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8454570Z                     diff += 1
2025-02-24T16:36:12.8454750Z     
2025-02-24T16:36:12.8454890Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8455150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8455480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8455780Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8456010Z E           
2025-02-24T16:36:12.8456190Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8456570Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8457090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8457510Z 
2025-02-24T16:36:12.8457780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8458100Z 
2025-02-24T16:36:12.8458250Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8458480Z 
2025-02-24T16:36:12.8458670Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c6180>
2025-02-24T16:36:12.8459060Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>
2025-02-24T16:36:12.8459310Z attr = 'beta_sobolev'
2025-02-24T16:36:12.8459420Z 
2025-02-24T16:36:12.8459540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8459890Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8460130Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8460300Z         try:
2025-02-24T16:36:12.8460500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8460770Z         except KeyError:
2025-02-24T16:36:12.8461010Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8461240Z     
2025-02-24T16:36:12.8461380Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8461570Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8461770Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8462020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8462270Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8462460Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8462690Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8462900Z             else:
2025-02-24T16:36:12.8463070Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8463300Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8463460Z 
2025-02-24T16:36:12.8463560Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8463830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8464130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8464380Z     ???
2025-02-24T16:36:12.8464660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8464830Z 
2025-02-24T16:36:12.8464880Z >   ???
2025-02-24T16:36:12.8465100Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8465320Z E   
2025-02-24T16:36:12.8465500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8465770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8465990Z E          ...
2025-02-24T16:36:12.8466160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8466410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8466690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8466910Z E          ...
2025-02-24T16:36:12.8467070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8467320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8467590Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8467750Z 
2025-02-24T16:36:12.8467810Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8468130Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T16:36:12.8468370Z 
2025-02-24T16:36:12.8468480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8468780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8469050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8469320Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8469740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8470000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8470210Z err_msg = None
2025-02-24T16:36:12.8470300Z 
2025-02-24T16:36:12.8470390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8470630Z         if err_msg is None:
2025-02-24T16:36:12.8470830Z             if left.shape != right.shape:
2025-02-24T16:36:12.8471040Z                 raise_assert_detail(
2025-02-24T16:36:12.8471300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8471540Z                 )
2025-02-24T16:36:12.8471730Z     
2025-02-24T16:36:12.8471860Z             diff = 0
2025-02-24T16:36:12.8472050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8472290Z                 # count up differences
2025-02-24T16:36:12.8472580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8472870Z                     diff += 1
2025-02-24T16:36:12.8473030Z     
2025-02-24T16:36:12.8473170Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8473430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8473750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8474050Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8474260Z E           
2025-02-24T16:36:12.8474440Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8474810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8475320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8475650Z 
2025-02-24T16:36:12.8475930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8476260Z 
2025-02-24T16:36:12.8476400Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8476640Z 
2025-02-24T16:36:12.8476860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c6300>
2025-02-24T16:36:12.8477300Z plasma = <tardis.plasma.base.BasePlasma object at 0x311a3c9e0>, attr = 'j_blues'
2025-02-24T16:36:12.8477580Z 
2025-02-24T16:36:12.8477700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8477980Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8478220Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8478410Z         try:
2025-02-24T16:36:12.8478660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8478920Z         except KeyError:
2025-02-24T16:36:12.8479150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8479410Z     
2025-02-24T16:36:12.8479560Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8479780Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8480000Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8480270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8480540Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8480740Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8480980Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8481200Z             else:
2025-02-24T16:36:12.8481370Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8481760Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8481930Z 
2025-02-24T16:36:12.8482040Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8482310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8482610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8482860Z     ???
2025-02-24T16:36:12.8483020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8483190Z 
2025-02-24T16:36:12.8483250Z >   ???
2025-02-24T16:36:12.8483430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8483730Z E   
2025-02-24T16:36:12.8483920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8484190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8484410Z E          ...
2025-02-24T16:36:12.8484590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8484850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8485130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8485350Z E          ...
2025-02-24T16:36:12.8485520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8485780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8486040Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8486200Z 
2025-02-24T16:36:12.8486270Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8486620Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T16:36:12.8486910Z 
2025-02-24T16:36:12.8487020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8487330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8487610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8487880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8488180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8488450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8488650Z err_msg = None
2025-02-24T16:36:12.8488750Z 
2025-02-24T16:36:12.8488840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8489060Z         if err_msg is None:
2025-02-24T16:36:12.8489250Z             if left.shape != right.shape:
2025-02-24T16:36:12.8489460Z                 raise_assert_detail(
2025-02-24T16:36:12.8489720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8489980Z                 )
2025-02-24T16:36:12.8490130Z     
2025-02-24T16:36:12.8490260Z             diff = 0
2025-02-24T16:36:12.8490460Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8490700Z                 # count up differences
2025-02-24T16:36:12.8490980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8491240Z                     diff += 1
2025-02-24T16:36:12.8491410Z     
2025-02-24T16:36:12.8491550Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8491800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8492130Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8492430Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8492640Z E           
2025-02-24T16:36:12.8492820Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8493190Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8494130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8494420Z 
2025-02-24T16:36:12.8494680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8495000Z 
2025-02-24T16:36:12.8495400Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8495620Z 
2025-02-24T16:36:12.8495800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c7080>
2025-02-24T16:36:12.8496220Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>, attr = 'lines'
2025-02-24T16:36:12.8496470Z 
2025-02-24T16:36:12.8496580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8496870Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8497100Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8497270Z         try:
2025-02-24T16:36:12.8497470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8497720Z         except KeyError:
2025-02-24T16:36:12.8497950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8498190Z     
2025-02-24T16:36:12.8498330Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8498530Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8498750Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8499010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8499260Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8499470Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8499710Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8499920Z             else:
2025-02-24T16:36:12.8500090Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8500320Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8500480Z 
2025-02-24T16:36:12.8500580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8500850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8501130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8501370Z     ???
2025-02-24T16:36:12.8501550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8501720Z 
2025-02-24T16:36:12.8501770Z >   ???
2025-02-24T16:36:12.8501950Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8502160Z E   
2025-02-24T16:36:12.8502340Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8502610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8502820Z E          ...
2025-02-24T16:36:12.8502970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8503220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8503490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8503700Z E          ...
2025-02-24T16:36:12.8503850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8504100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8504350Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8504650Z 
2025-02-24T16:36:12.8504720Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8505100Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T16:36:12.8505410Z 
2025-02-24T16:36:12.8505600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c7140>
2025-02-24T16:36:12.8506160Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>
2025-02-24T16:36:12.8506420Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.8506550Z 
2025-02-24T16:36:12.8506670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8506940Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8507170Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8507330Z         try:
2025-02-24T16:36:12.8507530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8507790Z         except KeyError:
2025-02-24T16:36:12.8508010Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8508300Z     
2025-02-24T16:36:12.8508440Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8508630Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8508840Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8509090Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8516970Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8517250Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8517520Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8517710Z 
2025-02-24T16:36:12.8517840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8518180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8518390Z 
2025-02-24T16:36:12.8518530Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8518850Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8519130Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8520110Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8520390Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8520880Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8521120Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8521340Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8521530Z err_msg = None
2025-02-24T16:36:12.8521620Z 
2025-02-24T16:36:12.8521710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8521920Z         if err_msg is None:
2025-02-24T16:36:12.8522110Z             if left.shape != right.shape:
2025-02-24T16:36:12.8522310Z                 raise_assert_detail(
2025-02-24T16:36:12.8522570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8522810Z                 )
2025-02-24T16:36:12.8522940Z     
2025-02-24T16:36:12.8523060Z             diff = 0
2025-02-24T16:36:12.8523250Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8523470Z                 # count up differences
2025-02-24T16:36:12.8523760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8524020Z                     diff += 1
2025-02-24T16:36:12.8524180Z     
2025-02-24T16:36:12.8524320Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8524580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8524910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8525210Z E           AssertionError: Series are different
2025-02-24T16:36:12.8525410Z E           
2025-02-24T16:36:12.8525570Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.8526040Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8527030Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8527660Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8528120Z 
2025-02-24T16:36:12.8528390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8528960Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T16:36:12.8529280Z 
2025-02-24T16:36:12.8529470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c7200>
2025-02-24T16:36:12.8529860Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>
2025-02-24T16:36:12.8530130Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.8530260Z 
2025-02-24T16:36:12.8530380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8530670Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8530910Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8531090Z         try:
2025-02-24T16:36:12.8531310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8531580Z         except KeyError:
2025-02-24T16:36:12.8531810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8532050Z     
2025-02-24T16:36:12.8532190Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8532390Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8532600Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8532870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8533120Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8533330Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8533580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8533750Z 
2025-02-24T16:36:12.8533860Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8534140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8534320Z 
2025-02-24T16:36:12.8534440Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8534710Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8534950Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8535180Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8535430Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8535690Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8535930Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8536160Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8536340Z err_msg = None
2025-02-24T16:36:12.8536350Z 
2025-02-24T16:36:12.8536440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8536500Z         if err_msg is None:
2025-02-24T16:36:12.8536570Z             if left.shape != right.shape:
2025-02-24T16:36:12.8536640Z                 raise_assert_detail(
2025-02-24T16:36:12.8536770Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8536820Z                 )
2025-02-24T16:36:12.8536950Z     
2025-02-24T16:36:12.8537000Z             diff = 0
2025-02-24T16:36:12.8537100Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8537160Z                 # count up differences
2025-02-24T16:36:12.8537310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8537370Z                     diff += 1
2025-02-24T16:36:12.8537420Z     
2025-02-24T16:36:12.8537490Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8537600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8537750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8537890Z E           AssertionError: Series are different
2025-02-24T16:36:12.8537950Z E           
2025-02-24T16:36:12.8538030Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.8538360Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8538700Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8539020Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8539030Z 
2025-02-24T16:36:12.8539290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8539490Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T16:36:12.8539500Z 
2025-02-24T16:36:12.8539610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8539730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8539810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8539920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8540040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8540110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8540170Z err_msg = None
2025-02-24T16:36:12.8540180Z 
2025-02-24T16:36:12.8540270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8540320Z         if err_msg is None:
2025-02-24T16:36:12.8540400Z             if left.shape != right.shape:
2025-02-24T16:36:12.8540460Z                 raise_assert_detail(
2025-02-24T16:36:12.8540580Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8540630Z                 )
2025-02-24T16:36:12.8540680Z     
2025-02-24T16:36:12.8540730Z             diff = 0
2025-02-24T16:36:12.8540820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8540890Z                 # count up differences
2025-02-24T16:36:12.8541030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8541430Z                     diff += 1
2025-02-24T16:36:12.8541490Z     
2025-02-24T16:36:12.8541560Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8541680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8541820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8541930Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8541980Z E           
2025-02-24T16:36:12.8542070Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8542290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8542730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8542750Z 
2025-02-24T16:36:12.8543000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8543010Z 
2025-02-24T16:36:12.8543150Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8543150Z 
2025-02-24T16:36:12.8543330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c7440>
2025-02-24T16:36:12.8543490Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>, attr = 'nu'
2025-02-24T16:36:12.8543500Z 
2025-02-24T16:36:12.8543610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8543700Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8543760Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8543810Z         try:
2025-02-24T16:36:12.8543930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8543980Z         except KeyError:
2025-02-24T16:36:12.8544100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8544140Z     
2025-02-24T16:36:12.8544210Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8544290Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8544350Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8544460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8544530Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8544600Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8544700Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8544700Z 
2025-02-24T16:36:12.8544800Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8544900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8545010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8545070Z     ???
2025-02-24T16:36:12.8545160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8545170Z 
2025-02-24T16:36:12.8545210Z >   ???
2025-02-24T16:36:12.8545310Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8545360Z E   
2025-02-24T16:36:12.8545460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8545550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8545610Z E          ...
2025-02-24T16:36:12.8545680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8545790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8545890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8546020Z E          ...
2025-02-24T16:36:12.8546090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8546190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8546270Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8546270Z 
2025-02-24T16:36:12.8546340Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8546560Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T16:36:12.8546570Z 
2025-02-24T16:36:12.8546680Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8546790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8546920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8547040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8547150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8547230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8547280Z err_msg = None
2025-02-24T16:36:12.8547290Z 
2025-02-24T16:36:12.8547380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8547440Z         if err_msg is None:
2025-02-24T16:36:12.8547520Z             if left.shape != right.shape:
2025-02-24T16:36:12.8547580Z                 raise_assert_detail(
2025-02-24T16:36:12.8547700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8547750Z                 )
2025-02-24T16:36:12.8547800Z     
2025-02-24T16:36:12.8547860Z             diff = 0
2025-02-24T16:36:12.8547950Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8548020Z                 # count up differences
2025-02-24T16:36:12.8548160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8548220Z                     diff += 1
2025-02-24T16:36:12.8548270Z     
2025-02-24T16:36:12.8548340Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8548450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8548590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8548680Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8548730Z E           
2025-02-24T16:36:12.8548820Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8549040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8549260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8549270Z 
2025-02-24T16:36:12.8549510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8549510Z 
2025-02-24T16:36:12.8549650Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8549660Z 
2025-02-24T16:36:12.8549830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c7500>
2025-02-24T16:36:12.8549960Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>
2025-02-24T16:36:12.8550020Z attr = 'wavelength_cm'
2025-02-24T16:36:12.8550030Z 
2025-02-24T16:36:12.8550140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8550280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8550350Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8550400Z         try:
2025-02-24T16:36:12.8550520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8550580Z         except KeyError:
2025-02-24T16:36:12.8550700Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8550740Z     
2025-02-24T16:36:12.8550810Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8550880Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8550950Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8551060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8551170Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8551240Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8551330Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8551330Z 
2025-02-24T16:36:12.8551440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8551530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8551650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8551690Z     ???
2025-02-24T16:36:12.8551780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8551790Z 
2025-02-24T16:36:12.8551840Z >   ???
2025-02-24T16:36:12.8551940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8551980Z E   
2025-02-24T16:36:12.8552090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8552170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8552230Z E          ...
2025-02-24T16:36:12.8552300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8552400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8552490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8552540Z E          ...
2025-02-24T16:36:12.8552610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8552710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8552790Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8552790Z 
2025-02-24T16:36:12.8552850Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8553040Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T16:36:12.8553050Z 
2025-02-24T16:36:12.8553160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8553260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8553350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8553460Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8553560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8553650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8553690Z err_msg = None
2025-02-24T16:36:12.8553700Z 
2025-02-24T16:36:12.8553790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8553880Z         if err_msg is None:
2025-02-24T16:36:12.8554040Z             if left.shape != right.shape:
2025-02-24T16:36:12.8554100Z                 raise_assert_detail(
2025-02-24T16:36:12.8554220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8554270Z                 )
2025-02-24T16:36:12.8554320Z     
2025-02-24T16:36:12.8554370Z             diff = 0
2025-02-24T16:36:12.8554460Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8554530Z                 # count up differences
2025-02-24T16:36:12.8554660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8554880Z                     diff += 1
2025-02-24T16:36:12.8554930Z     
2025-02-24T16:36:12.8555000Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8555110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8555260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8555370Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8555420Z E           
2025-02-24T16:36:12.8555520Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8555760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8556070Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8556080Z 
2025-02-24T16:36:12.8556330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8556340Z 
2025-02-24T16:36:12.8556480Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8556480Z 
2025-02-24T16:36:12.8556670Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c75c0>
2025-02-24T16:36:12.8556860Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>, attr = 'f_lu'
2025-02-24T16:36:12.8556860Z 
2025-02-24T16:36:12.8556970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8557070Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8557130Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8557180Z         try:
2025-02-24T16:36:12.8557300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8557360Z         except KeyError:
2025-02-24T16:36:12.8557470Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8557520Z     
2025-02-24T16:36:12.8557590Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8557690Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8557760Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8557880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8557950Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8558020Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8558650Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8558660Z 
2025-02-24T16:36:12.8558780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8558880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8559010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8559060Z     ???
2025-02-24T16:36:12.8559150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8559150Z 
2025-02-24T16:36:12.8559200Z >   ???
2025-02-24T16:36:12.8559310Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8559360Z E   
2025-02-24T16:36:12.8559470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8559560Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8559620Z E          ...
2025-02-24T16:36:12.8559690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8559800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8559890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8560260Z E          ...
2025-02-24T16:36:12.8560340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8560440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8560530Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8560530Z 
2025-02-24T16:36:12.8560600Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8560830Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T16:36:12.8560830Z 
2025-02-24T16:36:12.8560940Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8561060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8561230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8561350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8561470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8561550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8561610Z err_msg = None
2025-02-24T16:36:12.8561610Z 
2025-02-24T16:36:12.8561700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8561780Z         if err_msg is None:
2025-02-24T16:36:12.8561850Z             if left.shape != right.shape:
2025-02-24T16:36:12.8561920Z                 raise_assert_detail(
2025-02-24T16:36:12.8562040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8562090Z                 )
2025-02-24T16:36:12.8562140Z     
2025-02-24T16:36:12.8562190Z             diff = 0
2025-02-24T16:36:12.8562290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8562360Z                 # count up differences
2025-02-24T16:36:12.8562530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8562590Z                     diff += 1
2025-02-24T16:36:12.8562650Z     
2025-02-24T16:36:12.8562730Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8562850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8563020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8563120Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8563180Z E           
2025-02-24T16:36:12.8563270Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8563510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8563750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8563750Z 
2025-02-24T16:36:12.8564000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8564010Z 
2025-02-24T16:36:12.8564170Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8564180Z 
2025-02-24T16:36:12.8564360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c7d40>
2025-02-24T16:36:12.8564500Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>
2025-02-24T16:36:12.8564550Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.8564560Z 
2025-02-24T16:36:12.8564670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8564850Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8564910Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8565000Z         try:
2025-02-24T16:36:12.8565120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8565170Z         except KeyError:
2025-02-24T16:36:12.8565290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8565340Z     
2025-02-24T16:36:12.8565400Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8565470Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8565530Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8565650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8565760Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8565840Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8565930Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8565980Z             else:
2025-02-24T16:36:12.8566060Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8566140Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8566150Z 
2025-02-24T16:36:12.8566250Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8566350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8566460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8566510Z     ???
2025-02-24T16:36:12.8566600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8566600Z 
2025-02-24T16:36:12.8566660Z >   ???
2025-02-24T16:36:12.8566760Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8566810Z E   
2025-02-24T16:36:12.8566910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8567000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8567060Z E          ...
2025-02-24T16:36:12.8567130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8567230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8567310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8567360Z E          ...
2025-02-24T16:36:12.8567440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8567540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8568120Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8568220Z 
2025-02-24T16:36:12.8568630Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8569860Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T16:36:12.8569920Z 
2025-02-24T16:36:12.8570260Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8570550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8570790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8571090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8571370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8571580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8571740Z err_msg = None
2025-02-24T16:36:12.8571750Z 
2025-02-24T16:36:12.8572000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8572180Z         if err_msg is None:
2025-02-24T16:36:12.8572390Z             if left.shape != right.shape:
2025-02-24T16:36:12.8572580Z                 raise_assert_detail(
2025-02-24T16:36:12.8572900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8573060Z                 )
2025-02-24T16:36:12.8573210Z     
2025-02-24T16:36:12.8573940Z             diff = 0
2025-02-24T16:36:12.8574180Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8574370Z                 # count up differences
2025-02-24T16:36:12.8574740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8574920Z                     diff += 1
2025-02-24T16:36:12.8575070Z     
2025-02-24T16:36:12.8575260Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8575770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8576040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8576150Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8576560Z E           
2025-02-24T16:36:12.8576680Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8576920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8577190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8577200Z 
2025-02-24T16:36:12.8577520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8577530Z 
2025-02-24T16:36:12.8577710Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8577720Z 
2025-02-24T16:36:12.8577940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c7e00>
2025-02-24T16:36:12.8578240Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>
2025-02-24T16:36:12.8578300Z attr = 'beta_sobolev'
2025-02-24T16:36:12.8578310Z 
2025-02-24T16:36:12.8578440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8578560Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8578650Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8578710Z         try:
2025-02-24T16:36:12.8578860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8578930Z         except KeyError:
2025-02-24T16:36:12.8579070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8579150Z     
2025-02-24T16:36:12.8579260Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8579370Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8593790Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8593990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8594100Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8594180Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8594270Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8594320Z             else:
2025-02-24T16:36:12.8594420Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8594530Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8594540Z 
2025-02-24T16:36:12.8594640Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8594740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8594890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8594950Z     ???
2025-02-24T16:36:12.8595040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8595050Z 
2025-02-24T16:36:12.8595090Z >   ???
2025-02-24T16:36:12.8595190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8595550Z E   
2025-02-24T16:36:12.8596190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8596340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8596390Z E          ...
2025-02-24T16:36:12.8596490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8596620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8596720Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8596770Z E          ...
2025-02-24T16:36:12.8596840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8596970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8597260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8597270Z 
2025-02-24T16:36:12.8597340Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8597590Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T16:36:12.8597610Z 
2025-02-24T16:36:12.8597720Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8597840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8597920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8598050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8598170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8598250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8598320Z err_msg = None
2025-02-24T16:36:12.8598990Z 
2025-02-24T16:36:12.8599590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8599840Z         if err_msg is None:
2025-02-24T16:36:12.8600060Z             if left.shape != right.shape:
2025-02-24T16:36:12.8600330Z                 raise_assert_detail(
2025-02-24T16:36:12.8601020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8601940Z                 )
2025-02-24T16:36:12.8602010Z     
2025-02-24T16:36:12.8602070Z             diff = 0
2025-02-24T16:36:12.8602210Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8602300Z                 # count up differences
2025-02-24T16:36:12.8602480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8602580Z                     diff += 1
2025-02-24T16:36:12.8602640Z     
2025-02-24T16:36:12.8602740Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8602870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8603030Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8603140Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8603200Z E           
2025-02-24T16:36:12.8603310Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8603540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8603800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8603810Z 
2025-02-24T16:36:12.8604250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8604880Z 
2025-02-24T16:36:12.8605050Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8605060Z 
2025-02-24T16:36:12.8605240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11d9c7f80>
2025-02-24T16:36:12.8605430Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e7ce060>, attr = 'j_blues'
2025-02-24T16:36:12.8605440Z 
2025-02-24T16:36:12.8605580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8605680Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8605740Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8605790Z         try:
2025-02-24T16:36:12.8605920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8606930Z         except KeyError:
2025-02-24T16:36:12.8607050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8607090Z     
2025-02-24T16:36:12.8607160Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8607250Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8607320Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8607450Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8607540Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8607630Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8607730Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8607780Z             else:
2025-02-24T16:36:12.8607850Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8607950Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8607960Z 
2025-02-24T16:36:12.8608070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8608170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8608300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8609410Z     ???
2025-02-24T16:36:12.8609770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8609800Z 
2025-02-24T16:36:12.8610030Z >   ???
2025-02-24T16:36:12.8610800Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8611010Z E   
2025-02-24T16:36:12.8611330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8612290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8612460Z E          ...
2025-02-24T16:36:12.8612710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8613050Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8613340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8613530Z E          ...
2025-02-24T16:36:12.8613740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8614080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8614350Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8614380Z 
2025-02-24T16:36:12.8616110Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8616350Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T16:36:12.8616350Z 
2025-02-24T16:36:12.8616480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8616630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8616710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8616840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8616950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8617040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8617100Z err_msg = None
2025-02-24T16:36:12.8617100Z 
2025-02-24T16:36:12.8617210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8618430Z         if err_msg is None:
2025-02-24T16:36:12.8618510Z             if left.shape != right.shape:
2025-02-24T16:36:12.8618580Z                 raise_assert_detail(
2025-02-24T16:36:12.8618710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8618770Z                 )
2025-02-24T16:36:12.8618830Z     
2025-02-24T16:36:12.8618870Z             diff = 0
2025-02-24T16:36:12.8618980Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8619070Z                 # count up differences
2025-02-24T16:36:12.8620810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8621060Z                     diff += 1
2025-02-24T16:36:12.8621120Z     
2025-02-24T16:36:12.8621220Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8621350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8621490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8621590Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8621650Z E           
2025-02-24T16:36:12.8621780Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8622050Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8622320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8622340Z 
2025-02-24T16:36:12.8622640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8622650Z 
2025-02-24T16:36:12.8622790Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8622800Z 
2025-02-24T16:36:12.8622990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da50d40>
2025-02-24T16:36:12.8623190Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>, attr = 'lines'
2025-02-24T16:36:12.8623200Z 
2025-02-24T16:36:12.8623310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8623430Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8623500Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8623560Z         try:
2025-02-24T16:36:12.8623670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8623750Z         except KeyError:
2025-02-24T16:36:12.8623900Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8623980Z     
2025-02-24T16:36:12.8624060Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8624130Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8625340Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8625780Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8625900Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8626000Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8626110Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8626170Z             else:
2025-02-24T16:36:12.8626270Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8626390Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8626400Z 
2025-02-24T16:36:12.8626500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8626590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8626970Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8627030Z     ???
2025-02-24T16:36:12.8627140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8627150Z 
2025-02-24T16:36:12.8627200Z >   ???
2025-02-24T16:36:12.8627300Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8627350Z E   
2025-02-24T16:36:12.8627450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8627550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8627610Z E          ...
2025-02-24T16:36:12.8627720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8627930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8628030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8628090Z E          ...
2025-02-24T16:36:12.8628180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8628330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8628420Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8628420Z 
2025-02-24T16:36:12.8628510Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8628740Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T16:36:12.8628750Z 
2025-02-24T16:36:12.8628970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da50e00>
2025-02-24T16:36:12.8629110Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>
2025-02-24T16:36:12.8629180Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.8629190Z 
2025-02-24T16:36:12.8629300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8629400Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8629470Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8629530Z         try:
2025-02-24T16:36:12.8629670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8629800Z         except KeyError:
2025-02-24T16:36:12.8629970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8630060Z     
2025-02-24T16:36:12.8630160Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8630270Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8630380Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8630550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8630680Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8630810Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8630960Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8630980Z 
2025-02-24T16:36:12.8631140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8631300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8631310Z 
2025-02-24T16:36:12.8631470Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8631560Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8631700Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8631800Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8631960Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8632060Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8632190Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8632270Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8632340Z err_msg = None
2025-02-24T16:36:12.8632340Z 
2025-02-24T16:36:12.8632430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8632510Z         if err_msg is None:
2025-02-24T16:36:12.8632620Z             if left.shape != right.shape:
2025-02-24T16:36:12.8632900Z                 raise_assert_detail(
2025-02-24T16:36:12.8633060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8633160Z                 )
2025-02-24T16:36:12.8633240Z     
2025-02-24T16:36:12.8633330Z             diff = 0
2025-02-24T16:36:12.8633490Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8633590Z                 # count up differences
2025-02-24T16:36:12.8633800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8633870Z                     diff += 1
2025-02-24T16:36:12.8633920Z     
2025-02-24T16:36:12.8634010Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8634290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8634500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8634630Z E           AssertionError: Series are different
2025-02-24T16:36:12.8634720Z E           
2025-02-24T16:36:12.8634850Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.8635300Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8635700Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8636070Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8636100Z 
2025-02-24T16:36:12.8636430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8636740Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T16:36:12.8636750Z 
2025-02-24T16:36:12.8637030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da50ec0>
2025-02-24T16:36:12.8637250Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>
2025-02-24T16:36:12.8637370Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.8637390Z 
2025-02-24T16:36:12.8637550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8637680Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8637780Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8637870Z         try:
2025-02-24T16:36:12.8638040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8638130Z         except KeyError:
2025-02-24T16:36:12.8638320Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8638410Z     
2025-02-24T16:36:12.8638530Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8638660Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8638780Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8638980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8639100Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8639230Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8639380Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8640480Z 
2025-02-24T16:36:12.8640690Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8641000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8641010Z 
2025-02-24T16:36:12.8641170Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8641300Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8641420Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8641500Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8641620Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8641910Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8642010Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8642090Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8642190Z err_msg = None
2025-02-24T16:36:12.8642200Z 
2025-02-24T16:36:12.8642320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8642400Z         if err_msg is None:
2025-02-24T16:36:12.8642520Z             if left.shape != right.shape:
2025-02-24T16:36:12.8642620Z                 raise_assert_detail(
2025-02-24T16:36:12.8642820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8642910Z                 )
2025-02-24T16:36:12.8643020Z     
2025-02-24T16:36:12.8643110Z             diff = 0
2025-02-24T16:36:12.8643290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8643400Z                 # count up differences
2025-02-24T16:36:12.8643630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8643710Z                     diff += 1
2025-02-24T16:36:12.8643760Z     
2025-02-24T16:36:12.8643890Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8644070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8644310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8644460Z E           AssertionError: Series are different
2025-02-24T16:36:12.8644550Z E           
2025-02-24T16:36:12.8644680Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.8645110Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8645560Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8646030Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8646050Z 
2025-02-24T16:36:12.8646440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8646650Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T16:36:12.8646660Z 
2025-02-24T16:36:12.8646930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8647060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8647180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8647340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8647490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8647620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8647690Z err_msg = None
2025-02-24T16:36:12.8647830Z 
2025-02-24T16:36:12.8647970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8648060Z         if err_msg is None:
2025-02-24T16:36:12.8648160Z             if left.shape != right.shape:
2025-02-24T16:36:12.8648240Z                 raise_assert_detail(
2025-02-24T16:36:12.8648400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8648480Z                 )
2025-02-24T16:36:12.8648550Z     
2025-02-24T16:36:12.8648640Z             diff = 0
2025-02-24T16:36:12.8648780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8648870Z                 # count up differences
2025-02-24T16:36:12.8649090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8649200Z                     diff += 1
2025-02-24T16:36:12.8649270Z     
2025-02-24T16:36:12.8649380Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8649550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8649780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8649940Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8650040Z E           
2025-02-24T16:36:12.8650450Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8650780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8651130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8651170Z 
2025-02-24T16:36:12.8651490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8651500Z 
2025-02-24T16:36:12.8651710Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8651720Z 
2025-02-24T16:36:12.8651990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da51100>
2025-02-24T16:36:12.8652240Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>, attr = 'nu'
2025-02-24T16:36:12.8652250Z 
2025-02-24T16:36:12.8652430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8652580Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8652700Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8652790Z         try:
2025-02-24T16:36:12.8652970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8653080Z         except KeyError:
2025-02-24T16:36:12.8653260Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8653370Z     
2025-02-24T16:36:12.8653480Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8653610Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8653980Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8654160Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8654300Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8654420Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8654580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8654590Z 
2025-02-24T16:36:12.8654700Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8654790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8654910Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8654960Z     ???
2025-02-24T16:36:12.8655140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8655140Z 
2025-02-24T16:36:12.8655190Z >   ???
2025-02-24T16:36:12.8655290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8655340Z E   
2025-02-24T16:36:12.8655450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8655540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8655590Z E          ...
2025-02-24T16:36:12.8655670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8655770Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8655870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8655920Z E          ...
2025-02-24T16:36:12.8655990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8656090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8656170Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8656180Z 
2025-02-24T16:36:12.8656250Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8656440Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T16:36:12.8656440Z 
2025-02-24T16:36:12.8656570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8656690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8656770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8656890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8656990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8657070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8657130Z err_msg = None
2025-02-24T16:36:12.8657130Z 
2025-02-24T16:36:12.8657220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8657290Z         if err_msg is None:
2025-02-24T16:36:12.8657360Z             if left.shape != right.shape:
2025-02-24T16:36:12.8657420Z                 raise_assert_detail(
2025-02-24T16:36:12.8657550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8657590Z                 )
2025-02-24T16:36:12.8657640Z     
2025-02-24T16:36:12.8657690Z             diff = 0
2025-02-24T16:36:12.8657780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8657850Z                 # count up differences
2025-02-24T16:36:12.8657990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8658050Z                     diff += 1
2025-02-24T16:36:12.8658090Z     
2025-02-24T16:36:12.8658160Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8658270Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8658420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8658510Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8658560Z E           
2025-02-24T16:36:12.8658650Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8658950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8659170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8659220Z 
2025-02-24T16:36:12.8659460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8659470Z 
2025-02-24T16:36:12.8659600Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8659610Z 
2025-02-24T16:36:12.8659780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da511c0>
2025-02-24T16:36:12.8659910Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>
2025-02-24T16:36:12.8659960Z attr = 'wavelength_cm'
2025-02-24T16:36:12.8659970Z 
2025-02-24T16:36:12.8660080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8660170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8660240Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8660290Z         try:
2025-02-24T16:36:12.8660400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8660470Z         except KeyError:
2025-02-24T16:36:12.8660580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8660630Z     
2025-02-24T16:36:12.8660700Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8660770Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8660840Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8660950Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8661020Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8661080Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8661170Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8661180Z 
2025-02-24T16:36:12.8661270Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8661370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8661490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8661540Z     ???
2025-02-24T16:36:12.8661630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8661640Z 
2025-02-24T16:36:12.8661680Z >   ???
2025-02-24T16:36:12.8661780Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8661830Z E   
2025-02-24T16:36:12.8661940Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8662030Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8662080Z E          ...
2025-02-24T16:36:12.8662150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8662250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8662340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8662390Z E          ...
2025-02-24T16:36:12.8662460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8662560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8662650Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8662650Z 
2025-02-24T16:36:12.8662720Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8662890Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T16:36:12.8662890Z 
2025-02-24T16:36:12.8664510Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8664630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8664710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8664820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8664920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8665000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8665050Z err_msg = None
2025-02-24T16:36:12.8665200Z 
2025-02-24T16:36:12.8665310Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8665370Z         if err_msg is None:
2025-02-24T16:36:12.8665440Z             if left.shape != right.shape:
2025-02-24T16:36:12.8665500Z                 raise_assert_detail(
2025-02-24T16:36:12.8665620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8665690Z                 )
2025-02-24T16:36:12.8665760Z     
2025-02-24T16:36:12.8665850Z             diff = 0
2025-02-24T16:36:12.8665990Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8666100Z                 # count up differences
2025-02-24T16:36:12.8666330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8666440Z                     diff += 1
2025-02-24T16:36:12.8666520Z     
2025-02-24T16:36:12.8666650Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8666810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8667040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8667190Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8667280Z E           
2025-02-24T16:36:12.8667460Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8667730Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8668020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8668040Z 
2025-02-24T16:36:12.8668390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8668400Z 
2025-02-24T16:36:12.8668590Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8668600Z 
2025-02-24T16:36:12.8668860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da51280>
2025-02-24T16:36:12.8669090Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>, attr = 'f_lu'
2025-02-24T16:36:12.8669120Z 
2025-02-24T16:36:12.8669260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8669410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8669490Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8669590Z         try:
2025-02-24T16:36:12.8669770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8669900Z         except KeyError:
2025-02-24T16:36:12.8670070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8670170Z     
2025-02-24T16:36:12.8670300Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8670420Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8670710Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8670830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8670900Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8670980Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8671070Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8671070Z 
2025-02-24T16:36:12.8671180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8671280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8671400Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8671440Z     ???
2025-02-24T16:36:12.8671630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8671640Z 
2025-02-24T16:36:12.8671690Z >   ???
2025-02-24T16:36:12.8671800Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8671850Z E   
2025-02-24T16:36:12.8671960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8672060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8672110Z E          ...
2025-02-24T16:36:12.8672190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8672300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8672380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8672440Z E          ...
2025-02-24T16:36:12.8672500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8679660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8679830Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8679840Z 
2025-02-24T16:36:12.8679920Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8680100Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T16:36:12.8680100Z 
2025-02-24T16:36:12.8680220Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8680340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8680420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8680530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8680630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8680710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8680760Z err_msg = None
2025-02-24T16:36:12.8680760Z 
2025-02-24T16:36:12.8680970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8681030Z         if err_msg is None:
2025-02-24T16:36:12.8681110Z             if left.shape != right.shape:
2025-02-24T16:36:12.8681170Z                 raise_assert_detail(
2025-02-24T16:36:12.8681300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8681350Z                 )
2025-02-24T16:36:12.8681400Z     
2025-02-24T16:36:12.8681450Z             diff = 0
2025-02-24T16:36:12.8681540Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8681610Z                 # count up differences
2025-02-24T16:36:12.8681740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8681810Z                     diff += 1
2025-02-24T16:36:12.8681850Z     
2025-02-24T16:36:12.8681920Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8682030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8682180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8682280Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8682330Z E           
2025-02-24T16:36:12.8682420Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8682920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8683140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8683220Z 
2025-02-24T16:36:12.8683480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8683480Z 
2025-02-24T16:36:12.8683610Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8683620Z 
2025-02-24T16:36:12.8683790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da51a00>
2025-02-24T16:36:12.8683920Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>
2025-02-24T16:36:12.8683970Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.8683980Z 
2025-02-24T16:36:12.8684110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8684210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8684280Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8684330Z         try:
2025-02-24T16:36:12.8684440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8684510Z         except KeyError:
2025-02-24T16:36:12.8684620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8684670Z     
2025-02-24T16:36:12.8684730Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8684800Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8684870Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8684990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8685060Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8685130Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8685220Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8685270Z             else:
2025-02-24T16:36:12.8685350Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8685440Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8685440Z 
2025-02-24T16:36:12.8685530Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8685640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8685750Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8685800Z     ???
2025-02-24T16:36:12.8685900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8685900Z 
2025-02-24T16:36:12.8685950Z >   ???
2025-02-24T16:36:12.8686050Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8686100Z E   
2025-02-24T16:36:12.8686200Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8686290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8686340Z E          ...
2025-02-24T16:36:12.8686410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8686520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8686610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8686660Z E          ...
2025-02-24T16:36:12.8686740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8686830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8686910Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8687000Z 
2025-02-24T16:36:12.8687070Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8687240Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T16:36:12.8687240Z 
2025-02-24T16:36:12.8687350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8687460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8687540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8687650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8687750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8687880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8687930Z err_msg = None
2025-02-24T16:36:12.8687940Z 
2025-02-24T16:36:12.8688020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8688090Z         if err_msg is None:
2025-02-24T16:36:12.8688160Z             if left.shape != right.shape:
2025-02-24T16:36:12.8688220Z                 raise_assert_detail(
2025-02-24T16:36:12.8688330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8688380Z                 )
2025-02-24T16:36:12.8688430Z     
2025-02-24T16:36:12.8688480Z             diff = 0
2025-02-24T16:36:12.8688570Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8688640Z                 # count up differences
2025-02-24T16:36:12.8688770Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8688830Z                     diff += 1
2025-02-24T16:36:12.8688880Z     
2025-02-24T16:36:12.8688950Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8689060Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8689210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8689300Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8689350Z E           
2025-02-24T16:36:12.8689430Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8689650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8689870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8689880Z 
2025-02-24T16:36:12.8690120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8690130Z 
2025-02-24T16:36:12.8690270Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8690270Z 
2025-02-24T16:36:12.8690440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da51ac0>
2025-02-24T16:36:12.8690570Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>
2025-02-24T16:36:12.8690620Z attr = 'beta_sobolev'
2025-02-24T16:36:12.8690630Z 
2025-02-24T16:36:12.8690740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8690830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8690900Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8690950Z         try:
2025-02-24T16:36:12.8691060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8691120Z         except KeyError:
2025-02-24T16:36:12.8691920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8691970Z     
2025-02-24T16:36:12.8692030Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8692110Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8692180Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8692300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8692360Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8692430Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8692520Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8692560Z             else:
2025-02-24T16:36:12.8692640Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8692950Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8692960Z 
2025-02-24T16:36:12.8693060Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8693160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8693290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8693330Z     ???
2025-02-24T16:36:12.8693420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8693430Z 
2025-02-24T16:36:12.8693470Z >   ???
2025-02-24T16:36:12.8693570Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8693620Z E   
2025-02-24T16:36:12.8693720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8693810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8693860Z E          ...
2025-02-24T16:36:12.8693930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8694040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8694130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8694180Z E          ...
2025-02-24T16:36:12.8694240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8694350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8694430Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8694440Z 
2025-02-24T16:36:12.8694500Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8694670Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T16:36:12.8694670Z 
2025-02-24T16:36:12.8694780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8694890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8695010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8695140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8695240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8695320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8695370Z err_msg = None
2025-02-24T16:36:12.8695380Z 
2025-02-24T16:36:12.8695460Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8695520Z         if err_msg is None:
2025-02-24T16:36:12.8695590Z             if left.shape != right.shape:
2025-02-24T16:36:12.8695650Z                 raise_assert_detail(
2025-02-24T16:36:12.8695770Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8695820Z                 )
2025-02-24T16:36:12.8695860Z     
2025-02-24T16:36:12.8695910Z             diff = 0
2025-02-24T16:36:12.8696000Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8696070Z                 # count up differences
2025-02-24T16:36:12.8696220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8696280Z                     diff += 1
2025-02-24T16:36:12.8696440Z     
2025-02-24T16:36:12.8696520Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8696630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8696780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8696880Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8696930Z E           
2025-02-24T16:36:12.8697020Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8697250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8697540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8697550Z 
2025-02-24T16:36:12.8697790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8697800Z 
2025-02-24T16:36:12.8697940Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8697940Z 
2025-02-24T16:36:12.8698120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da51c40>
2025-02-24T16:36:12.8698290Z plasma = <tardis.plasma.base.BasePlasma object at 0x304628d10>, attr = 'j_blues'
2025-02-24T16:36:12.8698300Z 
2025-02-24T16:36:12.8698420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8698510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8698580Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8698640Z         try:
2025-02-24T16:36:12.8698770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8698830Z         except KeyError:
2025-02-24T16:36:12.8698940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8699000Z     
2025-02-24T16:36:12.8699060Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8699130Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8699200Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8699310Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8699370Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8699450Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8699550Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8699600Z             else:
2025-02-24T16:36:12.8699680Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8699770Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8699780Z 
2025-02-24T16:36:12.8699890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8699980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8700110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8700170Z     ???
2025-02-24T16:36:12.8700260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8700270Z 
2025-02-24T16:36:12.8700320Z >   ???
2025-02-24T16:36:12.8700430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8700480Z E   
2025-02-24T16:36:12.8700590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8700680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8700740Z E          ...
2025-02-24T16:36:12.8700810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8700910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8701060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8701110Z E          ...
2025-02-24T16:36:12.8701190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8701300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8701380Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8701390Z 
2025-02-24T16:36:12.8701450Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8701630Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T16:36:12.8701640Z 
2025-02-24T16:36:12.8701750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8701910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8701990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8702100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8702220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8702300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8702370Z err_msg = None
2025-02-24T16:36:12.8702370Z 
2025-02-24T16:36:12.8702480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8702560Z         if err_msg is None:
2025-02-24T16:36:12.8702640Z             if left.shape != right.shape:
2025-02-24T16:36:12.8702700Z                 raise_assert_detail(
2025-02-24T16:36:12.8702820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8702880Z                 )
2025-02-24T16:36:12.8702930Z     
2025-02-24T16:36:12.8702980Z             diff = 0
2025-02-24T16:36:12.8703070Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8703150Z                 # count up differences
2025-02-24T16:36:12.8703300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8703360Z                     diff += 1
2025-02-24T16:36:12.8703410Z     
2025-02-24T16:36:12.8703480Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8703600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8703750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8703850Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8703900Z E           
2025-02-24T16:36:12.8704000Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8704240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8704470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8704480Z 
2025-02-24T16:36:12.8704720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8704730Z 
2025-02-24T16:36:12.8704860Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8704870Z 
2025-02-24T16:36:12.8705050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da529c0>
2025-02-24T16:36:12.8705220Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>, attr = 'lines'
2025-02-24T16:36:12.8705220Z 
2025-02-24T16:36:12.8705330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8705500Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8705570Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8705620Z         try:
2025-02-24T16:36:12.8705740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8705790Z         except KeyError:
2025-02-24T16:36:12.8705910Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8705960Z     
2025-02-24T16:36:12.8706020Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8706100Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8706160Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8706270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8706390Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8706460Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8706550Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8706610Z             else:
2025-02-24T16:36:12.8706680Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8706770Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8706770Z 
2025-02-24T16:36:12.8706870Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8706960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8707090Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8707140Z     ???
2025-02-24T16:36:12.8707230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8707230Z 
2025-02-24T16:36:12.8707280Z >   ???
2025-02-24T16:36:12.8707380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8707430Z E   
2025-02-24T16:36:12.8707540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8707630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8707680Z E          ...
2025-02-24T16:36:12.8707750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8707860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8707950Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8708010Z E          ...
2025-02-24T16:36:12.8708080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8708180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8708260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8708270Z 
2025-02-24T16:36:12.8708330Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8708550Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T16:36:12.8708550Z 
2025-02-24T16:36:12.8708730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da52a80>
2025-02-24T16:36:12.8708860Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>
2025-02-24T16:36:12.8708930Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.8708930Z 
2025-02-24T16:36:12.8709050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8709140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8709210Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8709260Z         try:
2025-02-24T16:36:12.8709370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8709430Z         except KeyError:
2025-02-24T16:36:12.8709550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8709590Z     
2025-02-24T16:36:12.8709660Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8709740Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8709810Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8709920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8709980Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8711980Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8712070Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8712080Z 
2025-02-24T16:36:12.8712180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8712270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8712270Z 
2025-02-24T16:36:12.8712380Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8712450Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8712540Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8712910Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8713020Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.8713090Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.8713180Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8713240Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.8713300Z err_msg = None
2025-02-24T16:36:12.8713300Z 
2025-02-24T16:36:12.8713380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8713440Z         if err_msg is None:
2025-02-24T16:36:12.8713510Z             if left.shape != right.shape:
2025-02-24T16:36:12.8713570Z                 raise_assert_detail(
2025-02-24T16:36:12.8713680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8713730Z                 )
2025-02-24T16:36:12.8713790Z     
2025-02-24T16:36:12.8713830Z             diff = 0
2025-02-24T16:36:12.8713930Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8714000Z                 # count up differences
2025-02-24T16:36:12.8714170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8714250Z                     diff += 1
2025-02-24T16:36:12.8714300Z     
2025-02-24T16:36:12.8714370Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8714480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8714620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8714700Z E           AssertionError: Series are different
2025-02-24T16:36:12.8714750Z E           
2025-02-24T16:36:12.8714830Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.8715140Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8715420Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8715700Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8715710Z 
2025-02-24T16:36:12.8715950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8716160Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T16:36:12.8716260Z 
2025-02-24T16:36:12.8716450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da52b40>
2025-02-24T16:36:12.8716580Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>
2025-02-24T16:36:12.8716650Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.8716650Z 
2025-02-24T16:36:12.8716770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8716870Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8716930Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8716980Z         try:
2025-02-24T16:36:12.8717090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8717210Z         except KeyError:
2025-02-24T16:36:12.8717340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8717390Z     
2025-02-24T16:36:12.8717450Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8717530Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8717600Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8717720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8717780Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8717850Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8717940Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8717940Z 
2025-02-24T16:36:12.8718040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8718140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8718150Z 
2025-02-24T16:36:12.8718260Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8718330Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8718420Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8718480Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8718610Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.8718670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.8718760Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.8718820Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.8718870Z err_msg = None
2025-02-24T16:36:12.8718870Z 
2025-02-24T16:36:12.8718960Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8719020Z         if err_msg is None:
2025-02-24T16:36:12.8719090Z             if left.shape != right.shape:
2025-02-24T16:36:12.8719160Z                 raise_assert_detail(
2025-02-24T16:36:12.8719280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8719330Z                 )
2025-02-24T16:36:12.8719370Z     
2025-02-24T16:36:12.8719420Z             diff = 0
2025-02-24T16:36:12.8719510Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8719580Z                 # count up differences
2025-02-24T16:36:12.8719720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8719780Z                     diff += 1
2025-02-24T16:36:12.8719830Z     
2025-02-24T16:36:12.8719890Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8720010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8720150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8720230Z E           AssertionError: Series are different
2025-02-24T16:36:12.8720280Z E           
2025-02-24T16:36:12.8720360Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.8720680Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.8721190Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8721530Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.8721620Z 
2025-02-24T16:36:12.8721880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8725810Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T16:36:12.8725810Z 
2025-02-24T16:36:12.8725920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8726040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8726120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8726250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8726350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8726440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8726500Z err_msg = None
2025-02-24T16:36:12.8726500Z 
2025-02-24T16:36:12.8726590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8726660Z         if err_msg is None:
2025-02-24T16:36:12.8726730Z             if left.shape != right.shape:
2025-02-24T16:36:12.8726800Z                 raise_assert_detail(
2025-02-24T16:36:12.8726920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8726960Z                 )
2025-02-24T16:36:12.8727020Z     
2025-02-24T16:36:12.8727070Z             diff = 0
2025-02-24T16:36:12.8727160Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8727230Z                 # count up differences
2025-02-24T16:36:12.8727380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8727440Z                     diff += 1
2025-02-24T16:36:12.8727490Z     
2025-02-24T16:36:12.8727560Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8727680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8727830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8727940Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8727990Z E           
2025-02-24T16:36:12.8728080Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8728310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8728530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8728600Z 
2025-02-24T16:36:12.8728860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8728870Z 
2025-02-24T16:36:12.8729010Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8729010Z 
2025-02-24T16:36:12.8729200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da52d80>
2025-02-24T16:36:12.8729360Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>, attr = 'nu'
2025-02-24T16:36:12.8729360Z 
2025-02-24T16:36:12.8729520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8729620Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8729680Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8729740Z         try:
2025-02-24T16:36:12.8729850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8729920Z         except KeyError:
2025-02-24T16:36:12.8730040Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8730090Z     
2025-02-24T16:36:12.8730160Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8730230Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8730310Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8730420Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8730490Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8730570Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8730660Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8730660Z 
2025-02-24T16:36:12.8730770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8730870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8731000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8731050Z     ???
2025-02-24T16:36:12.8731150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8731150Z 
2025-02-24T16:36:12.8731200Z >   ???
2025-02-24T16:36:12.8731310Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8731360Z E   
2025-02-24T16:36:12.8731470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8731570Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8731620Z E          ...
2025-02-24T16:36:12.8731690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8731800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8731900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8731950Z E          ...
2025-02-24T16:36:12.8732020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8732130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8732220Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8732230Z 
2025-02-24T16:36:12.8732290Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8732490Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T16:36:12.8732490Z 
2025-02-24T16:36:12.8732600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8732720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8732800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8732910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8733030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8733100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8733260Z err_msg = None
2025-02-24T16:36:12.8733260Z 
2025-02-24T16:36:12.8733360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8733420Z         if err_msg is None:
2025-02-24T16:36:12.8733500Z             if left.shape != right.shape:
2025-02-24T16:36:12.8733560Z                 raise_assert_detail(
2025-02-24T16:36:12.8733680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8733730Z                 )
2025-02-24T16:36:12.8733780Z     
2025-02-24T16:36:12.8733830Z             diff = 0
2025-02-24T16:36:12.8733920Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8733990Z                 # count up differences
2025-02-24T16:36:12.8735100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8735190Z                     diff += 1
2025-02-24T16:36:12.8735240Z     
2025-02-24T16:36:12.8735320Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8767130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8767580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8767680Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8767740Z E           
2025-02-24T16:36:12.8767840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8768070Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8768320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8768340Z 
2025-02-24T16:36:12.8768610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8768620Z 
2025-02-24T16:36:12.8768760Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8768770Z 
2025-02-24T16:36:12.8768960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da52e40>
2025-02-24T16:36:12.8769110Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>
2025-02-24T16:36:12.8769160Z attr = 'wavelength_cm'
2025-02-24T16:36:12.8769180Z 
2025-02-24T16:36:12.8769330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8769470Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8769580Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8769650Z         try:
2025-02-24T16:36:12.8769780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8769880Z         except KeyError:
2025-02-24T16:36:12.8770040Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8770120Z     
2025-02-24T16:36:12.8770230Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8770320Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8770390Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8770500Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8770580Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8770690Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8770800Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8770800Z 
2025-02-24T16:36:12.8770910Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8771000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8771640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8771700Z     ???
2025-02-24T16:36:12.8771800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8771810Z 
2025-02-24T16:36:12.8771860Z >   ???
2025-02-24T16:36:12.8771970Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8772030Z E   
2025-02-24T16:36:12.8772150Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8772250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8772320Z E          ...
2025-02-24T16:36:12.8772390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8772640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8772740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8772800Z E          ...
2025-02-24T16:36:12.8772880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8773000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8773090Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8773090Z 
2025-02-24T16:36:12.8773170Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8773350Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T16:36:12.8773360Z 
2025-02-24T16:36:12.8773470Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8773600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8773690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8773800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8773920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8773990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8774050Z err_msg = None
2025-02-24T16:36:12.8774050Z 
2025-02-24T16:36:12.8774160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8774230Z         if err_msg is None:
2025-02-24T16:36:12.8774320Z             if left.shape != right.shape:
2025-02-24T16:36:12.8774430Z                 raise_assert_detail(
2025-02-24T16:36:12.8774570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8774610Z                 )
2025-02-24T16:36:12.8774670Z     
2025-02-24T16:36:12.8774740Z             diff = 0
2025-02-24T16:36:12.8774850Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8774960Z                 # count up differences
2025-02-24T16:36:12.8775100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8775190Z                     diff += 1
2025-02-24T16:36:12.8775270Z     
2025-02-24T16:36:12.8775370Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8775500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8775690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8775810Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8775860Z E           
2025-02-24T16:36:12.8775960Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8776230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8776560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8776670Z 
2025-02-24T16:36:12.8974240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8974350Z 
2025-02-24T16:36:12.8974550Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8974560Z 
2025-02-24T16:36:12.8974750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da52f00>
2025-02-24T16:36:12.8974910Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>, attr = 'f_lu'
2025-02-24T16:36:12.8974920Z 
2025-02-24T16:36:12.8975590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8975690Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8975760Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8975810Z         try:
2025-02-24T16:36:12.8975950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8976010Z         except KeyError:
2025-02-24T16:36:12.8976130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8976170Z     
2025-02-24T16:36:12.8976240Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8976310Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8976380Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8976500Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8976560Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8976640Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8976730Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8976740Z 
2025-02-24T16:36:12.8976840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.8976940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8977070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8977120Z     ???
2025-02-24T16:36:12.8977210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8977220Z 
2025-02-24T16:36:12.8977270Z >   ???
2025-02-24T16:36:12.8977380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8977430Z E   
2025-02-24T16:36:12.8977540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8977640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8977690Z E          ...
2025-02-24T16:36:12.8977760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8977870Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8977970Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8978020Z E          ...
2025-02-24T16:36:12.8978100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8978210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8978300Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8978300Z 
2025-02-24T16:36:12.8978370Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8978550Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T16:36:12.8978550Z 
2025-02-24T16:36:12.8978660Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8978770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8978860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8978970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8979070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8979150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8979350Z err_msg = None
2025-02-24T16:36:12.8979360Z 
2025-02-24T16:36:12.8979450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8979510Z         if err_msg is None:
2025-02-24T16:36:12.8979580Z             if left.shape != right.shape:
2025-02-24T16:36:12.8979640Z                 raise_assert_detail(
2025-02-24T16:36:12.8979760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8979820Z                 )
2025-02-24T16:36:12.8979860Z     
2025-02-24T16:36:12.8979910Z             diff = 0
2025-02-24T16:36:12.8980000Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8980120Z                 # count up differences
2025-02-24T16:36:12.8980260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8980320Z                     diff += 1
2025-02-24T16:36:12.8980370Z     
2025-02-24T16:36:12.8980430Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8980560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8980700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8980800Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8980850Z E           
2025-02-24T16:36:12.8980940Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8981160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8981380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8981390Z 
2025-02-24T16:36:12.8981640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8981650Z 
2025-02-24T16:36:12.8981790Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8981790Z 
2025-02-24T16:36:12.8981960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da53680>
2025-02-24T16:36:12.8982100Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>
2025-02-24T16:36:12.8982160Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.8982170Z 
2025-02-24T16:36:12.8982280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8982380Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8982450Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8982500Z         try:
2025-02-24T16:36:12.8982620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8982670Z         except KeyError:
2025-02-24T16:36:12.8982790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8982830Z     
2025-02-24T16:36:12.8982890Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8982970Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8983030Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8983140Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8983200Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8983280Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8983370Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8983430Z             else:
2025-02-24T16:36:12.8983500Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8983580Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8984010Z 
2025-02-24T16:36:12.8984130Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8984230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8984350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8984390Z     ???
2025-02-24T16:36:12.8984490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8984500Z 
2025-02-24T16:36:12.8984540Z >   ???
2025-02-24T16:36:12.8984640Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8984690Z E   
2025-02-24T16:36:12.8984790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8985010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8985060Z E          ...
2025-02-24T16:36:12.8985140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8985240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8985340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8985390Z E          ...
2025-02-24T16:36:12.8985460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8985560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8985640Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8985650Z 
2025-02-24T16:36:12.8985720Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8985900Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T16:36:12.8985900Z 
2025-02-24T16:36:12.8986010Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8986120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8986200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8986310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8986420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8986490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8986540Z err_msg = None
2025-02-24T16:36:12.8986550Z 
2025-02-24T16:36:12.8986630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8986690Z         if err_msg is None:
2025-02-24T16:36:12.8986770Z             if left.shape != right.shape:
2025-02-24T16:36:12.8986830Z                 raise_assert_detail(
2025-02-24T16:36:12.8986950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8987000Z                 )
2025-02-24T16:36:12.8987050Z     
2025-02-24T16:36:12.8987100Z             diff = 0
2025-02-24T16:36:12.8987200Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8987270Z                 # count up differences
2025-02-24T16:36:12.8987410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8987470Z                     diff += 1
2025-02-24T16:36:12.8987510Z     
2025-02-24T16:36:12.8987590Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8987700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8987840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8987940Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8987990Z E           
2025-02-24T16:36:12.8988080Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8988290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8988570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8988580Z 
2025-02-24T16:36:12.8988830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8988830Z 
2025-02-24T16:36:12.8988970Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8988970Z 
2025-02-24T16:36:12.8989140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da53740>
2025-02-24T16:36:12.8989330Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>
2025-02-24T16:36:12.8989390Z attr = 'beta_sobolev'
2025-02-24T16:36:12.8989400Z 
2025-02-24T16:36:12.8989510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8989600Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8989660Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8989720Z         try:
2025-02-24T16:36:12.8989830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8989890Z         except KeyError:
2025-02-24T16:36:12.8990000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8990050Z     
2025-02-24T16:36:12.8990120Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8990190Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8990260Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8990370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8990440Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8990500Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8990590Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8990640Z             else:
2025-02-24T16:36:12.8990720Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8990810Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8990810Z 
2025-02-24T16:36:12.8990910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8991010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8991130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8991180Z     ???
2025-02-24T16:36:12.8991270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8991280Z 
2025-02-24T16:36:12.8991320Z >   ???
2025-02-24T16:36:12.8991430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8991480Z E   
2025-02-24T16:36:12.8991580Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8991670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8991730Z E          ...
2025-02-24T16:36:12.8991800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8991900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8992000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8992040Z E          ...
2025-02-24T16:36:12.8992120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8992220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8992300Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8992300Z 
2025-02-24T16:36:12.8992370Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8992540Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T16:36:12.8992540Z 
2025-02-24T16:36:12.8992650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8992760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8992900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8993010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8993110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8993190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8993240Z err_msg = None
2025-02-24T16:36:12.8993240Z 
2025-02-24T16:36:12.8993330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.8993390Z         if err_msg is None:
2025-02-24T16:36:12.8993460Z             if left.shape != right.shape:
2025-02-24T16:36:12.8993580Z                 raise_assert_detail(
2025-02-24T16:36:12.8993690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.8993740Z                 )
2025-02-24T16:36:12.8993790Z     
2025-02-24T16:36:12.8993840Z             diff = 0
2025-02-24T16:36:12.8993930Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.8993990Z                 # count up differences
2025-02-24T16:36:12.8994140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.8994190Z                     diff += 1
2025-02-24T16:36:12.8994250Z     
2025-02-24T16:36:12.8994310Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.8994430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.8994570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.8994660Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.8994710Z E           
2025-02-24T16:36:12.8994800Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.8995040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8995270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.8995270Z 
2025-02-24T16:36:12.8995510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.8995520Z 
2025-02-24T16:36:12.8995660Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.8995660Z 
2025-02-24T16:36:12.8995840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da538c0>
2025-02-24T16:36:12.8996010Z plasma = <tardis.plasma.base.BasePlasma object at 0x300da4170>, attr = 'j_blues'
2025-02-24T16:36:12.8996010Z 
2025-02-24T16:36:12.8996130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.8996220Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.8996290Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.8996340Z         try:
2025-02-24T16:36:12.8996450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.8996510Z         except KeyError:
2025-02-24T16:36:12.8996620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.8996670Z     
2025-02-24T16:36:12.8996730Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.8996810Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.8996880Z             if attr == "selected_atoms":
2025-02-24T16:36:12.8996990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.8997110Z             elif actual.ndim == 1:
2025-02-24T16:36:12.8997180Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.8997270Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.8997320Z             else:
2025-02-24T16:36:12.8997400Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.8997490Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.8997490Z 
2025-02-24T16:36:12.8997590Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.8997680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8997790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.8997890Z     ???
2025-02-24T16:36:12.8997980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.8997990Z 
2025-02-24T16:36:12.8998030Z >   ???
2025-02-24T16:36:12.8998130Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.8998180Z E   
2025-02-24T16:36:12.8998290Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.8998380Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8998420Z E          ...
2025-02-24T16:36:12.8998490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8998590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8998690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.8998730Z E          ...
2025-02-24T16:36:12.8998810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.8998910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.8999000Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.8999000Z 
2025-02-24T16:36:12.8999070Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.8999240Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T16:36:12.8999250Z 
2025-02-24T16:36:12.8999360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8999460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8999540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8999650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.8999760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.8999830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.8999880Z err_msg = None
2025-02-24T16:36:12.8999890Z 
2025-02-24T16:36:12.8999980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9000040Z         if err_msg is None:
2025-02-24T16:36:12.9000110Z             if left.shape != right.shape:
2025-02-24T16:36:12.9000170Z                 raise_assert_detail(
2025-02-24T16:36:12.9000290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9000340Z                 )
2025-02-24T16:36:12.9000380Z     
2025-02-24T16:36:12.9000430Z             diff = 0
2025-02-24T16:36:12.9000530Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9000590Z                 # count up differences
2025-02-24T16:36:12.9000740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9000790Z                     diff += 1
2025-02-24T16:36:12.9000840Z     
2025-02-24T16:36:12.9000910Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9001020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9001160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9001260Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9001310Z E           
2025-02-24T16:36:12.9001490Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9001710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9001930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9002010Z 
2025-02-24T16:36:12.9002260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9002270Z 
2025-02-24T16:36:12.9002410Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9002410Z 
2025-02-24T16:36:12.9002590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da70680>
2025-02-24T16:36:12.9002750Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>, attr = 'lines'
2025-02-24T16:36:12.9002750Z 
2025-02-24T16:36:12.9002870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9002960Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9003020Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9003070Z         try:
2025-02-24T16:36:12.9003180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9003250Z         except KeyError:
2025-02-24T16:36:12.9003360Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9003410Z     
2025-02-24T16:36:12.9003470Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9003540Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9003610Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9003720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9003790Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9003850Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9003940Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9003990Z             else:
2025-02-24T16:36:12.9004060Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9004140Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9004150Z 
2025-02-24T16:36:12.9004240Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9004340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9004460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9004510Z     ???
2025-02-24T16:36:12.9004600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9004610Z 
2025-02-24T16:36:12.9004650Z >   ???
2025-02-24T16:36:12.9004760Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9004810Z E   
2025-02-24T16:36:12.9004910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9004990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9005050Z E          ...
2025-02-24T16:36:12.9005120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9005220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9005320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9005360Z E          ...
2025-02-24T16:36:12.9005440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9005540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9005620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9005680Z 
2025-02-24T16:36:12.9005750Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9005980Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T16:36:12.9005980Z 
2025-02-24T16:36:12.9006160Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da70740>
2025-02-24T16:36:12.9006280Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>
2025-02-24T16:36:12.9006350Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9006350Z 
2025-02-24T16:36:12.9006460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9006550Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9006610Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9006710Z         try:
2025-02-24T16:36:12.9006830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9006880Z         except KeyError:
2025-02-24T16:36:12.9006990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9007050Z     
2025-02-24T16:36:12.9007110Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9007190Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9007250Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9007360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9007430Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9007490Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9007590Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9007590Z 
2025-02-24T16:36:12.9007680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9007780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9007780Z 
2025-02-24T16:36:12.9007900Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9007960Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9008050Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9008110Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9008230Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9008290Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9008380Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9008440Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9008490Z err_msg = None
2025-02-24T16:36:12.9008490Z 
2025-02-24T16:36:12.9008580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9008630Z         if err_msg is None:
2025-02-24T16:36:12.9008710Z             if left.shape != right.shape:
2025-02-24T16:36:12.9008770Z                 raise_assert_detail(
2025-02-24T16:36:12.9008890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9008940Z                 )
2025-02-24T16:36:12.9008990Z     
2025-02-24T16:36:12.9009040Z             diff = 0
2025-02-24T16:36:12.9009130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9009190Z                 # count up differences
2025-02-24T16:36:12.9009330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9009390Z                     diff += 1
2025-02-24T16:36:12.9009440Z     
2025-02-24T16:36:12.9009500Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9009610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9009750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9009830Z E           AssertionError: Series are different
2025-02-24T16:36:12.9009880Z E           
2025-02-24T16:36:12.9009960Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9010330Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9010850Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9011200Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9011210Z 
2025-02-24T16:36:12.9011750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9020730Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T16:36:12.9020770Z 
2025-02-24T16:36:12.9021020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da70800>
2025-02-24T16:36:12.9021160Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>
2025-02-24T16:36:12.9021230Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9021240Z 
2025-02-24T16:36:12.9021360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9021450Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9021510Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9021570Z         try:
2025-02-24T16:36:12.9021680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9021740Z         except KeyError:
2025-02-24T16:36:12.9021860Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9021900Z     
2025-02-24T16:36:12.9021960Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9022040Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9022100Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9022210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9022280Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9022350Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9022440Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9022440Z 
2025-02-24T16:36:12.9022540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9022630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9022630Z 
2025-02-24T16:36:12.9022750Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9022810Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9022900Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9022960Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9023080Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9023140Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9023230Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9023290Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9023350Z err_msg = None
2025-02-24T16:36:12.9023350Z 
2025-02-24T16:36:12.9023430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9023490Z         if err_msg is None:
2025-02-24T16:36:12.9023850Z             if left.shape != right.shape:
2025-02-24T16:36:12.9023920Z                 raise_assert_detail(
2025-02-24T16:36:12.9024030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9024090Z                 )
2025-02-24T16:36:12.9024140Z     
2025-02-24T16:36:12.9024190Z             diff = 0
2025-02-24T16:36:12.9024280Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9024340Z                 # count up differences
2025-02-24T16:36:12.9024480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9024540Z                     diff += 1
2025-02-24T16:36:12.9024590Z     
2025-02-24T16:36:12.9024720Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9024840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9024980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9025060Z E           AssertionError: Series are different
2025-02-24T16:36:12.9025120Z E           
2025-02-24T16:36:12.9025200Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9025510Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9025830Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9026150Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9026160Z 
2025-02-24T16:36:12.9026400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9026580Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T16:36:12.9026580Z 
2025-02-24T16:36:12.9026690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9026800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9026890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9026990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9027100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9027180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9027230Z err_msg = None
2025-02-24T16:36:12.9027230Z 
2025-02-24T16:36:12.9027320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9027380Z         if err_msg is None:
2025-02-24T16:36:12.9027450Z             if left.shape != right.shape:
2025-02-24T16:36:12.9027520Z                 raise_assert_detail(
2025-02-24T16:36:12.9027640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9027680Z                 )
2025-02-24T16:36:12.9027730Z     
2025-02-24T16:36:12.9027780Z             diff = 0
2025-02-24T16:36:12.9028230Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9028310Z                 # count up differences
2025-02-24T16:36:12.9028450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9028510Z                     diff += 1
2025-02-24T16:36:12.9028560Z     
2025-02-24T16:36:12.9028620Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9028740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9028890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9028990Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9029400Z E           
2025-02-24T16:36:12.9029510Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9029730Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9029950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9029960Z 
2025-02-24T16:36:12.9030200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9030210Z 
2025-02-24T16:36:12.9030350Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9030350Z 
2025-02-24T16:36:12.9030520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da70a40>
2025-02-24T16:36:12.9030680Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>, attr = 'nu'
2025-02-24T16:36:12.9030690Z 
2025-02-24T16:36:12.9030800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9030890Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9030950Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9031000Z         try:
2025-02-24T16:36:12.9031120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9031170Z         except KeyError:
2025-02-24T16:36:12.9031280Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9031340Z     
2025-02-24T16:36:12.9031400Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9031480Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9031550Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9031650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9031730Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9031800Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9031890Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9031890Z 
2025-02-24T16:36:12.9031990Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9032080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9032190Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9032240Z     ???
2025-02-24T16:36:12.9032340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9032340Z 
2025-02-24T16:36:12.9032380Z >   ???
2025-02-24T16:36:12.9032480Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9032530Z E   
2025-02-24T16:36:12.9032630Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9032720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9032770Z E          ...
2025-02-24T16:36:12.9032920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9033020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9033110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9033160Z E          ...
2025-02-24T16:36:12.9033230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9033330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9033410Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9033410Z 
2025-02-24T16:36:12.9033480Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9033680Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T16:36:12.9033730Z 
2025-02-24T16:36:12.9033850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9033960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9034040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9034150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9034250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9034340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9034390Z err_msg = None
2025-02-24T16:36:12.9034390Z 
2025-02-24T16:36:12.9034470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9034530Z         if err_msg is None:
2025-02-24T16:36:12.9034600Z             if left.shape != right.shape:
2025-02-24T16:36:12.9034670Z                 raise_assert_detail(
2025-02-24T16:36:12.9034780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9034830Z                 )
2025-02-24T16:36:12.9034880Z     
2025-02-24T16:36:12.9034930Z             diff = 0
2025-02-24T16:36:12.9035020Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9035090Z                 # count up differences
2025-02-24T16:36:12.9035220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9035280Z                     diff += 1
2025-02-24T16:36:12.9035330Z     
2025-02-24T16:36:12.9035400Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9035510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9035650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9035740Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9035790Z E           
2025-02-24T16:36:12.9035880Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9036090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9036310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9036320Z 
2025-02-24T16:36:12.9036560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9036570Z 
2025-02-24T16:36:12.9036710Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9036710Z 
2025-02-24T16:36:12.9036880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da70b00>
2025-02-24T16:36:12.9037010Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>
2025-02-24T16:36:12.9037140Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9037140Z 
2025-02-24T16:36:12.9037250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9037340Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9037400Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9037450Z         try:
2025-02-24T16:36:12.9037560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9037620Z         except KeyError:
2025-02-24T16:36:12.9037740Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9037780Z     
2025-02-24T16:36:12.9037850Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9037980Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9038040Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9038150Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9038220Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9038290Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9038380Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9038380Z 
2025-02-24T16:36:12.9038480Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9038570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9038690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9038740Z     ???
2025-02-24T16:36:12.9038830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9038840Z 
2025-02-24T16:36:12.9038880Z >   ???
2025-02-24T16:36:12.9038980Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9039030Z E   
2025-02-24T16:36:12.9039140Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9039230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9039280Z E          ...
2025-02-24T16:36:12.9039350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9039450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9039540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9039590Z E          ...
2025-02-24T16:36:12.9039650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9039750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9039830Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9039840Z 
2025-02-24T16:36:12.9039910Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9040080Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T16:36:12.9040080Z 
2025-02-24T16:36:12.9040200Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9040300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9040390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9040500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9040600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9040680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9040730Z err_msg = None
2025-02-24T16:36:12.9040740Z 
2025-02-24T16:36:12.9040820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9040880Z         if err_msg is None:
2025-02-24T16:36:12.9040950Z             if left.shape != right.shape:
2025-02-24T16:36:12.9041010Z                 raise_assert_detail(
2025-02-24T16:36:12.9041130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9041180Z                 )
2025-02-24T16:36:12.9041220Z     
2025-02-24T16:36:12.9041330Z             diff = 0
2025-02-24T16:36:12.9041430Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9041490Z                 # count up differences
2025-02-24T16:36:12.9041630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9041680Z                     diff += 1
2025-02-24T16:36:12.9041740Z     
2025-02-24T16:36:12.9041800Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9041910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9042050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9042140Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9042240Z E           
2025-02-24T16:36:12.9042330Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9042550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9042770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9042780Z 
2025-02-24T16:36:12.9043020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9043020Z 
2025-02-24T16:36:12.9043160Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9043160Z 
2025-02-24T16:36:12.9043330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da70bc0>
2025-02-24T16:36:12.9043490Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>, attr = 'f_lu'
2025-02-24T16:36:12.9043500Z 
2025-02-24T16:36:12.9043600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9043690Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9043760Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9043810Z         try:
2025-02-24T16:36:12.9043930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9043990Z         except KeyError:
2025-02-24T16:36:12.9044100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9044150Z     
2025-02-24T16:36:12.9044210Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9044290Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9044360Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9044470Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9044540Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9044610Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9044710Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9044710Z 
2025-02-24T16:36:12.9044810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9044910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9045020Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9045070Z     ???
2025-02-24T16:36:12.9045170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9045170Z 
2025-02-24T16:36:12.9045210Z >   ???
2025-02-24T16:36:12.9045320Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9045360Z E   
2025-02-24T16:36:12.9045460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9045630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9045950Z E          ...
2025-02-24T16:36:12.9046040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9046170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9046280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9046350Z E          ...
2025-02-24T16:36:12.9046420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9046540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9046650Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9046660Z 
2025-02-24T16:36:12.9046750Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9046970Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T16:36:12.9047100Z 
2025-02-24T16:36:12.9047220Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9047330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9047410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9047530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9047630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9047710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9047760Z err_msg = None
2025-02-24T16:36:12.9047760Z 
2025-02-24T16:36:12.9047860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9047940Z         if err_msg is None:
2025-02-24T16:36:12.9048030Z             if left.shape != right.shape:
2025-02-24T16:36:12.9048110Z                 raise_assert_detail(
2025-02-24T16:36:12.9048220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9048270Z                 )
2025-02-24T16:36:12.9048320Z     
2025-02-24T16:36:12.9048370Z             diff = 0
2025-02-24T16:36:12.9048460Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9048520Z                 # count up differences
2025-02-24T16:36:12.9048660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9048740Z                     diff += 1
2025-02-24T16:36:12.9048790Z     
2025-02-24T16:36:12.9048850Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9048960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9049110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9049190Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9049250Z E           
2025-02-24T16:36:12.9049350Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9049560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9049780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9049780Z 
2025-02-24T16:36:12.9050030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9050030Z 
2025-02-24T16:36:12.9050170Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9050170Z 
2025-02-24T16:36:12.9050350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da71340>
2025-02-24T16:36:12.9050560Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>
2025-02-24T16:36:12.9050610Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9050620Z 
2025-02-24T16:36:12.9050730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9050820Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9050880Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9050930Z         try:
2025-02-24T16:36:12.9051040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9051100Z         except KeyError:
2025-02-24T16:36:12.9051220Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9051270Z     
2025-02-24T16:36:12.9051380Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9051450Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9051520Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9051630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9051700Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9051770Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9051860Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9051920Z             else:
2025-02-24T16:36:12.9051990Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9052080Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9052080Z 
2025-02-24T16:36:12.9052170Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9052280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9052390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9052440Z     ???
2025-02-24T16:36:12.9052530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9052540Z 
2025-02-24T16:36:12.9052580Z >   ???
2025-02-24T16:36:12.9052680Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9052730Z E   
2025-02-24T16:36:12.9052840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9052930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9052980Z E          ...
2025-02-24T16:36:12.9053050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9053150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9053240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9053290Z E          ...
2025-02-24T16:36:12.9053360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9053460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9053550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9053550Z 
2025-02-24T16:36:12.9053620Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9053840Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T16:36:12.9053860Z 
2025-02-24T16:36:12.9054120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9054250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9054330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9054450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9054560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9054670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9054730Z err_msg = None
2025-02-24T16:36:12.9054730Z 
2025-02-24T16:36:12.9054820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9054900Z         if err_msg is None:
2025-02-24T16:36:12.9054980Z             if left.shape != right.shape:
2025-02-24T16:36:12.9055060Z                 raise_assert_detail(
2025-02-24T16:36:12.9055370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9055420Z                 )
2025-02-24T16:36:12.9055470Z     
2025-02-24T16:36:12.9055510Z             diff = 0
2025-02-24T16:36:12.9055600Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9055670Z                 # count up differences
2025-02-24T16:36:12.9055830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9055890Z                     diff += 1
2025-02-24T16:36:12.9055940Z     
2025-02-24T16:36:12.9056010Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9056140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9056380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9056490Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9056550Z E           
2025-02-24T16:36:12.9056650Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9056880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9057110Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9057130Z 
2025-02-24T16:36:12.9057380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9057390Z 
2025-02-24T16:36:12.9057560Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9057570Z 
2025-02-24T16:36:12.9057750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da71400>
2025-02-24T16:36:12.9057890Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>
2025-02-24T16:36:12.9057950Z attr = 'beta_sobolev'
2025-02-24T16:36:12.9057960Z 
2025-02-24T16:36:12.9058070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9058180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9058240Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9058310Z         try:
2025-02-24T16:36:12.9058430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9058500Z         except KeyError:
2025-02-24T16:36:12.9058630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9058670Z     
2025-02-24T16:36:12.9058750Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9058840Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9058920Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9059040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9059100Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9059170Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9059280Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9059330Z             else:
2025-02-24T16:36:12.9059400Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9059490Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9059490Z 
2025-02-24T16:36:12.9059590Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9059690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9059820Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9059870Z     ???
2025-02-24T16:36:12.9060060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9060080Z 
2025-02-24T16:36:12.9060130Z >   ???
2025-02-24T16:36:12.9060240Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9060290Z E   
2025-02-24T16:36:12.9060400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9060500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9060560Z E          ...
2025-02-24T16:36:12.9060630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9060730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9060820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9060940Z E          ...
2025-02-24T16:36:12.9061020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9061130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9061230Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9061240Z 
2025-02-24T16:36:12.9061310Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9061500Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T16:36:12.9061500Z 
2025-02-24T16:36:12.9061630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9061740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9061850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9061970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9062100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9062190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9062230Z err_msg = None
2025-02-24T16:36:12.9062240Z 
2025-02-24T16:36:12.9062350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9062410Z         if err_msg is None:
2025-02-24T16:36:12.9062490Z             if left.shape != right.shape:
2025-02-24T16:36:12.9062570Z                 raise_assert_detail(
2025-02-24T16:36:12.9062680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9062730Z                 )
2025-02-24T16:36:12.9062770Z     
2025-02-24T16:36:12.9062820Z             diff = 0
2025-02-24T16:36:12.9062920Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9063000Z                 # count up differences
2025-02-24T16:36:12.9063140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9063210Z                     diff += 1
2025-02-24T16:36:12.9063270Z     
2025-02-24T16:36:12.9063330Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9063460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9063610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9063720Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9063770Z E           
2025-02-24T16:36:12.9063870Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9064120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9064370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9064910Z 
2025-02-24T16:36:12.9065200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9065210Z 
2025-02-24T16:36:12.9065360Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9065370Z 
2025-02-24T16:36:12.9065560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da71580>
2025-02-24T16:36:12.9065730Z plasma = <tardis.plasma.base.BasePlasma object at 0x176f84e30>, attr = 'j_blues'
2025-02-24T16:36:12.9065730Z 
2025-02-24T16:36:12.9065860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9065950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9066260Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9066310Z         try:
2025-02-24T16:36:12.9066440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9066510Z         except KeyError:
2025-02-24T16:36:12.9066630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9066690Z     
2025-02-24T16:36:12.9066750Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9066840Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9066920Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9067040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9067120Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9067190Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9067290Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9067360Z             else:
2025-02-24T16:36:12.9067430Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9067520Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9067530Z 
2025-02-24T16:36:12.9067640Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9067740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9067870Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9067930Z     ???
2025-02-24T16:36:12.9068020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9068030Z 
2025-02-24T16:36:12.9068070Z >   ???
2025-02-24T16:36:12.9068190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9068240Z E   
2025-02-24T16:36:12.9068360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9068450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9068510Z E          ...
2025-02-24T16:36:12.9068580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9068700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9068810Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9068850Z E          ...
2025-02-24T16:36:12.9068940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9069040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9069130Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9069130Z 
2025-02-24T16:36:12.9069210Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9069390Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T16:36:12.9069400Z 
2025-02-24T16:36:12.9069520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9069640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9069730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9069850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9082530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9083820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9084720Z err_msg = None
2025-02-24T16:36:12.9084770Z 
2025-02-24T16:36:12.9084950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9085020Z         if err_msg is None:
2025-02-24T16:36:12.9085090Z             if left.shape != right.shape:
2025-02-24T16:36:12.9085160Z                 raise_assert_detail(
2025-02-24T16:36:12.9085290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9085340Z                 )
2025-02-24T16:36:12.9085390Z     
2025-02-24T16:36:12.9085430Z             diff = 0
2025-02-24T16:36:12.9085530Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9085900Z                 # count up differences
2025-02-24T16:36:12.9086040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9086110Z                     diff += 1
2025-02-24T16:36:12.9086160Z     
2025-02-24T16:36:12.9086230Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9086340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9086490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9086580Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9086630Z E           
2025-02-24T16:36:12.9086730Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9086960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9087190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9087190Z 
2025-02-24T16:36:12.9087450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9087460Z 
2025-02-24T16:36:12.9087590Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9087600Z 
2025-02-24T16:36:12.9087790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da72300>
2025-02-24T16:36:12.9087960Z plasma = <tardis.plasma.base.BasePlasma object at 0x172f060f0>, attr = 'lines'
2025-02-24T16:36:12.9087970Z 
2025-02-24T16:36:12.9088090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9088180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9088240Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9088310Z         try:
2025-02-24T16:36:12.9088440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9088490Z         except KeyError:
2025-02-24T16:36:12.9088610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9088660Z     
2025-02-24T16:36:12.9088720Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9088800Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9088880Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9088990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9089050Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9089130Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9089230Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9089280Z             else:
2025-02-24T16:36:12.9089350Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9089450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9089580Z 
2025-02-24T16:36:12.9089690Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9089790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9089910Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9089970Z     ???
2025-02-24T16:36:12.9090070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9090080Z 
2025-02-24T16:36:12.9090120Z >   ???
2025-02-24T16:36:12.9090220Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9090270Z E   
2025-02-24T16:36:12.9090370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9090550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9090600Z E          ...
2025-02-24T16:36:12.9090680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9090780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9090880Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9090930Z E          ...
2025-02-24T16:36:12.9091000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9091100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9091180Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9091180Z 
2025-02-24T16:36:12.9091250Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9091460Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T16:36:12.9091460Z 
2025-02-24T16:36:12.9091630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da723c0>
2025-02-24T16:36:12.9091770Z plasma = <tardis.plasma.base.BasePlasma object at 0x172f060f0>
2025-02-24T16:36:12.9091830Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9091840Z 
2025-02-24T16:36:12.9091950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9092040Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9092100Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9092150Z         try:
2025-02-24T16:36:12.9092270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9092320Z         except KeyError:
2025-02-24T16:36:12.9092440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9092480Z     
2025-02-24T16:36:12.9092550Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9092620Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9092690Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9092790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9092860Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9092940Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9093020Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9093030Z 
2025-02-24T16:36:12.9093140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9093230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9093230Z 
2025-02-24T16:36:12.9093360Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9093430Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9093520Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9093590Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9093700Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9093780Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9093860Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9093940Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9094150Z err_msg = None
2025-02-24T16:36:12.9094250Z 
2025-02-24T16:36:12.9094340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9094400Z         if err_msg is None:
2025-02-24T16:36:12.9094470Z             if left.shape != right.shape:
2025-02-24T16:36:12.9094530Z                 raise_assert_detail(
2025-02-24T16:36:12.9094650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9094700Z                 )
2025-02-24T16:36:12.9094750Z     
2025-02-24T16:36:12.9094800Z             diff = 0
2025-02-24T16:36:12.9094890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9094950Z                 # count up differences
2025-02-24T16:36:12.9095090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9095200Z                     diff += 1
2025-02-24T16:36:12.9095250Z     
2025-02-24T16:36:12.9095310Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9095420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9095570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9095650Z E           AssertionError: Series are different
2025-02-24T16:36:12.9095700Z E           
2025-02-24T16:36:12.9095780Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9096100Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9096390Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9096690Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9096700Z 
2025-02-24T16:36:12.9096940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9097150Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T16:36:12.9097160Z 
2025-02-24T16:36:12.9097330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da72480>
2025-02-24T16:36:12.9097460Z plasma = <tardis.plasma.base.BasePlasma object at 0x172f060f0>
2025-02-24T16:36:12.9097530Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9097540Z 
2025-02-24T16:36:12.9097660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9097760Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9097820Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9097870Z         try:
2025-02-24T16:36:12.9097980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9098040Z         except KeyError:
2025-02-24T16:36:12.9098160Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9098210Z     
2025-02-24T16:36:12.9098290Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9098360Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9098420Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9098530Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9098940Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9099010Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9099100Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9099110Z 
2025-02-24T16:36:12.9099210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9099320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9099330Z 
2025-02-24T16:36:12.9099450Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9099510Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9099600Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9099870Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9099990Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9100050Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9100150Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9100210Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9100260Z err_msg = None
2025-02-24T16:36:12.9100270Z 
2025-02-24T16:36:12.9100350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9100410Z         if err_msg is None:
2025-02-24T16:36:12.9100480Z             if left.shape != right.shape:
2025-02-24T16:36:12.9100540Z                 raise_assert_detail(
2025-02-24T16:36:12.9100660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9100710Z                 )
2025-02-24T16:36:12.9100750Z     
2025-02-24T16:36:12.9100820Z             diff = 0
2025-02-24T16:36:12.9100910Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9100990Z                 # count up differences
2025-02-24T16:36:12.9101120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9101180Z                     diff += 1
2025-02-24T16:36:12.9101220Z     
2025-02-24T16:36:12.9101290Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9101400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9101540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9101630Z E           AssertionError: Series are different
2025-02-24T16:36:12.9101670Z E           
2025-02-24T16:36:12.9101760Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9102060Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9102380Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9102710Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9102720Z 
2025-02-24T16:36:12.9102970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9103250Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T16:36:12.9103260Z 
2025-02-24T16:36:12.9103370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9103480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9103560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9103670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9103770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9103910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9103980Z err_msg = None
2025-02-24T16:36:12.9103990Z 
2025-02-24T16:36:12.9104070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9104130Z         if err_msg is None:
2025-02-24T16:36:12.9104200Z             if left.shape != right.shape:
2025-02-24T16:36:12.9104270Z                 raise_assert_detail(
2025-02-24T16:36:12.9104380Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9104430Z                 )
2025-02-24T16:36:12.9104500Z     
2025-02-24T16:36:12.9104550Z             diff = 0
2025-02-24T16:36:12.9104640Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9104710Z                 # count up differences
2025-02-24T16:36:12.9104850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9104900Z                     diff += 1
2025-02-24T16:36:12.9104960Z     
2025-02-24T16:36:12.9105020Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9105130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9105270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9105370Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9105420Z E           
2025-02-24T16:36:12.9105520Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9105740Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9105970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9105980Z 
2025-02-24T16:36:12.9106220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9106230Z 
2025-02-24T16:36:12.9106360Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9106360Z 
2025-02-24T16:36:12.9106540Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da726c0>
2025-02-24T16:36:12.9106710Z plasma = <tardis.plasma.base.BasePlasma object at 0x172f060f0>, attr = 'nu'
2025-02-24T16:36:12.9106720Z 
2025-02-24T16:36:12.9106830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9106920Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9106990Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9107040Z         try:
2025-02-24T16:36:12.9107150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9107210Z         except KeyError:
2025-02-24T16:36:12.9107320Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9107450Z     
2025-02-24T16:36:12.9107520Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9107590Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9107660Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9107770Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9107840Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9107900Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9108000Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9108000Z 
2025-02-24T16:36:12.9108100Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9108200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9108370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9108420Z     ???
2025-02-24T16:36:12.9108520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9108530Z 
2025-02-24T16:36:12.9108570Z >   ???
2025-02-24T16:36:12.9108670Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9108720Z E   
2025-02-24T16:36:12.9108820Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9108920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9108970Z E          ...
2025-02-24T16:36:12.9109040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9109150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9109240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9109290Z E          ...
2025-02-24T16:36:12.9109360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9109480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9109570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9109570Z 
2025-02-24T16:36:12.9109640Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9109820Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T16:36:12.9109820Z 
2025-02-24T16:36:12.9109940Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9110060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9110130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9110240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9110350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9110450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9110500Z err_msg = None
2025-02-24T16:36:12.9110500Z 
2025-02-24T16:36:12.9110580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9110650Z         if err_msg is None:
2025-02-24T16:36:12.9110720Z             if left.shape != right.shape:
2025-02-24T16:36:12.9110780Z                 raise_assert_detail(
2025-02-24T16:36:12.9110900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9110950Z                 )
2025-02-24T16:36:12.9111000Z     
2025-02-24T16:36:12.9111050Z             diff = 0
2025-02-24T16:36:12.9111150Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9111230Z                 # count up differences
2025-02-24T16:36:12.9111360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9111420Z                     diff += 1
2025-02-24T16:36:12.9111470Z     
2025-02-24T16:36:12.9111540Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9111650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9111810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9111980Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9112030Z E           
2025-02-24T16:36:12.9112120Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9112330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9112550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9112600Z 
2025-02-24T16:36:12.9112850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9112850Z 
2025-02-24T16:36:12.9112990Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9113000Z 
2025-02-24T16:36:12.9113170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da72780>
2025-02-24T16:36:12.9113300Z plasma = <tardis.plasma.base.BasePlasma object at 0x172f060f0>
2025-02-24T16:36:12.9113360Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9113360Z 
2025-02-24T16:36:12.9113480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9113590Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9113670Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9113720Z         try:
2025-02-24T16:36:12.9113830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9113890Z         except KeyError:
2025-02-24T16:36:12.9114010Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9114070Z     
2025-02-24T16:36:12.9114130Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9114210Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9114270Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9114390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9114450Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9114520Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9114610Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9114610Z 
2025-02-24T16:36:12.9114710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9114810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9114930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9114970Z     ???
2025-02-24T16:36:12.9115070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9115070Z 
2025-02-24T16:36:12.9115120Z >   ???
2025-02-24T16:36:12.9115220Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9115270Z E   
2025-02-24T16:36:12.9115370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9115460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9115510Z E          ...
2025-02-24T16:36:12.9115580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9115690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9115770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9115830Z E          ...
2025-02-24T16:36:12.9115900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9116000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9116080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9116420Z 
2025-02-24T16:36:12.9116520Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9116690Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T16:36:12.9116690Z 
2025-02-24T16:36:12.9116800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9116910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9116980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9117090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9117200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9117650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9117710Z err_msg = None
2025-02-24T16:36:12.9117720Z 
2025-02-24T16:36:12.9117800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9117860Z         if err_msg is None:
2025-02-24T16:36:12.9117930Z             if left.shape != right.shape:
2025-02-24T16:36:12.9117990Z                 raise_assert_detail(
2025-02-24T16:36:12.9118110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9118150Z                 )
2025-02-24T16:36:12.9118200Z     
2025-02-24T16:36:12.9118250Z             diff = 0
2025-02-24T16:36:12.9118340Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9118400Z                 # count up differences
2025-02-24T16:36:12.9118540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9118600Z                     diff += 1
2025-02-24T16:36:12.9118640Z     
2025-02-24T16:36:12.9118710Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9118820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9118960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9119050Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9119110Z E           
2025-02-24T16:36:12.9119190Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9119400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9119640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9119650Z 
2025-02-24T16:36:12.9119890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9119900Z 
2025-02-24T16:36:12.9120060Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9120060Z 
2025-02-24T16:36:12.9120240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da72840>
2025-02-24T16:36:12.9120400Z plasma = <tardis.plasma.base.BasePlasma object at 0x172f060f0>, attr = 'f_lu'
2025-02-24T16:36:12.9120400Z 
2025-02-24T16:36:12.9120510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9120600Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9120670Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9120720Z         try:
2025-02-24T16:36:12.9120830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9120880Z         except KeyError:
2025-02-24T16:36:12.9121000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9121130Z     
2025-02-24T16:36:12.9121210Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9121290Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9121350Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9121460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9121520Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9121590Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9121680Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9121680Z 
2025-02-24T16:36:12.9121780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9121940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9122070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9122120Z     ???
2025-02-24T16:36:12.9122210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9122220Z 
2025-02-24T16:36:12.9122260Z >   ???
2025-02-24T16:36:12.9122360Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9122410Z E   
2025-02-24T16:36:12.9122510Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9122600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9122650Z E          ...
2025-02-24T16:36:12.9122720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9122820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9122910Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9122960Z E          ...
2025-02-24T16:36:12.9123040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9123140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9123220Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9123220Z 
2025-02-24T16:36:12.9123290Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9123470Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T16:36:12.9123480Z 
2025-02-24T16:36:12.9123580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9123700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9123770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9123880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9124000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9124080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9124130Z err_msg = None
2025-02-24T16:36:12.9124130Z 
2025-02-24T16:36:12.9124220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9124270Z         if err_msg is None:
2025-02-24T16:36:12.9124360Z             if left.shape != right.shape:
2025-02-24T16:36:12.9124420Z                 raise_assert_detail(
2025-02-24T16:36:12.9124530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9124580Z                 )
2025-02-24T16:36:12.9124630Z     
2025-02-24T16:36:12.9124680Z             diff = 0
2025-02-24T16:36:12.9124770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9124840Z                 # count up differences
2025-02-24T16:36:12.9124970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9125030Z                     diff += 1
2025-02-24T16:36:12.9125080Z     
2025-02-24T16:36:12.9125150Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9125260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9125400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9125560Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9125610Z E           
2025-02-24T16:36:12.9125700Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9125910Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9126130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9126180Z 
2025-02-24T16:36:12.9126430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9126430Z 
2025-02-24T16:36:12.9126570Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9126570Z 
2025-02-24T16:36:12.9126750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da72fc0>
2025-02-24T16:36:12.9126880Z plasma = <tardis.plasma.base.BasePlasma object at 0x172f060f0>
2025-02-24T16:36:12.9126940Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9126940Z 
2025-02-24T16:36:12.9127050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9127140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9127200Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9127260Z         try:
2025-02-24T16:36:12.9127370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9127430Z         except KeyError:
2025-02-24T16:36:12.9127540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9127590Z     
2025-02-24T16:36:12.9127660Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9127730Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9127810Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9127920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9127980Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9128050Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9128130Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9128190Z             else:
2025-02-24T16:36:12.9128260Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9128360Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9128360Z 
2025-02-24T16:36:12.9128460Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9128550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9128670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9128720Z     ???
2025-02-24T16:36:12.9128820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9128820Z 
2025-02-24T16:36:12.9128860Z >   ???
2025-02-24T16:36:12.9128970Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9129010Z E   
2025-02-24T16:36:12.9129120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9129210Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9129250Z E          ...
2025-02-24T16:36:12.9129330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9129430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9129530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9129570Z E          ...
2025-02-24T16:36:12.9129650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9129810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9129890Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9129890Z 
2025-02-24T16:36:12.9129960Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9130120Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T16:36:12.9130130Z 
2025-02-24T16:36:12.9130230Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9130340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9130420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9130570Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9130680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9130760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9130810Z err_msg = None
2025-02-24T16:36:12.9130820Z 
2025-02-24T16:36:12.9130900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9130970Z         if err_msg is None:
2025-02-24T16:36:12.9131040Z             if left.shape != right.shape:
2025-02-24T16:36:12.9131100Z                 raise_assert_detail(
2025-02-24T16:36:12.9131210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9131260Z                 )
2025-02-24T16:36:12.9131310Z     
2025-02-24T16:36:12.9131360Z             diff = 0
2025-02-24T16:36:12.9131450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9131520Z                 # count up differences
2025-02-24T16:36:12.9131660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9131720Z                     diff += 1
2025-02-24T16:36:12.9131760Z     
2025-02-24T16:36:12.9131830Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9131950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9132090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9132170Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9132230Z E           
2025-02-24T16:36:12.9132320Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9132530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9132770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9132770Z 
2025-02-24T16:36:12.9133020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9133020Z 
2025-02-24T16:36:12.9133160Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9133160Z 
2025-02-24T16:36:12.9133340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da73200>
2025-02-24T16:36:12.9133510Z plasma = <tardis.plasma.base.BasePlasma object at 0x172f060f0>, attr = 'j_blues'
2025-02-24T16:36:12.9133510Z 
2025-02-24T16:36:12.9133620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9133720Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9133790Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9133830Z         try:
2025-02-24T16:36:12.9134300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9145680Z         except KeyError:
2025-02-24T16:36:12.9145860Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9145910Z     
2025-02-24T16:36:12.9145980Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9146050Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9146120Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9146230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9146290Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9146370Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9146950Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9147010Z             else:
2025-02-24T16:36:12.9147080Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9147180Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9147190Z 
2025-02-24T16:36:12.9147300Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9147410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9147540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9147590Z     ???
2025-02-24T16:36:12.9147690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9147700Z 
2025-02-24T16:36:12.9147750Z >   ???
2025-02-24T16:36:12.9147860Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9147910Z E   
2025-02-24T16:36:12.9148010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9148110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9148160Z E          ...
2025-02-24T16:36:12.9148240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9148340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9148440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9148490Z E          ...
2025-02-24T16:36:12.9148560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9148670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9148790Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9148820Z 
2025-02-24T16:36:12.9148910Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9149080Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T16:36:12.9149090Z 
2025-02-24T16:36:12.9149190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9149320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9149390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9149510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9149620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9149710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9149760Z err_msg = None
2025-02-24T16:36:12.9149760Z 
2025-02-24T16:36:12.9149860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9149940Z         if err_msg is None:
2025-02-24T16:36:12.9150020Z             if left.shape != right.shape:
2025-02-24T16:36:12.9150090Z                 raise_assert_detail(
2025-02-24T16:36:12.9150210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9150260Z                 )
2025-02-24T16:36:12.9150310Z     
2025-02-24T16:36:12.9150360Z             diff = 0
2025-02-24T16:36:12.9150450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9150520Z                 # count up differences
2025-02-24T16:36:12.9150870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9150940Z                     diff += 1
2025-02-24T16:36:12.9150990Z     
2025-02-24T16:36:12.9151060Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9151170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9151320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9151400Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9151450Z E           
2025-02-24T16:36:12.9151550Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9151770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9152080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9152080Z 
2025-02-24T16:36:12.9152330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9152330Z 
2025-02-24T16:36:12.9152470Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9152470Z 
2025-02-24T16:36:12.9152640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da73f80>
2025-02-24T16:36:12.9152830Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>, attr = 'lines'
2025-02-24T16:36:12.9152840Z 
2025-02-24T16:36:12.9152950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9153040Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9153100Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9153150Z         try:
2025-02-24T16:36:12.9153270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9153320Z         except KeyError:
2025-02-24T16:36:12.9153440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9153480Z     
2025-02-24T16:36:12.9153550Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9153620Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9153690Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9153790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9153860Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9153940Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9154020Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9154080Z             else:
2025-02-24T16:36:12.9154150Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9154240Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9154240Z 
2025-02-24T16:36:12.9154340Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9154430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9154560Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9154610Z     ???
2025-02-24T16:36:12.9154730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9154740Z 
2025-02-24T16:36:12.9154790Z >   ???
2025-02-24T16:36:12.9154910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9154970Z E   
2025-02-24T16:36:12.9155070Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9155170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9155300Z E          ...
2025-02-24T16:36:12.9155370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9155480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9155570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9155620Z E          ...
2025-02-24T16:36:12.9155690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9155790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9155870Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9155870Z 
2025-02-24T16:36:12.9155940Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9156150Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T16:36:12.9156210Z 
2025-02-24T16:36:12.9156380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9c080>
2025-02-24T16:36:12.9156510Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>
2025-02-24T16:36:12.9156580Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9156580Z 
2025-02-24T16:36:12.9156700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9156790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9156850Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9156900Z         try:
2025-02-24T16:36:12.9157010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9157070Z         except KeyError:
2025-02-24T16:36:12.9157180Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9157230Z     
2025-02-24T16:36:12.9157290Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9157360Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9157430Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9157540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9157610Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9157680Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9157780Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9157780Z 
2025-02-24T16:36:12.9157890Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9157990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9157990Z 
2025-02-24T16:36:12.9158110Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9158180Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9158280Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9158350Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9158470Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9158530Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9158630Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9158710Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9158770Z err_msg = None
2025-02-24T16:36:12.9158770Z 
2025-02-24T16:36:12.9158860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9158930Z         if err_msg is None:
2025-02-24T16:36:12.9159000Z             if left.shape != right.shape:
2025-02-24T16:36:12.9159080Z                 raise_assert_detail(
2025-02-24T16:36:12.9159200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9159250Z                 )
2025-02-24T16:36:12.9159300Z     
2025-02-24T16:36:12.9159350Z             diff = 0
2025-02-24T16:36:12.9159450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9159520Z                 # count up differences
2025-02-24T16:36:12.9159680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9159750Z                     diff += 1
2025-02-24T16:36:12.9159870Z     
2025-02-24T16:36:12.9159940Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9160050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9160230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9160310Z E           AssertionError: Series are different
2025-02-24T16:36:12.9160370Z E           
2025-02-24T16:36:12.9160450Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9160770Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9161120Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9161410Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9161410Z 
2025-02-24T16:36:12.9161660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9161890Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T16:36:12.9161900Z 
2025-02-24T16:36:12.9162090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9c140>
2025-02-24T16:36:12.9162220Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>
2025-02-24T16:36:12.9162290Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9162300Z 
2025-02-24T16:36:12.9162400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9162500Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9162560Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9162600Z         try:
2025-02-24T16:36:12.9162730Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9162800Z         except KeyError:
2025-02-24T16:36:12.9162920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9162960Z     
2025-02-24T16:36:12.9163030Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9163100Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9163170Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9163280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9163340Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9163410Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9163500Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9163500Z 
2025-02-24T16:36:12.9163600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9163700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9163700Z 
2025-02-24T16:36:12.9163810Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9163890Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9163970Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9164040Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9164610Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9164670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9164780Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9164850Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9164900Z err_msg = None
2025-02-24T16:36:12.9164900Z 
2025-02-24T16:36:12.9164990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9165050Z         if err_msg is None:
2025-02-24T16:36:12.9165130Z             if left.shape != right.shape:
2025-02-24T16:36:12.9165190Z                 raise_assert_detail(
2025-02-24T16:36:12.9165540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9165590Z                 )
2025-02-24T16:36:12.9165640Z     
2025-02-24T16:36:12.9165700Z             diff = 0
2025-02-24T16:36:12.9165790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9165860Z                 # count up differences
2025-02-24T16:36:12.9165990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9166060Z                     diff += 1
2025-02-24T16:36:12.9166100Z     
2025-02-24T16:36:12.9166170Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9166280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9166420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9166510Z E           AssertionError: Series are different
2025-02-24T16:36:12.9166560Z E           
2025-02-24T16:36:12.9166640Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9166950Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9167280Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9167600Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9167610Z 
2025-02-24T16:36:12.9167850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9168020Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T16:36:12.9168030Z 
2025-02-24T16:36:12.9168140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9168240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9168320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9168440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9168540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9168620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9168760Z err_msg = None
2025-02-24T16:36:12.9168760Z 
2025-02-24T16:36:12.9168850Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9168910Z         if err_msg is None:
2025-02-24T16:36:12.9168990Z             if left.shape != right.shape:
2025-02-24T16:36:12.9169050Z                 raise_assert_detail(
2025-02-24T16:36:12.9169160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9169210Z                 )
2025-02-24T16:36:12.9169260Z     
2025-02-24T16:36:12.9169310Z             diff = 0
2025-02-24T16:36:12.9169390Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9169460Z                 # count up differences
2025-02-24T16:36:12.9169660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9169720Z                     diff += 1
2025-02-24T16:36:12.9169770Z     
2025-02-24T16:36:12.9169840Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9169950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9170100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9170190Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9170240Z E           
2025-02-24T16:36:12.9170330Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9170550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9170780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9170780Z 
2025-02-24T16:36:12.9171030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9171030Z 
2025-02-24T16:36:12.9171170Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9171170Z 
2025-02-24T16:36:12.9171350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9c380>
2025-02-24T16:36:12.9171500Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>, attr = 'nu'
2025-02-24T16:36:12.9171500Z 
2025-02-24T16:36:12.9171620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9171720Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9171780Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9171830Z         try:
2025-02-24T16:36:12.9171940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9172000Z         except KeyError:
2025-02-24T16:36:12.9172120Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9172160Z     
2025-02-24T16:36:12.9172230Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9172300Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9172370Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9172480Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9172550Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9172610Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9172700Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9172710Z 
2025-02-24T16:36:12.9172810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9172910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9173040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9173140Z     ???
2025-02-24T16:36:12.9173230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9173240Z 
2025-02-24T16:36:12.9173290Z >   ???
2025-02-24T16:36:12.9173390Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9173430Z E   
2025-02-24T16:36:12.9173530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9173630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9173680Z E          ...
2025-02-24T16:36:12.9173750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9173860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9174000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9174050Z E          ...
2025-02-24T16:36:12.9174120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9174410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9174500Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9174500Z 
2025-02-24T16:36:12.9174570Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9174760Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T16:36:12.9174760Z 
2025-02-24T16:36:12.9174860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9174970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9175040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9175160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9175270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9175350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9175410Z err_msg = None
2025-02-24T16:36:12.9175410Z 
2025-02-24T16:36:12.9175500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9175560Z         if err_msg is None:
2025-02-24T16:36:12.9175630Z             if left.shape != right.shape:
2025-02-24T16:36:12.9175690Z                 raise_assert_detail(
2025-02-24T16:36:12.9175810Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9175860Z                 )
2025-02-24T16:36:12.9175910Z     
2025-02-24T16:36:12.9175950Z             diff = 0
2025-02-24T16:36:12.9176050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9176120Z                 # count up differences
2025-02-24T16:36:12.9176250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9176320Z                     diff += 1
2025-02-24T16:36:12.9176360Z     
2025-02-24T16:36:12.9176430Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9176540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9176680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9176770Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9176820Z E           
2025-02-24T16:36:12.9176910Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9177120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9177350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9177490Z 
2025-02-24T16:36:12.9177800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9177830Z 
2025-02-24T16:36:12.9177980Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9177980Z 
2025-02-24T16:36:12.9178170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9c440>
2025-02-24T16:36:12.9178290Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>
2025-02-24T16:36:12.9178350Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9178350Z 
2025-02-24T16:36:12.9178600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9178690Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9178750Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9178810Z         try:
2025-02-24T16:36:12.9178930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9178990Z         except KeyError:
2025-02-24T16:36:12.9179100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9179150Z     
2025-02-24T16:36:12.9179210Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9179280Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9179350Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9179460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9179520Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9179590Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9179680Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9179680Z 
2025-02-24T16:36:12.9179780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9179880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9180000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9180040Z     ???
2025-02-24T16:36:12.9180140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9180140Z 
2025-02-24T16:36:12.9180190Z >   ???
2025-02-24T16:36:12.9180290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9180340Z E   
2025-02-24T16:36:12.9180440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9180540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9180580Z E          ...
2025-02-24T16:36:12.9180670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9180780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9180890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9180950Z E          ...
2025-02-24T16:36:12.9181020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9181130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9181220Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9181220Z 
2025-02-24T16:36:12.9181300Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9181480Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T16:36:12.9181490Z 
2025-02-24T16:36:12.9181590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9181710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9181790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9181920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9182030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9182120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9182360Z err_msg = None
2025-02-24T16:36:12.9182360Z 
2025-02-24T16:36:12.9182450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9182520Z         if err_msg is None:
2025-02-24T16:36:12.9182610Z             if left.shape != right.shape:
2025-02-24T16:36:12.9182670Z                 raise_assert_detail(
2025-02-24T16:36:12.9182790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9182840Z                 )
2025-02-24T16:36:12.9182880Z     
2025-02-24T16:36:12.9182940Z             diff = 0
2025-02-24T16:36:12.9183030Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9183260Z                 # count up differences
2025-02-24T16:36:12.9183410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9183470Z                     diff += 1
2025-02-24T16:36:12.9183510Z     
2025-02-24T16:36:12.9183590Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9183700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9183850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9183940Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9184000Z E           
2025-02-24T16:36:12.9184090Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9184310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9184550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9184560Z 
2025-02-24T16:36:12.9184810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9184810Z 
2025-02-24T16:36:12.9184950Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9184950Z 
2025-02-24T16:36:12.9185130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9c500>
2025-02-24T16:36:12.9185310Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>, attr = 'f_lu'
2025-02-24T16:36:12.9185320Z 
2025-02-24T16:36:12.9185440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9185550Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9185620Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9185680Z         try:
2025-02-24T16:36:12.9185800Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9185860Z         except KeyError:
2025-02-24T16:36:12.9185980Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9186030Z     
2025-02-24T16:36:12.9186100Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9186170Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9186240Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9186360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9186440Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9186510Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9186600Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9186610Z 
2025-02-24T16:36:12.9186710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9186800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9186930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9187080Z     ???
2025-02-24T16:36:12.9187190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9187200Z 
2025-02-24T16:36:12.9187260Z >   ???
2025-02-24T16:36:12.9187360Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9187430Z E   
2025-02-24T16:36:12.9187540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9187630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9187700Z E          ...
2025-02-24T16:36:12.9187780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9187910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9188090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9188150Z E          ...
2025-02-24T16:36:12.9188220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9188330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9188430Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9188430Z 
2025-02-24T16:36:12.9188500Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9188710Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T16:36:12.9188720Z 
2025-02-24T16:36:12.9188830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9188950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9189030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9189140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9189250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9189320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9189380Z err_msg = None
2025-02-24T16:36:12.9189380Z 
2025-02-24T16:36:12.9189470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9189530Z         if err_msg is None:
2025-02-24T16:36:12.9189610Z             if left.shape != right.shape:
2025-02-24T16:36:12.9189670Z                 raise_assert_detail(
2025-02-24T16:36:12.9199430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9199650Z                 )
2025-02-24T16:36:12.9199700Z     
2025-02-24T16:36:12.9199760Z             diff = 0
2025-02-24T16:36:12.9199860Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9199930Z                 # count up differences
2025-02-24T16:36:12.9200080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9200150Z                     diff += 1
2025-02-24T16:36:12.9200200Z     
2025-02-24T16:36:12.9200260Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9200390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9200530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9200640Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9200690Z E           
2025-02-24T16:36:12.9200790Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9201010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9201240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9201570Z 
2025-02-24T16:36:12.9201840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9201840Z 
2025-02-24T16:36:12.9201990Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9201990Z 
2025-02-24T16:36:12.9202170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9cc80>
2025-02-24T16:36:12.9202300Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>
2025-02-24T16:36:12.9202360Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9202480Z 
2025-02-24T16:36:12.9202610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9202710Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9202770Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9202830Z         try:
2025-02-24T16:36:12.9202950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9203010Z         except KeyError:
2025-02-24T16:36:12.9203120Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9203170Z     
2025-02-24T16:36:12.9203240Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9203310Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9203380Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9203510Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9203580Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9203650Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9203740Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9203810Z             else:
2025-02-24T16:36:12.9203880Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9203970Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9203980Z 
2025-02-24T16:36:12.9204080Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9204180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9204320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9204380Z     ???
2025-02-24T16:36:12.9204480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9204480Z 
2025-02-24T16:36:12.9204540Z >   ???
2025-02-24T16:36:12.9204660Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9204700Z E   
2025-02-24T16:36:12.9204830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9204930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9204980Z E          ...
2025-02-24T16:36:12.9205060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9205160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9205260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9205310Z E          ...
2025-02-24T16:36:12.9205380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9205490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9205570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9205570Z 
2025-02-24T16:36:12.9205650Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9205830Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T16:36:12.9205830Z 
2025-02-24T16:36:12.9205940Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9206060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9206150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9206270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9206470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9206550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9206610Z err_msg = None
2025-02-24T16:36:12.9206610Z 
2025-02-24T16:36:12.9206690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9206750Z         if err_msg is None:
2025-02-24T16:36:12.9206820Z             if left.shape != right.shape:
2025-02-24T16:36:12.9206890Z                 raise_assert_detail(
2025-02-24T16:36:12.9207000Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9207100Z                 )
2025-02-24T16:36:12.9207150Z     
2025-02-24T16:36:12.9207200Z             diff = 0
2025-02-24T16:36:12.9207290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9207350Z                 # count up differences
2025-02-24T16:36:12.9207500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9207560Z                     diff += 1
2025-02-24T16:36:12.9207610Z     
2025-02-24T16:36:12.9207670Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9207780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9207920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9208010Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9208060Z E           
2025-02-24T16:36:12.9208150Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9208370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9209400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9209440Z 
2025-02-24T16:36:12.9209790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9209800Z 
2025-02-24T16:36:12.9209950Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9209950Z 
2025-02-24T16:36:12.9210140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9cd40>
2025-02-24T16:36:12.9210290Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>
2025-02-24T16:36:12.9210350Z attr = 'beta_sobolev'
2025-02-24T16:36:12.9210350Z 
2025-02-24T16:36:12.9210480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9210580Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9210650Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9210700Z         try:
2025-02-24T16:36:12.9210820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9210880Z         except KeyError:
2025-02-24T16:36:12.9211000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9211050Z     
2025-02-24T16:36:12.9211110Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9211190Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9211260Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9211380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9211450Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9211530Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9211620Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9212090Z             else:
2025-02-24T16:36:12.9212170Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9212270Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9212270Z 
2025-02-24T16:36:12.9212370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9212500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9212630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9212680Z     ???
2025-02-24T16:36:12.9212780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9212780Z 
2025-02-24T16:36:12.9212830Z >   ???
2025-02-24T16:36:12.9213470Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9213530Z E   
2025-02-24T16:36:12.9213660Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9213760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9213820Z E          ...
2025-02-24T16:36:12.9213900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9214010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9214100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9214160Z E          ...
2025-02-24T16:36:12.9214230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9214460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9214570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9214580Z 
2025-02-24T16:36:12.9214640Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9214830Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T16:36:12.9214840Z 
2025-02-24T16:36:12.9214950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9215070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9215170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9215280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9215390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9215470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9215520Z err_msg = None
2025-02-24T16:36:12.9215530Z 
2025-02-24T16:36:12.9215620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9215670Z         if err_msg is None:
2025-02-24T16:36:12.9215750Z             if left.shape != right.shape:
2025-02-24T16:36:12.9215820Z                 raise_assert_detail(
2025-02-24T16:36:12.9215960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9216020Z                 )
2025-02-24T16:36:12.9216070Z     
2025-02-24T16:36:12.9216130Z             diff = 0
2025-02-24T16:36:12.9216220Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9216290Z                 # count up differences
2025-02-24T16:36:12.9216450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9216520Z                     diff += 1
2025-02-24T16:36:12.9216570Z     
2025-02-24T16:36:12.9216630Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9216780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9216930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9217030Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9217080Z E           
2025-02-24T16:36:12.9217180Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9217400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9217740Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9217750Z 
2025-02-24T16:36:12.9218000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9218060Z 
2025-02-24T16:36:12.9218210Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9218210Z 
2025-02-24T16:36:12.9218390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9cec0>
2025-02-24T16:36:12.9219360Z plasma = <tardis.plasma.base.BasePlasma object at 0x172ac5700>, attr = 'j_blues'
2025-02-24T16:36:12.9219430Z 
2025-02-24T16:36:12.9219750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9220010Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9220240Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9220410Z         try:
2025-02-24T16:36:12.9220740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9220920Z         except KeyError:
2025-02-24T16:36:12.9221250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9221440Z     
2025-02-24T16:36:12.9221640Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9221870Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9222110Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9222460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9222680Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9222930Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9223220Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9223400Z             else:
2025-02-24T16:36:12.9223610Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9223900Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9223920Z 
2025-02-24T16:36:12.9224250Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9224540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9224940Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9225130Z     ???
2025-02-24T16:36:12.9225400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9225430Z 
2025-02-24T16:36:12.9225600Z >   ???
2025-02-24T16:36:12.9225900Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9226080Z E   
2025-02-24T16:36:12.9226370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9226610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9226780Z E          ...
2025-02-24T16:36:12.9227000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9227350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9227670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9227890Z E          ...
2025-02-24T16:36:12.9228150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9228490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9228800Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9228820Z 
2025-02-24T16:36:12.9229040Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9229540Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T16:36:12.9230290Z 
2025-02-24T16:36:12.9230650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9230970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9231260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9231570Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9231890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9232160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9232370Z err_msg = None
2025-02-24T16:36:12.9232730Z 
2025-02-24T16:36:12.9233040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9233260Z         if err_msg is None:
2025-02-24T16:36:12.9233520Z             if left.shape != right.shape:
2025-02-24T16:36:12.9233750Z                 raise_assert_detail(
2025-02-24T16:36:12.9234130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9234340Z                 )
2025-02-24T16:36:12.9234510Z     
2025-02-24T16:36:12.9234710Z             diff = 0
2025-02-24T16:36:12.9235000Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9235220Z                 # count up differences
2025-02-24T16:36:12.9235640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9235830Z                     diff += 1
2025-02-24T16:36:12.9236020Z     
2025-02-24T16:36:12.9236250Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9236620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9237040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9237340Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9237540Z E           
2025-02-24T16:36:12.9237840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9238510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9239170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9239210Z 
2025-02-24T16:36:12.9239960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9239980Z 
2025-02-24T16:36:12.9240400Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9240440Z 
2025-02-24T16:36:12.9240980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9dc40>
2025-02-24T16:36:12.9241470Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>, attr = 'lines'
2025-02-24T16:36:12.9241490Z 
2025-02-24T16:36:12.9241840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9242130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9242380Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9242550Z         try:
2025-02-24T16:36:12.9242870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9243090Z         except KeyError:
2025-02-24T16:36:12.9243480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9243680Z     
2025-02-24T16:36:12.9243900Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9244170Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9244760Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9245100Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9245320Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9245580Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9245890Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9246080Z             else:
2025-02-24T16:36:12.9246330Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9246620Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9246650Z 
2025-02-24T16:36:12.9246970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9247490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9247850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9248040Z     ???
2025-02-24T16:36:12.9248280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9248300Z 
2025-02-24T16:36:12.9248470Z >   ???
2025-02-24T16:36:12.9248790Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9248990Z E   
2025-02-24T16:36:12.9249320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9249620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9249820Z E          ...
2025-02-24T16:36:12.9250050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9250400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9250690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9250920Z E          ...
2025-02-24T16:36:12.9251180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9251510Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9251790Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9251810Z 
2025-02-24T16:36:12.9252030Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9252710Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T16:36:12.9252740Z 
2025-02-24T16:36:12.9253260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9dd00>
2025-02-24T16:36:12.9253650Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>
2025-02-24T16:36:12.9253900Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9253930Z 
2025-02-24T16:36:12.9254260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9254790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9255020Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9255260Z         try:
2025-02-24T16:36:12.9255590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9255760Z         except KeyError:
2025-02-24T16:36:12.9256110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9256300Z     
2025-02-24T16:36:12.9256520Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9256780Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9257010Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9257370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9257590Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9257830Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9258120Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9258140Z 
2025-02-24T16:36:12.9258450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9258760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9258780Z 
2025-02-24T16:36:12.9259110Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9259350Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9260820Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9261050Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9261420Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9261660Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9261940Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9262160Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9262380Z err_msg = None
2025-02-24T16:36:12.9262400Z 
2025-02-24T16:36:12.9262660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9262860Z         if err_msg is None:
2025-02-24T16:36:12.9263600Z             if left.shape != right.shape:
2025-02-24T16:36:12.9263820Z                 raise_assert_detail(
2025-02-24T16:36:12.9264180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9264370Z                 )
2025-02-24T16:36:12.9264590Z     
2025-02-24T16:36:12.9264760Z             diff = 0
2025-02-24T16:36:12.9265040Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9265270Z                 # count up differences
2025-02-24T16:36:12.9265680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9265900Z                     diff += 1
2025-02-24T16:36:12.9266080Z     
2025-02-24T16:36:12.9266320Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9266660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9267090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9267610Z E           AssertionError: Series are different
2025-02-24T16:36:12.9267850Z E           
2025-02-24T16:36:12.9268160Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9269120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9270010Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9270880Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9270930Z 
2025-02-24T16:36:12.9271700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9272390Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T16:36:12.9272410Z 
2025-02-24T16:36:12.9272960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9ddc0>
2025-02-24T16:36:12.9273340Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>
2025-02-24T16:36:12.9273580Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9273610Z 
2025-02-24T16:36:12.9273920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9274160Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9274390Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9274590Z         try:
2025-02-24T16:36:12.9275740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9275980Z         except KeyError:
2025-02-24T16:36:12.9276340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9276560Z     
2025-02-24T16:36:12.9276790Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9277050Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9277280Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9277620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9277870Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9278110Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9278770Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9278790Z 
2025-02-24T16:36:12.9279090Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9279390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9279410Z 
2025-02-24T16:36:12.9279730Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9279910Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9280180Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9280390Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9280790Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9281020Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9281300Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9281530Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9281760Z err_msg = None
2025-02-24T16:36:12.9281780Z 
2025-02-24T16:36:12.9282050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9282250Z         if err_msg is None:
2025-02-24T16:36:12.9282460Z             if left.shape != right.shape:
2025-02-24T16:36:12.9282660Z                 raise_assert_detail(
2025-02-24T16:36:12.9282970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9283140Z                 )
2025-02-24T16:36:12.9283310Z     
2025-02-24T16:36:12.9283510Z             diff = 0
2025-02-24T16:36:12.9283800Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9284040Z                 # count up differences
2025-02-24T16:36:12.9284460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9284660Z                     diff += 1
2025-02-24T16:36:12.9284840Z     
2025-02-24T16:36:12.9285040Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9285400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9285830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9286110Z E           AssertionError: Series are different
2025-02-24T16:36:12.9286310Z E           
2025-02-24T16:36:12.9286570Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9287560Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9288520Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9290100Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9290130Z 
2025-02-24T16:36:12.9291390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9291800Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T16:36:12.9292380Z 
2025-02-24T16:36:12.9292550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9292700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9292820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9292940Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9293060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9293140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9293200Z err_msg = None
2025-02-24T16:36:12.9293200Z 
2025-02-24T16:36:12.9293290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9293360Z         if err_msg is None:
2025-02-24T16:36:12.9293440Z             if left.shape != right.shape:
2025-02-24T16:36:12.9293510Z                 raise_assert_detail(
2025-02-24T16:36:12.9293640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9293690Z                 )
2025-02-24T16:36:12.9293770Z     
2025-02-24T16:36:12.9293840Z             diff = 0
2025-02-24T16:36:12.9293960Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9294040Z                 # count up differences
2025-02-24T16:36:12.9294180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9294260Z                     diff += 1
2025-02-24T16:36:12.9294330Z     
2025-02-24T16:36:12.9294410Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9294660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9294810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9294930Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9295010Z E           
2025-02-24T16:36:12.9295130Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9295370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9295620Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9295630Z 
2025-02-24T16:36:12.9295910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9295930Z 
2025-02-24T16:36:12.9296080Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9296080Z 
2025-02-24T16:36:12.9296300Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9e000>
2025-02-24T16:36:12.9296480Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>, attr = 'nu'
2025-02-24T16:36:12.9296670Z 
2025-02-24T16:36:12.9296820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9296940Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9297020Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9297090Z         try:
2025-02-24T16:36:12.9297210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9297270Z         except KeyError:
2025-02-24T16:36:12.9297400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9297460Z     
2025-02-24T16:36:12.9300440Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9301180Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9301450Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9301840Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9302060Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9302320Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9302640Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9302660Z 
2025-02-24T16:36:12.9302990Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9303290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9303680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9303880Z     ???
2025-02-24T16:36:12.9304160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9304180Z 
2025-02-24T16:36:12.9304340Z >   ???
2025-02-24T16:36:12.9305780Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9305970Z E   
2025-02-24T16:36:12.9306120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9306300Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9306780Z E          ...
2025-02-24T16:36:12.9306870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9307300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9307500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9307560Z E          ...
2025-02-24T16:36:12.9307670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9307810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9307910Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9307920Z 
2025-02-24T16:36:12.9307990Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9308230Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T16:36:12.9308250Z 
2025-02-24T16:36:12.9308400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9308540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9308870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9309070Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9309250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9309340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9309410Z err_msg = None
2025-02-24T16:36:12.9309420Z 
2025-02-24T16:36:12.9309610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9309710Z         if err_msg is None:
2025-02-24T16:36:12.9309910Z             if left.shape != right.shape:
2025-02-24T16:36:12.9310020Z                 raise_assert_detail(
2025-02-24T16:36:12.9310230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9310450Z                 )
2025-02-24T16:36:12.9310630Z     
2025-02-24T16:36:12.9310840Z             diff = 0
2025-02-24T16:36:12.9311600Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9311800Z                 # count up differences
2025-02-24T16:36:12.9312070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9312190Z                     diff += 1
2025-02-24T16:36:12.9312300Z     
2025-02-24T16:36:12.9312380Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9312550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9312790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9312910Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9313310Z E           
2025-02-24T16:36:12.9313420Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9313850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9314140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9314150Z 
2025-02-24T16:36:12.9314480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9314490Z 
2025-02-24T16:36:12.9314780Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9314790Z 
2025-02-24T16:36:12.9314990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9e0c0>
2025-02-24T16:36:12.9315300Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>
2025-02-24T16:36:12.9315510Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9315520Z 
2025-02-24T16:36:12.9315680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9315830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9315910Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9315990Z         try:
2025-02-24T16:36:12.9322180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9322320Z         except KeyError:
2025-02-24T16:36:12.9322450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9322500Z     
2025-02-24T16:36:12.9322580Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9322660Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9322740Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9322850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9322920Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9323010Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9323110Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9323120Z 
2025-02-24T16:36:12.9323250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9323370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9323500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9323550Z     ???
2025-02-24T16:36:12.9323650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9323650Z 
2025-02-24T16:36:12.9323700Z >   ???
2025-02-24T16:36:12.9323810Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9323880Z E   
2025-02-24T16:36:12.9323990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9324090Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9324140Z E          ...
2025-02-24T16:36:12.9324450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9324570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9324670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9324750Z E          ...
2025-02-24T16:36:12.9324820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9324930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9325020Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9325020Z 
2025-02-24T16:36:12.9325090Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9325270Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T16:36:12.9325390Z 
2025-02-24T16:36:12.9325520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9325660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9325760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9325880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9325990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9326070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9326120Z err_msg = None
2025-02-24T16:36:12.9326130Z 
2025-02-24T16:36:12.9326230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9326300Z         if err_msg is None:
2025-02-24T16:36:12.9326400Z             if left.shape != right.shape:
2025-02-24T16:36:12.9326470Z                 raise_assert_detail(
2025-02-24T16:36:12.9326600Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9326650Z                 )
2025-02-24T16:36:12.9326700Z     
2025-02-24T16:36:12.9326750Z             diff = 0
2025-02-24T16:36:12.9326860Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9326950Z                 # count up differences
2025-02-24T16:36:12.9327100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9327170Z                     diff += 1
2025-02-24T16:36:12.9327220Z     
2025-02-24T16:36:12.9327290Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9327400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9327570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9327690Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9327750Z E           
2025-02-24T16:36:12.9327840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9328070Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9328330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9328340Z 
2025-02-24T16:36:12.9328630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9328640Z 
2025-02-24T16:36:12.9328810Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9328820Z 
2025-02-24T16:36:12.9329000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9e180>
2025-02-24T16:36:12.9329170Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>, attr = 'f_lu'
2025-02-24T16:36:12.9329280Z 
2025-02-24T16:36:12.9329400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9329510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9329580Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9329630Z         try:
2025-02-24T16:36:12.9329760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9329820Z         except KeyError:
2025-02-24T16:36:12.9329930Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9329980Z     
2025-02-24T16:36:12.9330050Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9330190Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9330260Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9330380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9330440Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9330510Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9330600Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9330610Z 
2025-02-24T16:36:12.9330710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9330800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9330930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9330990Z     ???
2025-02-24T16:36:12.9331100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9331110Z 
2025-02-24T16:36:12.9331170Z >   ???
2025-02-24T16:36:12.9331270Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9331310Z E   
2025-02-24T16:36:12.9331440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9331540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9331600Z E          ...
2025-02-24T16:36:12.9331680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9331790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9331880Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9331930Z E          ...
2025-02-24T16:36:12.9332000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9332120Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9332220Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9332230Z 
2025-02-24T16:36:12.9332300Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9332490Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T16:36:12.9332490Z 
2025-02-24T16:36:12.9332620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9332760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9332870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9332990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9333120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9333210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9333270Z err_msg = None
2025-02-24T16:36:12.9333280Z 
2025-02-24T16:36:12.9333380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9333430Z         if err_msg is None:
2025-02-24T16:36:12.9333510Z             if left.shape != right.shape:
2025-02-24T16:36:12.9333580Z                 raise_assert_detail(
2025-02-24T16:36:12.9333700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9333750Z                 )
2025-02-24T16:36:12.9333790Z     
2025-02-24T16:36:12.9333850Z             diff = 0
2025-02-24T16:36:12.9334020Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9334100Z                 # count up differences
2025-02-24T16:36:12.9334240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9334290Z                     diff += 1
2025-02-24T16:36:12.9334350Z     
2025-02-24T16:36:12.9334410Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9334530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9334670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9334760Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9334870Z E           
2025-02-24T16:36:12.9334960Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9335180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9335390Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9335400Z 
2025-02-24T16:36:12.9335650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9335660Z 
2025-02-24T16:36:12.9335800Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9335800Z 
2025-02-24T16:36:12.9335980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9e900>
2025-02-24T16:36:12.9336110Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>
2025-02-24T16:36:12.9336170Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9336170Z 
2025-02-24T16:36:12.9336290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9336390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9336450Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9336510Z         try:
2025-02-24T16:36:12.9336620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9336680Z         except KeyError:
2025-02-24T16:36:12.9336790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9336840Z     
2025-02-24T16:36:12.9336910Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9336980Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9337060Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9337190Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9337260Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9337340Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9337430Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9337490Z             else:
2025-02-24T16:36:12.9337580Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9337670Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9337670Z 
2025-02-24T16:36:12.9337780Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9337880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9338010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9338060Z     ???
2025-02-24T16:36:12.9338160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9338160Z 
2025-02-24T16:36:12.9338210Z >   ???
2025-02-24T16:36:12.9338310Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9338370Z E   
2025-02-24T16:36:12.9338850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9338950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9339000Z E          ...
2025-02-24T16:36:12.9339080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9339190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9339290Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9339370Z E          ...
2025-02-24T16:36:12.9339450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9339560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9339640Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9339830Z 
2025-02-24T16:36:12.9339900Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9340120Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T16:36:12.9340130Z 
2025-02-24T16:36:12.9340240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9340350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9340430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9340560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9340710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9340800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9340860Z err_msg = None
2025-02-24T16:36:12.9340860Z 
2025-02-24T16:36:12.9340950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9341030Z         if err_msg is None:
2025-02-24T16:36:12.9341120Z             if left.shape != right.shape:
2025-02-24T16:36:12.9341190Z                 raise_assert_detail(
2025-02-24T16:36:12.9341320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9341370Z                 )
2025-02-24T16:36:12.9341430Z     
2025-02-24T16:36:12.9341510Z             diff = 0
2025-02-24T16:36:12.9341620Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9341720Z                 # count up differences
2025-02-24T16:36:12.9341880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9341960Z                     diff += 1
2025-02-24T16:36:12.9342030Z     
2025-02-24T16:36:12.9342100Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9342230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9342400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9342500Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9342550Z E           
2025-02-24T16:36:12.9342640Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9342880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9343130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9343150Z 
2025-02-24T16:36:12.9343410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9343420Z 
2025-02-24T16:36:12.9343550Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9343640Z 
2025-02-24T16:36:12.9343840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9e9c0>
2025-02-24T16:36:12.9344000Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>
2025-02-24T16:36:12.9344070Z attr = 'beta_sobolev'
2025-02-24T16:36:12.9344070Z 
2025-02-24T16:36:12.9344190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9344280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9344350Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9344390Z         try:
2025-02-24T16:36:12.9344510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9344660Z         except KeyError:
2025-02-24T16:36:12.9344790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9344850Z     
2025-02-24T16:36:12.9344910Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9344980Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9345060Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9345170Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9345230Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9345300Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9345390Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9345440Z             else:
2025-02-24T16:36:12.9345510Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9345610Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9345620Z 
2025-02-24T16:36:12.9345720Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9345960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9346090Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9346140Z     ???
2025-02-24T16:36:12.9346240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9346240Z 
2025-02-24T16:36:12.9346300Z >   ???
2025-02-24T16:36:12.9346420Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9346460Z E   
2025-02-24T16:36:12.9346570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9346670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9346740Z E          ...
2025-02-24T16:36:12.9346830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9346930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9347030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9347080Z E          ...
2025-02-24T16:36:12.9347160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9347270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9347350Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9347360Z 
2025-02-24T16:36:12.9347440Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9347620Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T16:36:12.9347620Z 
2025-02-24T16:36:12.9347730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9347860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9347940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9348070Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9348200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9348290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9348340Z err_msg = None
2025-02-24T16:36:12.9348340Z 
2025-02-24T16:36:12.9348430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9348670Z         if err_msg is None:
2025-02-24T16:36:12.9348750Z             if left.shape != right.shape:
2025-02-24T16:36:12.9348830Z                 raise_assert_detail(
2025-02-24T16:36:12.9348980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9349040Z                 )
2025-02-24T16:36:12.9349090Z     
2025-02-24T16:36:12.9349140Z             diff = 0
2025-02-24T16:36:12.9349230Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9349300Z                 # count up differences
2025-02-24T16:36:12.9349440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9349580Z                     diff += 1
2025-02-24T16:36:12.9349630Z     
2025-02-24T16:36:12.9349710Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9349840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9350000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9350110Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9350190Z E           
2025-02-24T16:36:12.9350310Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9350540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9350780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9350800Z 
2025-02-24T16:36:12.9351060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9351070Z 
2025-02-24T16:36:12.9351220Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9351230Z 
2025-02-24T16:36:12.9351430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9eb40>
2025-02-24T16:36:12.9351610Z plasma = <tardis.plasma.base.BasePlasma object at 0x301c19af0>, attr = 'j_blues'
2025-02-24T16:36:12.9351610Z 
2025-02-24T16:36:12.9351730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9351820Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9351890Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9351950Z         try:
2025-02-24T16:36:12.9352070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9352130Z         except KeyError:
2025-02-24T16:36:12.9352240Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9352300Z     
2025-02-24T16:36:12.9352360Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9352450Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9352530Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9352640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9352710Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9352780Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9352870Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9352930Z             else:
2025-02-24T16:36:12.9353010Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9353130Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9353130Z 
2025-02-24T16:36:12.9353240Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9353350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9353550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9353610Z     ???
2025-02-24T16:36:12.9353700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9353710Z 
2025-02-24T16:36:12.9353750Z >   ???
2025-02-24T16:36:12.9353860Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9353900Z E   
2025-02-24T16:36:12.9354010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9354100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9354170Z E          ...
2025-02-24T16:36:12.9354240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9354420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9354520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9354560Z E          ...
2025-02-24T16:36:12.9354630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9354740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9354820Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9354820Z 
2025-02-24T16:36:12.9354900Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9355070Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T16:36:12.9355070Z 
2025-02-24T16:36:12.9355180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9355290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9355370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9355500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9355610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9355710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9355760Z err_msg = None
2025-02-24T16:36:12.9355770Z 
2025-02-24T16:36:12.9355860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9355930Z         if err_msg is None:
2025-02-24T16:36:12.9356010Z             if left.shape != right.shape:
2025-02-24T16:36:12.9356070Z                 raise_assert_detail(
2025-02-24T16:36:12.9356190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9356240Z                 )
2025-02-24T16:36:12.9356300Z     
2025-02-24T16:36:12.9356350Z             diff = 0
2025-02-24T16:36:12.9356450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9356520Z                 # count up differences
2025-02-24T16:36:12.9356680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9356750Z                     diff += 1
2025-02-24T16:36:12.9356810Z     
2025-02-24T16:36:12.9356880Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9357010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9357170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9357280Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9357360Z E           
2025-02-24T16:36:12.9357480Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9357740Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9358000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9358300Z 
2025-02-24T16:36:12.9358630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9358640Z 
2025-02-24T16:36:12.9358800Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9358810Z 
2025-02-24T16:36:12.9359020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9f8c0>
2025-02-24T16:36:12.9359210Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>, attr = 'lines'
2025-02-24T16:36:12.9359810Z 
2025-02-24T16:36:12.9359970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9360060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9360130Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9360190Z         try:
2025-02-24T16:36:12.9360310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9360400Z         except KeyError:
2025-02-24T16:36:12.9360520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9360580Z     
2025-02-24T16:36:12.9360650Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9360720Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9360800Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9360920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9361010Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9361100Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9361210Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9361270Z             else:
2025-02-24T16:36:12.9361350Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9361450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9361460Z 
2025-02-24T16:36:12.9361560Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9361670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9361820Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9361890Z     ???
2025-02-24T16:36:12.9362010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9362020Z 
2025-02-24T16:36:12.9362070Z >   ???
2025-02-24T16:36:12.9362190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9362250Z E   
2025-02-24T16:36:12.9362380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9362480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9362540Z E          ...
2025-02-24T16:36:12.9362630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9362750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9362850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9362900Z E          ...
2025-02-24T16:36:12.9362980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9363090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9363190Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9363200Z 
2025-02-24T16:36:12.9363280Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9363500Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T16:36:12.9363500Z 
2025-02-24T16:36:12.9363700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9f980>
2025-02-24T16:36:12.9363880Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>
2025-02-24T16:36:12.9363990Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9364000Z 
2025-02-24T16:36:12.9364140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9364410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9364500Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9364570Z         try:
2025-02-24T16:36:12.9364720Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9364790Z         except KeyError:
2025-02-24T16:36:12.9364900Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9364970Z     
2025-02-24T16:36:12.9365060Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9365140Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9365210Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9365340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9365540Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9365630Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9365750Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9365750Z 
2025-02-24T16:36:12.9365870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9365990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9366000Z 
2025-02-24T16:36:12.9366130Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9366200Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9366320Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9366390Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9366520Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9366580Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9366680Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9366770Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9366830Z err_msg = None
2025-02-24T16:36:12.9366830Z 
2025-02-24T16:36:12.9366920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9366980Z         if err_msg is None:
2025-02-24T16:36:12.9367070Z             if left.shape != right.shape:
2025-02-24T16:36:12.9367130Z                 raise_assert_detail(
2025-02-24T16:36:12.9367260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9367330Z                 )
2025-02-24T16:36:12.9367390Z     
2025-02-24T16:36:12.9367460Z             diff = 0
2025-02-24T16:36:12.9367560Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9367640Z                 # count up differences
2025-02-24T16:36:12.9367790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9367850Z                     diff += 1
2025-02-24T16:36:12.9368450Z     
2025-02-24T16:36:12.9368970Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9369310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9369760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9370030Z E           AssertionError: Series are different
2025-02-24T16:36:12.9370230Z E           
2025-02-24T16:36:12.9370470Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9371360Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9372170Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9373680Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9373690Z 
2025-02-24T16:36:12.9374600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9375600Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T16:36:12.9375620Z 
2025-02-24T16:36:12.9376110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9fa40>
2025-02-24T16:36:12.9376500Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>
2025-02-24T16:36:12.9376720Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9376730Z 
2025-02-24T16:36:12.9382430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9382780Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9382970Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9383160Z         try:
2025-02-24T16:36:12.9383500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9383720Z         except KeyError:
2025-02-24T16:36:12.9384070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9384290Z     
2025-02-24T16:36:12.9384530Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9384810Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9385060Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9385400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9385620Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9385840Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9386330Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9386360Z 
2025-02-24T16:36:12.9386700Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9387000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9387020Z 
2025-02-24T16:36:12.9387400Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9387660Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9387960Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9388200Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9388560Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9388790Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9389100Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9389340Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9389550Z err_msg = None
2025-02-24T16:36:12.9389580Z 
2025-02-24T16:36:12.9389870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9390110Z         if err_msg is None:
2025-02-24T16:36:12.9390350Z             if left.shape != right.shape:
2025-02-24T16:36:12.9390590Z                 raise_assert_detail(
2025-02-24T16:36:12.9390970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9391180Z                 )
2025-02-24T16:36:12.9391370Z     
2025-02-24T16:36:12.9391540Z             diff = 0
2025-02-24T16:36:12.9391850Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9392080Z                 # count up differences
2025-02-24T16:36:12.9392520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9393560Z                     diff += 1
2025-02-24T16:36:12.9393770Z     
2025-02-24T16:36:12.9394000Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9394360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9394830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9395070Z E           AssertionError: Series are different
2025-02-24T16:36:12.9395230Z E           
2025-02-24T16:36:12.9395480Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9397170Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9419540Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9420940Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9420990Z 
2025-02-24T16:36:12.9421320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9421530Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T16:36:12.9421530Z 
2025-02-24T16:36:12.9421680Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9421820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9421940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9422090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9422240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9422350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9422420Z err_msg = None
2025-02-24T16:36:12.9422420Z 
2025-02-24T16:36:12.9422540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9422630Z         if err_msg is None:
2025-02-24T16:36:12.9422740Z             if left.shape != right.shape:
2025-02-24T16:36:12.9422800Z                 raise_assert_detail(
2025-02-24T16:36:12.9422950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9423010Z                 )
2025-02-24T16:36:12.9423050Z     
2025-02-24T16:36:12.9423110Z             diff = 0
2025-02-24T16:36:12.9423200Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9423280Z                 # count up differences
2025-02-24T16:36:12.9423430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9423500Z                     diff += 1
2025-02-24T16:36:12.9423560Z     
2025-02-24T16:36:12.9423650Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9423780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9423940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9424680Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9424740Z E           
2025-02-24T16:36:12.9424840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9425070Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9425300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9425510Z 
2025-02-24T16:36:12.9425770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9425780Z 
2025-02-24T16:36:12.9425930Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9425930Z 
2025-02-24T16:36:12.9426110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9fc80>
2025-02-24T16:36:12.9426280Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>, attr = 'nu'
2025-02-24T16:36:12.9426290Z 
2025-02-24T16:36:12.9426400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9426510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9426590Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9426640Z         try:
2025-02-24T16:36:12.9426760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9426810Z         except KeyError:
2025-02-24T16:36:12.9426950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9427020Z     
2025-02-24T16:36:12.9427080Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9427180Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9427250Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9427380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9427450Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9427530Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9427620Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9427630Z 
2025-02-24T16:36:12.9427730Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9427840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9427960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9428030Z     ???
2025-02-24T16:36:12.9428130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9428140Z 
2025-02-24T16:36:12.9428190Z >   ???
2025-02-24T16:36:12.9428300Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9428350Z E   
2025-02-24T16:36:12.9428470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9428560Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9428610Z E          ...
2025-02-24T16:36:12.9428690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9428790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9428910Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9428970Z E          ...
2025-02-24T16:36:12.9429040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9429160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9429270Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9429280Z 
2025-02-24T16:36:12.9429360Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9429670Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T16:36:12.9429690Z 
2025-02-24T16:36:12.9429810Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9429940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9430030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9430170Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9430300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9430490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9430540Z err_msg = None
2025-02-24T16:36:12.9430550Z 
2025-02-24T16:36:12.9430640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9430700Z         if err_msg is None:
2025-02-24T16:36:12.9430780Z             if left.shape != right.shape:
2025-02-24T16:36:12.9430860Z                 raise_assert_detail(
2025-02-24T16:36:12.9430980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9431040Z                 )
2025-02-24T16:36:12.9431080Z     
2025-02-24T16:36:12.9431140Z             diff = 0
2025-02-24T16:36:12.9518670Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9519060Z                 # count up differences
2025-02-24T16:36:12.9519230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9519280Z                     diff += 1
2025-02-24T16:36:12.9519360Z     
2025-02-24T16:36:12.9519450Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9519590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9519770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9519900Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9519960Z E           
2025-02-24T16:36:12.9520080Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9520330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9520570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9520590Z 
2025-02-24T16:36:12.9520870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9520890Z 
2025-02-24T16:36:12.9521060Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9521070Z 
2025-02-24T16:36:12.9521270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9fd40>
2025-02-24T16:36:12.9521440Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>
2025-02-24T16:36:12.9521520Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9521540Z 
2025-02-24T16:36:12.9521680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9521810Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9521890Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9521950Z         try:
2025-02-24T16:36:12.9522080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9522140Z         except KeyError:
2025-02-24T16:36:12.9522260Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9522780Z     
2025-02-24T16:36:12.9522850Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9522930Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9523010Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9523130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9523190Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9523270Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9523360Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9523370Z 
2025-02-24T16:36:12.9523480Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9523590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9523920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9523970Z     ???
2025-02-24T16:36:12.9524070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9524070Z 
2025-02-24T16:36:12.9524120Z >   ???
2025-02-24T16:36:12.9524230Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9524270Z E   
2025-02-24T16:36:12.9524380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9524480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9524550Z E          ...
2025-02-24T16:36:12.9524620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9524740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9524840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9524890Z E          ...
2025-02-24T16:36:12.9524980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9525090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9525190Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9525200Z 
2025-02-24T16:36:12.9525270Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9525450Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T16:36:12.9525450Z 
2025-02-24T16:36:12.9525590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9525710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9525790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9525910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9526030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9526120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9526170Z err_msg = None
2025-02-24T16:36:12.9526170Z 
2025-02-24T16:36:12.9526260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9526320Z         if err_msg is None:
2025-02-24T16:36:12.9526410Z             if left.shape != right.shape:
2025-02-24T16:36:12.9526470Z                 raise_assert_detail(
2025-02-24T16:36:12.9526600Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9526650Z                 )
2025-02-24T16:36:12.9526690Z     
2025-02-24T16:36:12.9526740Z             diff = 0
2025-02-24T16:36:12.9526830Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9526900Z                 # count up differences
2025-02-24T16:36:12.9527050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9527100Z                     diff += 1
2025-02-24T16:36:12.9527150Z     
2025-02-24T16:36:12.9527220Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9527340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9527470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9527660Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9527720Z E           
2025-02-24T16:36:12.9527800Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9528030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9528500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9528600Z 
2025-02-24T16:36:12.9528870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9528870Z 
2025-02-24T16:36:12.9529010Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9529010Z 
2025-02-24T16:36:12.9529190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11da9fe00>
2025-02-24T16:36:12.9529360Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>, attr = 'f_lu'
2025-02-24T16:36:12.9529360Z 
2025-02-24T16:36:12.9529470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9529560Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9529630Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9529680Z         try:
2025-02-24T16:36:12.9529790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9529850Z         except KeyError:
2025-02-24T16:36:12.9529970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9530020Z     
2025-02-24T16:36:12.9530080Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9530150Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9530220Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9530330Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9530400Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9530460Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9530550Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9530560Z 
2025-02-24T16:36:12.9530660Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9530750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9530880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9530930Z     ???
2025-02-24T16:36:12.9531020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9531030Z 
2025-02-24T16:36:12.9531070Z >   ???
2025-02-24T16:36:12.9531180Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9531230Z E   
2025-02-24T16:36:12.9531330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9531420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9531470Z E          ...
2025-02-24T16:36:12.9531540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9531650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9531740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9531790Z E          ...
2025-02-24T16:36:12.9531870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9531980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9532070Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9532080Z 
2025-02-24T16:36:12.9532160Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9532890Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T16:36:12.9532920Z 
2025-02-24T16:36:12.9533060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9533180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9533280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9533410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9533530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9533810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9533870Z err_msg = None
2025-02-24T16:36:12.9533870Z 
2025-02-24T16:36:12.9533970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9534030Z         if err_msg is None:
2025-02-24T16:36:12.9534130Z             if left.shape != right.shape:
2025-02-24T16:36:12.9534220Z                 raise_assert_detail(
2025-02-24T16:36:12.9534360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9534430Z                 )
2025-02-24T16:36:12.9534470Z     
2025-02-24T16:36:12.9534530Z             diff = 0
2025-02-24T16:36:12.9534650Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9534730Z                 # count up differences
2025-02-24T16:36:12.9534910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9534990Z                     diff += 1
2025-02-24T16:36:12.9535060Z     
2025-02-24T16:36:12.9535160Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9535280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9535440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9535570Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9535650Z E           
2025-02-24T16:36:12.9535760Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9536000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9536240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9536260Z 
2025-02-24T16:36:12.9536540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9536550Z 
2025-02-24T16:36:12.9536700Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9536700Z 
2025-02-24T16:36:12.9536880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac05c0>
2025-02-24T16:36:12.9537010Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>
2025-02-24T16:36:12.9537060Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9537070Z 
2025-02-24T16:36:12.9537180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9537270Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9537340Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9537390Z         try:
2025-02-24T16:36:12.9537530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9537590Z         except KeyError:
2025-02-24T16:36:12.9537700Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9537840Z     
2025-02-24T16:36:12.9537900Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9537990Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9538080Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9538200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9538260Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9538330Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9538430Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9538500Z             else:
2025-02-24T16:36:12.9538580Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9538740Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9538750Z 
2025-02-24T16:36:12.9538850Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9538960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9539080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9539130Z     ???
2025-02-24T16:36:12.9539220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9539230Z 
2025-02-24T16:36:12.9539270Z >   ???
2025-02-24T16:36:12.9539380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9539420Z E   
2025-02-24T16:36:12.9539530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9539620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9539680Z E          ...
2025-02-24T16:36:12.9539750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9539880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9539970Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9540020Z E          ...
2025-02-24T16:36:12.9540090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9540200Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9540290Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9540290Z 
2025-02-24T16:36:12.9540350Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9540540Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T16:36:12.9540540Z 
2025-02-24T16:36:12.9540650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9540760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9540840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9540960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9541060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9541140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9541200Z err_msg = None
2025-02-24T16:36:12.9541200Z 
2025-02-24T16:36:12.9541290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9541350Z         if err_msg is None:
2025-02-24T16:36:12.9541420Z             if left.shape != right.shape:
2025-02-24T16:36:12.9541490Z                 raise_assert_detail(
2025-02-24T16:36:12.9541610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9541650Z                 )
2025-02-24T16:36:12.9541700Z     
2025-02-24T16:36:12.9541750Z             diff = 0
2025-02-24T16:36:12.9541830Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9541900Z                 # count up differences
2025-02-24T16:36:12.9542050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9542100Z                     diff += 1
2025-02-24T16:36:12.9542150Z     
2025-02-24T16:36:12.9542220Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9542400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9542540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9542630Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9542680Z E           
2025-02-24T16:36:12.9542770Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9542990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9543260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9543270Z 
2025-02-24T16:36:12.9543510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9543520Z 
2025-02-24T16:36:12.9543650Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9543660Z 
2025-02-24T16:36:12.9543850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac0680>
2025-02-24T16:36:12.9543980Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>
2025-02-24T16:36:12.9544040Z attr = 'beta_sobolev'
2025-02-24T16:36:12.9544050Z 
2025-02-24T16:36:12.9544160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9544250Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9544310Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9544360Z         try:
2025-02-24T16:36:12.9544480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9544530Z         except KeyError:
2025-02-24T16:36:12.9544670Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9544720Z     
2025-02-24T16:36:12.9544780Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9544850Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9544920Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9545040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9545100Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9545180Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9545270Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9545320Z             else:
2025-02-24T16:36:12.9545390Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9545470Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9545480Z 
2025-02-24T16:36:12.9545580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9545670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9545790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9545830Z     ???
2025-02-24T16:36:12.9545930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9545930Z 
2025-02-24T16:36:12.9545970Z >   ???
2025-02-24T16:36:12.9546170Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9546270Z E   
2025-02-24T16:36:12.9546400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9546540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9546590Z E          ...
2025-02-24T16:36:12.9546670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9546790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9547030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9547090Z E          ...
2025-02-24T16:36:12.9547160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9547260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9547350Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9547350Z 
2025-02-24T16:36:12.9547420Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9547600Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T16:36:12.9547610Z 
2025-02-24T16:36:12.9547720Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9547890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9547970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9548090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9548210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9548280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9548340Z err_msg = None
2025-02-24T16:36:12.9548340Z 
2025-02-24T16:36:12.9548430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9548490Z         if err_msg is None:
2025-02-24T16:36:12.9548570Z             if left.shape != right.shape:
2025-02-24T16:36:12.9548650Z                 raise_assert_detail(
2025-02-24T16:36:12.9548770Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9548830Z                 )
2025-02-24T16:36:12.9548880Z     
2025-02-24T16:36:12.9548930Z             diff = 0
2025-02-24T16:36:12.9549030Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9549100Z                 # count up differences
2025-02-24T16:36:12.9549270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9549340Z                     diff += 1
2025-02-24T16:36:12.9549390Z     
2025-02-24T16:36:12.9549460Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9549570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9549710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9549810Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9549850Z E           
2025-02-24T16:36:12.9549950Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9550170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9550400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9550400Z 
2025-02-24T16:36:12.9550660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9550660Z 
2025-02-24T16:36:12.9550800Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9550810Z 
2025-02-24T16:36:12.9551080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac0800>
2025-02-24T16:36:12.9551270Z plasma = <tardis.plasma.base.BasePlasma object at 0x12e6a2540>, attr = 'j_blues'
2025-02-24T16:36:12.9551270Z 
2025-02-24T16:36:12.9551380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9551610Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9551700Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9551750Z         try:
2025-02-24T16:36:12.9551860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9551910Z         except KeyError:
2025-02-24T16:36:12.9552030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9552070Z     
2025-02-24T16:36:12.9552140Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9552210Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9552280Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9552400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9552580Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9552650Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9552740Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9552790Z             else:
2025-02-24T16:36:12.9552870Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9552960Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9552970Z 
2025-02-24T16:36:12.9553100Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9553210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9553340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9553380Z     ???
2025-02-24T16:36:12.9553490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9553490Z 
2025-02-24T16:36:12.9553560Z >   ???
2025-02-24T16:36:12.9553670Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9553720Z E   
2025-02-24T16:36:12.9553820Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9553920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9553980Z E          ...
2025-02-24T16:36:12.9554060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9554170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9554270Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9554320Z E          ...
2025-02-24T16:36:12.9554390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9554490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9554570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9554570Z 
2025-02-24T16:36:12.9554640Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9554830Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T16:36:12.9554840Z 
2025-02-24T16:36:12.9554960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9555130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9555230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9555340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9555450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9555530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9555580Z err_msg = None
2025-02-24T16:36:12.9555580Z 
2025-02-24T16:36:12.9555680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9555740Z         if err_msg is None:
2025-02-24T16:36:12.9555810Z             if left.shape != right.shape:
2025-02-24T16:36:12.9555870Z                 raise_assert_detail(
2025-02-24T16:36:12.9556000Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9556060Z                 )
2025-02-24T16:36:12.9556110Z     
2025-02-24T16:36:12.9556260Z             diff = 0
2025-02-24T16:36:12.9556360Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9556420Z                 # count up differences
2025-02-24T16:36:12.9556580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9556650Z                     diff += 1
2025-02-24T16:36:12.9556700Z     
2025-02-24T16:36:12.9556780Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9556920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9557100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9557220Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9557390Z E           
2025-02-24T16:36:12.9557500Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9557710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9557950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9557960Z 
2025-02-24T16:36:12.9558220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9558230Z 
2025-02-24T16:36:12.9558390Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9558400Z 
2025-02-24T16:36:12.9558700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac1580>
2025-02-24T16:36:12.9558870Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>, attr = 'lines'
2025-02-24T16:36:12.9558870Z 
2025-02-24T16:36:12.9559350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9559470Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9559540Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9559590Z         try:
2025-02-24T16:36:12.9559710Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9559760Z         except KeyError:
2025-02-24T16:36:12.9559900Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9559950Z     
2025-02-24T16:36:12.9560040Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9560130Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9560190Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9560310Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9560370Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9560450Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9560560Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9560610Z             else:
2025-02-24T16:36:12.9560690Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9560860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9560880Z 
2025-02-24T16:36:12.9561010Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9561100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9561240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9561300Z     ???
2025-02-24T16:36:12.9561400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9561400Z 
2025-02-24T16:36:12.9561450Z >   ???
2025-02-24T16:36:12.9561550Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9561790Z E   
2025-02-24T16:36:12.9561900Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9561990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9562040Z E          ...
2025-02-24T16:36:12.9572110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9572300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9572410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9572470Z E          ...
2025-02-24T16:36:12.9572550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9572650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9573080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9573100Z 
2025-02-24T16:36:12.9573190Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9573410Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T16:36:12.9573420Z 
2025-02-24T16:36:12.9573600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac1640>
2025-02-24T16:36:12.9573730Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>
2025-02-24T16:36:12.9573800Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9573810Z 
2025-02-24T16:36:12.9573930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9574030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9574090Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9574140Z         try:
2025-02-24T16:36:12.9574280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9574360Z         except KeyError:
2025-02-24T16:36:12.9574480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9574530Z     
2025-02-24T16:36:12.9574610Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9574700Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9574790Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9574900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9574960Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9575030Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9575140Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9575150Z 
2025-02-24T16:36:12.9575250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9575350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9575350Z 
2025-02-24T16:36:12.9575480Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9575570Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9575690Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9575770Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9575910Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9575990Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9576100Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9576170Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9576250Z err_msg = None
2025-02-24T16:36:12.9576260Z 
2025-02-24T16:36:12.9576350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9576420Z         if err_msg is None:
2025-02-24T16:36:12.9576490Z             if left.shape != right.shape:
2025-02-24T16:36:12.9576560Z                 raise_assert_detail(
2025-02-24T16:36:12.9576770Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9576860Z                 )
2025-02-24T16:36:12.9576920Z     
2025-02-24T16:36:12.9576980Z             diff = 0
2025-02-24T16:36:12.9577070Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9577150Z                 # count up differences
2025-02-24T16:36:12.9577440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9577510Z                     diff += 1
2025-02-24T16:36:12.9577560Z     
2025-02-24T16:36:12.9577640Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9577760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9577910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9578000Z E           AssertionError: Series are different
2025-02-24T16:36:12.9578050Z E           
2025-02-24T16:36:12.9578150Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9578550Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9578840Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9579130Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9579150Z 
2025-02-24T16:36:12.9579400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9579620Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T16:36:12.9579630Z 
2025-02-24T16:36:12.9579820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac1700>
2025-02-24T16:36:12.9579990Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>
2025-02-24T16:36:12.9580080Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9580080Z 
2025-02-24T16:36:12.9580210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9580330Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9580410Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9580480Z         try:
2025-02-24T16:36:12.9580620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9580680Z         except KeyError:
2025-02-24T16:36:12.9580800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9580850Z     
2025-02-24T16:36:12.9580920Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9580990Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9581060Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9581170Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9581240Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9581300Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9581390Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9581390Z 
2025-02-24T16:36:12.9581490Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9581590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9581600Z 
2025-02-24T16:36:12.9581710Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9581770Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9582070Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9582140Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9582280Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9582350Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9582440Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9582510Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9582580Z err_msg = None
2025-02-24T16:36:12.9582580Z 
2025-02-24T16:36:12.9582670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9583080Z         if err_msg is None:
2025-02-24T16:36:12.9583170Z             if left.shape != right.shape:
2025-02-24T16:36:12.9583240Z                 raise_assert_detail(
2025-02-24T16:36:12.9583380Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9583430Z                 )
2025-02-24T16:36:12.9583490Z     
2025-02-24T16:36:12.9583530Z             diff = 0
2025-02-24T16:36:12.9583630Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9583710Z                 # count up differences
2025-02-24T16:36:12.9583860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9583920Z                     diff += 1
2025-02-24T16:36:12.9583970Z     
2025-02-24T16:36:12.9584050Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9584160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9584310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9584410Z E           AssertionError: Series are different
2025-02-24T16:36:12.9584450Z E           
2025-02-24T16:36:12.9584540Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9584880Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9585240Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9585600Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9585620Z 
2025-02-24T16:36:12.9585890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9586060Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T16:36:12.9586070Z 
2025-02-24T16:36:12.9586180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9586280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9586370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9586490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9586680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9586760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9586820Z err_msg = None
2025-02-24T16:36:12.9587080Z 
2025-02-24T16:36:12.9587230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9587310Z         if err_msg is None:
2025-02-24T16:36:12.9587390Z             if left.shape != right.shape:
2025-02-24T16:36:12.9587470Z                 raise_assert_detail(
2025-02-24T16:36:12.9587600Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9587640Z                 )
2025-02-24T16:36:12.9587810Z     
2025-02-24T16:36:12.9587880Z             diff = 0
2025-02-24T16:36:12.9588000Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9588070Z                 # count up differences
2025-02-24T16:36:12.9588230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9588310Z                     diff += 1
2025-02-24T16:36:12.9588370Z     
2025-02-24T16:36:12.9588440Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9588550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9588700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9588800Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9588870Z E           
2025-02-24T16:36:12.9588970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9589230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9589490Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9589500Z 
2025-02-24T16:36:12.9589780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9589790Z 
2025-02-24T16:36:12.9589930Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9589940Z 
2025-02-24T16:36:12.9590140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac1940>
2025-02-24T16:36:12.9590300Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>, attr = 'nu'
2025-02-24T16:36:12.9590300Z 
2025-02-24T16:36:12.9590440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9590550Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9590650Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9590710Z         try:
2025-02-24T16:36:12.9590840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9590920Z         except KeyError:
2025-02-24T16:36:12.9591060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9591130Z     
2025-02-24T16:36:12.9591210Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9591310Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9591390Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9591500Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9591570Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9591640Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9591740Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9591750Z 
2025-02-24T16:36:12.9591850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9592080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9592210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9592250Z     ???
2025-02-24T16:36:12.9592350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9592350Z 
2025-02-24T16:36:12.9592400Z >   ???
2025-02-24T16:36:12.9592500Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9592560Z E   
2025-02-24T16:36:12.9592670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9592770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9592890Z E          ...
2025-02-24T16:36:12.9592980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9593090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9593200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9593260Z E          ...
2025-02-24T16:36:12.9593330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9593430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9593520Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9593530Z 
2025-02-24T16:36:12.9593600Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9593790Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T16:36:12.9593790Z 
2025-02-24T16:36:12.9593910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9594030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9594120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9594250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9594380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9594470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9594520Z err_msg = None
2025-02-24T16:36:12.9594520Z 
2025-02-24T16:36:12.9594610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9594670Z         if err_msg is None:
2025-02-24T16:36:12.9594760Z             if left.shape != right.shape:
2025-02-24T16:36:12.9594850Z                 raise_assert_detail(
2025-02-24T16:36:12.9594980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9595040Z                 )
2025-02-24T16:36:12.9595100Z     
2025-02-24T16:36:12.9595150Z             diff = 0
2025-02-24T16:36:12.9595270Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9595330Z                 # count up differences
2025-02-24T16:36:12.9595490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9595560Z                     diff += 1
2025-02-24T16:36:12.9595620Z     
2025-02-24T16:36:12.9595700Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9595810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9595970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9596080Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9596140Z E           
2025-02-24T16:36:12.9596230Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9596470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9596720Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9596810Z 
2025-02-24T16:36:12.9597080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9597090Z 
2025-02-24T16:36:12.9597230Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9597240Z 
2025-02-24T16:36:12.9597410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac1a00>
2025-02-24T16:36:12.9597680Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>
2025-02-24T16:36:12.9597760Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9597770Z 
2025-02-24T16:36:12.9597890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9597980Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9598050Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9598110Z         try:
2025-02-24T16:36:12.9598240Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9598290Z         except KeyError:
2025-02-24T16:36:12.9598400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9598450Z     
2025-02-24T16:36:12.9598510Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9598580Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9598740Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9598860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9598950Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9599030Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9599120Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9599120Z 
2025-02-24T16:36:12.9599220Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9599320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9599460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9599510Z     ???
2025-02-24T16:36:12.9599610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9599610Z 
2025-02-24T16:36:12.9599660Z >   ???
2025-02-24T16:36:12.9599770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9599830Z E   
2025-02-24T16:36:12.9599950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9600060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9600120Z E          ...
2025-02-24T16:36:12.9600200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9600310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9600420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9600480Z E          ...
2025-02-24T16:36:12.9600540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9600650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9600720Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9600730Z 
2025-02-24T16:36:12.9600800Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9600980Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T16:36:12.9600990Z 
2025-02-24T16:36:12.9601120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9601240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9601330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9601470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9601820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9601920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9601980Z err_msg = None
2025-02-24T16:36:12.9601990Z 
2025-02-24T16:36:12.9602080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9602140Z         if err_msg is None:
2025-02-24T16:36:12.9602210Z             if left.shape != right.shape:
2025-02-24T16:36:12.9602270Z                 raise_assert_detail(
2025-02-24T16:36:12.9602400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9602460Z                 )
2025-02-24T16:36:12.9602660Z     
2025-02-24T16:36:12.9602710Z             diff = 0
2025-02-24T16:36:12.9602800Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9602870Z                 # count up differences
2025-02-24T16:36:12.9603010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9603100Z                     diff += 1
2025-02-24T16:36:12.9603160Z     
2025-02-24T16:36:12.9603240Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9603360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9603510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9603590Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9603640Z E           
2025-02-24T16:36:12.9603730Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9603940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9604170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9604180Z 
2025-02-24T16:36:12.9604440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9604450Z 
2025-02-24T16:36:12.9604590Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9604600Z 
2025-02-24T16:36:12.9604780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac1ac0>
2025-02-24T16:36:12.9604950Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>, attr = 'f_lu'
2025-02-24T16:36:12.9604960Z 
2025-02-24T16:36:12.9605080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9605180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9605230Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9605290Z         try:
2025-02-24T16:36:12.9605400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9605460Z         except KeyError:
2025-02-24T16:36:12.9605590Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9605640Z     
2025-02-24T16:36:12.9605710Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9605800Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9605870Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9606000Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9606080Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9606140Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9606230Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9606230Z 
2025-02-24T16:36:12.9606430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9606530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9606650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9606700Z     ???
2025-02-24T16:36:12.9606810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9606810Z 
2025-02-24T16:36:12.9606860Z >   ???
2025-02-24T16:36:12.9606960Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9607010Z E   
2025-02-24T16:36:12.9607140Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9607250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9607390Z E          ...
2025-02-24T16:36:12.9607470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9607600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9607710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9607780Z E          ...
2025-02-24T16:36:12.9607860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9607990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9608090Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9608100Z 
2025-02-24T16:36:12.9608170Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9608360Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T16:36:12.9608360Z 
2025-02-24T16:36:12.9608490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9608600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9608680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9608820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9608950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9609040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9609090Z err_msg = None
2025-02-24T16:36:12.9609090Z 
2025-02-24T16:36:12.9609180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9609230Z         if err_msg is None:
2025-02-24T16:36:12.9609310Z             if left.shape != right.shape:
2025-02-24T16:36:12.9609390Z                 raise_assert_detail(
2025-02-24T16:36:12.9609530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9609590Z                 )
2025-02-24T16:36:12.9609650Z     
2025-02-24T16:36:12.9609710Z             diff = 0
2025-02-24T16:36:12.9609810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9609910Z                 # count up differences
2025-02-24T16:36:12.9610060Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9610120Z                     diff += 1
2025-02-24T16:36:12.9610170Z     
2025-02-24T16:36:12.9610260Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9610380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9610520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9610620Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9610660Z E           
2025-02-24T16:36:12.9610770Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9611010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9611360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9611370Z 
2025-02-24T16:36:12.9611640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9611650Z 
2025-02-24T16:36:12.9611800Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9611810Z 
2025-02-24T16:36:12.9611990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac2240>
2025-02-24T16:36:12.9612230Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>
2025-02-24T16:36:12.9612300Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9612300Z 
2025-02-24T16:36:12.9612430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9612550Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9612630Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9612680Z         try:
2025-02-24T16:36:12.9612790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9612850Z         except KeyError:
2025-02-24T16:36:12.9612960Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9613020Z     
2025-02-24T16:36:12.9613110Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9613200Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9613290Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9613430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9613510Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9613590Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9613690Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9613740Z             else:
2025-02-24T16:36:12.9613830Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9613920Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9613930Z 
2025-02-24T16:36:12.9614020Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9614120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9614240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9614290Z     ???
2025-02-24T16:36:12.9614390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9614390Z 
2025-02-24T16:36:12.9614430Z >   ???
2025-02-24T16:36:12.9614540Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9614590Z E   
2025-02-24T16:36:12.9614690Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9614780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9614830Z E          ...
2025-02-24T16:36:12.9614920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9615030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9615120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9615170Z E          ...
2025-02-24T16:36:12.9615240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9615350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9615440Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9615440Z 
2025-02-24T16:36:12.9615520Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9615700Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T16:36:12.9615710Z 
2025-02-24T16:36:12.9615820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9615930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9616130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9616260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9616380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9616470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9616530Z err_msg = None
2025-02-24T16:36:12.9616530Z 
2025-02-24T16:36:12.9616620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9616680Z         if err_msg is None:
2025-02-24T16:36:12.9616770Z             if left.shape != right.shape:
2025-02-24T16:36:12.9616910Z                 raise_assert_detail(
2025-02-24T16:36:12.9617030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9617080Z                 )
2025-02-24T16:36:12.9617120Z     
2025-02-24T16:36:12.9617180Z             diff = 0
2025-02-24T16:36:12.9617270Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9617330Z                 # count up differences
2025-02-24T16:36:12.9617490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9617550Z                     diff += 1
2025-02-24T16:36:12.9617600Z     
2025-02-24T16:36:12.9617690Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9617810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9617960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9618070Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9618140Z E           
2025-02-24T16:36:12.9618250Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9618470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9618710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9618730Z 
2025-02-24T16:36:12.9619010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9619020Z 
2025-02-24T16:36:12.9619200Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9619210Z 
2025-02-24T16:36:12.9619410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac2300>
2025-02-24T16:36:12.9619570Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>
2025-02-24T16:36:12.9619640Z attr = 'beta_sobolev'
2025-02-24T16:36:12.9619650Z 
2025-02-24T16:36:12.9619780Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9619880Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9619940Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9619990Z         try:
2025-02-24T16:36:12.9620100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9620160Z         except KeyError:
2025-02-24T16:36:12.9620290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9620350Z     
2025-02-24T16:36:12.9620440Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9620530Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9620620Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9620760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9621190Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9621260Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9621340Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9621390Z             else:
2025-02-24T16:36:12.9621460Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9621560Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9621560Z 
2025-02-24T16:36:12.9621670Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9621780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9621890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9622200Z     ???
2025-02-24T16:36:12.9622300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9622310Z 
2025-02-24T16:36:12.9622350Z >   ???
2025-02-24T16:36:12.9622450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9622500Z E   
2025-02-24T16:36:12.9622610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9622720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9622770Z E          ...
2025-02-24T16:36:12.9622840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9622940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9623040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9623090Z E          ...
2025-02-24T16:36:12.9623160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9623260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9623340Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9623340Z 
2025-02-24T16:36:12.9623410Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9623600Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T16:36:12.9623610Z 
2025-02-24T16:36:12.9623740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9623890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9623990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9624130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9624260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9624360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9624420Z err_msg = None
2025-02-24T16:36:12.9624430Z 
2025-02-24T16:36:12.9624510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9624570Z         if err_msg is None:
2025-02-24T16:36:12.9624640Z             if left.shape != right.shape:
2025-02-24T16:36:12.9624710Z                 raise_assert_detail(
2025-02-24T16:36:12.9624840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9624900Z                 )
2025-02-24T16:36:12.9624950Z     
2025-02-24T16:36:12.9625010Z             diff = 0
2025-02-24T16:36:12.9625120Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9625180Z                 # count up differences
2025-02-24T16:36:12.9625320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9625370Z                     diff += 1
2025-02-24T16:36:12.9625430Z     
2025-02-24T16:36:12.9625660Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9625850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9631620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9631770Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9631840Z E           
2025-02-24T16:36:12.9632310Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9632540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9632760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9632840Z 
2025-02-24T16:36:12.9633100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9633110Z 
2025-02-24T16:36:12.9633250Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9633260Z 
2025-02-24T16:36:12.9633430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac2480>
2025-02-24T16:36:12.9633600Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a9944a0>, attr = 'j_blues'
2025-02-24T16:36:12.9633600Z 
2025-02-24T16:36:12.9633710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9633810Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9633880Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9633930Z         try:
2025-02-24T16:36:12.9634050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9634110Z         except KeyError:
2025-02-24T16:36:12.9634230Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9634270Z     
2025-02-24T16:36:12.9634340Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9634420Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9634490Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9634600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9634670Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9634740Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9634830Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9634870Z             else:
2025-02-24T16:36:12.9634960Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9635040Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9635050Z 
2025-02-24T16:36:12.9635140Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9635240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9635360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9635410Z     ???
2025-02-24T16:36:12.9635510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9635510Z 
2025-02-24T16:36:12.9635560Z >   ???
2025-02-24T16:36:12.9635660Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9635710Z E   
2025-02-24T16:36:12.9635810Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9635900Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9635950Z E          ...
2025-02-24T16:36:12.9636020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9636130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9636220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9636280Z E          ...
2025-02-24T16:36:12.9636350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9637710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9637810Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9637940Z 
2025-02-24T16:36:12.9638010Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9639110Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T16:36:12.9639140Z 
2025-02-24T16:36:12.9639280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9639400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9639480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9639590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9639710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9639960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9640040Z err_msg = None
2025-02-24T16:36:12.9640040Z 
2025-02-24T16:36:12.9640130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9640220Z         if err_msg is None:
2025-02-24T16:36:12.9640320Z             if left.shape != right.shape:
2025-02-24T16:36:12.9640400Z                 raise_assert_detail(
2025-02-24T16:36:12.9640550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9640600Z                 )
2025-02-24T16:36:12.9640660Z     
2025-02-24T16:36:12.9640730Z             diff = 0
2025-02-24T16:36:12.9640810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9640890Z                 # count up differences
2025-02-24T16:36:12.9641040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9641110Z                     diff += 1
2025-02-24T16:36:12.9641160Z     
2025-02-24T16:36:12.9641230Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9641660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9641850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9641970Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9642030Z E           
2025-02-24T16:36:12.9642160Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9642380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9642600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9642610Z 
2025-02-24T16:36:12.9642890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9642900Z 
2025-02-24T16:36:12.9643050Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9643050Z 
2025-02-24T16:36:12.9643240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac3200>
2025-02-24T16:36:12.9643570Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>, attr = 'lines'
2025-02-24T16:36:12.9643580Z 
2025-02-24T16:36:12.9643700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9643820Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9643900Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9643950Z         try:
2025-02-24T16:36:12.9644080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9644160Z         except KeyError:
2025-02-24T16:36:12.9644310Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9644560Z     
2025-02-24T16:36:12.9644640Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9644730Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9644800Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9644940Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9645020Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9645100Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9645190Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9645240Z             else:
2025-02-24T16:36:12.9645330Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9645510Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9645510Z 
2025-02-24T16:36:12.9645630Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9645730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9645870Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9645920Z     ???
2025-02-24T16:36:12.9646030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9646040Z 
2025-02-24T16:36:12.9646090Z >   ???
2025-02-24T16:36:12.9646190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9646240Z E   
2025-02-24T16:36:12.9646340Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9646440Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9646490Z E          ...
2025-02-24T16:36:12.9646580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9647200Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9647330Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9647390Z E          ...
2025-02-24T16:36:12.9647480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9647610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9647730Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9647740Z 
2025-02-24T16:36:12.9647830Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9648130Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T16:36:12.9648140Z 
2025-02-24T16:36:12.9648330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac32c0>
2025-02-24T16:36:12.9648490Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>
2025-02-24T16:36:12.9648590Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9648610Z 
2025-02-24T16:36:12.9648730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9648830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9648890Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9648950Z         try:
2025-02-24T16:36:12.9649080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9649150Z         except KeyError:
2025-02-24T16:36:12.9649270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9649320Z     
2025-02-24T16:36:12.9649390Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9649470Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9649560Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9649670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9649730Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9649950Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9650050Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9650050Z 
2025-02-24T16:36:12.9650160Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9650250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9650400Z 
2025-02-24T16:36:12.9650520Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9650590Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9650700Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9651180Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9651300Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9651370Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9651460Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9651520Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9651710Z err_msg = None
2025-02-24T16:36:12.9651710Z 
2025-02-24T16:36:12.9651800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9651860Z         if err_msg is None:
2025-02-24T16:36:12.9651940Z             if left.shape != right.shape:
2025-02-24T16:36:12.9652000Z                 raise_assert_detail(
2025-02-24T16:36:12.9652130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9652180Z                 )
2025-02-24T16:36:12.9652250Z     
2025-02-24T16:36:12.9652320Z             diff = 0
2025-02-24T16:36:12.9652430Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9652500Z                 # count up differences
2025-02-24T16:36:12.9652650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9652720Z                     diff += 1
2025-02-24T16:36:12.9652770Z     
2025-02-24T16:36:12.9652840Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9652970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9653110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9653190Z E           AssertionError: Series are different
2025-02-24T16:36:12.9653250Z E           
2025-02-24T16:36:12.9653330Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9653650Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9653930Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9654210Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9654220Z 
2025-02-24T16:36:12.9654480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9654740Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T16:36:12.9654750Z 
2025-02-24T16:36:12.9654940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac3380>
2025-02-24T16:36:12.9655070Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>
2025-02-24T16:36:12.9655140Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9655230Z 
2025-02-24T16:36:12.9655350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9655440Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9655510Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9655990Z         try:
2025-02-24T16:36:12.9656130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9656190Z         except KeyError:
2025-02-24T16:36:12.9656310Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9656370Z     
2025-02-24T16:36:12.9656430Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9656500Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9656670Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9656780Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9656840Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9656920Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9657180Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9657180Z 
2025-02-24T16:36:12.9657280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9657440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9657450Z 
2025-02-24T16:36:12.9657560Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9657620Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9657710Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9657770Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9657890Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9657960Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9658050Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9658500Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9658560Z err_msg = None
2025-02-24T16:36:12.9658560Z 
2025-02-24T16:36:12.9658660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9658710Z         if err_msg is None:
2025-02-24T16:36:12.9658800Z             if left.shape != right.shape:
2025-02-24T16:36:12.9658870Z                 raise_assert_detail(
2025-02-24T16:36:12.9658980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9659510Z                 )
2025-02-24T16:36:12.9659600Z     
2025-02-24T16:36:12.9659650Z             diff = 0
2025-02-24T16:36:12.9659740Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9659820Z                 # count up differences
2025-02-24T16:36:12.9659960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9660020Z                     diff += 1
2025-02-24T16:36:12.9660070Z     
2025-02-24T16:36:12.9660130Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9660260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9660390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9660470Z E           AssertionError: Series are different
2025-02-24T16:36:12.9660530Z E           
2025-02-24T16:36:12.9660650Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9660970Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9661620Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9662080Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9662280Z 
2025-02-24T16:36:12.9662540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9663390Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T16:36:12.9663410Z 
2025-02-24T16:36:12.9663530Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9663650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9663740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9663860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9663980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9664090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9664170Z err_msg = None
2025-02-24T16:36:12.9664170Z 
2025-02-24T16:36:12.9664260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9664360Z         if err_msg is None:
2025-02-24T16:36:12.9664450Z             if left.shape != right.shape:
2025-02-24T16:36:12.9664550Z                 raise_assert_detail(
2025-02-24T16:36:12.9665150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9665240Z                 )
2025-02-24T16:36:12.9665290Z     
2025-02-24T16:36:12.9665340Z             diff = 0
2025-02-24T16:36:12.9665450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9665510Z                 # count up differences
2025-02-24T16:36:12.9665660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9665730Z                     diff += 1
2025-02-24T16:36:12.9665780Z     
2025-02-24T16:36:12.9665870Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9666000Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9666140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9666240Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9666290Z E           
2025-02-24T16:36:12.9666400Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9666660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9666920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9666930Z 
2025-02-24T16:36:12.9667200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9667350Z 
2025-02-24T16:36:12.9667500Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9667500Z 
2025-02-24T16:36:12.9667690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac35c0>
2025-02-24T16:36:12.9667870Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>, attr = 'nu'
2025-02-24T16:36:12.9667880Z 
2025-02-24T16:36:12.9667990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9668090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9668150Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9668200Z         try:
2025-02-24T16:36:12.9668340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9668520Z         except KeyError:
2025-02-24T16:36:12.9668660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9668710Z     
2025-02-24T16:36:12.9668780Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9668860Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9668940Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9669070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9669170Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9669240Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9669330Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9669330Z 
2025-02-24T16:36:12.9669430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9669530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9669690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9669750Z     ???
2025-02-24T16:36:12.9669840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9669850Z 
2025-02-24T16:36:12.9669900Z >   ???
2025-02-24T16:36:12.9670000Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9670060Z E   
2025-02-24T16:36:12.9670160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9670250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9670300Z E          ...
2025-02-24T16:36:12.9670370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9670480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9670570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9670620Z E          ...
2025-02-24T16:36:12.9670680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9670790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9670880Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9670880Z 
2025-02-24T16:36:12.9670940Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9671170Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T16:36:12.9671180Z 
2025-02-24T16:36:12.9671280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9671390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9671470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9671580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9671680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9671760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9671810Z err_msg = None
2025-02-24T16:36:12.9671820Z 
2025-02-24T16:36:12.9672030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9672090Z         if err_msg is None:
2025-02-24T16:36:12.9672170Z             if left.shape != right.shape:
2025-02-24T16:36:12.9672420Z                 raise_assert_detail(
2025-02-24T16:36:12.9672540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9672590Z                 )
2025-02-24T16:36:12.9672630Z     
2025-02-24T16:36:12.9672680Z             diff = 0
2025-02-24T16:36:12.9672770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9672840Z                 # count up differences
2025-02-24T16:36:12.9672980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9673040Z                     diff += 1
2025-02-24T16:36:12.9673090Z     
2025-02-24T16:36:12.9673150Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9673620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9673770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9673870Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9673920Z E           
2025-02-24T16:36:12.9674020Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9674260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9674500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9674520Z 
2025-02-24T16:36:12.9674770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9674780Z 
2025-02-24T16:36:12.9674930Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9674940Z 
2025-02-24T16:36:12.9675130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac3680>
2025-02-24T16:36:12.9675280Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>
2025-02-24T16:36:12.9675330Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9675340Z 
2025-02-24T16:36:12.9675450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9675540Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9675600Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9675650Z         try:
2025-02-24T16:36:12.9675770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9675830Z         except KeyError:
2025-02-24T16:36:12.9675940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9675990Z     
2025-02-24T16:36:12.9676060Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9676130Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9676200Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9676310Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9676380Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9676440Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9676530Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9676540Z 
2025-02-24T16:36:12.9676640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9676730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9676850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9676900Z     ???
2025-02-24T16:36:12.9676990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9676990Z 
2025-02-24T16:36:12.9677040Z >   ???
2025-02-24T16:36:12.9677220Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9677270Z E   
2025-02-24T16:36:12.9677370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9677460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9677510Z E          ...
2025-02-24T16:36:12.9677580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9677690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9677770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9677830Z E          ...
2025-02-24T16:36:12.9677900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9678060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9678150Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9678150Z 
2025-02-24T16:36:12.9678210Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9678430Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T16:36:12.9678430Z 
2025-02-24T16:36:12.9678540Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9678650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9678730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9678860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9679140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9679230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9679290Z err_msg = None
2025-02-24T16:36:12.9679290Z 
2025-02-24T16:36:12.9679380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9679440Z         if err_msg is None:
2025-02-24T16:36:12.9679520Z             if left.shape != right.shape:
2025-02-24T16:36:12.9679580Z                 raise_assert_detail(
2025-02-24T16:36:12.9679700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9679750Z                 )
2025-02-24T16:36:12.9679800Z     
2025-02-24T16:36:12.9679850Z             diff = 0
2025-02-24T16:36:12.9679940Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9680010Z                 # count up differences
2025-02-24T16:36:12.9680140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9680210Z                     diff += 1
2025-02-24T16:36:12.9680250Z     
2025-02-24T16:36:12.9680320Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9680440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9680580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9680680Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9680730Z E           
2025-02-24T16:36:12.9680840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9681050Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9681270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9681280Z 
2025-02-24T16:36:12.9681780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9681900Z 
2025-02-24T16:36:12.9682050Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9682060Z 
2025-02-24T16:36:12.9682230Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac3740>
2025-02-24T16:36:12.9682390Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>, attr = 'f_lu'
2025-02-24T16:36:12.9682390Z 
2025-02-24T16:36:12.9682500Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9682600Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9682660Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9682710Z         try:
2025-02-24T16:36:12.9682880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9682950Z         except KeyError:
2025-02-24T16:36:12.9683060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9683110Z     
2025-02-24T16:36:12.9683180Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9683250Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9683320Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9683430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9683500Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9683570Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9683650Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9683660Z 
2025-02-24T16:36:12.9683760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9683850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9683970Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9684570Z     ???
2025-02-24T16:36:12.9684690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9684690Z 
2025-02-24T16:36:12.9684750Z >   ???
2025-02-24T16:36:12.9684870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9684910Z E   
2025-02-24T16:36:12.9685020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9685110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9685160Z E          ...
2025-02-24T16:36:12.9685230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9685340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9685430Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9685630Z E          ...
2025-02-24T16:36:12.9685700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9685810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9685890Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9685890Z 
2025-02-24T16:36:12.9685950Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9686210Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T16:36:12.9686220Z 
2025-02-24T16:36:12.9686400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac3d40>
2025-02-24T16:36:12.9686520Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>
2025-02-24T16:36:12.9686590Z attr = 'stimulated_emission_factor'
2025-02-24T16:36:12.9686600Z 
2025-02-24T16:36:12.9686700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9686800Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9686860Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9686910Z         try:
2025-02-24T16:36:12.9687030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9687080Z         except KeyError:
2025-02-24T16:36:12.9687200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9687240Z     
2025-02-24T16:36:12.9687410Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9687480Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9687550Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9687660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9687720Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9687800Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9687890Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9687940Z             else:
2025-02-24T16:36:12.9688020Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9688100Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9688140Z 
2025-02-24T16:36:12.9688250Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9688350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9688470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9688520Z     ???
2025-02-24T16:36:12.9688610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9688610Z 
2025-02-24T16:36:12.9688660Z >   ???
2025-02-24T16:36:12.9688810Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:12.9688850Z E   
2025-02-24T16:36:12.9688990Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:36:12.9689290Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9693370Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-02-24T16:36:12.9697510Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:36:12.9698080Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:36:12.9698090Z 
2025-02-24T16:36:12.9698160Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9699520Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T16:36:12.9699540Z 
2025-02-24T16:36:12.9699690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9699810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9700230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9700360Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9700470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9700550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9700600Z err_msg = None
2025-02-24T16:36:12.9700600Z 
2025-02-24T16:36:12.9700690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9700750Z         if err_msg is None:
2025-02-24T16:36:12.9700830Z             if left.shape != right.shape:
2025-02-24T16:36:12.9700900Z                 raise_assert_detail(
2025-02-24T16:36:12.9701030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9701080Z                 )
2025-02-24T16:36:12.9701140Z     
2025-02-24T16:36:12.9701190Z             diff = 0
2025-02-24T16:36:12.9701290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9701370Z                 # count up differences
2025-02-24T16:36:12.9701510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9701570Z                     diff += 1
2025-02-24T16:36:12.9708330Z     
2025-02-24T16:36:12.9708440Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9708570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9708720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9708820Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9708870Z E           
2025-02-24T16:36:12.9708970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9709180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9709580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9709580Z 
2025-02-24T16:36:12.9709850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9709950Z 
2025-02-24T16:36:12.9710490Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9710500Z 
2025-02-24T16:36:12.9710690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac3e00>
2025-02-24T16:36:12.9710820Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>
2025-02-24T16:36:12.9710900Z attr = 'previous_beta_sobolev'
2025-02-24T16:36:12.9710920Z 
2025-02-24T16:36:12.9711030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9711140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9711210Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9711260Z         try:
2025-02-24T16:36:12.9711370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9711440Z         except KeyError:
2025-02-24T16:36:12.9711570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9711630Z     
2025-02-24T16:36:12.9711710Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9711800Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9711870Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9711980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9712050Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9712120Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9712210Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9712270Z             else:
2025-02-24T16:36:12.9712340Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9712430Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9712440Z 
2025-02-24T16:36:12.9712920Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9713040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9713160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9713210Z     ???
2025-02-24T16:36:12.9713310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9713310Z 
2025-02-24T16:36:12.9713360Z >   ???
2025-02-24T16:36:12.9713860Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9713950Z E   
2025-02-24T16:36:12.9714060Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9714150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9714190Z E          ...
2025-02-24T16:36:12.9714270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9714860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9714980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9715050Z E          ...
2025-02-24T16:36:12.9715130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9715230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9715330Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9715340Z 
2025-02-24T16:36:12.9715410Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9715650Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T16:36:12.9715780Z 
2025-02-24T16:36:12.9715890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9716000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9716100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9716230Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9716350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9716430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9716570Z err_msg = None
2025-02-24T16:36:12.9716570Z 
2025-02-24T16:36:12.9716680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9716750Z         if err_msg is None:
2025-02-24T16:36:12.9716830Z             if left.shape != right.shape:
2025-02-24T16:36:12.9716910Z                 raise_assert_detail(
2025-02-24T16:36:12.9717030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9717080Z                 )
2025-02-24T16:36:12.9717130Z     
2025-02-24T16:36:12.9717180Z             diff = 0
2025-02-24T16:36:12.9717280Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9717370Z                 # count up differences
2025-02-24T16:36:12.9717520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9717580Z                     diff += 1
2025-02-24T16:36:12.9717620Z     
2025-02-24T16:36:12.9717690Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9717800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9717960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9718060Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9718110Z E           
2025-02-24T16:36:12.9718200Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9719600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9719870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9719890Z 
2025-02-24T16:36:12.9720160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9720170Z 
2025-02-24T16:36:12.9720320Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9720330Z 
2025-02-24T16:36:12.9720540Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac3ec0>
2025-02-24T16:36:12.9720700Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>
2025-02-24T16:36:12.9720760Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9720770Z 
2025-02-24T16:36:12.9720880Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9720970Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9721040Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9721090Z         try:
2025-02-24T16:36:12.9721200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9721260Z         except KeyError:
2025-02-24T16:36:12.9721380Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9721430Z     
2025-02-24T16:36:12.9721490Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9721690Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9721760Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9722250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9722320Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9722390Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9722480Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9722520Z             else:
2025-02-24T16:36:12.9722600Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9722690Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9722690Z 
2025-02-24T16:36:12.9722860Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9722960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9723070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9723120Z     ???
2025-02-24T16:36:12.9723210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9723220Z 
2025-02-24T16:36:12.9723260Z >   ???
2025-02-24T16:36:12.9723370Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9723420Z E   
2025-02-24T16:36:12.9723520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9723610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9723660Z E          ...
2025-02-24T16:36:12.9723730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9723840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9723930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9724790Z E          ...
2025-02-24T16:36:12.9724910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9725020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9725100Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9725110Z 
2025-02-24T16:36:12.9725170Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9725400Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T16:36:12.9725400Z 
2025-02-24T16:36:12.9725520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9725620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9725700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9725810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9725920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9726000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9726050Z err_msg = None
2025-02-24T16:36:12.9726060Z 
2025-02-24T16:36:12.9726150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9726600Z         if err_msg is None:
2025-02-24T16:36:12.9726690Z             if left.shape != right.shape:
2025-02-24T16:36:12.9726750Z                 raise_assert_detail(
2025-02-24T16:36:12.9726870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9726920Z                 )
2025-02-24T16:36:12.9726960Z     
2025-02-24T16:36:12.9727010Z             diff = 0
2025-02-24T16:36:12.9727100Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9727160Z                 # count up differences
2025-02-24T16:36:12.9727300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9727360Z                     diff += 1
2025-02-24T16:36:12.9727410Z     
2025-02-24T16:36:12.9727480Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9727590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9728390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9728490Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9728540Z E           
2025-02-24T16:36:12.9728630Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9728840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9729150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9729160Z 
2025-02-24T16:36:12.9729410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9729410Z 
2025-02-24T16:36:12.9729550Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9729560Z 
2025-02-24T16:36:12.9729730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11dac3f80>
2025-02-24T16:36:12.9729850Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>
2025-02-24T16:36:12.9729910Z attr = 'beta_sobolev'
2025-02-24T16:36:12.9729910Z 
2025-02-24T16:36:12.9730020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9730120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9730180Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9730230Z         try:
2025-02-24T16:36:12.9730350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9730410Z         except KeyError:
2025-02-24T16:36:12.9730530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9730570Z     
2025-02-24T16:36:12.9730640Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9730710Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9730770Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9730880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9730940Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9731020Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9731100Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9731160Z             else:
2025-02-24T16:36:12.9731230Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9731320Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9731320Z 
2025-02-24T16:36:12.9731830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9731930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9732060Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9732100Z     ???
2025-02-24T16:36:12.9732450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9732450Z 
2025-02-24T16:36:12.9732500Z >   ???
2025-02-24T16:36:12.9732600Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9732650Z E   
2025-02-24T16:36:12.9732750Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9732840Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9732890Z E          ...
2025-02-24T16:36:12.9732970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9733070Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9733160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9733270Z E          ...
2025-02-24T16:36:12.9733340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9733450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9733530Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9733530Z 
2025-02-24T16:36:12.9733600Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9733820Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T16:36:12.9733820Z 
2025-02-24T16:36:12.9733920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9734030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9734160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9734280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9734400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9734470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9734530Z err_msg = None
2025-02-24T16:36:12.9734530Z 
2025-02-24T16:36:12.9734610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9734680Z         if err_msg is None:
2025-02-24T16:36:12.9734750Z             if left.shape != right.shape:
2025-02-24T16:36:12.9735260Z                 raise_assert_detail(
2025-02-24T16:36:12.9735390Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9735440Z                 )
2025-02-24T16:36:12.9735490Z     
2025-02-24T16:36:12.9735540Z             diff = 0
2025-02-24T16:36:12.9735620Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9735690Z                 # count up differences
2025-02-24T16:36:12.9735830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9735890Z                     diff += 1
2025-02-24T16:36:12.9735940Z     
2025-02-24T16:36:12.9736010Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9736120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9736260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9736350Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9736400Z E           
2025-02-24T16:36:12.9736490Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9736700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9736920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9736920Z 
2025-02-24T16:36:12.9737470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9737470Z 
2025-02-24T16:36:12.9737620Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9737620Z 
2025-02-24T16:36:12.9737800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daec140>
2025-02-24T16:36:12.9737970Z plasma = <tardis.plasma.base.BasePlasma object at 0x11f140f20>, attr = 'j_blues'
2025-02-24T16:36:12.9737970Z 
2025-02-24T16:36:12.9738080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9738180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9738330Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9738380Z         try:
2025-02-24T16:36:12.9738490Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9738550Z         except KeyError:
2025-02-24T16:36:12.9738670Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9738720Z     
2025-02-24T16:36:12.9738790Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9738860Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9738930Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9739040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9739150Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9739230Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9739310Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9739370Z             else:
2025-02-24T16:36:12.9739440Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9739530Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9739530Z 
2025-02-24T16:36:12.9739640Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9739730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9739860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9739900Z     ???
2025-02-24T16:36:12.9740000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9740000Z 
2025-02-24T16:36:12.9740050Z >   ???
2025-02-24T16:36:12.9740150Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9740210Z E   
2025-02-24T16:36:12.9740320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9740410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9740450Z E          ...
2025-02-24T16:36:12.9740520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9740640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9741040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9741100Z E          ...
2025-02-24T16:36:12.9741160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9741270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9741350Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9741360Z 
2025-02-24T16:36:12.9741420Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9741630Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T16:36:12.9741630Z 
2025-02-24T16:36:12.9741740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9741850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9742160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9742750Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9742890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9742970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9743030Z err_msg = None
2025-02-24T16:36:12.9743030Z 
2025-02-24T16:36:12.9743120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9743180Z         if err_msg is None:
2025-02-24T16:36:12.9743260Z             if left.shape != right.shape:
2025-02-24T16:36:12.9743320Z                 raise_assert_detail(
2025-02-24T16:36:12.9743450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9743500Z                 )
2025-02-24T16:36:12.9743550Z     
2025-02-24T16:36:12.9743600Z             diff = 0
2025-02-24T16:36:12.9743900Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9743970Z                 # count up differences
2025-02-24T16:36:12.9744410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9744480Z                     diff += 1
2025-02-24T16:36:12.9744530Z     
2025-02-24T16:36:12.9744600Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9744710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9744850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9745370Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9745510Z E           
2025-02-24T16:36:12.9745600Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9745820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9746050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9746050Z 
2025-02-24T16:36:12.9746300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9746300Z 
2025-02-24T16:36:12.9746440Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9746450Z 
2025-02-24T16:36:12.9746620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daecec0>
2025-02-24T16:36:12.9746790Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>, attr = 'lines'
2025-02-24T16:36:12.9746790Z 
2025-02-24T16:36:12.9746900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9747000Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9747060Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9747110Z         try:
2025-02-24T16:36:12.9747230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9747280Z         except KeyError:
2025-02-24T16:36:12.9748300Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9748360Z     
2025-02-24T16:36:12.9748420Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9748490Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9748890Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9749020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9749080Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9749160Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9749250Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9749290Z             else:
2025-02-24T16:36:12.9749360Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9749450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9749460Z 
2025-02-24T16:36:12.9749560Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9749650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9749780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9749820Z     ???
2025-02-24T16:36:12.9749920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9749920Z 
2025-02-24T16:36:12.9749980Z >   ???
2025-02-24T16:36:12.9750080Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9750120Z E   
2025-02-24T16:36:12.9750230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9750500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9750550Z E          ...
2025-02-24T16:36:12.9750630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9750730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9750820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9750870Z E          ...
2025-02-24T16:36:12.9750940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9751040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9751120Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9751300Z 
2025-02-24T16:36:12.9751370Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9751620Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T16:36:12.9751630Z 
2025-02-24T16:36:12.9751800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daecf80>
2025-02-24T16:36:12.9751930Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>
2025-02-24T16:36:12.9752360Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9752490Z 
2025-02-24T16:36:12.9752930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9753200Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9753380Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9753660Z         try:
2025-02-24T16:36:12.9753780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9753840Z         except KeyError:
2025-02-24T16:36:12.9754490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9754550Z     
2025-02-24T16:36:12.9754620Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9754690Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9754770Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9754880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9754940Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9755010Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9755100Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9755100Z 
2025-02-24T16:36:12.9755200Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9755290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9755300Z 
2025-02-24T16:36:12.9755410Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9755480Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9755570Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9755630Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9755740Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9755810Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9755900Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9755960Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9756010Z err_msg = None
2025-02-24T16:36:12.9756020Z 
2025-02-24T16:36:12.9756100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9756160Z         if err_msg is None:
2025-02-24T16:36:12.9756230Z             if left.shape != right.shape:
2025-02-24T16:36:12.9756300Z                 raise_assert_detail(
2025-02-24T16:36:12.9756420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9756470Z                 )
2025-02-24T16:36:12.9756520Z     
2025-02-24T16:36:12.9756560Z             diff = 0
2025-02-24T16:36:12.9756660Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9756720Z                 # count up differences
2025-02-24T16:36:12.9757400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9757460Z                     diff += 1
2025-02-24T16:36:12.9757500Z     
2025-02-24T16:36:12.9757570Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9757680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9757830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9757900Z E           AssertionError: Series are different
2025-02-24T16:36:12.9757950Z E           
2025-02-24T16:36:12.9758030Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9758350Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9758720Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9759000Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9759010Z 
2025-02-24T16:36:12.9759260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9759610Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T16:36:12.9759620Z 
2025-02-24T16:36:12.9759800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daed040>
2025-02-24T16:36:12.9759930Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>
2025-02-24T16:36:12.9760010Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9760010Z 
2025-02-24T16:36:12.9760120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9760210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9760290Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9760330Z         try:
2025-02-24T16:36:12.9760450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9760510Z         except KeyError:
2025-02-24T16:36:12.9760620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9760670Z     
2025-02-24T16:36:12.9760740Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9761430Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9761510Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9761620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9761680Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9761760Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9761840Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9761850Z 
2025-02-24T16:36:12.9761950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9762050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9762050Z 
2025-02-24T16:36:12.9762160Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9762230Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9762420Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9762490Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9762600Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9762670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9762760Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9762830Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9762880Z err_msg = None
2025-02-24T16:36:12.9762880Z 
2025-02-24T16:36:12.9762970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9763080Z         if err_msg is None:
2025-02-24T16:36:12.9763160Z             if left.shape != right.shape:
2025-02-24T16:36:12.9763690Z                 raise_assert_detail(
2025-02-24T16:36:12.9763820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9763880Z                 )
2025-02-24T16:36:12.9763930Z     
2025-02-24T16:36:12.9763980Z             diff = 0
2025-02-24T16:36:12.9764060Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9766370Z                 # count up differences
2025-02-24T16:36:12.9767250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9767440Z                     diff += 1
2025-02-24T16:36:12.9767670Z     
2025-02-24T16:36:12.9767870Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9769650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9770090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9770360Z E           AssertionError: Series are different
2025-02-24T16:36:12.9770510Z E           
2025-02-24T16:36:12.9770750Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9771630Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9772520Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9773530Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9773590Z 
2025-02-24T16:36:12.9773880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9774080Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T16:36:12.9774080Z 
2025-02-24T16:36:12.9774190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9774300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9774390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9774510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9774890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9775290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9775350Z err_msg = None
2025-02-24T16:36:12.9775360Z 
2025-02-24T16:36:12.9775450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9775510Z         if err_msg is None:
2025-02-24T16:36:12.9775580Z             if left.shape != right.shape:
2025-02-24T16:36:12.9775640Z                 raise_assert_detail(
2025-02-24T16:36:12.9775760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9775810Z                 )
2025-02-24T16:36:12.9775960Z     
2025-02-24T16:36:12.9776010Z             diff = 0
2025-02-24T16:36:12.9776110Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9776170Z                 # count up differences
2025-02-24T16:36:12.9776320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9776380Z                     diff += 1
2025-02-24T16:36:12.9776420Z     
2025-02-24T16:36:12.9776490Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9776600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9777020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9777120Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9777170Z E           
2025-02-24T16:36:12.9777260Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9777480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9778360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9778400Z 
2025-02-24T16:36:12.9779440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9779450Z 
2025-02-24T16:36:12.9780050Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9780070Z 
2025-02-24T16:36:12.9780270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daed280>
2025-02-24T16:36:12.9780430Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>, attr = 'nu'
2025-02-24T16:36:12.9780430Z 
2025-02-24T16:36:12.9780560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9780660Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9780720Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9780780Z         try:
2025-02-24T16:36:12.9780900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9780960Z         except KeyError:
2025-02-24T16:36:12.9781070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9781350Z     
2025-02-24T16:36:12.9781440Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9781510Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9786790Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9786930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9787010Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9787080Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9787170Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9787170Z 
2025-02-24T16:36:12.9787670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9787770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9787890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9787940Z     ???
2025-02-24T16:36:12.9788040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9788040Z 
2025-02-24T16:36:12.9788090Z >   ???
2025-02-24T16:36:12.9788190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9788240Z E   
2025-02-24T16:36:12.9788560Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9788680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9789100Z E          ...
2025-02-24T16:36:12.9789180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9789280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9789370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9789430Z E          ...
2025-02-24T16:36:12.9789500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9789600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9789680Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9789690Z 
2025-02-24T16:36:12.9789760Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9789980Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T16:36:12.9789990Z 
2025-02-24T16:36:12.9790090Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9790210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9790290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9790870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9791000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9791090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9791140Z err_msg = None
2025-02-24T16:36:12.9791140Z 
2025-02-24T16:36:12.9791230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9791300Z         if err_msg is None:
2025-02-24T16:36:12.9791370Z             if left.shape != right.shape:
2025-02-24T16:36:12.9791430Z                 raise_assert_detail(
2025-02-24T16:36:12.9791560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9791600Z                 )
2025-02-24T16:36:12.9791660Z     
2025-02-24T16:36:12.9791710Z             diff = 0
2025-02-24T16:36:12.9791790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9791860Z                 # count up differences
2025-02-24T16:36:12.9792010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9792070Z                     diff += 1
2025-02-24T16:36:12.9792110Z     
2025-02-24T16:36:12.9792180Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9792290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9792440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9792530Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9792580Z E           
2025-02-24T16:36:12.9792680Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9792900Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9793240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9793250Z 
2025-02-24T16:36:12.9793510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9793510Z 
2025-02-24T16:36:12.9793650Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9793650Z 
2025-02-24T16:36:12.9793830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daed340>
2025-02-24T16:36:12.9794010Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>
2025-02-24T16:36:12.9794070Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9794080Z 
2025-02-24T16:36:12.9794190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9794280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9794350Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9794400Z         try:
2025-02-24T16:36:12.9794510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9794580Z         except KeyError:
2025-02-24T16:36:12.9794690Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9794730Z     
2025-02-24T16:36:12.9794800Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9794870Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9794930Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9795040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9795110Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9795180Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9795270Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9795280Z 
2025-02-24T16:36:12.9795370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9795470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9795590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9795640Z     ???
2025-02-24T16:36:12.9795740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9795740Z 
2025-02-24T16:36:12.9795790Z >   ???
2025-02-24T16:36:12.9795890Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9795940Z E   
2025-02-24T16:36:12.9796040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9796130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9796180Z E          ...
2025-02-24T16:36:12.9796250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9796360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9796450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9796500Z E          ...
2025-02-24T16:36:12.9796570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9796670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9796750Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9796750Z 
2025-02-24T16:36:12.9796820Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9797030Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T16:36:12.9797040Z 
2025-02-24T16:36:12.9797140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9797260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9797650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9797780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9797990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9798060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9798120Z err_msg = None
2025-02-24T16:36:12.9798120Z 
2025-02-24T16:36:12.9798200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9798270Z         if err_msg is None:
2025-02-24T16:36:12.9798340Z             if left.shape != right.shape:
2025-02-24T16:36:12.9798400Z                 raise_assert_detail(
2025-02-24T16:36:12.9798520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9798610Z                 )
2025-02-24T16:36:12.9798670Z     
2025-02-24T16:36:12.9798720Z             diff = 0
2025-02-24T16:36:12.9798810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9798880Z                 # count up differences
2025-02-24T16:36:12.9799020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9799090Z                     diff += 1
2025-02-24T16:36:12.9799130Z     
2025-02-24T16:36:12.9799200Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9799310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9799450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9799640Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9799700Z E           
2025-02-24T16:36:12.9799790Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9800000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9800230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9800230Z 
2025-02-24T16:36:12.9800480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9800480Z 
2025-02-24T16:36:12.9800620Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9800620Z 
2025-02-24T16:36:12.9800800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daed400>
2025-02-24T16:36:12.9800960Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>, attr = 'f_lu'
2025-02-24T16:36:12.9800960Z 
2025-02-24T16:36:12.9801070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9801170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9801230Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9801290Z         try:
2025-02-24T16:36:12.9801400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9801460Z         except KeyError:
2025-02-24T16:36:12.9801570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9801620Z     
2025-02-24T16:36:12.9801680Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9801750Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9801820Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9801930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9801990Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9802070Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9802670Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9802780Z 
2025-02-24T16:36:12.9802890Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9802990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9803110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9803160Z     ???
2025-02-24T16:36:12.9803250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9803250Z 
2025-02-24T16:36:12.9803310Z >   ???
2025-02-24T16:36:12.9803410Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9803460Z E   
2025-02-24T16:36:12.9803560Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9803700Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9803750Z E          ...
2025-02-24T16:36:12.9803820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9803920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9804010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9804070Z E          ...
2025-02-24T16:36:12.9804130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9804230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9804320Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9804320Z 
2025-02-24T16:36:12.9804390Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9804650Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T16:36:12.9804660Z 
2025-02-24T16:36:12.9804840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daeda00>
2025-02-24T16:36:12.9805320Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>
2025-02-24T16:36:12.9805400Z attr = 'stimulated_emission_factor'
2025-02-24T16:36:12.9805400Z 
2025-02-24T16:36:12.9805520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9805620Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9805680Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9805730Z         try:
2025-02-24T16:36:12.9805840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9805900Z         except KeyError:
2025-02-24T16:36:12.9806020Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9806060Z     
2025-02-24T16:36:12.9806130Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9806210Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9806270Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9806380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9806440Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9806520Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9806610Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9806660Z             else:
2025-02-24T16:36:12.9806730Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9806830Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9806830Z 
2025-02-24T16:36:12.9806930Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9807020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9807150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9807190Z     ???
2025-02-24T16:36:12.9807290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9807290Z 
2025-02-24T16:36:12.9807730Z >   ???
2025-02-24T16:36:12.9807890Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:12.9807940Z E   
2025-02-24T16:36:12.9808070Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:36:12.9808380Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9812640Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T16:36:12.9816800Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:36:12.9817030Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:36:12.9817030Z 
2025-02-24T16:36:12.9817100Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9817330Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T16:36:12.9817340Z 
2025-02-24T16:36:12.9817450Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9817560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9817690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9817810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9817910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9818000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9818050Z err_msg = None
2025-02-24T16:36:12.9818050Z 
2025-02-24T16:36:12.9818140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9818200Z         if err_msg is None:
2025-02-24T16:36:12.9818270Z             if left.shape != right.shape:
2025-02-24T16:36:12.9818330Z                 raise_assert_detail(
2025-02-24T16:36:12.9818450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9818500Z                 )
2025-02-24T16:36:12.9818550Z     
2025-02-24T16:36:12.9818600Z             diff = 0
2025-02-24T16:36:12.9818690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9818760Z                 # count up differences
2025-02-24T16:36:12.9818900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9818970Z                     diff += 1
2025-02-24T16:36:12.9819010Z     
2025-02-24T16:36:12.9819080Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9819210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9819350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9819450Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9819500Z E           
2025-02-24T16:36:12.9819590Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9819810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9820040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9820040Z 
2025-02-24T16:36:12.9820290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9820300Z 
2025-02-24T16:36:12.9820440Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9820440Z 
2025-02-24T16:36:12.9820610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daedac0>
2025-02-24T16:36:12.9820740Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>
2025-02-24T16:36:12.9820810Z attr = 'previous_beta_sobolev'
2025-02-24T16:36:12.9820810Z 
2025-02-24T16:36:12.9820930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9821020Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9821140Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9821190Z         try:
2025-02-24T16:36:12.9821310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9821380Z         except KeyError:
2025-02-24T16:36:12.9821490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9821530Z     
2025-02-24T16:36:12.9821600Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9821670Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9821740Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9821850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9821920Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9822040Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9822130Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9822180Z             else:
2025-02-24T16:36:12.9822250Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9822350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9822350Z 
2025-02-24T16:36:12.9822450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9822550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9822670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9822720Z     ???
2025-02-24T16:36:12.9822820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9822820Z 
2025-02-24T16:36:12.9822870Z >   ???
2025-02-24T16:36:12.9822970Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9823020Z E   
2025-02-24T16:36:12.9823130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9823220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9823260Z E          ...
2025-02-24T16:36:12.9823340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9823440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9823540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9823580Z E          ...
2025-02-24T16:36:12.9823650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9823760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9823840Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9823840Z 
2025-02-24T16:36:12.9824750Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9825060Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T16:36:12.9825070Z 
2025-02-24T16:36:12.9825200Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9825310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9825380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9825500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9825610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9825690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9825750Z err_msg = None
2025-02-24T16:36:12.9825750Z 
2025-02-24T16:36:12.9825840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9825900Z         if err_msg is None:
2025-02-24T16:36:12.9825980Z             if left.shape != right.shape:
2025-02-24T16:36:12.9826040Z                 raise_assert_detail(
2025-02-24T16:36:12.9826160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9826210Z                 )
2025-02-24T16:36:12.9826260Z     
2025-02-24T16:36:12.9826310Z             diff = 0
2025-02-24T16:36:12.9826400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9826740Z                 # count up differences
2025-02-24T16:36:12.9826880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9826940Z                     diff += 1
2025-02-24T16:36:12.9826980Z     
2025-02-24T16:36:12.9827050Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9827160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9827300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9827390Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9827450Z E           
2025-02-24T16:36:12.9827610Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9827830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9828050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9828060Z 
2025-02-24T16:36:12.9828300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9828300Z 
2025-02-24T16:36:12.9828440Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9828440Z 
2025-02-24T16:36:12.9828630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daedb80>
2025-02-24T16:36:12.9828750Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>
2025-02-24T16:36:12.9828820Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9828820Z 
2025-02-24T16:36:12.9828930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9830030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9830120Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9830170Z         try:
2025-02-24T16:36:12.9830290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9830340Z         except KeyError:
2025-02-24T16:36:12.9830460Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9830510Z     
2025-02-24T16:36:12.9830570Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9830650Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9830720Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9830830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9831280Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9831370Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9831470Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9831510Z             else:
2025-02-24T16:36:12.9831590Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9831680Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9831680Z 
2025-02-24T16:36:12.9831790Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9831880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9832000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9832050Z     ???
2025-02-24T16:36:12.9832140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9832150Z 
2025-02-24T16:36:12.9832200Z >   ???
2025-02-24T16:36:12.9832300Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9832350Z E   
2025-02-24T16:36:12.9832460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9833010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9833070Z E          ...
2025-02-24T16:36:12.9833140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9833250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9833340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9833390Z E          ...
2025-02-24T16:36:12.9833460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9833560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9833640Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9833800Z 
2025-02-24T16:36:12.9833870Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9834100Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T16:36:12.9834100Z 
2025-02-24T16:36:12.9834210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9834320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9834400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9834510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9834620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9835070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9835130Z err_msg = None
2025-02-24T16:36:12.9835130Z 
2025-02-24T16:36:12.9835230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9835290Z         if err_msg is None:
2025-02-24T16:36:12.9835360Z             if left.shape != right.shape:
2025-02-24T16:36:12.9835430Z                 raise_assert_detail(
2025-02-24T16:36:12.9835540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9835600Z                 )
2025-02-24T16:36:12.9835640Z     
2025-02-24T16:36:12.9835700Z             diff = 0
2025-02-24T16:36:12.9835790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9835860Z                 # count up differences
2025-02-24T16:36:12.9836000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9836050Z                     diff += 1
2025-02-24T16:36:12.9836110Z     
2025-02-24T16:36:12.9836170Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9836280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9836420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9836520Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9836560Z E           
2025-02-24T16:36:12.9836650Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9836870Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9837450Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9837460Z 
2025-02-24T16:36:12.9837710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9837710Z 
2025-02-24T16:36:12.9837850Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9837920Z 
2025-02-24T16:36:12.9838100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daedc40>
2025-02-24T16:36:12.9838240Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>
2025-02-24T16:36:12.9838300Z attr = 'beta_sobolev'
2025-02-24T16:36:12.9838310Z 
2025-02-24T16:36:12.9838420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9838510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9838580Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9838630Z         try:
2025-02-24T16:36:12.9838740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9838860Z         except KeyError:
2025-02-24T16:36:12.9838970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9839020Z     
2025-02-24T16:36:12.9839080Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9839150Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9839230Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9839340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9839400Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9839470Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9839560Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9839710Z             else:
2025-02-24T16:36:12.9839790Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9839880Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9839880Z 
2025-02-24T16:36:12.9839980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9840080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9840210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9840260Z     ???
2025-02-24T16:36:12.9840350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9840360Z 
2025-02-24T16:36:12.9840400Z >   ???
2025-02-24T16:36:12.9840510Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9840560Z E   
2025-02-24T16:36:12.9840660Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9840750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9840800Z E          ...
2025-02-24T16:36:12.9841190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9841300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9841390Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9841440Z E          ...
2025-02-24T16:36:12.9841510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9841620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9841700Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9841710Z 
2025-02-24T16:36:12.9841780Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9841990Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T16:36:12.9841990Z 
2025-02-24T16:36:12.9842100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9842220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9842290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9842410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9842520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9842600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9842660Z err_msg = None
2025-02-24T16:36:12.9842660Z 
2025-02-24T16:36:12.9842740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9842890Z         if err_msg is None:
2025-02-24T16:36:12.9842960Z             if left.shape != right.shape:
2025-02-24T16:36:12.9843020Z                 raise_assert_detail(
2025-02-24T16:36:12.9843850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9844180Z                 )
2025-02-24T16:36:12.9844470Z     
2025-02-24T16:36:12.9844600Z             diff = 0
2025-02-24T16:36:12.9844710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9844780Z                 # count up differences
2025-02-24T16:36:12.9844930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9845170Z                     diff += 1
2025-02-24T16:36:12.9845210Z     
2025-02-24T16:36:12.9845280Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9845400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9846460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9846620Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9846670Z E           
2025-02-24T16:36:12.9846770Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9846990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9847210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9847220Z 
2025-02-24T16:36:12.9847490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9847490Z 
2025-02-24T16:36:12.9847630Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9847630Z 
2025-02-24T16:36:12.9847810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daeddc0>
2025-02-24T16:36:12.9848310Z plasma = <tardis.plasma.base.BasePlasma object at 0x31b0b4620>, attr = 'j_blues'
2025-02-24T16:36:12.9848320Z 
2025-02-24T16:36:12.9848440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9848530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9848600Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9848650Z         try:
2025-02-24T16:36:12.9848770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9848820Z         except KeyError:
2025-02-24T16:36:12.9848940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9848990Z     
2025-02-24T16:36:12.9849060Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9849130Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9849200Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9849310Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9849700Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9849780Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9849870Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9849920Z             else:
2025-02-24T16:36:12.9849990Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9850080Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9850080Z 
2025-02-24T16:36:12.9850180Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9850280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9850590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9850640Z     ???
2025-02-24T16:36:12.9850740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9850750Z 
2025-02-24T16:36:12.9850790Z >   ???
2025-02-24T16:36:12.9850890Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9850940Z E   
2025-02-24T16:36:12.9851040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9851140Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9851190Z E          ...
2025-02-24T16:36:12.9851260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9851420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9851520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9851570Z E          ...
2025-02-24T16:36:12.9851640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9851750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9851830Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9851840Z 
2025-02-24T16:36:12.9851910Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9852070Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T16:36:12.9852070Z 
2025-02-24T16:36:12.9852180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9852300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9857880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9858040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9858150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9858230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9858290Z err_msg = None
2025-02-24T16:36:12.9858290Z 
2025-02-24T16:36:12.9858380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9858440Z         if err_msg is None:
2025-02-24T16:36:12.9858510Z             if left.shape != right.shape:
2025-02-24T16:36:12.9858580Z                 raise_assert_detail(
2025-02-24T16:36:12.9858700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9858750Z                 )
2025-02-24T16:36:12.9858800Z     
2025-02-24T16:36:12.9858850Z             diff = 0
2025-02-24T16:36:12.9858940Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9859010Z                 # count up differences
2025-02-24T16:36:12.9859150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9859920Z                     diff += 1
2025-02-24T16:36:12.9860000Z     
2025-02-24T16:36:12.9860080Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9860190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9860340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9860430Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9860480Z E           
2025-02-24T16:36:12.9860570Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9860780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9861010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9861270Z 
2025-02-24T16:36:12.9861530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9861540Z 
2025-02-24T16:36:12.9861680Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9861680Z 
2025-02-24T16:36:12.9861870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daeeb40>
2025-02-24T16:36:12.9862030Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>, attr = 'lines'
2025-02-24T16:36:12.9862140Z 
2025-02-24T16:36:12.9862250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9862350Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9862410Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9862460Z         try:
2025-02-24T16:36:12.9862600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9862670Z         except KeyError:
2025-02-24T16:36:12.9862780Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9862830Z     
2025-02-24T16:36:12.9862900Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9862970Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9863040Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9863150Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9863220Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9863280Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9863380Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9863430Z             else:
2025-02-24T16:36:12.9863500Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9863600Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9863600Z 
2025-02-24T16:36:12.9863700Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9863800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9864150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9864400Z     ???
2025-02-24T16:36:12.9864520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9864520Z 
2025-02-24T16:36:12.9864570Z >   ???
2025-02-24T16:36:12.9864680Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9864730Z E   
2025-02-24T16:36:12.9864830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9864930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9864980Z E          ...
2025-02-24T16:36:12.9865050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9865150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9865250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9865310Z E          ...
2025-02-24T16:36:12.9865380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9865480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9865560Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9865560Z 
2025-02-24T16:36:12.9865630Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9865830Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T16:36:12.9865830Z 
2025-02-24T16:36:12.9866010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daeec00>
2025-02-24T16:36:12.9866150Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>
2025-02-24T16:36:12.9866220Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9866220Z 
2025-02-24T16:36:12.9866340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9866540Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9866600Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9866650Z         try:
2025-02-24T16:36:12.9866760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9866820Z         except KeyError:
2025-02-24T16:36:12.9866940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9866980Z     
2025-02-24T16:36:12.9867050Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9867120Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9867190Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9867300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9867430Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9868040Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9868380Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9868400Z 
2025-02-24T16:36:12.9868870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9869150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9869160Z 
2025-02-24T16:36:12.9869730Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9869850Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9869950Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9870020Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9870140Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9870200Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9870300Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9870370Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9870420Z err_msg = None
2025-02-24T16:36:12.9870430Z 
2025-02-24T16:36:12.9870520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9870590Z         if err_msg is None:
2025-02-24T16:36:12.9870660Z             if left.shape != right.shape:
2025-02-24T16:36:12.9870720Z                 raise_assert_detail(
2025-02-24T16:36:12.9870840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9870900Z                 )
2025-02-24T16:36:12.9870940Z     
2025-02-24T16:36:12.9870990Z             diff = 0
2025-02-24T16:36:12.9871090Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9871150Z                 # count up differences
2025-02-24T16:36:12.9871300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9871360Z                     diff += 1
2025-02-24T16:36:12.9871410Z     
2025-02-24T16:36:12.9871480Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9871590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9871840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9871960Z E           AssertionError: Series are different
2025-02-24T16:36:12.9872020Z E           
2025-02-24T16:36:12.9872100Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9872410Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9872700Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9873180Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9873190Z 
2025-02-24T16:36:12.9873450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9873730Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T16:36:12.9873730Z 
2025-02-24T16:36:12.9873920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daeecc0>
2025-02-24T16:36:12.9874050Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>
2025-02-24T16:36:12.9874130Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9874130Z 
2025-02-24T16:36:12.9874240Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9874340Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9874410Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9874460Z         try:
2025-02-24T16:36:12.9874580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9874640Z         except KeyError:
2025-02-24T16:36:12.9874760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9874800Z     
2025-02-24T16:36:12.9874870Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9874950Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9875020Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9875130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9875190Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9875270Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9875360Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9875360Z 
2025-02-24T16:36:12.9875460Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9875560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9875560Z 
2025-02-24T16:36:12.9875670Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9875740Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9875830Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9875890Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9876010Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9876070Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9876160Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9876220Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9876280Z err_msg = None
2025-02-24T16:36:12.9876280Z 
2025-02-24T16:36:12.9876370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9876430Z         if err_msg is None:
2025-02-24T16:36:12.9876500Z             if left.shape != right.shape:
2025-02-24T16:36:12.9876560Z                 raise_assert_detail(
2025-02-24T16:36:12.9876680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9876730Z                 )
2025-02-24T16:36:12.9876780Z     
2025-02-24T16:36:12.9876830Z             diff = 0
2025-02-24T16:36:12.9876920Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9876990Z                 # count up differences
2025-02-24T16:36:12.9877130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9877250Z                     diff += 1
2025-02-24T16:36:12.9877300Z     
2025-02-24T16:36:12.9877370Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9877480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9877620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9877710Z E           AssertionError: Series are different
2025-02-24T16:36:12.9877760Z E           
2025-02-24T16:36:12.9877840Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9878150Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9878520Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9878840Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9878850Z 
2025-02-24T16:36:12.9879110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9879280Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T16:36:12.9879280Z 
2025-02-24T16:36:12.9879390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9880050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9880150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9880260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9880370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9880450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9880500Z err_msg = None
2025-02-24T16:36:12.9880510Z 
2025-02-24T16:36:12.9880600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9880670Z         if err_msg is None:
2025-02-24T16:36:12.9880740Z             if left.shape != right.shape:
2025-02-24T16:36:12.9880810Z                 raise_assert_detail(
2025-02-24T16:36:12.9880930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9880980Z                 )
2025-02-24T16:36:12.9881030Z     
2025-02-24T16:36:12.9881520Z             diff = 0
2025-02-24T16:36:12.9881650Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9881710Z                 # count up differences
2025-02-24T16:36:12.9881850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9881910Z                     diff += 1
2025-02-24T16:36:12.9881970Z     
2025-02-24T16:36:12.9882030Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9882150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9882290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9882630Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9882680Z E           
2025-02-24T16:36:12.9882770Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9883000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9883210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9883550Z 
2025-02-24T16:36:12.9883800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9883810Z 
2025-02-24T16:36:12.9883950Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9883950Z 
2025-02-24T16:36:12.9884130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daeef00>
2025-02-24T16:36:12.9884290Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>, attr = 'nu'
2025-02-24T16:36:12.9884300Z 
2025-02-24T16:36:12.9884410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9884500Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9884570Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9884620Z         try:
2025-02-24T16:36:12.9884730Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9884790Z         except KeyError:
2025-02-24T16:36:12.9884900Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9884960Z     
2025-02-24T16:36:12.9885020Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9885090Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9885160Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9885270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9885330Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9885400Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9885490Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9885490Z 
2025-02-24T16:36:12.9885590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9885690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9885810Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9885860Z     ???
2025-02-24T16:36:12.9885960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9885960Z 
2025-02-24T16:36:12.9886010Z >   ???
2025-02-24T16:36:12.9886110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9886160Z E   
2025-02-24T16:36:12.9886260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9886350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9886400Z E          ...
2025-02-24T16:36:12.9886470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9886570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9886670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9886720Z E          ...
2025-02-24T16:36:12.9886780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9887330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9887430Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9887430Z 
2025-02-24T16:36:12.9887500Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9887750Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T16:36:12.9887760Z 
2025-02-24T16:36:12.9888190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9888310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9888380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9888500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9888600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9888740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9888800Z err_msg = None
2025-02-24T16:36:12.9888810Z 
2025-02-24T16:36:12.9888890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9888950Z         if err_msg is None:
2025-02-24T16:36:12.9889020Z             if left.shape != right.shape:
2025-02-24T16:36:12.9889090Z                 raise_assert_detail(
2025-02-24T16:36:12.9889210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9889260Z                 )
2025-02-24T16:36:12.9889310Z     
2025-02-24T16:36:12.9889360Z             diff = 0
2025-02-24T16:36:12.9889450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9889510Z                 # count up differences
2025-02-24T16:36:12.9889650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9889710Z                     diff += 1
2025-02-24T16:36:12.9889760Z     
2025-02-24T16:36:12.9889830Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9889940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9890080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9890180Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9890230Z E           
2025-02-24T16:36:12.9890320Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9890540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9890760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9890770Z 
2025-02-24T16:36:12.9891020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9891020Z 
2025-02-24T16:36:12.9891160Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9891160Z 
2025-02-24T16:36:12.9891340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daeefc0>
2025-02-24T16:36:12.9891470Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>
2025-02-24T16:36:12.9891520Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9891520Z 
2025-02-24T16:36:12.9891640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9891730Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9891790Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9891840Z         try:
2025-02-24T16:36:12.9891960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9892020Z         except KeyError:
2025-02-24T16:36:12.9892130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9892230Z     
2025-02-24T16:36:12.9892290Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9892370Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9892440Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9892550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9892620Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9892680Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9892780Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9892780Z 
2025-02-24T16:36:12.9892880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9892980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9893150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9893200Z     ???
2025-02-24T16:36:12.9893290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9893300Z 
2025-02-24T16:36:12.9893340Z >   ???
2025-02-24T16:36:12.9893450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9893490Z E   
2025-02-24T16:36:12.9893600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9893700Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9893750Z E          ...
2025-02-24T16:36:12.9893810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9893920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9894010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9894050Z E          ...
2025-02-24T16:36:12.9894430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9894540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9894630Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9894630Z 
2025-02-24T16:36:12.9894700Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9894860Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T16:36:12.9894870Z 
2025-02-24T16:36:12.9894970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9895080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9895160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9895270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9895370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9895460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9895510Z err_msg = None
2025-02-24T16:36:12.9895510Z 
2025-02-24T16:36:12.9895600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9895650Z         if err_msg is None:
2025-02-24T16:36:12.9895730Z             if left.shape != right.shape:
2025-02-24T16:36:12.9895790Z                 raise_assert_detail(
2025-02-24T16:36:12.9895910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9895960Z                 )
2025-02-24T16:36:12.9897020Z     
2025-02-24T16:36:12.9897090Z             diff = 0
2025-02-24T16:36:12.9897190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9897250Z                 # count up differences
2025-02-24T16:36:12.9897390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9897450Z                     diff += 1
2025-02-24T16:36:12.9897500Z     
2025-02-24T16:36:12.9897570Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9897680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9897820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9898000Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9898050Z E           
2025-02-24T16:36:12.9898140Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9898350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9898570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9898620Z 
2025-02-24T16:36:12.9898870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9898870Z 
2025-02-24T16:36:12.9899010Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9899010Z 
2025-02-24T16:36:12.9899190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daef080>
2025-02-24T16:36:12.9899350Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>, attr = 'f_lu'
2025-02-24T16:36:12.9899360Z 
2025-02-24T16:36:12.9899470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9899560Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9899620Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9899670Z         try:
2025-02-24T16:36:12.9899780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9899840Z         except KeyError:
2025-02-24T16:36:12.9899950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9900000Z     
2025-02-24T16:36:12.9900070Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9900140Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9900210Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9900320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9900380Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9900450Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9900540Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9900540Z 
2025-02-24T16:36:12.9900640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9900740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9900860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9900910Z     ???
2025-02-24T16:36:12.9901000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9901000Z 
2025-02-24T16:36:12.9901050Z >   ???
2025-02-24T16:36:12.9901150Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9901200Z E   
2025-02-24T16:36:12.9901310Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9901400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9901440Z E          ...
2025-02-24T16:36:12.9901510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9901620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9901700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9901760Z E          ...
2025-02-24T16:36:12.9901820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9901930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9902000Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9902010Z 
2025-02-24T16:36:12.9902070Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9902480Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T16:36:12.9902490Z 
2025-02-24T16:36:12.9902660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daef680>
2025-02-24T16:36:12.9902800Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>
2025-02-24T16:36:12.9902860Z attr = 'stimulated_emission_factor'
2025-02-24T16:36:12.9902870Z 
2025-02-24T16:36:12.9902970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9903060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9903120Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9903170Z         try:
2025-02-24T16:36:12.9903370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9903440Z         except KeyError:
2025-02-24T16:36:12.9903550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9903590Z     
2025-02-24T16:36:12.9903660Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9903740Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9903810Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9903910Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9903980Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9904050Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9904130Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9904190Z             else:
2025-02-24T16:36:12.9904260Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9904350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9904360Z 
2025-02-24T16:36:12.9904450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9904550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9904670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9904720Z     ???
2025-02-24T16:36:12.9904810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9904820Z 
2025-02-24T16:36:12.9904860Z >   ???
2025-02-24T16:36:12.9905010Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:12.9905050Z E   
2025-02-24T16:36:12.9905190Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:36:12.9905490Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9909280Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T16:36:12.9913600Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:36:12.9913780Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:36:12.9913790Z 
2025-02-24T16:36:12.9913860Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9914050Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T16:36:12.9914050Z 
2025-02-24T16:36:12.9914160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9914280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9914360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9914480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9914590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9914670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9914720Z err_msg = None
2025-02-24T16:36:12.9914720Z 
2025-02-24T16:36:12.9914810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9914870Z         if err_msg is None:
2025-02-24T16:36:12.9914950Z             if left.shape != right.shape:
2025-02-24T16:36:12.9915010Z                 raise_assert_detail(
2025-02-24T16:36:12.9915130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9915300Z                 )
2025-02-24T16:36:12.9915350Z     
2025-02-24T16:36:12.9915400Z             diff = 0
2025-02-24T16:36:12.9915490Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9915550Z                 # count up differences
2025-02-24T16:36:12.9915700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9915750Z                     diff += 1
2025-02-24T16:36:12.9915800Z     
2025-02-24T16:36:12.9915870Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9915980Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9916180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9916270Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9916320Z E           
2025-02-24T16:36:12.9916420Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9916640Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9916870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9916870Z 
2025-02-24T16:36:12.9917490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9917500Z 
2025-02-24T16:36:12.9917650Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9917660Z 
2025-02-24T16:36:12.9917840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daef740>
2025-02-24T16:36:12.9917960Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>
2025-02-24T16:36:12.9918030Z attr = 'previous_beta_sobolev'
2025-02-24T16:36:12.9918030Z 
2025-02-24T16:36:12.9918150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9918240Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9918300Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9918350Z         try:
2025-02-24T16:36:12.9918470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9918530Z         except KeyError:
2025-02-24T16:36:12.9918640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9918690Z     
2025-02-24T16:36:12.9918750Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9918830Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9918890Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9919010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9919070Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9919140Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9919230Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9919280Z             else:
2025-02-24T16:36:12.9919360Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9919450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9919450Z 
2025-02-24T16:36:12.9919550Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9919640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9919760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9919820Z     ???
2025-02-24T16:36:12.9920800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9920900Z 
2025-02-24T16:36:12.9920960Z >   ???
2025-02-24T16:36:12.9921070Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9921110Z E   
2025-02-24T16:36:12.9921220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9921310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9921360Z E          ...
2025-02-24T16:36:12.9921430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9921540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9921630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9921680Z E          ...
2025-02-24T16:36:12.9921800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9921900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9921990Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9921990Z 
2025-02-24T16:36:12.9927970Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9928180Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T16:36:12.9928190Z 
2025-02-24T16:36:12.9928300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9928410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9928500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9928610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9928710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9928800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9928850Z err_msg = None
2025-02-24T16:36:12.9928860Z 
2025-02-24T16:36:12.9928950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9929010Z         if err_msg is None:
2025-02-24T16:36:12.9929090Z             if left.shape != right.shape:
2025-02-24T16:36:12.9929160Z                 raise_assert_detail(
2025-02-24T16:36:12.9929270Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9929320Z                 )
2025-02-24T16:36:12.9929370Z     
2025-02-24T16:36:12.9929420Z             diff = 0
2025-02-24T16:36:12.9929510Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9929580Z                 # count up differences
2025-02-24T16:36:12.9929720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9929780Z                     diff += 1
2025-02-24T16:36:12.9929830Z     
2025-02-24T16:36:12.9929900Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9930020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9930160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9930250Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9930310Z E           
2025-02-24T16:36:12.9930400Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9930620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9930830Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9930840Z 
2025-02-24T16:36:12.9931480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9931480Z 
2025-02-24T16:36:12.9931620Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9931620Z 
2025-02-24T16:36:12.9931800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daef800>
2025-02-24T16:36:12.9931940Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>
2025-02-24T16:36:12.9931990Z attr = 'tau_sobolevs'
2025-02-24T16:36:12.9931990Z 
2025-02-24T16:36:12.9932100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9932200Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9932370Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9932420Z         try:
2025-02-24T16:36:12.9932540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9932600Z         except KeyError:
2025-02-24T16:36:12.9932710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9932760Z     
2025-02-24T16:36:12.9932830Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9932900Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9932960Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9933080Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9933140Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9933210Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9933300Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9933350Z             else:
2025-02-24T16:36:12.9933420Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9933520Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9933520Z 
2025-02-24T16:36:12.9933620Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9933710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9933840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9933880Z     ???
2025-02-24T16:36:12.9933980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9933980Z 
2025-02-24T16:36:12.9934030Z >   ???
2025-02-24T16:36:12.9934130Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9934180Z E   
2025-02-24T16:36:12.9934280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9934370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9934420Z E          ...
2025-02-24T16:36:12.9934490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9934610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9934700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9934760Z E          ...
2025-02-24T16:36:12.9934820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9934930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9935010Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9935010Z 
2025-02-24T16:36:12.9935080Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9935240Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T16:36:12.9935240Z 
2025-02-24T16:36:12.9935350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9935460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9935540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9935650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9935760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9935900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9935950Z err_msg = None
2025-02-24T16:36:12.9935950Z 
2025-02-24T16:36:12.9936040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9936110Z         if err_msg is None:
2025-02-24T16:36:12.9936180Z             if left.shape != right.shape:
2025-02-24T16:36:12.9936240Z                 raise_assert_detail(
2025-02-24T16:36:12.9936360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9936410Z                 )
2025-02-24T16:36:12.9936450Z     
2025-02-24T16:36:12.9936500Z             diff = 0
2025-02-24T16:36:12.9936590Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9936720Z                 # count up differences
2025-02-24T16:36:12.9936850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9936920Z                     diff += 1
2025-02-24T16:36:12.9936970Z     
2025-02-24T16:36:12.9937040Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9937160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9937300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9937390Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9937440Z E           
2025-02-24T16:36:12.9937540Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9937750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9937980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9937980Z 
2025-02-24T16:36:12.9938230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9938240Z 
2025-02-24T16:36:12.9938370Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9938380Z 
2025-02-24T16:36:12.9938550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daef8c0>
2025-02-24T16:36:12.9938680Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>
2025-02-24T16:36:12.9938740Z attr = 'beta_sobolev'
2025-02-24T16:36:12.9938740Z 
2025-02-24T16:36:12.9938860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9938950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9939010Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9939070Z         try:
2025-02-24T16:36:12.9939180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9939240Z         except KeyError:
2025-02-24T16:36:12.9939350Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9939400Z     
2025-02-24T16:36:12.9939470Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9939540Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9939610Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9939720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9939790Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9939860Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9939950Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9940000Z             else:
2025-02-24T16:36:12.9940070Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9940170Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9940220Z 
2025-02-24T16:36:12.9940320Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9940420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9940530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9940580Z     ???
2025-02-24T16:36:12.9940680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9940680Z 
2025-02-24T16:36:12.9940720Z >   ???
2025-02-24T16:36:12.9940830Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9940870Z E   
2025-02-24T16:36:12.9940980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9941110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9941170Z E          ...
2025-02-24T16:36:12.9941240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9941340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9941440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9941480Z E          ...
2025-02-24T16:36:12.9941560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9941660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9941740Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9941740Z 
2025-02-24T16:36:12.9941810Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9941970Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T16:36:12.9941970Z 
2025-02-24T16:36:12.9942080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9942190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9942270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9942380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9942490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9942570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9942620Z err_msg = None
2025-02-24T16:36:12.9942630Z 
2025-02-24T16:36:12.9942710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9942770Z         if err_msg is None:
2025-02-24T16:36:12.9942840Z             if left.shape != right.shape:
2025-02-24T16:36:12.9942910Z                 raise_assert_detail(
2025-02-24T16:36:12.9943020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9943070Z                 )
2025-02-24T16:36:12.9943120Z     
2025-02-24T16:36:12.9943170Z             diff = 0
2025-02-24T16:36:12.9943260Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9943330Z                 # count up differences
2025-02-24T16:36:12.9943480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9943540Z                     diff += 1
2025-02-24T16:36:12.9943580Z     
2025-02-24T16:36:12.9943650Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9943760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9943900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9943990Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9944040Z E           
2025-02-24T16:36:12.9944130Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9944620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9944920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9944920Z 
2025-02-24T16:36:12.9945160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9945170Z 
2025-02-24T16:36:12.9945300Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9945300Z 
2025-02-24T16:36:12.9945530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11daefa40>
2025-02-24T16:36:12.9945690Z plasma = <tardis.plasma.base.BasePlasma object at 0x31d8b5d60>, attr = 'j_blues'
2025-02-24T16:36:12.9945700Z 
2025-02-24T16:36:12.9945810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9945900Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9945960Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9946010Z         try:
2025-02-24T16:36:12.9946130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9946180Z         except KeyError:
2025-02-24T16:36:12.9946290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9946340Z     
2025-02-24T16:36:12.9946400Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9946470Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9946540Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9946650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9946720Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9946790Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9946870Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9946920Z             else:
2025-02-24T16:36:12.9947000Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9947080Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9947090Z 
2025-02-24T16:36:12.9947180Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9947310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9947460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9947510Z     ???
2025-02-24T16:36:12.9947600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9947600Z 
2025-02-24T16:36:12.9947650Z >   ???
2025-02-24T16:36:12.9947760Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9947800Z E   
2025-02-24T16:36:12.9947910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9948010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9948060Z E          ...
2025-02-24T16:36:12.9948140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9948260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9948370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9948420Z E          ...
2025-02-24T16:36:12.9948520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9948630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9948720Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9948730Z 
2025-02-24T16:36:12.9948810Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9949040Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T16:36:12.9949050Z 
2025-02-24T16:36:12.9949180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9949310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9950070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9950190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9950300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9950390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9950450Z err_msg = None
2025-02-24T16:36:12.9950450Z 
2025-02-24T16:36:12.9950530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9950600Z         if err_msg is None:
2025-02-24T16:36:12.9950670Z             if left.shape != right.shape:
2025-02-24T16:36:12.9951070Z                 raise_assert_detail(
2025-02-24T16:36:12.9951190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9951250Z                 )
2025-02-24T16:36:12.9951300Z     
2025-02-24T16:36:12.9951360Z             diff = 0
2025-02-24T16:36:12.9951450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9951520Z                 # count up differences
2025-02-24T16:36:12.9951670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9951750Z                     diff += 1
2025-02-24T16:36:12.9951810Z     
2025-02-24T16:36:12.9951890Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9952010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9952170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9952270Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9952330Z E           
2025-02-24T16:36:12.9952410Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9952650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9952910Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9952920Z 
2025-02-24T16:36:12.9953180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9953200Z 
2025-02-24T16:36:12.9953350Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9953360Z 
2025-02-24T16:36:12.9953560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db18800>
2025-02-24T16:36:12.9953720Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>, attr = 'lines'
2025-02-24T16:36:12.9953730Z 
2025-02-24T16:36:12.9953840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9953930Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9953990Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9954050Z         try:
2025-02-24T16:36:12.9954160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9954230Z         except KeyError:
2025-02-24T16:36:12.9954350Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9954400Z     
2025-02-24T16:36:12.9954460Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9954530Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9954600Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9954710Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9954870Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9954940Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9955030Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9955080Z             else:
2025-02-24T16:36:12.9955150Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:12.9955240Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:12.9955240Z 
2025-02-24T16:36:12.9955340Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:12.9955430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9955780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9956030Z     ???
2025-02-24T16:36:12.9956140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9956140Z 
2025-02-24T16:36:12.9956190Z >   ???
2025-02-24T16:36:12.9956300Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9956340Z E   
2025-02-24T16:36:12.9956460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9956550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9956600Z E          ...
2025-02-24T16:36:12.9956670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9956780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9956870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9956920Z E          ...
2025-02-24T16:36:12.9956990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9957100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9957180Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9957180Z 
2025-02-24T16:36:12.9957250Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9957440Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T16:36:12.9957450Z 
2025-02-24T16:36:12.9957630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db188c0>
2025-02-24T16:36:12.9957760Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>
2025-02-24T16:36:12.9957820Z attr = 'lines_lower_level_index'
2025-02-24T16:36:12.9957830Z 
2025-02-24T16:36:12.9957940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9958030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9958100Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9958150Z         try:
2025-02-24T16:36:12.9958270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9958340Z         except KeyError:
2025-02-24T16:36:12.9958450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9958500Z     
2025-02-24T16:36:12.9958570Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9958640Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9958710Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9958820Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9958890Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9958950Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9959040Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9959050Z 
2025-02-24T16:36:12.9959160Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9959270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9959270Z 
2025-02-24T16:36:12.9959380Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9959450Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9959550Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9959610Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9959730Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:12.9959890Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:12.9959970Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9960040Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:12.9960090Z err_msg = None
2025-02-24T16:36:12.9960090Z 
2025-02-24T16:36:12.9960180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9960240Z         if err_msg is None:
2025-02-24T16:36:12.9960310Z             if left.shape != right.shape:
2025-02-24T16:36:12.9960370Z                 raise_assert_detail(
2025-02-24T16:36:12.9960490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9960700Z                 )
2025-02-24T16:36:12.9960750Z     
2025-02-24T16:36:12.9960800Z             diff = 0
2025-02-24T16:36:12.9960890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9960960Z                 # count up differences
2025-02-24T16:36:12.9961110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9961170Z                     diff += 1
2025-02-24T16:36:12.9961220Z     
2025-02-24T16:36:12.9961280Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9961400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9961530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9961620Z E           AssertionError: Series are different
2025-02-24T16:36:12.9961670Z E           
2025-02-24T16:36:12.9961750Z E           Series values are different (4.04858 %)
2025-02-24T16:36:12.9962070Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9962360Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9962640Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9962640Z 
2025-02-24T16:36:12.9962900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9963090Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T16:36:12.9963090Z 
2025-02-24T16:36:12.9963270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db18980>
2025-02-24T16:36:12.9963390Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>
2025-02-24T16:36:12.9963460Z attr = 'lines_upper_level_index'
2025-02-24T16:36:12.9963460Z 
2025-02-24T16:36:12.9963580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9963670Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9963730Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9964080Z         try:
2025-02-24T16:36:12.9964210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9964270Z         except KeyError:
2025-02-24T16:36:12.9964380Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9964510Z     
2025-02-24T16:36:12.9964600Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9964680Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9964750Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9964860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9964930Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9965000Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9965090Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9965090Z 
2025-02-24T16:36:12.9965190Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9965360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9965370Z 
2025-02-24T16:36:12.9965480Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9965540Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9965640Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9965700Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9965820Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:12.9965880Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:12.9965970Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:12.9966030Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:12.9966080Z err_msg = None
2025-02-24T16:36:12.9966090Z 
2025-02-24T16:36:12.9966170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9966230Z         if err_msg is None:
2025-02-24T16:36:12.9966300Z             if left.shape != right.shape:
2025-02-24T16:36:12.9966370Z                 raise_assert_detail(
2025-02-24T16:36:12.9966480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9966530Z                 )
2025-02-24T16:36:12.9966580Z     
2025-02-24T16:36:12.9966630Z             diff = 0
2025-02-24T16:36:12.9966720Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9966790Z                 # count up differences
2025-02-24T16:36:12.9966930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9966980Z                     diff += 1
2025-02-24T16:36:12.9967030Z     
2025-02-24T16:36:12.9967090Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9968100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9968260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9968350Z E           AssertionError: Series are different
2025-02-24T16:36:12.9968430Z E           
2025-02-24T16:36:12.9968510Z E           Series values are different (6.47773 %)
2025-02-24T16:36:12.9968820Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:12.9969140Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9969460Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:12.9969600Z 
2025-02-24T16:36:12.9969850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9970010Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T16:36:12.9970010Z 
2025-02-24T16:36:12.9970120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9970230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9970690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9970800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9970920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9971380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9971440Z err_msg = None
2025-02-24T16:36:12.9971440Z 
2025-02-24T16:36:12.9971530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9971590Z         if err_msg is None:
2025-02-24T16:36:12.9971670Z             if left.shape != right.shape:
2025-02-24T16:36:12.9971730Z                 raise_assert_detail(
2025-02-24T16:36:12.9971850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9971900Z                 )
2025-02-24T16:36:12.9971950Z     
2025-02-24T16:36:12.9972000Z             diff = 0
2025-02-24T16:36:12.9972090Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9972160Z                 # count up differences
2025-02-24T16:36:12.9972290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9972360Z                     diff += 1
2025-02-24T16:36:12.9972410Z     
2025-02-24T16:36:12.9972470Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9972590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9972730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9972830Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9972880Z E           
2025-02-24T16:36:12.9972970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9973200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9973440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9973460Z 
2025-02-24T16:36:12.9973700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9973710Z 
2025-02-24T16:36:12.9973850Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9973850Z 
2025-02-24T16:36:12.9974020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db18bc0>
2025-02-24T16:36:12.9974200Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>, attr = 'nu'
2025-02-24T16:36:12.9974210Z 
2025-02-24T16:36:12.9974330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9974580Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9974650Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9974690Z         try:
2025-02-24T16:36:12.9974820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9974870Z         except KeyError:
2025-02-24T16:36:12.9974990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9975030Z     
2025-02-24T16:36:12.9975100Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9975170Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9975230Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9975350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9975480Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9975580Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9975680Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9975680Z 
2025-02-24T16:36:12.9975780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9975880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9976000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9976040Z     ???
2025-02-24T16:36:12.9976140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9976140Z 
2025-02-24T16:36:12.9976180Z >   ???
2025-02-24T16:36:12.9976290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9976330Z E   
2025-02-24T16:36:12.9976430Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9976520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9976580Z E          ...
2025-02-24T16:36:12.9976650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9976750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9976840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9976890Z E          ...
2025-02-24T16:36:12.9976960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9977060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9977140Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9977150Z 
2025-02-24T16:36:12.9977210Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9977370Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T16:36:12.9977380Z 
2025-02-24T16:36:12.9977480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9977590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9977670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9977780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9977890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9977970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9978020Z err_msg = None
2025-02-24T16:36:12.9978030Z 
2025-02-24T16:36:12.9978110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9978170Z         if err_msg is None:
2025-02-24T16:36:12.9978240Z             if left.shape != right.shape:
2025-02-24T16:36:12.9978310Z                 raise_assert_detail(
2025-02-24T16:36:12.9978420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9978470Z                 )
2025-02-24T16:36:12.9978510Z     
2025-02-24T16:36:12.9978560Z             diff = 0
2025-02-24T16:36:12.9978650Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9978720Z                 # count up differences
2025-02-24T16:36:12.9978860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9978990Z                     diff += 1
2025-02-24T16:36:12.9979040Z     
2025-02-24T16:36:12.9979110Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9979220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9979360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9979440Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9979490Z E           
2025-02-24T16:36:12.9983950Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9984200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9985700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9985710Z 
2025-02-24T16:36:12.9985970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9985980Z 
2025-02-24T16:36:12.9986110Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9986120Z 
2025-02-24T16:36:12.9986290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db18c80>
2025-02-24T16:36:12.9986430Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>
2025-02-24T16:36:12.9986480Z attr = 'wavelength_cm'
2025-02-24T16:36:12.9986480Z 
2025-02-24T16:36:12.9986590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9986690Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9986750Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9986800Z         try:
2025-02-24T16:36:12.9986920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9986980Z         except KeyError:
2025-02-24T16:36:12.9987090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9987130Z     
2025-02-24T16:36:12.9987200Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9987280Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9987340Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9987450Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9987510Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9987580Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9987670Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9987670Z 
2025-02-24T16:36:12.9987770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9987870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9988020Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9988080Z     ???
2025-02-24T16:36:12.9988170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9988180Z 
2025-02-24T16:36:12.9988220Z >   ???
2025-02-24T16:36:12.9988330Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:12.9988370Z E   
2025-02-24T16:36:12.9988470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:12.9988570Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9988620Z E          ...
2025-02-24T16:36:12.9988680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9988790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9989020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:12.9989070Z E          ...
2025-02-24T16:36:12.9989140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:12.9989240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:12.9989330Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:12.9989330Z 
2025-02-24T16:36:12.9989400Z testing.pyx:173: AssertionError
2025-02-24T16:36:12.9989560Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T16:36:12.9989560Z 
2025-02-24T16:36:12.9989670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9989790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9989920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9990040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:12.9990150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:12.9990240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:12.9990290Z err_msg = None
2025-02-24T16:36:12.9990290Z 
2025-02-24T16:36:12.9990380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:12.9990430Z         if err_msg is None:
2025-02-24T16:36:12.9990500Z             if left.shape != right.shape:
2025-02-24T16:36:12.9993190Z                 raise_assert_detail(
2025-02-24T16:36:12.9993370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:12.9993430Z                 )
2025-02-24T16:36:12.9993480Z     
2025-02-24T16:36:12.9993540Z             diff = 0
2025-02-24T16:36:12.9993630Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:12.9993710Z                 # count up differences
2025-02-24T16:36:12.9993860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:12.9993920Z                     diff += 1
2025-02-24T16:36:12.9993980Z     
2025-02-24T16:36:12.9994050Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:12.9994160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:12.9994300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:12.9994400Z E           AssertionError: numpy array are different
2025-02-24T16:36:12.9994450Z E           
2025-02-24T16:36:12.9994540Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:12.9994770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9994990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:12.9995000Z 
2025-02-24T16:36:12.9995250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:12.9995260Z 
2025-02-24T16:36:12.9996970Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:12.9996980Z 
2025-02-24T16:36:12.9997180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db18d40>
2025-02-24T16:36:12.9997350Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>, attr = 'f_lu'
2025-02-24T16:36:12.9997360Z 
2025-02-24T16:36:12.9997470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:12.9997870Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:12.9997940Z         key = f"plasma/{attr}"
2025-02-24T16:36:12.9997990Z         try:
2025-02-24T16:36:12.9998120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:12.9998180Z         except KeyError:
2025-02-24T16:36:12.9998290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:12.9998340Z     
2025-02-24T16:36:12.9998400Z         if hasattr(plasma, attr):
2025-02-24T16:36:12.9998490Z             actual = getattr(plasma, attr)
2025-02-24T16:36:12.9998550Z             if attr == "selected_atoms":
2025-02-24T16:36:12.9998670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:12.9998930Z             elif actual.ndim == 1:
2025-02-24T16:36:12.9999000Z                 actual = pd.Series(actual)
2025-02-24T16:36:12.9999100Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:12.9999100Z 
2025-02-24T16:36:12.9999200Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:12.9999310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9999430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:12.9999480Z     ???
2025-02-24T16:36:12.9999570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:12.9999580Z 
2025-02-24T16:36:12.9999620Z >   ???
2025-02-24T16:36:12.9999730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0002540Z E   
2025-02-24T16:36:13.0003040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0003300Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0003490Z E          ...
2025-02-24T16:36:13.0004950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0005140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0005250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0005310Z E          ...
2025-02-24T16:36:13.0005390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0005500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0005590Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0005590Z 
2025-02-24T16:36:13.0005660Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0005840Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T16:36:13.0005840Z 
2025-02-24T16:36:13.0005960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0006080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0006160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0006280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0006410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0006490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0006550Z err_msg = None
2025-02-24T16:36:13.0006550Z 
2025-02-24T16:36:13.0006650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0006710Z         if err_msg is None:
2025-02-24T16:36:13.0006790Z             if left.shape != right.shape:
2025-02-24T16:36:13.0006850Z                 raise_assert_detail(
2025-02-24T16:36:13.0006980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0007020Z                 )
2025-02-24T16:36:13.0007080Z     
2025-02-24T16:36:13.0007130Z             diff = 0
2025-02-24T16:36:13.0007230Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0007290Z                 # count up differences
2025-02-24T16:36:13.0007440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0009050Z                     diff += 1
2025-02-24T16:36:13.0009110Z     
2025-02-24T16:36:13.0009180Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0009300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0009450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0009910Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0009970Z E           
2025-02-24T16:36:13.0010070Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0010280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0010630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0010630Z 
2025-02-24T16:36:13.0010900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0010910Z 
2025-02-24T16:36:13.0011060Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0011060Z 
2025-02-24T16:36:13.0011480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db194c0>
2025-02-24T16:36:13.0011620Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>
2025-02-24T16:36:13.0011680Z attr = 'tau_sobolevs'
2025-02-24T16:36:13.0011690Z 
2025-02-24T16:36:13.0011800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0011890Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0011990Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0012040Z         try:
2025-02-24T16:36:13.0012170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0012230Z         except KeyError:
2025-02-24T16:36:13.0012340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0012390Z     
2025-02-24T16:36:13.0012450Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0012520Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0012590Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0012720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0012780Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0012860Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0012950Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0013010Z             else:
2025-02-24T16:36:13.0013090Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0013170Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0013170Z 
2025-02-24T16:36:13.0013280Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0013380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0013990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0014060Z     ???
2025-02-24T16:36:13.0014150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0014160Z 
2025-02-24T16:36:13.0014210Z >   ???
2025-02-24T16:36:13.0014310Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0014360Z E   
2025-02-24T16:36:13.0014470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0014560Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0014610Z E          ...
2025-02-24T16:36:13.0014820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0014920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0015010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0015070Z E          ...
2025-02-24T16:36:13.0015130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0015230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0015320Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0015330Z 
2025-02-24T16:36:13.0015390Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0015560Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T16:36:13.0015630Z 
2025-02-24T16:36:13.0015740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0015850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0015930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0016040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0016150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0016230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0016280Z err_msg = None
2025-02-24T16:36:13.0016290Z 
2025-02-24T16:36:13.0016380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0016440Z         if err_msg is None:
2025-02-24T16:36:13.0016510Z             if left.shape != right.shape:
2025-02-24T16:36:13.0016580Z                 raise_assert_detail(
2025-02-24T16:36:13.0016700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0016750Z                 )
2025-02-24T16:36:13.0016800Z     
2025-02-24T16:36:13.0016850Z             diff = 0
2025-02-24T16:36:13.0016940Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0017010Z                 # count up differences
2025-02-24T16:36:13.0017150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0017210Z                     diff += 1
2025-02-24T16:36:13.0017260Z     
2025-02-24T16:36:13.0017330Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0017440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0017580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0017670Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0017720Z E           
2025-02-24T16:36:13.0017810Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0018030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0018250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0018260Z 
2025-02-24T16:36:13.0018510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0018510Z 
2025-02-24T16:36:13.0018650Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0018650Z 
2025-02-24T16:36:13.0018830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db19580>
2025-02-24T16:36:13.0018960Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>
2025-02-24T16:36:13.0019070Z attr = 'beta_sobolev'
2025-02-24T16:36:13.0019070Z 
2025-02-24T16:36:13.0019190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0019280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0019340Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0019390Z         try:
2025-02-24T16:36:13.0019510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0019560Z         except KeyError:
2025-02-24T16:36:13.0019680Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0019720Z     
2025-02-24T16:36:13.0019790Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0019910Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0019970Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0020080Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0020150Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0020220Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0020310Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0020360Z             else:
2025-02-24T16:36:13.0020430Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0020520Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0020520Z 
2025-02-24T16:36:13.0020620Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0020710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0020830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0020880Z     ???
2025-02-24T16:36:13.0020970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0020980Z 
2025-02-24T16:36:13.0021020Z >   ???
2025-02-24T16:36:13.0021120Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0021180Z E   
2025-02-24T16:36:13.0021280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0021370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0021420Z E          ...
2025-02-24T16:36:13.0021490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0021600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0021690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0021740Z E          ...
2025-02-24T16:36:13.0021810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0021920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0022000Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0022000Z 
2025-02-24T16:36:13.0022080Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0022250Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T16:36:13.0022260Z 
2025-02-24T16:36:13.0022360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0022470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0022550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0022670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0022770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0022850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0022900Z err_msg = None
2025-02-24T16:36:13.0022910Z 
2025-02-24T16:36:13.0022990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0023060Z         if err_msg is None:
2025-02-24T16:36:13.0023130Z             if left.shape != right.shape:
2025-02-24T16:36:13.0023200Z                 raise_assert_detail(
2025-02-24T16:36:13.0023700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0023750Z                 )
2025-02-24T16:36:13.0023800Z     
2025-02-24T16:36:13.0024430Z             diff = 0
2025-02-24T16:36:13.0024560Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0024630Z                 # count up differences
2025-02-24T16:36:13.0024770Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0024830Z                     diff += 1
2025-02-24T16:36:13.0024870Z     
2025-02-24T16:36:13.0024940Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0025050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0025480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0025580Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0025620Z E           
2025-02-24T16:36:13.0025720Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0025940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0026160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0026170Z 
2025-02-24T16:36:13.0026430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0026430Z 
2025-02-24T16:36:13.0026570Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0026580Z 
2025-02-24T16:36:13.0026760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db19700>
2025-02-24T16:36:13.0026930Z plasma = <tardis.plasma.base.BasePlasma object at 0x31ecc1520>, attr = 'j_blues'
2025-02-24T16:36:13.0026930Z 
2025-02-24T16:36:13.0027050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0027140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0027210Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0027250Z         try:
2025-02-24T16:36:13.0027370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0027430Z         except KeyError:
2025-02-24T16:36:13.0027550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0027600Z     
2025-02-24T16:36:13.0027660Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0027730Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0027800Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0027910Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0027980Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0028050Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0028140Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0028190Z             else:
2025-02-24T16:36:13.0028260Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0028350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0028350Z 
2025-02-24T16:36:13.0028450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0028550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0028670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0028720Z     ???
2025-02-24T16:36:13.0028820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0028890Z 
2025-02-24T16:36:13.0028940Z >   ???
2025-02-24T16:36:13.0029040Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0029090Z E   
2025-02-24T16:36:13.0029190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0029280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0029330Z E          ...
2025-02-24T16:36:13.0029410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0029510Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0029610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0029660Z E          ...
2025-02-24T16:36:13.0029780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0029890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0029970Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0029970Z 
2025-02-24T16:36:13.0030040Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0030200Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T16:36:13.0030210Z 
2025-02-24T16:36:13.0030310Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0030430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0030500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0030610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0030720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0030800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0030850Z err_msg = None
2025-02-24T16:36:13.0030850Z 
2025-02-24T16:36:13.0030940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0031000Z         if err_msg is None:
2025-02-24T16:36:13.0031070Z             if left.shape != right.shape:
2025-02-24T16:36:13.0031130Z                 raise_assert_detail(
2025-02-24T16:36:13.0031260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0031310Z                 )
2025-02-24T16:36:13.0031350Z     
2025-02-24T16:36:13.0031400Z             diff = 0
2025-02-24T16:36:13.0031490Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0031550Z                 # count up differences
2025-02-24T16:36:13.0031690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0031750Z                     diff += 1
2025-02-24T16:36:13.0031800Z     
2025-02-24T16:36:13.0031870Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0031970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0032390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0032600Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0032650Z E           
2025-02-24T16:36:13.0032750Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0032970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0033180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0033190Z 
2025-02-24T16:36:13.0033580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0033580Z 
2025-02-24T16:36:13.0033720Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0033720Z 
2025-02-24T16:36:13.0033910Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1a480>
2025-02-24T16:36:13.0034070Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>, attr = 'lines'
2025-02-24T16:36:13.0034080Z 
2025-02-24T16:36:13.0034190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0034280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0034340Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0034460Z         try:
2025-02-24T16:36:13.0034580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0034640Z         except KeyError:
2025-02-24T16:36:13.0034760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0034810Z     
2025-02-24T16:36:13.0034870Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0034940Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0035010Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0035130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0035190Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0035260Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0035350Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0035400Z             else:
2025-02-24T16:36:13.0035480Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0035570Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0035570Z 
2025-02-24T16:36:13.0035670Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0035770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0035890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0035940Z     ???
2025-02-24T16:36:13.0036030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0036040Z 
2025-02-24T16:36:13.0036080Z >   ???
2025-02-24T16:36:13.0036180Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0036230Z E   
2025-02-24T16:36:13.0036330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0036420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0036470Z E          ...
2025-02-24T16:36:13.0036540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0036650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0036740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0036790Z E          ...
2025-02-24T16:36:13.0036850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0036960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0037030Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0037040Z 
2025-02-24T16:36:13.0037100Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0037290Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T16:36:13.0037290Z 
2025-02-24T16:36:13.0037460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1a540>
2025-02-24T16:36:13.0037590Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>
2025-02-24T16:36:13.0037660Z attr = 'lines_lower_level_index'
2025-02-24T16:36:13.0037660Z 
2025-02-24T16:36:13.0037770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0037870Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0037930Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0037980Z         try:
2025-02-24T16:36:13.0038090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0038200Z         except KeyError:
2025-02-24T16:36:13.0038310Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0038360Z     
2025-02-24T16:36:13.0038430Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0038500Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0038570Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0038670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0038740Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0038800Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0038890Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0038940Z 
2025-02-24T16:36:13.0039040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0039140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0039140Z 
2025-02-24T16:36:13.0039260Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:13.0039330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:13.0039420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0039480Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:13.0039600Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:13.0039660Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:13.0039740Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0039800Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:13.0039860Z err_msg = None
2025-02-24T16:36:13.0039860Z 
2025-02-24T16:36:13.0039950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0040190Z         if err_msg is None:
2025-02-24T16:36:13.0040300Z             if left.shape != right.shape:
2025-02-24T16:36:13.0040370Z                 raise_assert_detail(
2025-02-24T16:36:13.0040500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0040540Z                 )
2025-02-24T16:36:13.0040590Z     
2025-02-24T16:36:13.0040640Z             diff = 0
2025-02-24T16:36:13.0040730Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0040790Z                 # count up differences
2025-02-24T16:36:13.0040930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0040990Z                     diff += 1
2025-02-24T16:36:13.0041040Z     
2025-02-24T16:36:13.0041110Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0041220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0041370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0041450Z E           AssertionError: Series are different
2025-02-24T16:36:13.0041500Z E           
2025-02-24T16:36:13.0041580Z E           Series values are different (4.04858 %)
2025-02-24T16:36:13.0042330Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.0042630Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0042910Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0043060Z 
2025-02-24T16:36:13.0043310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0043490Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T16:36:13.0043500Z 
2025-02-24T16:36:13.0043680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1a600>
2025-02-24T16:36:13.0043880Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>
2025-02-24T16:36:13.0043950Z attr = 'lines_upper_level_index'
2025-02-24T16:36:13.0043950Z 
2025-02-24T16:36:13.0044060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0044160Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0044220Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0044270Z         try:
2025-02-24T16:36:13.0044390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0044450Z         except KeyError:
2025-02-24T16:36:13.0044880Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0044930Z     
2025-02-24T16:36:13.0045000Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0045070Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0045140Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0045250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0045310Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0045380Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0045470Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0045470Z 
2025-02-24T16:36:13.0045580Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0045680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0045680Z 
2025-02-24T16:36:13.0045790Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:13.0045850Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:13.0045940Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:13.0046000Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:13.0046110Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:13.0046180Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:13.0046270Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:13.0046330Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:13.0046380Z err_msg = None
2025-02-24T16:36:13.0046380Z 
2025-02-24T16:36:13.0046470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0046530Z         if err_msg is None:
2025-02-24T16:36:13.0046600Z             if left.shape != right.shape:
2025-02-24T16:36:13.0046660Z                 raise_assert_detail(
2025-02-24T16:36:13.0046790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0046830Z                 )
2025-02-24T16:36:13.0046880Z     
2025-02-24T16:36:13.0046930Z             diff = 0
2025-02-24T16:36:13.0051270Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0051360Z                 # count up differences
2025-02-24T16:36:13.0051500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0051570Z                     diff += 1
2025-02-24T16:36:13.0051610Z     
2025-02-24T16:36:13.0051680Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0051790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0052290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0052370Z E           AssertionError: Series are different
2025-02-24T16:36:13.0052420Z E           
2025-02-24T16:36:13.0052500Z E           Series values are different (6.47773 %)
2025-02-24T16:36:13.0052810Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.0053170Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.0053490Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.0053500Z 
2025-02-24T16:36:13.0053740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0053900Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T16:36:13.0053900Z 
2025-02-24T16:36:13.0054010Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0054120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0054210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0054320Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0054420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0054500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0054550Z err_msg = None
2025-02-24T16:36:13.0054550Z 
2025-02-24T16:36:13.0054640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0054700Z         if err_msg is None:
2025-02-24T16:36:13.0054770Z             if left.shape != right.shape:
2025-02-24T16:36:13.0054840Z                 raise_assert_detail(
2025-02-24T16:36:13.0054950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0055010Z                 )
2025-02-24T16:36:13.0055050Z     
2025-02-24T16:36:13.0055100Z             diff = 0
2025-02-24T16:36:13.0055190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0055250Z                 # count up differences
2025-02-24T16:36:13.0055400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0055450Z                     diff += 1
2025-02-24T16:36:13.0055500Z     
2025-02-24T16:36:13.0055560Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0055680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0055830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0055920Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0055970Z E           
2025-02-24T16:36:13.0056050Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0059170Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0059190Z 
2025-02-24T16:36:13.0059730Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T16:36:13.0059730Z 
2025-02-24T16:36:13.0060000Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0060000Z 
2025-02-24T16:36:13.0060520Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T16:36:13.0060670Z 
2025-02-24T16:36:13.0060940Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0060940Z 
2025-02-24T16:36:13.0061460Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T16:36:13.0061460Z 
2025-02-24T16:36:13.0061720Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0061720Z 
2025-02-24T16:36:13.0062270Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T16:36:13.0062270Z 
2025-02-24T16:36:13.0062530Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0062540Z 
2025-02-24T16:36:13.0063050Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T16:36:13.0063060Z 
2025-02-24T16:36:13.0063320Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0063320Z 
2025-02-24T16:36:13.0063840Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T16:36:13.0063840Z 
2025-02-24T16:36:13.0064090Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0064100Z 
2025-02-24T16:36:13.0064610Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T16:36:13.0064610Z 
2025-02-24T16:36:13.0064870Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0064870Z 
2025-02-24T16:36:13.0065420Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T16:36:13.0065430Z 
2025-02-24T16:36:13.0065680Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0065680Z 
2025-02-24T16:36:13.0066220Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T16:36:13.0066230Z 
2025-02-24T16:36:13.0066480Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0066490Z 
2025-02-24T16:36:13.0067100Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T16:36:13.0067100Z 
2025-02-24T16:36:13.0067350Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0067350Z 
2025-02-24T16:36:13.0067920Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T16:36:13.0067920Z 
2025-02-24T16:36:13.0068170Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0068220Z 
2025-02-24T16:36:13.0068740Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T16:36:13.0068740Z 
2025-02-24T16:36:13.0069000Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0069000Z 
2025-02-24T16:36:13.0069500Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T16:36:13.0069500Z 
2025-02-24T16:36:13.0069760Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0069760Z 
2025-02-24T16:36:13.0070270Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T16:36:13.0070280Z 
2025-02-24T16:36:13.0070520Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0070530Z 
2025-02-24T16:36:13.0071080Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T16:36:13.0071080Z 
2025-02-24T16:36:13.0071330Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0071340Z 
2025-02-24T16:36:13.0071870Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T16:36:13.0071880Z 
2025-02-24T16:36:13.0072140Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0072140Z 
2025-02-24T16:36:13.0072690Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T16:36:13.0072690Z 
2025-02-24T16:36:13.0072940Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0072940Z 
2025-02-24T16:36:13.0073460Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T16:36:13.0073460Z 
2025-02-24T16:36:13.0073720Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0073720Z 
2025-02-24T16:36:13.0074230Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T16:36:13.0074590Z 
2025-02-24T16:36:13.0074930Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0074930Z 
2025-02-24T16:36:13.0075490Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T16:36:13.0075490Z 
2025-02-24T16:36:13.0075750Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0075760Z 
2025-02-24T16:36:13.0076640Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T16:36:13.0076640Z 
2025-02-24T16:36:13.0076910Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0076910Z 
2025-02-24T16:36:13.0077430Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T16:36:13.0077430Z 
2025-02-24T16:36:13.0077690Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0077690Z 
2025-02-24T16:36:13.0078210Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T16:36:13.0078210Z 
2025-02-24T16:36:13.0078460Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0078470Z 
2025-02-24T16:36:13.0079020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T16:36:13.0079020Z 
2025-02-24T16:36:13.0079270Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0079280Z 
2025-02-24T16:36:13.0079780Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T16:36:13.0079790Z 
2025-02-24T16:36:13.0080040Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0080040Z 
2025-02-24T16:36:13.0080590Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T16:36:13.0080590Z 
2025-02-24T16:36:13.0080840Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0080850Z 
2025-02-24T16:36:13.0081390Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T16:36:13.0081390Z 
2025-02-24T16:36:13.0081640Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0081650Z 
2025-02-24T16:36:13.0082270Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T16:36:13.0082280Z 
2025-02-24T16:36:13.0082530Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0082610Z 
2025-02-24T16:36:13.0083120Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T16:36:13.0083120Z 
2025-02-24T16:36:13.0083370Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0083380Z 
2025-02-24T16:36:13.0083890Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T16:36:13.0083940Z 
2025-02-24T16:36:13.0084200Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0084200Z 
2025-02-24T16:36:13.0084740Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T16:36:13.0084750Z 
2025-02-24T16:36:13.0085000Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0085000Z 
2025-02-24T16:36:13.0085500Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T16:36:13.0085500Z 
2025-02-24T16:36:13.0085750Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0085760Z 
2025-02-24T16:36:13.0086270Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T16:36:13.0086270Z 
2025-02-24T16:36:13.0086520Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0086530Z 
2025-02-24T16:36:13.0087070Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T16:36:13.0087070Z 
2025-02-24T16:36:13.0087320Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0087320Z 
2025-02-24T16:36:13.0087860Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T16:36:13.0087870Z 
2025-02-24T16:36:13.0088120Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0088120Z 
2025-02-24T16:36:13.0088620Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T16:36:13.0088630Z 
2025-02-24T16:36:13.0088880Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0088880Z 
2025-02-24T16:36:13.0089380Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T16:36:13.0089390Z 
2025-02-24T16:36:13.0089630Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0089640Z 
2025-02-24T16:36:13.0090180Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T16:36:13.0090230Z 
2025-02-24T16:36:13.0090490Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0090490Z 
2025-02-24T16:36:13.0090990Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T16:36:13.0090990Z 
2025-02-24T16:36:13.0091240Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0091290Z 
2025-02-24T16:36:13.0091810Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T16:36:13.0091820Z 
2025-02-24T16:36:13.0092070Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:36:13.0092070Z 
2025-02-24T16:36:13.0092620Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T16:36:13.0092620Z 
2025-02-24T16:36:13.0092850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0093080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0093090Z 
2025-02-24T16:36:13.0093330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0093340Z 
2025-02-24T16:36:13.0093480Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0093480Z 
2025-02-24T16:36:13.0093660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1a840>
2025-02-24T16:36:13.0093820Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>, attr = 'nu'
2025-02-24T16:36:13.0093820Z 
2025-02-24T16:36:13.0093940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0094030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0094100Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0094140Z         try:
2025-02-24T16:36:13.0094270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0094330Z         except KeyError:
2025-02-24T16:36:13.0094440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0094490Z     
2025-02-24T16:36:13.0094550Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0094620Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0094690Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0094810Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0094880Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0094950Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0095040Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0095040Z 
2025-02-24T16:36:13.0095140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0095240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0095420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0095470Z     ???
2025-02-24T16:36:13.0095570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0095570Z 
2025-02-24T16:36:13.0095610Z >   ???
2025-02-24T16:36:13.0095720Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0095760Z E   
2025-02-24T16:36:13.0095860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0095950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0096000Z E          ...
2025-02-24T16:36:13.0096070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0096220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0096320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0096360Z E          ...
2025-02-24T16:36:13.0096430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0096540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0096620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0096630Z 
2025-02-24T16:36:13.0096690Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0096860Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T16:36:13.0096860Z 
2025-02-24T16:36:13.0096970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0097080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0097160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0097270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0097380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0097460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0097510Z err_msg = None
2025-02-24T16:36:13.0097510Z 
2025-02-24T16:36:13.0097600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0097660Z         if err_msg is None:
2025-02-24T16:36:13.0097730Z             if left.shape != right.shape:
2025-02-24T16:36:13.0097790Z                 raise_assert_detail(
2025-02-24T16:36:13.0097910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0097960Z                 )
2025-02-24T16:36:13.0098010Z     
2025-02-24T16:36:13.0098060Z             diff = 0
2025-02-24T16:36:13.0098150Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0098210Z                 # count up differences
2025-02-24T16:36:13.0098350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0098410Z                     diff += 1
2025-02-24T16:36:13.0098460Z     
2025-02-24T16:36:13.0098520Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0098640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0098780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0098870Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0098920Z E           
2025-02-24T16:36:13.0099010Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0099220Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0099440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0099750Z 
2025-02-24T16:36:13.0100010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0100010Z 
2025-02-24T16:36:13.0100150Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0100150Z 
2025-02-24T16:36:13.0100330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1a900>
2025-02-24T16:36:13.0100460Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>
2025-02-24T16:36:13.0100510Z attr = 'wavelength_cm'
2025-02-24T16:36:13.0100650Z 
2025-02-24T16:36:13.0100770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0100860Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0100920Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0100970Z         try:
2025-02-24T16:36:13.0101090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0101140Z         except KeyError:
2025-02-24T16:36:13.0101260Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0101300Z     
2025-02-24T16:36:13.0101370Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0101440Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0101500Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0101610Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0101670Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0101740Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0101830Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0101840Z 
2025-02-24T16:36:13.0101930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0102030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0102140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0102190Z     ???
2025-02-24T16:36:13.0102290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0102290Z 
2025-02-24T16:36:13.0102340Z >   ???
2025-02-24T16:36:13.0102440Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0102480Z E   
2025-02-24T16:36:13.0102590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0102680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0102730Z E          ...
2025-02-24T16:36:13.0102800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0102900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0102990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0103040Z E          ...
2025-02-24T16:36:13.0103110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0103210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0103290Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0103300Z 
2025-02-24T16:36:13.0103360Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0103520Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T16:36:13.0103520Z 
2025-02-24T16:36:13.0103630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0103740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0103820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0103930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0104040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0104180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0104230Z err_msg = None
2025-02-24T16:36:13.0104230Z 
2025-02-24T16:36:13.0104320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0104380Z         if err_msg is None:
2025-02-24T16:36:13.0104450Z             if left.shape != right.shape:
2025-02-24T16:36:13.0104520Z                 raise_assert_detail(
2025-02-24T16:36:13.0104630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0104680Z                 )
2025-02-24T16:36:13.0104730Z     
2025-02-24T16:36:13.0104780Z             diff = 0
2025-02-24T16:36:13.0104870Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0104980Z                 # count up differences
2025-02-24T16:36:13.0105120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0105170Z                     diff += 1
2025-02-24T16:36:13.0105220Z     
2025-02-24T16:36:13.0105290Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0105400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0105540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0105630Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0105680Z E           
2025-02-24T16:36:13.0105760Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0105980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0106190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0106200Z 
2025-02-24T16:36:13.0106450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0106450Z 
2025-02-24T16:36:13.0106580Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0106590Z 
2025-02-24T16:36:13.0106760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1a9c0>
2025-02-24T16:36:13.0106920Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>, attr = 'f_lu'
2025-02-24T16:36:13.0106920Z 
2025-02-24T16:36:13.0107030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0107120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0107180Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0107230Z         try:
2025-02-24T16:36:13.0107350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0107400Z         except KeyError:
2025-02-24T16:36:13.0107510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0107560Z     
2025-02-24T16:36:13.0107620Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0107690Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0107760Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0107860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0107930Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0108000Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0108090Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0108100Z 
2025-02-24T16:36:13.0108190Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0108280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0108450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0108500Z     ???
2025-02-24T16:36:13.0108590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0108590Z 
2025-02-24T16:36:13.0108640Z >   ???
2025-02-24T16:36:13.0108740Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0108790Z E   
2025-02-24T16:36:13.0108890Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0108980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0109020Z E          ...
2025-02-24T16:36:13.0109100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0109240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0109340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0109380Z E          ...
2025-02-24T16:36:13.0109450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0109560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0109640Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0109640Z 
2025-02-24T16:36:13.0109700Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0109860Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T16:36:13.0109870Z 
2025-02-24T16:36:13.0109970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0110080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0110150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0110270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0110370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0110450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0110500Z err_msg = None
2025-02-24T16:36:13.0110510Z 
2025-02-24T16:36:13.0110590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0110660Z         if err_msg is None:
2025-02-24T16:36:13.0110730Z             if left.shape != right.shape:
2025-02-24T16:36:13.0110790Z                 raise_assert_detail(
2025-02-24T16:36:13.0110900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0110960Z                 )
2025-02-24T16:36:13.0111000Z     
2025-02-24T16:36:13.0111050Z             diff = 0
2025-02-24T16:36:13.0111140Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0111200Z                 # count up differences
2025-02-24T16:36:13.0111340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0111400Z                     diff += 1
2025-02-24T16:36:13.0111450Z     
2025-02-24T16:36:13.0111520Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0111630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0111770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0111860Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0111910Z E           
2025-02-24T16:36:13.0112000Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0112210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0112430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0112470Z 
2025-02-24T16:36:13.0112720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0112720Z 
2025-02-24T16:36:13.0112860Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0112860Z 
2025-02-24T16:36:13.0113040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1b140>
2025-02-24T16:36:13.0113160Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>
2025-02-24T16:36:13.0113260Z attr = 'tau_sobolevs'
2025-02-24T16:36:13.0113260Z 
2025-02-24T16:36:13.0113370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0113460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0113530Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0113580Z         try:
2025-02-24T16:36:13.0113690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0113750Z         except KeyError:
2025-02-24T16:36:13.0113860Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0113900Z     
2025-02-24T16:36:13.0113960Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0114040Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0114100Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0114210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0114270Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0114340Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0114440Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0114480Z             else:
2025-02-24T16:36:13.0114560Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0114640Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0114640Z 
2025-02-24T16:36:13.0114740Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0114830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0114950Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0115000Z     ???
2025-02-24T16:36:13.0115090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0115090Z 
2025-02-24T16:36:13.0115140Z >   ???
2025-02-24T16:36:13.0115240Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0115280Z E   
2025-02-24T16:36:13.0115380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0115470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0115530Z E          ...
2025-02-24T16:36:13.0115590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0115700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0115790Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0115840Z E          ...
2025-02-24T16:36:13.0115910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0116000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0116090Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0116090Z 
2025-02-24T16:36:13.0116150Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0116320Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T16:36:13.0116320Z 
2025-02-24T16:36:13.0116420Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0116530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0116610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0116720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0117050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0117130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0117180Z err_msg = None
2025-02-24T16:36:13.0117180Z 
2025-02-24T16:36:13.0117270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0117320Z         if err_msg is None:
2025-02-24T16:36:13.0117390Z             if left.shape != right.shape:
2025-02-24T16:36:13.0117450Z                 raise_assert_detail(
2025-02-24T16:36:13.0117570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0117700Z                 )
2025-02-24T16:36:13.0117740Z     
2025-02-24T16:36:13.0117800Z             diff = 0
2025-02-24T16:36:13.0117880Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0117950Z                 # count up differences
2025-02-24T16:36:13.0118090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0118150Z                     diff += 1
2025-02-24T16:36:13.0118190Z     
2025-02-24T16:36:13.0118260Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0118370Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0118510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0118600Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0118640Z E           
2025-02-24T16:36:13.0118740Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0118960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0119180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0119180Z 
2025-02-24T16:36:13.0119420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0119430Z 
2025-02-24T16:36:13.0119560Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0119560Z 
2025-02-24T16:36:13.0119740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1b200>
2025-02-24T16:36:13.0119860Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>
2025-02-24T16:36:13.0119920Z attr = 'beta_sobolev'
2025-02-24T16:36:13.0119920Z 
2025-02-24T16:36:13.0120030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0120120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0120180Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0120230Z         try:
2025-02-24T16:36:13.0120340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0120400Z         except KeyError:
2025-02-24T16:36:13.0120510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0120560Z     
2025-02-24T16:36:13.0120630Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0120700Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0120760Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0120870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0120930Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0121000Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0121090Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0121180Z             else:
2025-02-24T16:36:13.0121260Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0121350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0121350Z 
2025-02-24T16:36:13.0121440Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0121540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0121660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0121700Z     ???
2025-02-24T16:36:13.0121800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0121840Z 
2025-02-24T16:36:13.0121890Z >   ???
2025-02-24T16:36:13.0121990Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0122040Z E   
2025-02-24T16:36:13.0122140Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0122330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0122380Z E          ...
2025-02-24T16:36:13.0122450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0122550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0122650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0122690Z E          ...
2025-02-24T16:36:13.0122760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0122860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0122940Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0122940Z 
2025-02-24T16:36:13.0123010Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0123180Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T16:36:13.0123180Z 
2025-02-24T16:36:13.0123280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0123390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0123470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0123590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0123690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0123770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0123820Z err_msg = None
2025-02-24T16:36:13.0123820Z 
2025-02-24T16:36:13.0123910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0123970Z         if err_msg is None:
2025-02-24T16:36:13.0124040Z             if left.shape != right.shape:
2025-02-24T16:36:13.0124110Z                 raise_assert_detail(
2025-02-24T16:36:13.0124220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0124270Z                 )
2025-02-24T16:36:13.0124320Z     
2025-02-24T16:36:13.0124370Z             diff = 0
2025-02-24T16:36:13.0124460Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0124520Z                 # count up differences
2025-02-24T16:36:13.0124660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0124710Z                     diff += 1
2025-02-24T16:36:13.0124760Z     
2025-02-24T16:36:13.0124820Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0124930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0125070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0125160Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0125210Z E           
2025-02-24T16:36:13.0129950Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0130210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0130640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0130650Z 
2025-02-24T16:36:13.0130900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0130950Z 
2025-02-24T16:36:13.0131090Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0131100Z 
2025-02-24T16:36:13.0131270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db1b380>
2025-02-24T16:36:13.0131440Z plasma = <tardis.plasma.base.BasePlasma object at 0x152c83950>, attr = 'j_blues'
2025-02-24T16:36:13.0131440Z 
2025-02-24T16:36:13.0131560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0131650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0131720Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0131770Z         try:
2025-02-24T16:36:13.0131880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0131950Z         except KeyError:
2025-02-24T16:36:13.0132060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0132100Z     
2025-02-24T16:36:13.0132170Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0132240Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0132300Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0132410Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0132480Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0132550Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0132630Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0132680Z             else:
2025-02-24T16:36:13.0132760Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0132840Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0132840Z 
2025-02-24T16:36:13.0132940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0133040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0133150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0133200Z     ???
2025-02-24T16:36:13.0133300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0133300Z 
2025-02-24T16:36:13.0133340Z >   ???
2025-02-24T16:36:13.0133450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0133500Z E   
2025-02-24T16:36:13.0133610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0133700Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0133740Z E          ...
2025-02-24T16:36:13.0133810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0133910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0134010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0134060Z E          ...
2025-02-24T16:36:13.0134120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0134230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0134310Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0134310Z 
2025-02-24T16:36:13.0134380Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0134550Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T16:36:13.0134600Z 
2025-02-24T16:36:13.0134710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0134820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0134890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0135010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0135110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0135190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0135280Z err_msg = None
2025-02-24T16:36:13.0135290Z 
2025-02-24T16:36:13.0135370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0135430Z         if err_msg is None:
2025-02-24T16:36:13.0135500Z             if left.shape != right.shape:
2025-02-24T16:36:13.0135570Z                 raise_assert_detail(
2025-02-24T16:36:13.0135690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0135730Z                 )
2025-02-24T16:36:13.0135790Z     
2025-02-24T16:36:13.0135840Z             diff = 0
2025-02-24T16:36:13.0135920Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0135990Z                 # count up differences
2025-02-24T16:36:13.0138970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0139130Z                     diff += 1
2025-02-24T16:36:13.0139190Z     
2025-02-24T16:36:13.0139260Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0139390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0139540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0139640Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0139700Z E           
2025-02-24T16:36:13.0139800Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0140010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0140240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0140240Z 
2025-02-24T16:36:13.0140500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0140510Z 
2025-02-24T16:36:13.0140650Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0140650Z 
2025-02-24T16:36:13.0140830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3c140>
2025-02-24T16:36:13.0141000Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>, attr = 'lines'
2025-02-24T16:36:13.0141000Z 
2025-02-24T16:36:13.0141110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0141210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0141270Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0141320Z         try:
2025-02-24T16:36:13.0141440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0141500Z         except KeyError:
2025-02-24T16:36:13.0141620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0141660Z     
2025-02-24T16:36:13.0141730Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0141800Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0142230Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0142340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0142410Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0142480Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0142570Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0142630Z             else:
2025-02-24T16:36:13.0142700Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0142790Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0142790Z 
2025-02-24T16:36:13.0142890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0143210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0143330Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0143380Z     ???
2025-02-24T16:36:13.0143480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0143480Z 
2025-02-24T16:36:13.0143530Z >   ???
2025-02-24T16:36:13.0143630Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0143680Z E   
2025-02-24T16:36:13.0143780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0143880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0143920Z E          ...
2025-02-24T16:36:13.0144000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0144100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0144200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0144250Z E          ...
2025-02-24T16:36:13.0144310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0144420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0144490Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0144500Z 
2025-02-24T16:36:13.0144570Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0144780Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T16:36:13.0144780Z 
2025-02-24T16:36:13.0144950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3c200>
2025-02-24T16:36:13.0145090Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>
2025-02-24T16:36:13.0145150Z attr = 'lines_lower_level_index'
2025-02-24T16:36:13.0145150Z 
2025-02-24T16:36:13.0145260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0145350Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0145420Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0145470Z         try:
2025-02-24T16:36:13.0145590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0145650Z         except KeyError:
2025-02-24T16:36:13.0145760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0145810Z     
2025-02-24T16:36:13.0145870Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0145940Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0146010Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0146110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0146180Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0146240Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0146330Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0146330Z 
2025-02-24T16:36:13.0146430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0146520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0146530Z 
2025-02-24T16:36:13.0146650Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:13.0146710Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:13.0146870Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0146930Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:13.0147040Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:13.0147110Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:13.0147190Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0147250Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:13.0147300Z err_msg = None
2025-02-24T16:36:13.0147310Z 
2025-02-24T16:36:13.0147390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0147510Z         if err_msg is None:
2025-02-24T16:36:13.0147580Z             if left.shape != right.shape:
2025-02-24T16:36:13.0147640Z                 raise_assert_detail(
2025-02-24T16:36:13.0147760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0147810Z                 )
2025-02-24T16:36:13.0147860Z     
2025-02-24T16:36:13.0147910Z             diff = 0
2025-02-24T16:36:13.0148000Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0148070Z                 # count up differences
2025-02-24T16:36:13.0148210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0148270Z                     diff += 1
2025-02-24T16:36:13.0148320Z     
2025-02-24T16:36:13.0148380Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0148500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0148640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0148720Z E           AssertionError: Series are different
2025-02-24T16:36:13.0148770Z E           
2025-02-24T16:36:13.0148850Z E           Series values are different (4.04858 %)
2025-02-24T16:36:13.0149170Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.0149450Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0149730Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0149740Z 
2025-02-24T16:36:13.0149990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0150190Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T16:36:13.0150190Z 
2025-02-24T16:36:13.0150360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3c2c0>
2025-02-24T16:36:13.0150500Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>
2025-02-24T16:36:13.0150570Z attr = 'lines_upper_level_index'
2025-02-24T16:36:13.0150570Z 
2025-02-24T16:36:13.0150680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0150780Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0150840Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0150950Z         try:
2025-02-24T16:36:13.0151070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0151130Z         except KeyError:
2025-02-24T16:36:13.0151240Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0151290Z     
2025-02-24T16:36:13.0151360Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0151430Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0151490Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0151610Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0151670Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0151740Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0151880Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0151880Z 
2025-02-24T16:36:13.0151980Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0152070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0152080Z 
2025-02-24T16:36:13.0152900Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:13.0153000Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:13.0153090Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:13.0153160Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:13.0153270Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:13.0153340Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:13.0153420Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:13.0153490Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:13.0153550Z err_msg = None
2025-02-24T16:36:13.0153550Z 
2025-02-24T16:36:13.0153630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0153690Z         if err_msg is None:
2025-02-24T16:36:13.0153770Z             if left.shape != right.shape:
2025-02-24T16:36:13.0153830Z                 raise_assert_detail(
2025-02-24T16:36:13.0153950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0154000Z                 )
2025-02-24T16:36:13.0154050Z     
2025-02-24T16:36:13.0154100Z             diff = 0
2025-02-24T16:36:13.0154190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0154250Z                 # count up differences
2025-02-24T16:36:13.0154390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0154460Z                     diff += 1
2025-02-24T16:36:13.0154500Z     
2025-02-24T16:36:13.0154570Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0154680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0154820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0154910Z E           AssertionError: Series are different
2025-02-24T16:36:13.0154950Z E           
2025-02-24T16:36:13.0155030Z E           Series values are different (6.47773 %)
2025-02-24T16:36:13.0155340Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.0155650Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.0156130Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.0156130Z 
2025-02-24T16:36:13.0156380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0156540Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T16:36:13.0156590Z 
2025-02-24T16:36:13.0156710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0156820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0156900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0157020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0157120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0157210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0157260Z err_msg = None
2025-02-24T16:36:13.0157260Z 
2025-02-24T16:36:13.0157340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0157400Z         if err_msg is None:
2025-02-24T16:36:13.0157480Z             if left.shape != right.shape:
2025-02-24T16:36:13.0157540Z                 raise_assert_detail(
2025-02-24T16:36:13.0157660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0157710Z                 )
2025-02-24T16:36:13.0157750Z     
2025-02-24T16:36:13.0157800Z             diff = 0
2025-02-24T16:36:13.0157900Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0157960Z                 # count up differences
2025-02-24T16:36:13.0158110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0158160Z                     diff += 1
2025-02-24T16:36:13.0158210Z     
2025-02-24T16:36:13.0158280Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0158390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0158530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0158620Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0158680Z E           
2025-02-24T16:36:13.0158760Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0158980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0159210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0159210Z 
2025-02-24T16:36:13.0159450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0159460Z 
2025-02-24T16:36:13.0159600Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0159610Z 
2025-02-24T16:36:13.0160100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3c500>
2025-02-24T16:36:13.0160810Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>, attr = 'nu'
2025-02-24T16:36:13.0160810Z 
2025-02-24T16:36:13.0160930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0161030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0161090Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0161140Z         try:
2025-02-24T16:36:13.0161260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0161320Z         except KeyError:
2025-02-24T16:36:13.0161430Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0161480Z     
2025-02-24T16:36:13.0161550Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0161810Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0161880Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0161990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0162060Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0162130Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0162340Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0162340Z 
2025-02-24T16:36:13.0162440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0162530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0162660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0162710Z     ???
2025-02-24T16:36:13.0162800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0162810Z 
2025-02-24T16:36:13.0162850Z >   ???
2025-02-24T16:36:13.0162960Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0163010Z E   
2025-02-24T16:36:13.0163110Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0163200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0163250Z E          ...
2025-02-24T16:36:13.0163320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0163430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0163520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0163570Z E          ...
2025-02-24T16:36:13.0163630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0163740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0163820Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0163820Z 
2025-02-24T16:36:13.0163890Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0164070Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T16:36:13.0164070Z 
2025-02-24T16:36:13.0164180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0164290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0164370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0164490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0164590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0164670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0164720Z err_msg = None
2025-02-24T16:36:13.0164730Z 
2025-02-24T16:36:13.0164810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0164870Z         if err_msg is None:
2025-02-24T16:36:13.0164940Z             if left.shape != right.shape:
2025-02-24T16:36:13.0165000Z                 raise_assert_detail(
2025-02-24T16:36:13.0165120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0165170Z                 )
2025-02-24T16:36:13.0165220Z     
2025-02-24T16:36:13.0165260Z             diff = 0
2025-02-24T16:36:13.0165410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0165480Z                 # count up differences
2025-02-24T16:36:13.0165620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0165670Z                     diff += 1
2025-02-24T16:36:13.0165720Z     
2025-02-24T16:36:13.0165790Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0165900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0166040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0166130Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0166230Z E           
2025-02-24T16:36:13.0166320Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0166530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0166750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0166750Z 
2025-02-24T16:36:13.0166990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0167000Z 
2025-02-24T16:36:13.0167140Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0167140Z 
2025-02-24T16:36:13.0167310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3c5c0>
2025-02-24T16:36:13.0167440Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>
2025-02-24T16:36:13.0167500Z attr = 'wavelength_cm'
2025-02-24T16:36:13.0167500Z 
2025-02-24T16:36:13.0167610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0167700Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0167770Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0167820Z         try:
2025-02-24T16:36:13.0167930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0167990Z         except KeyError:
2025-02-24T16:36:13.0168100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0168150Z     
2025-02-24T16:36:13.0168210Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0168290Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0168350Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0168460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0168530Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0168600Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0168690Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0168690Z 
2025-02-24T16:36:13.0168780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0168880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0168990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0169040Z     ???
2025-02-24T16:36:13.0169130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0169140Z 
2025-02-24T16:36:13.0169180Z >   ???
2025-02-24T16:36:13.0169290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0169330Z E   
2025-02-24T16:36:13.0169440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0169530Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0169620Z E          ...
2025-02-24T16:36:13.0169700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0170240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0170350Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0170400Z E          ...
2025-02-24T16:36:13.0170470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0170570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0170650Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0170650Z 
2025-02-24T16:36:13.0170720Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0170890Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T16:36:13.0170990Z 
2025-02-24T16:36:13.0171110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0171220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0171300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0171420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0171520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0171600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0171650Z err_msg = None
2025-02-24T16:36:13.0171660Z 
2025-02-24T16:36:13.0171740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0171800Z         if err_msg is None:
2025-02-24T16:36:13.0171870Z             if left.shape != right.shape:
2025-02-24T16:36:13.0171940Z                 raise_assert_detail(
2025-02-24T16:36:13.0172060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0172110Z                 )
2025-02-24T16:36:13.0172150Z     
2025-02-24T16:36:13.0172200Z             diff = 0
2025-02-24T16:36:13.0172290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0172360Z                 # count up differences
2025-02-24T16:36:13.0172500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0172560Z                     diff += 1
2025-02-24T16:36:13.0172600Z     
2025-02-24T16:36:13.0172670Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0172780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0172920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0173010Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0173060Z E           
2025-02-24T16:36:13.0173140Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0173360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0176010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0177020Z 
2025-02-24T16:36:13.0177940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0178010Z 
2025-02-24T16:36:13.0178390Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0178400Z 
2025-02-24T16:36:13.0178870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3c680>
2025-02-24T16:36:13.0179880Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>, attr = 'f_lu'
2025-02-24T16:36:13.0179890Z 
2025-02-24T16:36:13.0180190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0182660Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0183970Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0184130Z         try:
2025-02-24T16:36:13.0184450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0184630Z         except KeyError:
2025-02-24T16:36:13.0184920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0185080Z     
2025-02-24T16:36:13.0185270Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0185700Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0185900Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0186180Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0186370Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0186570Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0187760Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0187800Z 
2025-02-24T16:36:13.0188680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0192150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0195070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0197820Z     ???
2025-02-24T16:36:13.0198130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0198140Z 
2025-02-24T16:36:13.0198630Z >   ???
2025-02-24T16:36:13.0199940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0200110Z E   
2025-02-24T16:36:13.0200410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0200660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0200830Z E          ...
2025-02-24T16:36:13.0201030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0201310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0201550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0201710Z E          ...
2025-02-24T16:36:13.0201890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0202170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0202560Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0202570Z 
2025-02-24T16:36:13.0202770Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0203240Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T16:36:13.0203260Z 
2025-02-24T16:36:13.0203550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0203830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0204040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0204340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0204620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0204820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0204980Z err_msg = None
2025-02-24T16:36:13.0204990Z 
2025-02-24T16:36:13.0205230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0205400Z         if err_msg is None:
2025-02-24T16:36:13.0205610Z             if left.shape != right.shape:
2025-02-24T16:36:13.0205790Z                 raise_assert_detail(
2025-02-24T16:36:13.0206110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0206260Z                 )
2025-02-24T16:36:13.0206410Z     
2025-02-24T16:36:13.0206560Z             diff = 0
2025-02-24T16:36:13.0207450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0207640Z                 # count up differences
2025-02-24T16:36:13.0208000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0208170Z                     diff += 1
2025-02-24T16:36:13.0208310Z     
2025-02-24T16:36:13.0208500Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0208790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0209160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0209400Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0209940Z E           
2025-02-24T16:36:13.0210190Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0210780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0211400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0211410Z 
2025-02-24T16:36:13.0212070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0212090Z 
2025-02-24T16:36:13.0212450Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0212450Z 
2025-02-24T16:36:13.0212930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3ce00>
2025-02-24T16:36:13.0213280Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>
2025-02-24T16:36:13.0213440Z attr = 'tau_sobolevs'
2025-02-24T16:36:13.0213450Z 
2025-02-24T16:36:13.0213750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0213990Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0214180Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0214340Z         try:
2025-02-24T16:36:13.0214640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0214820Z         except KeyError:
2025-02-24T16:36:13.0215110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0215270Z     
2025-02-24T16:36:13.0215460Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0215660Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0215860Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0216140Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0216330Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0216530Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0216770Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0216930Z             else:
2025-02-24T16:36:13.0217130Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0217370Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0217380Z 
2025-02-24T16:36:13.0217650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0217900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0218210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0218370Z     ???
2025-02-24T16:36:13.0218610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0218630Z 
2025-02-24T16:36:13.0218780Z >   ???
2025-02-24T16:36:13.0219050Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0219450Z E   
2025-02-24T16:36:13.0228300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0228630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0228790Z E          ...
2025-02-24T16:36:13.0228980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0229250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0229490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0229640Z E          ...
2025-02-24T16:36:13.0229830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0230090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0231970Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0232010Z 
2025-02-24T16:36:13.0232230Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0232700Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T16:36:13.0232730Z 
2025-02-24T16:36:13.0233010Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0233290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0233500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0233790Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0234050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0234250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0234410Z err_msg = None
2025-02-24T16:36:13.0234430Z 
2025-02-24T16:36:13.0234670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0234850Z         if err_msg is None:
2025-02-24T16:36:13.0235040Z             if left.shape != right.shape:
2025-02-24T16:36:13.0235220Z                 raise_assert_detail(
2025-02-24T16:36:13.0235530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0235690Z                 )
2025-02-24T16:36:13.0235830Z     
2025-02-24T16:36:13.0236060Z             diff = 0
2025-02-24T16:36:13.0236300Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0236480Z                 # count up differences
2025-02-24T16:36:13.0236850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0237010Z                     diff += 1
2025-02-24T16:36:13.0237160Z     
2025-02-24T16:36:13.0237340Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0237630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0238060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0238300Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0238450Z E           
2025-02-24T16:36:13.0238700Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0239340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0239620Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0239640Z 
2025-02-24T16:36:13.0239890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0239890Z 
2025-02-24T16:36:13.0240030Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0240300Z 
2025-02-24T16:36:13.0240490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3cec0>
2025-02-24T16:36:13.0240630Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>
2025-02-24T16:36:13.0240680Z attr = 'beta_sobolev'
2025-02-24T16:36:13.0240680Z 
2025-02-24T16:36:13.0240790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0240890Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0240950Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0241000Z         try:
2025-02-24T16:36:13.0241120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0241260Z         except KeyError:
2025-02-24T16:36:13.0241380Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0241420Z     
2025-02-24T16:36:13.0241490Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0241570Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0241630Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0241740Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0241810Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0241880Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0241970Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0242010Z             else:
2025-02-24T16:36:13.0242090Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0242170Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0242170Z 
2025-02-24T16:36:13.0242270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0242360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0242570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0242620Z     ???
2025-02-24T16:36:13.0242720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0242720Z 
2025-02-24T16:36:13.0242770Z >   ???
2025-02-24T16:36:13.0242870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0242920Z E   
2025-02-24T16:36:13.0243020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0243110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0243160Z E          ...
2025-02-24T16:36:13.0243220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0243330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0243410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0243470Z E          ...
2025-02-24T16:36:13.0243530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0243640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0243720Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0243730Z 
2025-02-24T16:36:13.0243790Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0243960Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T16:36:13.0243970Z 
2025-02-24T16:36:13.0244070Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0244180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0244260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0244370Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0244480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0244550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0244610Z err_msg = None
2025-02-24T16:36:13.0244610Z 
2025-02-24T16:36:13.0244700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0244820Z         if err_msg is None:
2025-02-24T16:36:13.0244890Z             if left.shape != right.shape:
2025-02-24T16:36:13.0244950Z                 raise_assert_detail(
2025-02-24T16:36:13.0245070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0245120Z                 )
2025-02-24T16:36:13.0245170Z     
2025-02-24T16:36:13.0245210Z             diff = 0
2025-02-24T16:36:13.0245300Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0245370Z                 # count up differences
2025-02-24T16:36:13.0245500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0245610Z                     diff += 1
2025-02-24T16:36:13.0245650Z     
2025-02-24T16:36:13.0245720Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0245840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0245980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0246070Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0246120Z E           
2025-02-24T16:36:13.0246210Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0246420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0246630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0246640Z 
2025-02-24T16:36:13.0246890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0246890Z 
2025-02-24T16:36:13.0247030Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0247030Z 
2025-02-24T16:36:13.0247200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3d040>
2025-02-24T16:36:13.0247370Z plasma = <tardis.plasma.base.BasePlasma object at 0x1538b0a10>, attr = 'j_blues'
2025-02-24T16:36:13.0247370Z 
2025-02-24T16:36:13.0247480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0247570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0247640Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0247680Z         try:
2025-02-24T16:36:13.0247800Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0247860Z         except KeyError:
2025-02-24T16:36:13.0247980Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0248020Z     
2025-02-24T16:36:13.0248090Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0248160Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0248230Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0248340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0248400Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0248470Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0248560Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0248610Z             else:
2025-02-24T16:36:13.0248680Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0248770Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0248770Z 
2025-02-24T16:36:13.0248870Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0248960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0249440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0249480Z     ???
2025-02-24T16:36:13.0249570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0249580Z 
2025-02-24T16:36:13.0249630Z >   ???
2025-02-24T16:36:13.0249730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0249780Z E   
2025-02-24T16:36:13.0249880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0249970Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0250010Z E          ...
2025-02-24T16:36:13.0250080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0250330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0250420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0250470Z E          ...
2025-02-24T16:36:13.0250540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0250640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0250730Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0250730Z 
2025-02-24T16:36:13.0250790Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0251000Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T16:36:13.0251010Z 
2025-02-24T16:36:13.0251110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0251220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0251300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0251410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0251520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0251600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0251650Z err_msg = None
2025-02-24T16:36:13.0251650Z 
2025-02-24T16:36:13.0251740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0251800Z         if err_msg is None:
2025-02-24T16:36:13.0251870Z             if left.shape != right.shape:
2025-02-24T16:36:13.0251930Z                 raise_assert_detail(
2025-02-24T16:36:13.0252050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0252100Z                 )
2025-02-24T16:36:13.0252150Z     
2025-02-24T16:36:13.0252200Z             diff = 0
2025-02-24T16:36:13.0252280Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0252350Z                 # count up differences
2025-02-24T16:36:13.0252480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0252540Z                     diff += 1
2025-02-24T16:36:13.0252590Z     
2025-02-24T16:36:13.0252660Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0252780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0252910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0253000Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0253050Z E           
2025-02-24T16:36:13.0253140Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0253350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0253570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0253630Z 
2025-02-24T16:36:13.0253870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0253880Z 
2025-02-24T16:36:13.0254020Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0254020Z 
2025-02-24T16:36:13.0254190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3ddc0>
2025-02-24T16:36:13.0254350Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>, attr = 'lines'
2025-02-24T16:36:13.0254400Z 
2025-02-24T16:36:13.0254510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0254610Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0254670Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0254720Z         try:
2025-02-24T16:36:13.0254840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0254890Z         except KeyError:
2025-02-24T16:36:13.0255010Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0255050Z     
2025-02-24T16:36:13.0255110Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0255180Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0255250Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0255360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0255420Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0255490Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0255580Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0255630Z             else:
2025-02-24T16:36:13.0255700Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0255780Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0255790Z 
2025-02-24T16:36:13.0255890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0255980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0256100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0256150Z     ???
2025-02-24T16:36:13.0256240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0256240Z 
2025-02-24T16:36:13.0256290Z >   ???
2025-02-24T16:36:13.0256390Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0256430Z E   
2025-02-24T16:36:13.0256530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0256630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0256670Z E          ...
2025-02-24T16:36:13.0256740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0256840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0256940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0256990Z E          ...
2025-02-24T16:36:13.0257060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0257160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0257240Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0257250Z 
2025-02-24T16:36:13.0257310Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0257560Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T16:36:13.0257560Z 
2025-02-24T16:36:13.0257730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3de80>
2025-02-24T16:36:13.0257860Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>
2025-02-24T16:36:13.0257930Z attr = 'lines_lower_level_index'
2025-02-24T16:36:13.0257930Z 
2025-02-24T16:36:13.0258040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0258180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0258250Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0258290Z         try:
2025-02-24T16:36:13.0258410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0258460Z         except KeyError:
2025-02-24T16:36:13.0258570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0258620Z     
2025-02-24T16:36:13.0258680Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0258750Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0258820Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0258930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0259040Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0259110Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0259190Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0259200Z 
2025-02-24T16:36:13.0259300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0259390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0259400Z 
2025-02-24T16:36:13.0259510Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:13.0259580Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:13.0259660Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0259730Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:13.0259850Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:36:13.0259910Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:36:13.0260000Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0260060Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:36:13.0260120Z err_msg = None
2025-02-24T16:36:13.0260120Z 
2025-02-24T16:36:13.0260210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0260270Z         if err_msg is None:
2025-02-24T16:36:13.0260340Z             if left.shape != right.shape:
2025-02-24T16:36:13.0260400Z                 raise_assert_detail(
2025-02-24T16:36:13.0260520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0260570Z                 )
2025-02-24T16:36:13.0260610Z     
2025-02-24T16:36:13.0260660Z             diff = 0
2025-02-24T16:36:13.0260750Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0260810Z                 # count up differences
2025-02-24T16:36:13.0260950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0261010Z                     diff += 1
2025-02-24T16:36:13.0261060Z     
2025-02-24T16:36:13.0261120Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0261230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0261370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0261460Z E           AssertionError: Series are different
2025-02-24T16:36:13.0261500Z E           
2025-02-24T16:36:13.0261580Z E           Series values are different (4.04858 %)
2025-02-24T16:36:13.0261890Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.0262160Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0262480Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0262490Z 
2025-02-24T16:36:13.0262730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0263020Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T16:36:13.0263020Z 
2025-02-24T16:36:13.0263200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3df40>
2025-02-24T16:36:13.0263330Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>
2025-02-24T16:36:13.0263400Z attr = 'lines_upper_level_index'
2025-02-24T16:36:13.0263400Z 
2025-02-24T16:36:13.0263510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0263600Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0263670Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0263710Z         try:
2025-02-24T16:36:13.0263830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0263880Z         except KeyError:
2025-02-24T16:36:13.0264000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0264050Z     
2025-02-24T16:36:13.0264110Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0264180Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0264250Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0264360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0264430Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0264500Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0264590Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0264590Z 
2025-02-24T16:36:13.0264680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0264780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0264780Z 
2025-02-24T16:36:13.0264890Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:13.0264960Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:13.0265050Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:13.0265110Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:13.0265220Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:36:13.0265290Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:36:13.0265380Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:36:13.0265440Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:36:13.0265490Z err_msg = None
2025-02-24T16:36:13.0265490Z 
2025-02-24T16:36:13.0265580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0265630Z         if err_msg is None:
2025-02-24T16:36:13.0265700Z             if left.shape != right.shape:
2025-02-24T16:36:13.0265770Z                 raise_assert_detail(
2025-02-24T16:36:13.0265880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0265930Z                 )
2025-02-24T16:36:13.0265970Z     
2025-02-24T16:36:13.0266030Z             diff = 0
2025-02-24T16:36:13.0266120Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0266180Z                 # count up differences
2025-02-24T16:36:13.0266320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0266590Z                     diff += 1
2025-02-24T16:36:13.0266640Z     
2025-02-24T16:36:13.0266700Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0266810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0266950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0267030Z E           AssertionError: Series are different
2025-02-24T16:36:13.0267080Z E           
2025-02-24T16:36:13.0267160Z E           Series values are different (6.47773 %)
2025-02-24T16:36:13.0268400Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.0270320Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.0270690Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.0270710Z 
2025-02-24T16:36:13.0270950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0271160Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T16:36:13.0271170Z 
2025-02-24T16:36:13.0271280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0271390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0271460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0271580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0271680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0271770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0271820Z err_msg = None
2025-02-24T16:36:13.0271820Z 
2025-02-24T16:36:13.0271910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0271970Z         if err_msg is None:
2025-02-24T16:36:13.0272040Z             if left.shape != right.shape:
2025-02-24T16:36:13.0272100Z                 raise_assert_detail(
2025-02-24T16:36:13.0272220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0272260Z                 )
2025-02-24T16:36:13.0272310Z     
2025-02-24T16:36:13.0272360Z             diff = 0
2025-02-24T16:36:13.0272450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0272510Z                 # count up differences
2025-02-24T16:36:13.0272650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0272720Z                     diff += 1
2025-02-24T16:36:13.0272760Z     
2025-02-24T16:36:13.0272830Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0272930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0273230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0273320Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0273360Z E           
2025-02-24T16:36:13.0273450Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0273670Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0273890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0273970Z 
2025-02-24T16:36:13.0274530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0274540Z 
2025-02-24T16:36:13.0274670Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0274680Z 
2025-02-24T16:36:13.0274850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3e180>
2025-02-24T16:36:13.0275000Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>, attr = 'nu'
2025-02-24T16:36:13.0275010Z 
2025-02-24T16:36:13.0275120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0275210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0275270Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0275320Z         try:
2025-02-24T16:36:13.0275430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0275490Z         except KeyError:
2025-02-24T16:36:13.0275610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0275650Z     
2025-02-24T16:36:13.0275720Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0275790Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0275850Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0275960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0276020Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0276090Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0276180Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0276180Z 
2025-02-24T16:36:13.0276280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0276370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0276490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0276530Z     ???
2025-02-24T16:36:13.0276620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0276630Z 
2025-02-24T16:36:13.0276670Z >   ???
2025-02-24T16:36:13.0276770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0276820Z E   
2025-02-24T16:36:13.0276920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0277010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0277060Z E          ...
2025-02-24T16:36:13.0277130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0277230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0277320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0277370Z E          ...
2025-02-24T16:36:13.0277440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0277540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0277620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0277690Z 
2025-02-24T16:36:13.0277760Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0277990Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T16:36:13.0277990Z 
2025-02-24T16:36:13.0278100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0278210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0278280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0278390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0278500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0278620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0278680Z err_msg = None
2025-02-24T16:36:13.0278680Z 
2025-02-24T16:36:13.0278770Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0278830Z         if err_msg is None:
2025-02-24T16:36:13.0278900Z             if left.shape != right.shape:
2025-02-24T16:36:13.0278960Z                 raise_assert_detail(
2025-02-24T16:36:13.0279080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0279120Z                 )
2025-02-24T16:36:13.0279170Z     
2025-02-24T16:36:13.0279220Z             diff = 0
2025-02-24T16:36:13.0279310Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0279380Z                 # count up differences
2025-02-24T16:36:13.0279520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0279580Z                     diff += 1
2025-02-24T16:36:13.0279630Z     
2025-02-24T16:36:13.0279690Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0279800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0279940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0280040Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0280080Z E           
2025-02-24T16:36:13.0280170Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0280380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0280600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0280610Z 
2025-02-24T16:36:13.0280850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0280850Z 
2025-02-24T16:36:13.0280990Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0280990Z 
2025-02-24T16:36:13.0281160Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3e240>
2025-02-24T16:36:13.0281290Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>
2025-02-24T16:36:13.0281350Z attr = 'wavelength_cm'
2025-02-24T16:36:13.0281350Z 
2025-02-24T16:36:13.0281460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0281560Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0281620Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0281670Z         try:
2025-02-24T16:36:13.0281780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0281840Z         except KeyError:
2025-02-24T16:36:13.0282000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0282050Z     
2025-02-24T16:36:13.0282110Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0282180Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0282250Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0282350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0282420Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0282560Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0282660Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0282660Z 
2025-02-24T16:36:13.0282810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0282900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0283020Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0283060Z     ???
2025-02-24T16:36:13.0283160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0283170Z 
2025-02-24T16:36:13.0283210Z >   ???
2025-02-24T16:36:13.0283310Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0283360Z E   
2025-02-24T16:36:13.0283460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0283540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0283590Z E          ...
2025-02-24T16:36:13.0283660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0283760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0283850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0283910Z E          ...
2025-02-24T16:36:13.0283980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0284080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0284160Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0284170Z 
2025-02-24T16:36:13.0284230Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0284430Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T16:36:13.0284440Z 
2025-02-24T16:36:13.0284540Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0284650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0284730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0284840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0284950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0285020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0285080Z err_msg = None
2025-02-24T16:36:13.0285080Z 
2025-02-24T16:36:13.0285170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0285230Z         if err_msg is None:
2025-02-24T16:36:13.0285300Z             if left.shape != right.shape:
2025-02-24T16:36:13.0285360Z                 raise_assert_detail(
2025-02-24T16:36:13.0285480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0285520Z                 )
2025-02-24T16:36:13.0285570Z     
2025-02-24T16:36:13.0285620Z             diff = 0
2025-02-24T16:36:13.0285710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0285780Z                 # count up differences
2025-02-24T16:36:13.0285920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0291220Z                     diff += 1
2025-02-24T16:36:13.0291340Z     
2025-02-24T16:36:13.0291430Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0291550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0292080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0292180Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0292220Z E           
2025-02-24T16:36:13.0292320Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0292540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0292920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0292930Z 
2025-02-24T16:36:13.0293200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0293210Z 
2025-02-24T16:36:13.0293350Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0293350Z 
2025-02-24T16:36:13.0293530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3e300>
2025-02-24T16:36:13.0293700Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>, attr = 'f_lu'
2025-02-24T16:36:13.0293700Z 
2025-02-24T16:36:13.0293810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0293910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0293980Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0294030Z         try:
2025-02-24T16:36:13.0294150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0294210Z         except KeyError:
2025-02-24T16:36:13.0294330Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0294380Z     
2025-02-24T16:36:13.0294470Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0294540Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0294610Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0294720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0294780Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0294860Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0294940Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0294950Z 
2025-02-24T16:36:13.0295050Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:36:13.0295150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0295270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0295320Z     ???
2025-02-24T16:36:13.0295410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0295410Z 
2025-02-24T16:36:13.0295470Z >   ???
2025-02-24T16:36:13.0295570Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0295610Z E   
2025-02-24T16:36:13.0295720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0295800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0295860Z E          ...
2025-02-24T16:36:13.0295920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0296030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0296120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0296170Z E          ...
2025-02-24T16:36:13.0296240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0296340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0296420Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0296480Z 
2025-02-24T16:36:13.0296550Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0296780Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T16:36:13.0296790Z 
2025-02-24T16:36:13.0296900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0297010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0297090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0297190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0297350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0297430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0297480Z err_msg = None
2025-02-24T16:36:13.0297490Z 
2025-02-24T16:36:13.0297580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0297630Z         if err_msg is None:
2025-02-24T16:36:13.0297710Z             if left.shape != right.shape:
2025-02-24T16:36:13.0297770Z                 raise_assert_detail(
2025-02-24T16:36:13.0297890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0297940Z                 )
2025-02-24T16:36:13.0297980Z     
2025-02-24T16:36:13.0298030Z             diff = 0
2025-02-24T16:36:13.0298120Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0298190Z                 # count up differences
2025-02-24T16:36:13.0298330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0298390Z                     diff += 1
2025-02-24T16:36:13.0298440Z     
2025-02-24T16:36:13.0298510Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0298620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0298760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0298860Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0298900Z E           
2025-02-24T16:36:13.0298990Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0299210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0299430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0299440Z 
2025-02-24T16:36:13.0299680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0299680Z 
2025-02-24T16:36:13.0299820Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0299820Z 
2025-02-24T16:36:13.0299990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3ea80>
2025-02-24T16:36:13.0300120Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>
2025-02-24T16:36:13.0300180Z attr = 'tau_sobolevs'
2025-02-24T16:36:13.0300180Z 
2025-02-24T16:36:13.0300290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0300390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0300450Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0300500Z         try:
2025-02-24T16:36:13.0300610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0300720Z         except KeyError:
2025-02-24T16:36:13.0300840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0300880Z     
2025-02-24T16:36:13.0300960Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0301030Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0301100Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0301210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0301270Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0301340Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0301430Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0301530Z             else:
2025-02-24T16:36:13.0301600Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0301690Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0301690Z 
2025-02-24T16:36:13.0301790Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0301880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0302010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0302050Z     ???
2025-02-24T16:36:13.0302150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0302150Z 
2025-02-24T16:36:13.0302200Z >   ???
2025-02-24T16:36:13.0302300Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0302340Z E   
2025-02-24T16:36:13.0302440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0302540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0302590Z E          ...
2025-02-24T16:36:13.0302660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0302760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0302850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0302910Z E          ...
2025-02-24T16:36:13.0302980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0303080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0303150Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0303160Z 
2025-02-24T16:36:13.0303220Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0303450Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T16:36:13.0303450Z 
2025-02-24T16:36:13.0303560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0303670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0303750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0303860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0303970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0304050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0304110Z err_msg = None
2025-02-24T16:36:13.0304110Z 
2025-02-24T16:36:13.0304190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0304260Z         if err_msg is None:
2025-02-24T16:36:13.0304330Z             if left.shape != right.shape:
2025-02-24T16:36:13.0304390Z                 raise_assert_detail(
2025-02-24T16:36:13.0304510Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0304550Z                 )
2025-02-24T16:36:13.0304600Z     
2025-02-24T16:36:13.0304650Z             diff = 0
2025-02-24T16:36:13.0304740Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0304800Z                 # count up differences
2025-02-24T16:36:13.0304940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0305050Z                     diff += 1
2025-02-24T16:36:13.0305100Z     
2025-02-24T16:36:13.0305170Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0305280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0305420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0305510Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0305560Z E           
2025-02-24T16:36:13.0305650Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0305860Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0306120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0306130Z 
2025-02-24T16:36:13.0306380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0306380Z 
2025-02-24T16:36:13.0306520Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0306520Z 
2025-02-24T16:36:13.0306700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3eb40>
2025-02-24T16:36:13.0306820Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>
2025-02-24T16:36:13.0306880Z attr = 'beta_sobolev'
2025-02-24T16:36:13.0306880Z 
2025-02-24T16:36:13.0306990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0307080Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0307150Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0307190Z         try:
2025-02-24T16:36:13.0307310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0307370Z         except KeyError:
2025-02-24T16:36:13.0307480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0307530Z     
2025-02-24T16:36:13.0307590Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0307660Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0307720Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0307830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0307900Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0307970Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0308070Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0308110Z             else:
2025-02-24T16:36:13.0308190Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0308270Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0308280Z 
2025-02-24T16:36:13.0308370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0308470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0308590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0308640Z     ???
2025-02-24T16:36:13.0308740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0308740Z 
2025-02-24T16:36:13.0308790Z >   ???
2025-02-24T16:36:13.0308890Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0308930Z E   
2025-02-24T16:36:13.0309040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0309130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0309180Z E          ...
2025-02-24T16:36:13.0309330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0309430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0309530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0309570Z E          ...
2025-02-24T16:36:13.0309640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0309740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0309820Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0309820Z 
2025-02-24T16:36:13.0309890Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0310100Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T16:36:13.0310280Z 
2025-02-24T16:36:13.0310400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0310510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0310590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0310710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:36:13.0310810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:36:13.0310890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:36:13.0310940Z err_msg = None
2025-02-24T16:36:13.0310940Z 
2025-02-24T16:36:13.0311030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:36:13.0311090Z         if err_msg is None:
2025-02-24T16:36:13.0311160Z             if left.shape != right.shape:
2025-02-24T16:36:13.0311230Z                 raise_assert_detail(
2025-02-24T16:36:13.0311340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:36:13.0311400Z                 )
2025-02-24T16:36:13.0311440Z     
2025-02-24T16:36:13.0311490Z             diff = 0
2025-02-24T16:36:13.0311580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:36:13.0311650Z                 # count up differences
2025-02-24T16:36:13.0311790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:36:13.0311840Z                     diff += 1
2025-02-24T16:36:13.0311890Z     
2025-02-24T16:36:13.0311950Z             diff = diff * 100.0 / left.size
2025-02-24T16:36:13.0312070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:36:13.0312210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:36:13.0312300Z E           AssertionError: numpy array are different
2025-02-24T16:36:13.0312360Z E           
2025-02-24T16:36:13.0312440Z E           numpy array values are different (4.04858 %)
2025-02-24T16:36:13.0312660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0312870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.0312880Z 
2025-02-24T16:36:13.0313120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:36:13.0313130Z 
2025-02-24T16:36:13.0313270Z During handling of the above exception, another exception occurred:
2025-02-24T16:36:13.0313270Z 
2025-02-24T16:36:13.0313450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11db3ecc0>
2025-02-24T16:36:13.0313610Z plasma = <tardis.plasma.base.BasePlasma object at 0x15391b3b0>, attr = 'j_blues'
2025-02-24T16:36:13.0313650Z 
2025-02-24T16:36:13.0313770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:36:13.0313860Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:36:13.0313920Z         key = f"plasma/{attr}"
2025-02-24T16:36:13.0313970Z         try:
2025-02-24T16:36:13.0314090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:36:13.0314150Z         except KeyError:
2025-02-24T16:36:13.0314260Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:36:13.0314310Z     
2025-02-24T16:36:13.0314370Z         if hasattr(plasma, attr):
2025-02-24T16:36:13.0314490Z             actual = getattr(plasma, attr)
2025-02-24T16:36:13.0314550Z             if attr == "selected_atoms":
2025-02-24T16:36:13.0314660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:36:13.0314720Z             elif actual.ndim == 1:
2025-02-24T16:36:13.0314790Z                 actual = pd.Series(actual)
2025-02-24T16:36:13.0314890Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:36:13.0314930Z             else:
2025-02-24T16:36:13.0315010Z                 actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0315090Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:36:13.0315100Z 
2025-02-24T16:36:13.0315190Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:36:13.0315290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0315410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0315460Z     ???
2025-02-24T16:36:13.0315550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0315550Z 
2025-02-24T16:36:13.0315600Z >   ???
2025-02-24T16:36:13.0315710Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.0315750Z E   
2025-02-24T16:36:13.0315850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.0315940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0315990Z E          ...
2025-02-24T16:36:13.0316060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0316170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0316260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.0316300Z E          ...
2025-02-24T16:36:13.0316370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.0316470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.0316550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.0316560Z 
2025-02-24T16:36:13.0316630Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0316760Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T16:36:13.0316760Z 
2025-02-24T16:36:13.0316940Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12f4f40b0>
2025-02-24T16:36:13.0317010Z attr = 'stimulated_emission_factor'
2025-02-24T16:36:13.0317220Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x11db9ddf0>
2025-02-24T16:36:13.0317220Z 
2025-02-24T16:36:13.0317340Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:36:13.0317470Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:36:13.0317570Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:36:13.0317680Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:36:13.0317770Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:36:13.0317840Z             if hasattr(actual, "cgs"):
2025-02-24T16:36:13.0317910Z                 actual = actual.cgs.value
2025-02-24T16:36:13.0317990Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:36:13.0318000Z 
2025-02-24T16:36:13.0318070Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:36:13.0318210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0318220Z 
2025-02-24T16:36:13.0318460Z args = (<function assert_allclose.<locals>.compare at 0x3037880e0>, array([[0.        , 0.        , 0.        , ..., 0.      ...1,
2025-02-24T16:36:13.0318520Z         0.01476858],
2025-02-24T16:36:13.0318630Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T16:36:13.0318680Z         0.01473787]]))
2025-02-24T16:36:13.0318870Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0318880Z 
2025-02-24T16:36:13.0318970Z     @wraps(func)
2025-02-24T16:36:13.0319040Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0319110Z         with self._recreate_cm():
2025-02-24T16:36:13.0319170Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0319230Z E           AssertionError: 
2025-02-24T16:36:13.0319320Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0319370Z E           
2025-02-24T16:36:13.0319460Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:36:13.0319530Z E           Max absolute difference: 1.
2025-02-24T16:36:13.0319590Z E           Max relative difference: 1.
2025-02-24T16:36:13.0319700Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:36:13.0319790Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:36:13.0319880Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:36:13.0319980Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:36:13.0320070Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:36:13.0320160Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:36:13.0320160Z 
2025-02-24T16:36:13.0320330Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0320460Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T16:36:13.0320460Z 
2025-02-24T16:36:13.0320640Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12f4f40b0>
2025-02-24T16:36:13.0320700Z attr = 'lines_lower_level_index'
2025-02-24T16:36:13.0320910Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x3061ff2c0>
2025-02-24T16:36:13.0320910Z 
2025-02-24T16:36:13.0321030Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:36:13.0321170Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:36:13.0321270Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:36:13.0321370Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:36:13.0321470Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:36:13.0321540Z             if hasattr(actual, "cgs"):
2025-02-24T16:36:13.0321610Z                 actual = actual.cgs.value
2025-02-24T16:36:13.0321690Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:36:13.0321690Z 
2025-02-24T16:36:13.0321770Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:36:13.0321870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0321870Z 
2025-02-24T16:36:13.0322180Z args = (<function assert_allclose.<locals>.compare at 0x152b42520>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T16:36:13.0322390Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0322390Z 
2025-02-24T16:36:13.0322440Z     @wraps(func)
2025-02-24T16:36:13.0322500Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0322660Z         with self._recreate_cm():
2025-02-24T16:36:13.0322830Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0322890Z E           AssertionError: 
2025-02-24T16:36:13.0322970Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0323020Z E           
2025-02-24T16:36:13.0323100Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:36:13.0323170Z E           Max absolute difference: 4005
2025-02-24T16:36:13.0323250Z E           Max relative difference: 26.00649351
2025-02-24T16:36:13.0323330Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:36:13.0323420Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:36:13.0323420Z 
2025-02-24T16:36:13.0323630Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0323760Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T16:36:13.0323760Z 
2025-02-24T16:36:13.0323940Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12f4f40b0>
2025-02-24T16:36:13.0324010Z attr = 'lines_upper_level_index'
2025-02-24T16:36:13.0324220Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1517a7d40>
2025-02-24T16:36:13.0324220Z 
2025-02-24T16:36:13.0324340Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:36:13.0324470Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:36:13.0324570Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:36:13.0324680Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:36:13.0324770Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:36:13.0324840Z             if hasattr(actual, "cgs"):
2025-02-24T16:36:13.0324910Z                 actual = actual.cgs.value
2025-02-24T16:36:13.0324990Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:36:13.0325000Z 
2025-02-24T16:36:13.0325080Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:36:13.0325170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0325170Z 
2025-02-24T16:36:13.0325490Z args = (<function assert_allclose.<locals>.compare at 0x152b32520>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T16:36:13.0325710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0325710Z 
2025-02-24T16:36:13.0325770Z     @wraps(func)
2025-02-24T16:36:13.0325840Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0325900Z         with self._recreate_cm():
2025-02-24T16:36:13.0325980Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0326040Z E           AssertionError: 
2025-02-24T16:36:13.0326130Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0326180Z E           
2025-02-24T16:36:13.0326270Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:36:13.0326340Z E           Max absolute difference: 4046
2025-02-24T16:36:13.0326420Z E           Max relative difference: 24.82208589
2025-02-24T16:36:13.0326520Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:36:13.0326600Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:36:13.0326610Z 
2025-02-24T16:36:13.0326780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0326910Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T16:36:13.0326910Z 
2025-02-24T16:36:13.0327100Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12f4f40b0>
2025-02-24T16:36:13.0327160Z attr = 'beta_sobolev'
2025-02-24T16:36:13.0327380Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x3035b7860>
2025-02-24T16:36:13.0327380Z 
2025-02-24T16:36:13.0327510Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:36:13.0327960Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:36:13.0328050Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:36:13.0328160Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:36:13.0328260Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:36:13.0328340Z             if hasattr(actual, "cgs"):
2025-02-24T16:36:13.0328410Z                 actual = actual.cgs.value
2025-02-24T16:36:13.0328500Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:36:13.0328500Z 
2025-02-24T16:36:13.0328590Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:36:13.0328770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0328780Z 
2025-02-24T16:36:13.0329020Z args = (<function assert_allclose.<locals>.compare at 0x152b42c00>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.0329080Z        [1., 1., 1.,.....,
2025-02-24T16:36:13.0329150Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.0329230Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.0329290Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:36:13.0329510Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0329520Z 
2025-02-24T16:36:13.0329570Z     @wraps(func)
2025-02-24T16:36:13.0329650Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0329720Z         with self._recreate_cm():
2025-02-24T16:36:13.0329790Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0329850Z E           AssertionError: 
2025-02-24T16:36:13.0329940Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0329990Z E           
2025-02-24T16:36:13.0330080Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:36:13.0330150Z E           Max absolute difference: 0.99984222
2025-02-24T16:36:13.0330230Z E           Max relative difference: 6337.12154973
2025-02-24T16:36:13.0330300Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.0330370Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.0330440Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:36:13.0330510Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.0330580Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.0330650Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:36:13.0330660Z 
2025-02-24T16:36:13.0330820Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0330940Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T16:36:13.0330950Z 
2025-02-24T16:36:13.0331130Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12f4f40b0>
2025-02-24T16:36:13.0331180Z attr = 'lines'
2025-02-24T16:36:13.0331390Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x3035b6630>
2025-02-24T16:36:13.0331400Z 
2025-02-24T16:36:13.0331510Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:36:13.0331640Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:36:13.0331750Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:36:13.0331850Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:36:13.0331950Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:36:13.0332020Z             if hasattr(actual, "cgs"):
2025-02-24T16:36:13.0332080Z                 actual = actual.cgs.value
2025-02-24T16:36:13.0332170Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:36:13.0332170Z 
2025-02-24T16:36:13.0332250Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:36:13.0332340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0332350Z 
2025-02-24T16:36:13.0332750Z args = (<function assert_allclose.<locals>.compare at 0x303789d00>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02, ....       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T16:36:13.0332840Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T16:36:13.0333040Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0333040Z 
2025-02-24T16:36:13.0333090Z     @wraps(func)
2025-02-24T16:36:13.0333150Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0333220Z         with self._recreate_cm():
2025-02-24T16:36:13.0333280Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0333350Z E           AssertionError: 
2025-02-24T16:36:13.0333480Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0333540Z E           
2025-02-24T16:36:13.0333620Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:36:13.0333700Z E           Max absolute difference: 4.25260542e+12
2025-02-24T16:36:13.0333780Z E           Max relative difference: 18196.0085861
2025-02-24T16:36:13.0333910Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:36:13.0333980Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:36:13.0334100Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:36:13.0334230Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:36:13.0334290Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:36:13.0334410Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:36:13.0334420Z 
2025-02-24T16:36:13.0334580Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0334700Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T16:36:13.0334700Z 
2025-02-24T16:36:13.0334880Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12f4f40b0>
2025-02-24T16:36:13.0334940Z attr = 'f_lu'
2025-02-24T16:36:13.0335150Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x306226150>
2025-02-24T16:36:13.0335150Z 
2025-02-24T16:36:13.0335270Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:36:13.0335400Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:36:13.0335500Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:36:13.0335600Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:36:13.0335700Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:36:13.0335770Z             if hasattr(actual, "cgs"):
2025-02-24T16:36:13.0335840Z                 actual = actual.cgs.value
2025-02-24T16:36:13.0335920Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:36:13.0335920Z 
2025-02-24T16:36:13.0336000Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:36:13.0336100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0336110Z 
2025-02-24T16:36:13.0336470Z args = (<function assert_allclose.<locals>.compare at 0x3061c8f40>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, .....), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T16:36:13.0336550Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T16:36:13.0336750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0336760Z 
2025-02-24T16:36:13.0336810Z     @wraps(func)
2025-02-24T16:36:13.0336870Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0336940Z         with self._recreate_cm():
2025-02-24T16:36:13.0337000Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0337070Z E           AssertionError: 
2025-02-24T16:36:13.0337150Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0337240Z E           
2025-02-24T16:36:13.0337330Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:36:13.0337400Z E           Max absolute difference: 2.92713618
2025-02-24T16:36:13.0337480Z E           Max relative difference: 18196.0085861
2025-02-24T16:36:13.0337600Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:36:13.0337670Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:36:13.0337790Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:36:13.0337860Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:36:13.0337860Z 
2025-02-24T16:36:13.0338020Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0338190Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T16:36:13.0338200Z 
2025-02-24T16:36:13.0338370Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12f4f40b0>
2025-02-24T16:36:13.0338430Z attr = 'tau_sobolevs'
2025-02-24T16:36:13.0338640Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x3037af6e0>
2025-02-24T16:36:13.0338650Z 
2025-02-24T16:36:13.0338760Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:36:13.0338900Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:36:13.0339000Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:36:13.0339100Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:36:13.0339200Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:36:13.0339270Z             if hasattr(actual, "cgs"):
2025-02-24T16:36:13.0339340Z                 actual = actual.cgs.value
2025-02-24T16:36:13.0339430Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:36:13.0339430Z 
2025-02-24T16:36:13.0339510Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:36:13.0339610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0339610Z 
2025-02-24T16:36:13.0339950Z args = (<function assert_allclose.<locals>.compare at 0x3037896c0>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ....       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T16:36:13.0340040Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T16:36:13.0340240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0340240Z 
2025-02-24T16:36:13.0340290Z     @wraps(func)
2025-02-24T16:36:13.0340350Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0340420Z         with self._recreate_cm():
2025-02-24T16:36:13.0340490Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0340550Z E           AssertionError: 
2025-02-24T16:36:13.0340630Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0340680Z E           
2025-02-24T16:36:13.0340780Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:36:13.0344870Z E           Max absolute difference: 282815.33818472
2025-02-24T16:36:13.0345020Z E           Max relative difference: 4.12352828e+47
2025-02-24T16:36:13.0345150Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:36:13.0345220Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:36:13.0345340Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:36:13.0345460Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:36:13.0345530Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:36:13.0345650Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:36:13.0345660Z 
2025-02-24T16:36:13.0345820Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0345960Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T16:36:13.0346160Z 
2025-02-24T16:36:13.0346340Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0346400Z attr = 'iterations_w'
2025-02-24T16:36:13.0346610Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x176ad9a60>
2025-02-24T16:36:13.0346610Z 
2025-02-24T16:36:13.0346680Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0346730Z         "attr",
2025-02-24T16:36:13.0346780Z         [
2025-02-24T16:36:13.0346840Z             "iterations_w",
2025-02-24T16:36:13.0346900Z             "iterations_t_rad",
2025-02-24T16:36:13.0346970Z             "iterations_electron_densities",
2025-02-24T16:36:13.0347090Z             "iterations_t_inner",
2025-02-24T16:36:13.0347140Z         ],
2025-02-24T16:36:13.0347190Z     )
2025-02-24T16:36:13.0347350Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0347440Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:36:13.0347510Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0347570Z             actual = actual.value
2025-02-24T16:36:13.0347650Z         actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0347750Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0347890Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0347900Z 
2025-02-24T16:36:13.0347990Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:36:13.0348080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0348200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0348250Z     ???
2025-02-24T16:36:13.0348340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0348350Z 
2025-02-24T16:36:13.0348400Z >   ???
2025-02-24T16:36:13.0348540Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.0348600Z E   
2025-02-24T16:36:13.0348730Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:36:13.0348780Z E   [index]: [0, 1]
2025-02-24T16:36:13.0348870Z E   [left]:  [0.40039163797855976, 0.4500690173218345]
2025-02-24T16:36:13.0348950Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:36:13.0349090Z E   At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T16:36:13.0349090Z 
2025-02-24T16:36:13.0349160Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0349290Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0349690Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:36:13.0350050Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:36:13.0350180Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:36:13.0350190Z 
2025-02-24T16:36:13.0350190Z 
2025-02-24T16:36:13.0350370Z Packets:                                                                                   4031/? [04:30<00:00, 11.39it/s]   [A
2025-02-24T16:36:13.0350380Z 
2025-02-24T16:36:13.0350550Z Packets:                                                                                   11166/? [04:30<00:00, 49.06it/s][A
2025-02-24T16:36:13.0350560Z 
2025-02-24T16:36:13.0350730Z Packets:                                                                                   19512/? [04:30<00:00, 111.92it/s][A
2025-02-24T16:36:13.0350730Z 
2025-02-24T16:36:13.0350900Z Packets:                                                                                   29782/? [04:30<00:00, 222.26it/s][A
2025-02-24T16:36:13.0350910Z 
2025-02-24T16:36:13.0351090Z Packets:                                                                                   38792/? [04:30<00:00, 360.15it/s][A
2025-02-24T16:36:13.0367650Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:30<00:00, 95.11s/it]
2025-02-24T16:36:13.0367780Z 
2025-02-24T16:36:13.0368480Z Packets:                                                                                   44030/? [04:30<00:00, 360.15it/s][A
2025-02-24T16:36:13.0368500Z 
2025-02-24T16:36:13.0368970Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T16:36:13.0368980Z 
2025-02-24T16:36:13.0369490Z Packets:   ████████████████▉                                                               8473/40000 [00:00<00:00, 40806.59it/s][A
2025-02-24T16:36:13.0370320Z 
2025-02-24T16:36:13.0371310Z Packets:   █████████████████████████▊                                                      12876/40000 [00:00<00:00, 42117.48it/s][A
2025-02-24T16:36:13.0371350Z 
2025-02-24T16:36:13.0372250Z Packets:   ██████████████████████████████████▉                                             17449/40000 [00:00<00:00, 43441.87it/s][A
2025-02-24T16:36:13.0372310Z 
2025-02-24T16:36:13.0372550Z Packets:   ███████████████████████████████████████████▋                                    21857/40000 [00:00<00:00, 41360.25it/s][A
2025-02-24T16:36:13.0372560Z 
2025-02-24T16:36:13.0372780Z Packets:   ████████████████████████████████████████████████████                            26023/40000 [00:00<00:00, 27448.31it/s][A
2025-02-24T16:36:13.0372790Z 
2025-02-24T16:36:13.0373040Z Packets:   ██████████████████████████████████████████████████████████▌                     29264/40000 [00:00<00:00, 28150.94it/s][A
2025-02-24T16:36:13.0373040Z 
2025-02-24T16:36:13.0373300Z Packets:   ██████████████████████████████████████████████████████████████████▏             33098/40000 [00:00<00:00, 30650.99it/s][A
2025-02-24T16:36:13.0373320Z 
2025-02-24T16:36:13.0373560Z Packets:   ████████████████████████████████████████████████████████████████████████▉       36486/40000 [00:01<00:00, 30194.77it/s][A
2025-02-24T16:36:13.0373580Z 
2025-02-24T16:36:13.0373840Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍39721/40000 [00:01<00:00, 30354.43it/s][A
2025-02-24T16:36:13.0373960Z Iterations:                                                                                6/? [04:33<00:00, 63.63s/it]
2025-02-24T16:36:13.0373970Z 
2025-02-24T16:36:13.0374210Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 30354.43it/s][A
2025-02-24T16:36:13.0374350Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0374750Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:36:13.0374910Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T16:36:13.0374910Z 
2025-02-24T16:36:13.0375340Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0375400Z attr = 'iterations_t_rad'
2025-02-24T16:36:13.0375620Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x170c1a900>
2025-02-24T16:36:13.0375630Z 
2025-02-24T16:36:13.0375700Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0375750Z         "attr",
2025-02-24T16:36:13.0375800Z         [
2025-02-24T16:36:13.0375860Z             "iterations_w",
2025-02-24T16:36:13.0375920Z             "iterations_t_rad",
2025-02-24T16:36:13.0376000Z             "iterations_electron_densities",
2025-02-24T16:36:13.0376060Z             "iterations_t_inner",
2025-02-24T16:36:13.0376190Z         ],
2025-02-24T16:36:13.0376250Z     )
2025-02-24T16:36:13.0376410Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0376510Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:36:13.0376580Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0376650Z             actual = actual.value
2025-02-24T16:36:13.0376720Z         actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0376820Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0376970Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0376980Z 
2025-02-24T16:36:13.0377070Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:36:13.0377170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0377290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0377340Z     ???
2025-02-24T16:36:13.0377440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0377450Z 
2025-02-24T16:36:13.0377500Z >   ???
2025-02-24T16:36:13.0377650Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.0377690Z E   
2025-02-24T16:36:13.0377830Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:36:13.0377890Z E   [index]: [0, 1]
2025-02-24T16:36:13.0377980Z E   [left]:  [9967.488442185557, 10091.396322818851]
2025-02-24T16:36:13.0378060Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:36:13.0378220Z E   At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T16:36:13.0378230Z 
2025-02-24T16:36:13.0378290Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0378450Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T16:36:13.0378450Z 
2025-02-24T16:36:13.0378620Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0378690Z attr = 'iterations_electron_densities'
2025-02-24T16:36:13.0378910Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x171eb3fe0>
2025-02-24T16:36:13.0378910Z 
2025-02-24T16:36:13.0378980Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0379040Z         "attr",
2025-02-24T16:36:13.0379090Z         [
2025-02-24T16:36:13.0379150Z             "iterations_w",
2025-02-24T16:36:13.0379210Z             "iterations_t_rad",
2025-02-24T16:36:13.0379280Z             "iterations_electron_densities",
2025-02-24T16:36:13.0379340Z             "iterations_t_inner",
2025-02-24T16:36:13.0379390Z         ],
2025-02-24T16:36:13.0379440Z     )
2025-02-24T16:36:13.0379590Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0379690Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:36:13.0379750Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0379820Z             actual = actual.value
2025-02-24T16:36:13.0379890Z         actual = pd.DataFrame(actual)
2025-02-24T16:36:13.0379990Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0380160Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0380170Z 
2025-02-24T16:36:13.0380360Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:36:13.0380460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0380580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0380640Z     ???
2025-02-24T16:36:13.0380740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0380740Z 
2025-02-24T16:36:13.0380790Z >   ???
2025-02-24T16:36:13.0380940Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.0380990Z E   
2025-02-24T16:36:13.0381120Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:36:13.0381260Z E   [index]: [0, 1]
2025-02-24T16:36:13.0381350Z E   [left]:  [2869544645.3209715, 2881024886.0882792]
2025-02-24T16:36:13.0381440Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:36:13.0381580Z E   At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-02-24T16:36:13.0381590Z 
2025-02-24T16:36:13.0381660Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0381800Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T16:36:13.0381810Z 
2025-02-24T16:36:13.0381980Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0382040Z attr = 'nu_bar_estimator'
2025-02-24T16:36:13.0382250Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x171ea23c0>
2025-02-24T16:36:13.0382250Z 
2025-02-24T16:36:13.0382320Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0382370Z         "attr",
2025-02-24T16:36:13.0382420Z         [
2025-02-24T16:36:13.0382490Z             "nu_bar_estimator",
2025-02-24T16:36:13.0382540Z             "j_estimator",
2025-02-24T16:36:13.0382600Z             "t_radiative",
2025-02-24T16:36:13.0382660Z             "dilution_factor",
2025-02-24T16:36:13.0382720Z             "output_nus",
2025-02-24T16:36:13.0382780Z             "output_energies",
2025-02-24T16:36:13.0382830Z         ],
2025-02-24T16:36:13.0382880Z     )
2025-02-24T16:36:13.0383030Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0383140Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:36:13.0383190Z             actual = getattr(
2025-02-24T16:36:13.0383350Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:36:13.0383400Z                 attr,
2025-02-24T16:36:13.0383460Z             )
2025-02-24T16:36:13.0383570Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:36:13.0383700Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:36:13.0383800Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:36:13.0383860Z             actual = getattr(
2025-02-24T16:36:13.0384000Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:36:13.0384060Z                 attr,
2025-02-24T16:36:13.0384110Z             )
2025-02-24T16:36:13.0384150Z         else:
2025-02-24T16:36:13.0384260Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:36:13.0384310Z     
2025-02-24T16:36:13.0384380Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0384440Z             actual = actual.value
2025-02-24T16:36:13.0384500Z         actual = pd.Series(actual)
2025-02-24T16:36:13.0384610Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0384750Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0384750Z 
2025-02-24T16:36:13.0384850Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:36:13.0384940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0385060Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0385110Z     ???
2025-02-24T16:36:13.0385200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0385290Z 
2025-02-24T16:36:13.0385330Z >   ???
2025-02-24T16:36:13.0385410Z E   AssertionError: Series are different
2025-02-24T16:36:13.0385450Z E   
2025-02-24T16:36:13.0385530Z E   Series values are different (100.0 %)
2025-02-24T16:36:13.0385640Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:36:13.0386580Z E   [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-02-24T16:36:13.0387580Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:36:13.0387750Z E   At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-02-24T16:36:13.0387750Z 
2025-02-24T16:36:13.0387810Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0387950Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T16:36:13.0387960Z 
2025-02-24T16:36:13.0388120Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0388180Z attr = 'j_estimator'
2025-02-24T16:36:13.0388400Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x171e90a70>
2025-02-24T16:36:13.0388420Z 
2025-02-24T16:36:13.0388490Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0388540Z         "attr",
2025-02-24T16:36:13.0388580Z         [
2025-02-24T16:36:13.0388640Z             "nu_bar_estimator",
2025-02-24T16:36:13.0388700Z             "j_estimator",
2025-02-24T16:36:13.0388760Z             "t_radiative",
2025-02-24T16:36:13.0388820Z             "dilution_factor",
2025-02-24T16:36:13.0388870Z             "output_nus",
2025-02-24T16:36:13.0389040Z             "output_energies",
2025-02-24T16:36:13.0389080Z         ],
2025-02-24T16:36:13.0389130Z     )
2025-02-24T16:36:13.0389270Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0389380Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:36:13.0389430Z             actual = getattr(
2025-02-24T16:36:13.0389590Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:36:13.0389640Z                 attr,
2025-02-24T16:36:13.0389700Z             )
2025-02-24T16:36:13.0389790Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:36:13.0389910Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:36:13.0390010Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:36:13.0390070Z             actual = getattr(
2025-02-24T16:36:13.0390210Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:36:13.0390260Z                 attr,
2025-02-24T16:36:13.0390300Z             )
2025-02-24T16:36:13.0390350Z         else:
2025-02-24T16:36:13.0390460Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:36:13.0390510Z     
2025-02-24T16:36:13.0390580Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0390640Z             actual = actual.value
2025-02-24T16:36:13.0390710Z         actual = pd.Series(actual)
2025-02-24T16:36:13.0390810Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0391220Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0391230Z 
2025-02-24T16:36:13.0391340Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:36:13.0391440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0391560Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0391610Z     ???
2025-02-24T16:36:13.0391700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0391700Z 
2025-02-24T16:36:13.0391750Z >   ???
2025-02-24T16:36:13.0391830Z E   AssertionError: Series are different
2025-02-24T16:36:13.0392140Z E   
2025-02-24T16:36:13.0392220Z E   Series values are different (100.0 %)
2025-02-24T16:36:13.0393640Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:36:13.0394470Z E   [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-02-24T16:36:13.0398930Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:36:13.0399130Z E   At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-02-24T16:36:13.0399130Z 
2025-02-24T16:36:13.0399210Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0399340Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T16:36:13.0399350Z 
2025-02-24T16:36:13.0399550Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0399610Z attr = 't_radiative'
2025-02-24T16:36:13.0399820Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x170bb3a70>
2025-02-24T16:36:13.0399830Z 
2025-02-24T16:36:13.0399900Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0399950Z         "attr",
2025-02-24T16:36:13.0400000Z         [
2025-02-24T16:36:13.0400060Z             "nu_bar_estimator",
2025-02-24T16:36:13.0400120Z             "j_estimator",
2025-02-24T16:36:13.0400170Z             "t_radiative",
2025-02-24T16:36:13.0400240Z             "dilution_factor",
2025-02-24T16:36:13.0400300Z             "output_nus",
2025-02-24T16:36:13.0400360Z             "output_energies",
2025-02-24T16:36:13.0400410Z         ],
2025-02-24T16:36:13.0400450Z     )
2025-02-24T16:36:13.0400610Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0400720Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:36:13.0400780Z             actual = getattr(
2025-02-24T16:36:13.0400940Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:36:13.0401000Z                 attr,
2025-02-24T16:36:13.0401040Z             )
2025-02-24T16:36:13.0401140Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:36:13.0401270Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:36:13.0401370Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:36:13.0401430Z             actual = getattr(
2025-02-24T16:36:13.0401570Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:36:13.0401630Z                 attr,
2025-02-24T16:36:13.0401670Z             )
2025-02-24T16:36:13.0401720Z         else:
2025-02-24T16:36:13.0401830Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:36:13.0402120Z     
2025-02-24T16:36:13.0402190Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0402250Z             actual = actual.value
2025-02-24T16:36:13.0402320Z         actual = pd.Series(actual)
2025-02-24T16:36:13.0402420Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0402570Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0402570Z 
2025-02-24T16:36:13.0402670Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:36:13.0402760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0402880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0403010Z     ???
2025-02-24T16:36:13.0403120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0403120Z 
2025-02-24T16:36:13.0403170Z >   ???
2025-02-24T16:36:13.0403240Z E   AssertionError: Series are different
2025-02-24T16:36:13.0403290Z E   
2025-02-24T16:36:13.0403360Z E   Series values are different (90.0 %)
2025-02-24T16:36:13.0403470Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:36:13.0404250Z E   [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-02-24T16:36:13.0405030Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:36:13.0405190Z E   At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T16:36:13.0405190Z 
2025-02-24T16:36:13.0405260Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0405390Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T16:36:13.0405390Z 
2025-02-24T16:36:13.0405560Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0405620Z attr = 'dilution_factor'
2025-02-24T16:36:13.0405840Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x171f14290>
2025-02-24T16:36:13.0405840Z 
2025-02-24T16:36:13.0405920Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0405960Z         "attr",
2025-02-24T16:36:13.0406010Z         [
2025-02-24T16:36:13.0406070Z             "nu_bar_estimator",
2025-02-24T16:36:13.0406130Z             "j_estimator",
2025-02-24T16:36:13.0406180Z             "t_radiative",
2025-02-24T16:36:13.0406240Z             "dilution_factor",
2025-02-24T16:36:13.0406300Z             "output_nus",
2025-02-24T16:36:13.0406360Z             "output_energies",
2025-02-24T16:36:13.0406410Z         ],
2025-02-24T16:36:13.0406460Z     )
2025-02-24T16:36:13.0406610Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0406700Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:36:13.0406760Z             actual = getattr(
2025-02-24T16:36:13.0406920Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:36:13.0406970Z                 attr,
2025-02-24T16:36:13.0407020Z             )
2025-02-24T16:36:13.0407120Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:36:13.0407240Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:36:13.0407330Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:36:13.0407480Z             actual = getattr(
2025-02-24T16:36:13.0407620Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:36:13.0407670Z                 attr,
2025-02-24T16:36:13.0407720Z             )
2025-02-24T16:36:13.0407770Z         else:
2025-02-24T16:36:13.0407880Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:36:13.0407930Z     
2025-02-24T16:36:13.0408000Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0408070Z             actual = actual.value
2025-02-24T16:36:13.0408140Z         actual = pd.Series(actual)
2025-02-24T16:36:13.0408240Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0408390Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0408450Z 
2025-02-24T16:36:13.0408560Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:36:13.0408650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0408770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0408830Z     ???
2025-02-24T16:36:13.0408920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0408920Z 
2025-02-24T16:36:13.0408970Z >   ???
2025-02-24T16:36:13.0409040Z E   AssertionError: Series are different
2025-02-24T16:36:13.0409090Z E   
2025-02-24T16:36:13.0409160Z E   Series values are different (95.0 %)
2025-02-24T16:36:13.0409260Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:36:13.0410110Z E   [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-02-24T16:36:13.0410970Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:36:13.0411120Z E   At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T16:36:13.0411130Z 
2025-02-24T16:36:13.0411200Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0411330Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T16:36:13.0411340Z 
2025-02-24T16:36:13.0411510Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0411560Z attr = 'output_nus'
2025-02-24T16:36:13.0411780Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x171f15b50>
2025-02-24T16:36:13.0411780Z 
2025-02-24T16:36:13.0411860Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0411900Z         "attr",
2025-02-24T16:36:13.0411950Z         [
2025-02-24T16:36:13.0412010Z             "nu_bar_estimator",
2025-02-24T16:36:13.0412070Z             "j_estimator",
2025-02-24T16:36:13.0412120Z             "t_radiative",
2025-02-24T16:36:13.0412180Z             "dilution_factor",
2025-02-24T16:36:13.0412240Z             "output_nus",
2025-02-24T16:36:13.0412290Z             "output_energies",
2025-02-24T16:36:13.0412340Z         ],
2025-02-24T16:36:13.0412390Z     )
2025-02-24T16:36:13.0412530Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0412630Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:36:13.0412680Z             actual = getattr(
2025-02-24T16:36:13.0412840Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:36:13.0412960Z                 attr,
2025-02-24T16:36:13.0413020Z             )
2025-02-24T16:36:13.0413110Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:36:13.0413240Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:36:13.0413330Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:36:13.0413380Z             actual = getattr(
2025-02-24T16:36:13.0413530Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:36:13.0413580Z                 attr,
2025-02-24T16:36:13.0413630Z             )
2025-02-24T16:36:13.0413680Z         else:
2025-02-24T16:36:13.0413790Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:36:13.0413890Z     
2025-02-24T16:36:13.0413960Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0414030Z             actual = actual.value
2025-02-24T16:36:13.0414090Z         actual = pd.Series(actual)
2025-02-24T16:36:13.0414200Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0414360Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0414360Z 
2025-02-24T16:36:13.0414460Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:36:13.0414550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0414670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0414730Z     ???
2025-02-24T16:36:13.0414820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0414830Z 
2025-02-24T16:36:13.0414880Z >   ???
2025-02-24T16:36:13.0414950Z E   AssertionError: Series are different
2025-02-24T16:36:13.0415000Z E   
2025-02-24T16:36:13.0415080Z E   Series values are different (5.1125 %)
2025-02-24T16:36:13.0415450Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.0419750Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:36:13.0424230Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:36:13.0424550Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:36:13.0424550Z 
2025-02-24T16:36:13.0424620Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0424770Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T16:36:13.0424770Z 
2025-02-24T16:36:13.0424960Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x170bb82f0>
2025-02-24T16:36:13.0425030Z attr = 'output_energies'
2025-02-24T16:36:13.0425240Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x171f178f0>
2025-02-24T16:36:13.0425250Z 
2025-02-24T16:36:13.0425320Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0425370Z         "attr",
2025-02-24T16:36:13.0425420Z         [
2025-02-24T16:36:13.0425480Z             "nu_bar_estimator",
2025-02-24T16:36:13.0425550Z             "j_estimator",
2025-02-24T16:36:13.0425610Z             "t_radiative",
2025-02-24T16:36:13.0425670Z             "dilution_factor",
2025-02-24T16:36:13.0425730Z             "output_nus",
2025-02-24T16:36:13.0425790Z             "output_energies",
2025-02-24T16:36:13.0425850Z         ],
2025-02-24T16:36:13.0425890Z     )
2025-02-24T16:36:13.0426040Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:36:13.0426130Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:36:13.0426180Z             actual = getattr(
2025-02-24T16:36:13.0426350Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:36:13.0426400Z                 attr,
2025-02-24T16:36:13.0426450Z             )
2025-02-24T16:36:13.0426540Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:36:13.0426670Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:36:13.0426840Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:36:13.0426900Z             actual = getattr(
2025-02-24T16:36:13.0427100Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:36:13.0427160Z                 attr,
2025-02-24T16:36:13.0427210Z             )
2025-02-24T16:36:13.0427260Z         else:
2025-02-24T16:36:13.0427370Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:36:13.0427420Z     
2025-02-24T16:36:13.0427480Z         if hasattr(actual, "value"):
2025-02-24T16:36:13.0427540Z             actual = actual.value
2025-02-24T16:36:13.0427610Z         actual = pd.Series(actual)
2025-02-24T16:36:13.0427710Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:36:13.0427930Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:36:13.0427940Z 
2025-02-24T16:36:13.0428030Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:36:13.0428120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0428240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:36:13.0428290Z     ???
2025-02-24T16:36:13.0428380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0428390Z 
2025-02-24T16:36:13.0428430Z >   ???
2025-02-24T16:36:13.0428510Z E   AssertionError: Series are different
2025-02-24T16:36:13.0428550Z E   
2025-02-24T16:36:13.0428630Z E   Series values are different (1.3025 %)
2025-02-24T16:36:13.0428930Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.0433910Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:36:13.0439050Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:36:13.0439380Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:36:13.0439390Z 
2025-02-24T16:36:13.0439460Z testing.pyx:173: AssertionError
2025-02-24T16:36:13.0439630Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T16:36:13.0439630Z 
2025-02-24T16:36:13.0439840Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11dc75ac0>
2025-02-24T16:36:13.0439990Z simulation = <tardis.simulation.base.Simulation object at 0x159458c80>
2025-02-24T16:36:13.0439990Z 
2025-02-24T16:36:13.0440100Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T16:36:13.0440210Z         transport_state = simulation.transport.transport_state
2025-02-24T16:36:13.0440370Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:36:13.0440420Z     
2025-02-24T16:36:13.0440580Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:36:13.0440680Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T16:36:13.0440830Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:36:13.0440910Z         expected = self.get_expected_data(key)
2025-02-24T16:36:13.0441030Z     
2025-02-24T16:36:13.0441130Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0441170Z     
2025-02-24T16:36:13.0441240Z >       assert_quantity_allclose(
2025-02-24T16:36:13.0441290Z             result,
2025-02-24T16:36:13.0441340Z             luminosity,
2025-02-24T16:36:13.0441390Z         )
2025-02-24T16:36:13.0441390Z 
2025-02-24T16:36:13.0441490Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T16:36:13.0441580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0441850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0441970Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0442070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0442070Z 
2025-02-24T16:36:13.0442430Z args = (<function assert_allclose.<locals>.compare at 0x173df5800>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:36:13.0442520Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0442720Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0442730Z 
2025-02-24T16:36:13.0442780Z     @wraps(func)
2025-02-24T16:36:13.0442850Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0442920Z         with self._recreate_cm():
2025-02-24T16:36:13.0442990Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0443050Z E           AssertionError: 
2025-02-24T16:36:13.0443150Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0443190Z E           
2025-02-24T16:36:13.0443280Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:36:13.0443370Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:36:13.0443440Z E           Max relative difference: 1.
2025-02-24T16:36:13.0443570Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.0443640Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0443760Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.0443830Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0443830Z 
2025-02-24T16:36:13.0444000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0444170Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T16:36:13.0444180Z 
2025-02-24T16:36:13.0444380Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11dc75d90>
2025-02-24T16:36:13.0444550Z simulation = <tardis.simulation.base.Simulation object at 0x159458c80>
2025-02-24T16:36:13.0444550Z 
2025-02-24T16:36:13.0448880Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T16:36:13.0449090Z         transport_state = simulation.transport.transport_state
2025-02-24T16:36:13.0449250Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:36:13.0449290Z     
2025-02-24T16:36:13.0449460Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:36:13.0449580Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T16:36:13.0449750Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T16:36:13.0449830Z         expected = self.get_expected_data(key)
2025-02-24T16:36:13.0449890Z     
2025-02-24T16:36:13.0449980Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0450040Z     
2025-02-24T16:36:13.0450120Z >       assert_quantity_allclose(
2025-02-24T16:36:13.0450170Z             result,
2025-02-24T16:36:13.0450240Z             luminosity,
2025-02-24T16:36:13.0450290Z         )
2025-02-24T16:36:13.0450510Z 
2025-02-24T16:36:13.0450620Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T16:36:13.0450720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0450990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0451060Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0451150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0451160Z 
2025-02-24T16:36:13.0451530Z args = (<function assert_allclose.<locals>.compare at 0x3061c9da0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, .....), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T16:36:13.0451720Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0451920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0451930Z 
2025-02-24T16:36:13.0451990Z     @wraps(func)
2025-02-24T16:36:13.0452160Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0452230Z         with self._recreate_cm():
2025-02-24T16:36:13.0452300Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0452360Z E           AssertionError: 
2025-02-24T16:36:13.0452450Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0452500Z E           
2025-02-24T16:36:13.0452580Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:36:13.0452670Z E           Max absolute difference: 4.15247374e+37
2025-02-24T16:36:13.0452730Z E           Max relative difference: 1.
2025-02-24T16:36:13.0452870Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.0452940Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0453070Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.0453130Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0453140Z 
2025-02-24T16:36:13.0453310Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0453450Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T16:36:13.0453450Z 
2025-02-24T16:36:13.0453660Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11dc74fe0>
2025-02-24T16:36:13.0453810Z simulation = <tardis.simulation.base.Simulation object at 0x159458c80>
2025-02-24T16:36:13.0453810Z 
2025-02-24T16:36:13.0453890Z     def test_solve(self, simulation):
2025-02-24T16:36:13.0454000Z         transport_state = simulation.transport.transport_state
2025-02-24T16:36:13.0454160Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:36:13.0454210Z     
2025-02-24T16:36:13.0454370Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:36:13.0454490Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T16:36:13.0454560Z             transport_state
2025-02-24T16:36:13.0454610Z         )
2025-02-24T16:36:13.0454760Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:36:13.0454860Z         expected_real = self.get_expected_data(key_real)
2025-02-24T16:36:13.0454900Z     
2025-02-24T16:36:13.0455010Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T16:36:13.0455060Z     
2025-02-24T16:36:13.0455120Z >       assert_quantity_allclose(
2025-02-24T16:36:13.0455190Z             result_real.luminosity,
2025-02-24T16:36:13.0455250Z             luminosity_real,
2025-02-24T16:36:13.0455300Z         )
2025-02-24T16:36:13.0455300Z 
2025-02-24T16:36:13.0455490Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T16:36:13.0455620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0455890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0456120Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0456220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0456220Z 
2025-02-24T16:36:13.0456590Z args = (<function assert_allclose.<locals>.compare at 0x173dc6020>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:36:13.0456670Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0456870Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0456870Z 
2025-02-24T16:36:13.0457000Z     @wraps(func)
2025-02-24T16:36:13.0457070Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0457130Z         with self._recreate_cm():
2025-02-24T16:36:13.0457200Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0457260Z E           AssertionError: 
2025-02-24T16:36:13.0457350Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0457400Z E           
2025-02-24T16:36:13.0457480Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:36:13.0457560Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:36:13.0457630Z E           Max relative difference: 1.
2025-02-24T16:36:13.0457760Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.0457820Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0457940Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.0458010Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0458010Z 
2025-02-24T16:36:13.0458170Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0458330Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T16:36:13.0458330Z 
2025-02-24T16:36:13.0458500Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11dc76e70>
2025-02-24T16:36:13.0458650Z simulation = <tardis.simulation.base.Simulation object at 0x169acfd10>
2025-02-24T16:36:13.0458650Z 
2025-02-24T16:36:13.0458750Z     def test_j_blue_estimators(self, simulation):
2025-02-24T16:36:13.0458880Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T16:36:13.0458960Z         expected = self.get_expected_data(key)
2025-02-24T16:36:13.0459000Z     
2025-02-24T16:36:13.0459060Z >       npt.assert_allclose(
2025-02-24T16:36:13.0459340Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T16:36:13.0459410Z             expected.values,
2025-02-24T16:36:13.0459470Z         )
2025-02-24T16:36:13.0459470Z 
2025-02-24T16:36:13.0459540Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T16:36:13.0459640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0459640Z 
2025-02-24T16:36:13.0459850Z args = (<function assert_allclose.<locals>.compare at 0x173d832e0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0459910Z        [0., 0., 0.,.....,
2025-02-24T16:36:13.0459960Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0460020Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0460080Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:36:13.0460270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0460280Z 
2025-02-24T16:36:13.0460330Z     @wraps(func)
2025-02-24T16:36:13.0460390Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0460450Z         with self._recreate_cm():
2025-02-24T16:36:13.0460520Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0460580Z E           AssertionError: 
2025-02-24T16:36:13.0460670Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0460720Z E           
2025-02-24T16:36:13.0460800Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:36:13.0461160Z E           Max absolute difference: 5.32418652e-19
2025-02-24T16:36:13.0461240Z E           Max relative difference: 12.23359055
2025-02-24T16:36:13.0461320Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0461390Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0461470Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0461540Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0461600Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0461680Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0461680Z 
2025-02-24T16:36:13.0461940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0462070Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0462420Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0462570Z 	
2025-02-24T16:36:13.0463070Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T16:36:13.0463220Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0463550Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T16:36:13.0463690Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0464060Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T16:36:13.0464260Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:36:13.0464600Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:36:13.0464740Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0464910Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:36:13.0465040Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0465090Z 	
2025-02-24T16:36:13.0465210Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T16:36:13.0465340Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0465390Z 	
2025-02-24T16:36:13.0465460Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:36:13.0465530Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:36:13.0465600Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0465680Z  ([1mbase.py[0m:657)
2025-02-24T16:36:13.0465810Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0465860Z 	
2025-02-24T16:36:13.0465970Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:36:13.0466100Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0466150Z 	
2025-02-24T16:36:13.0466240Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:36:13.0466310Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:36:13.0466370Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:36:13.0466440Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:36:13.0474970Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:36:13.0479560Z  ([1mbase.py[0m:650)
2025-02-24T16:36:13.0479840Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0479890Z 	
2025-02-24T16:36:13.0479960Z 	Current t_inner = 9974.969 K
2025-02-24T16:36:13.0480050Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:36:13.0480130Z  ([1mbase.py[0m:652)
2025-02-24T16:36:13.0480280Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0480330Z 	
2025-02-24T16:36:13.0480450Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T16:36:13.0480580Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0480910Z 	
2025-02-24T16:36:13.0480980Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:36:13.0481060Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:36:13.0481130Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0481240Z  ([1mbase.py[0m:657)
2025-02-24T16:36:13.0481360Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0481410Z 	
2025-02-24T16:36:13.0481530Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:36:13.0481650Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0481700Z 	
2025-02-24T16:36:13.0481780Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:36:13.0481850Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:36:13.0482010Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:36:13.0482080Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:36:13.0482150Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:36:13.0482230Z  ([1mbase.py[0m:650)
2025-02-24T16:36:13.0482360Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0482400Z 	
2025-02-24T16:36:13.0482470Z 	Current t_inner = 10736.790 K
2025-02-24T16:36:13.0482560Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:36:13.0482630Z  ([1mbase.py[0m:652)
2025-02-24T16:36:13.0482760Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0482800Z 	
2025-02-24T16:36:13.0482920Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T16:36:13.0483050Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0483100Z 	
2025-02-24T16:36:13.0483170Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:36:13.0483270Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:36:13.0483350Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0483430Z  ([1mbase.py[0m:657)
2025-02-24T16:36:13.0483560Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0483730Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:36:13.0483870Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0483910Z 	
2025-02-24T16:36:13.0484030Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:36:13.0484160Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0484210Z 	
2025-02-24T16:36:13.0484300Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:36:13.0484370Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:36:13.0484440Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:36:13.0484510Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:36:13.0484580Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:36:13.0484670Z  ([1mbase.py[0m:650)
2025-02-24T16:36:13.0484800Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0484860Z 	
2025-02-24T16:36:13.0484920Z 	Current t_inner = 10718.574 K
2025-02-24T16:36:13.0485010Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:36:13.0485100Z  ([1mbase.py[0m:652)
2025-02-24T16:36:13.0485420Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0485470Z 	
2025-02-24T16:36:13.0485600Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T16:36:13.0485720Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0485770Z 	
2025-02-24T16:36:13.0485850Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:36:13.0485920Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:36:13.0485990Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0486060Z  ([1mbase.py[0m:657)
2025-02-24T16:36:13.0486190Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0486370Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:36:13.0486510Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0486560Z 	
2025-02-24T16:36:13.0486670Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:36:13.0487070Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0487120Z 	
2025-02-24T16:36:13.0487200Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:36:13.0487260Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:36:13.0487330Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:36:13.0487390Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:36:13.0487460Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:36:13.0487540Z  ([1mbase.py[0m:650)
2025-02-24T16:36:13.0487660Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0487710Z 	
2025-02-24T16:36:13.0487780Z 	Current t_inner = 10696.150 K
2025-02-24T16:36:13.0488030Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:36:13.0488110Z  ([1mbase.py[0m:652)
2025-02-24T16:36:13.0488240Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0488290Z 	
2025-02-24T16:36:13.0488360Z 	Simulation finished in 4 iterations 
2025-02-24T16:36:13.0488420Z 	Simulation took 12.47 s
2025-02-24T16:36:13.0488500Z  ([1mbase.py[0m:542)
2025-02-24T16:36:13.0488630Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0488670Z 	
2025-02-24T16:36:13.0488780Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T16:36:13.0488910Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0488960Z 	
2025-02-24T16:36:13.0489030Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:36:13.0489100Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:36:13.0489170Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0489240Z  ([1mbase.py[0m:657)
2025-02-24T16:36:13.0489390Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:36:13.0489390Z 
2025-02-24T16:36:13.0489390Z 
2025-02-24T16:36:13.0489590Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:36:13.0489600Z 
2025-02-24T16:36:13.0489770Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T16:36:13.0489780Z 
2025-02-24T16:36:13.0490010Z Packets:   ████                                                                            10254/200000 [00:00<00:01, 102535.70it/s][A
2025-02-24T16:36:13.0490020Z 
2025-02-24T16:36:13.0490250Z Packets:   ████████▌                                                                       21345/200000 [00:00<00:01, 107446.66it/s][A
2025-02-24T16:36:13.0490250Z 
2025-02-24T16:36:13.0490450Z Packets:   █████████████▎                                                                  33296/200000 [00:00<00:01, 112951.91it/s][A
2025-02-24T16:36:13.0490460Z 
2025-02-24T16:36:13.0490660Z Packets:   █████████████████▊                                                              44592/200000 [00:00<00:01, 99293.66it/s] [A
2025-02-24T16:36:13.0490660Z 
2025-02-24T16:36:13.0490870Z Packets:   ██████████████████████▍                                                         56128/200000 [00:00<00:01, 104618.55it/s][A
2025-02-24T16:36:13.0490870Z 
2025-02-24T16:36:13.0491080Z Packets:   ██████████████████████████▋                                                     66774/200000 [00:00<00:01, 96348.85it/s] [A
2025-02-24T16:36:13.0491080Z 
2025-02-24T16:36:13.0491290Z Packets:   ██████████████████████████████▋                                                 76859/200000 [00:00<00:01, 97677.27it/s][A
2025-02-24T16:36:13.0491290Z 
2025-02-24T16:36:13.0491500Z Packets:   ██████████████████████████████████▋                                             86779/200000 [00:00<00:01, 96658.29it/s][A
2025-02-24T16:36:13.0491510Z 
2025-02-24T16:36:13.0491730Z Packets:   ███████████████████████████████████████                                         97772/200000 [00:00<00:01, 100571.44it/s][A
2025-02-24T16:36:13.0491730Z 
2025-02-24T16:36:13.0491940Z Packets:   ███████████████████████████████████████████▌                                    108950/200000 [00:01<00:00, 103786.08it/s][A
2025-02-24T16:36:13.0492060Z 
2025-02-24T16:36:13.0492290Z Packets:   ███████████████████████████████████████████████▊                                119406/200000 [00:01<00:00, 98596.13it/s] [A
2025-02-24T16:36:13.0492300Z 
2025-02-24T16:36:13.0492530Z Packets:   ████████████████████████████████████████████████████▌                           131526/200000 [00:01<00:00, 105081.41it/s][A
2025-02-24T16:36:13.0492530Z 
2025-02-24T16:36:13.0492770Z Packets:   █████████████████████████████████████████████████████████                       142660/200000 [00:01<00:00, 106900.94it/s][A
2025-02-24T16:36:13.0492770Z 
2025-02-24T16:36:13.0493100Z Packets:   █████████████████████████████████████████████████████████████▎                  153432/200000 [00:01<00:00, 97042.19it/s] [A
2025-02-24T16:36:13.0493110Z 
2025-02-24T16:36:13.0493350Z Packets:   █████████████████████████████████████████████████████████████████▍              163583/200000 [00:01<00:00, 98270.18it/s][A
2025-02-24T16:36:13.0493370Z 
2025-02-24T16:36:13.0493600Z Packets:   █████████████████████████████████████████████████████████████████████▋          174250/200000 [00:01<00:00, 100640.19it/s][A
2025-02-24T16:36:13.0493600Z 
2025-02-24T16:36:13.0493850Z Packets:   █████████████████████████████████████████████████████████████████████████▊      184444/200000 [00:01<00:00, 95574.28it/s] [A
2025-02-24T16:36:13.0493860Z 
2025-02-24T16:36:13.0494100Z Packets:   ██████████████████████████████████████████████████████████████████████████████  195085/200000 [00:01<00:00, 98604.99it/s][A
2025-02-24T16:36:13.0494220Z Iterations:                                                                                13/? [06:00<00:00, 14.09s/it]
2025-02-24T16:36:13.0494240Z 
2025-02-24T16:36:13.0494510Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 98604.99it/s][A
2025-02-24T16:36:13.0494510Z 
2025-02-24T16:36:13.0494700Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:36:13.0494710Z 
2025-02-24T16:36:13.0494880Z Packets:   ███▉                                                                            9974/200000 [00:00<00:02, 92269.93it/s][A
2025-02-24T16:36:13.0494890Z 
2025-02-24T16:36:13.0495070Z Packets:   ███████▉                                                                        19884/200000 [00:00<00:01, 96156.36it/s][A
2025-02-24T16:36:13.0495080Z 
2025-02-24T16:36:13.0495260Z Packets:   ████████████▏                                                                   30584/200000 [00:00<00:01, 100530.48it/s][A
2025-02-24T16:36:13.0495320Z 
2025-02-24T16:36:13.0495520Z Packets:   █████████████████▏                                                              42872/200000 [00:00<00:01, 109231.92it/s][A
2025-02-24T16:36:13.0495520Z 
2025-02-24T16:36:13.0502740Z Packets:   ██████████████████████▋                                                         56841/200000 [00:00<00:01, 120114.75it/s][A
2025-02-24T16:36:13.0503090Z 
2025-02-24T16:36:13.0503440Z Packets:   ███████████████████████████▌                                                    68875/200000 [00:00<00:01, 118512.90it/s][A
2025-02-24T16:36:13.0503450Z 
2025-02-24T16:36:13.0503660Z Packets:   ████████████████████████████████▉                                               82395/200000 [00:00<00:00, 123893.23it/s][A
2025-02-24T16:36:13.0503670Z 
2025-02-24T16:36:13.0503880Z Packets:   █████████████████████████████████████▉                                          94804/200000 [00:00<00:00, 120032.11it/s][A
2025-02-24T16:36:13.0503880Z 
2025-02-24T16:36:13.0504110Z Packets:   ██████████████████████████████████████████▋                                     106842/200000 [00:00<00:00, 113900.41it/s][A
2025-02-24T16:36:13.0504120Z 
2025-02-24T16:36:13.0504410Z Packets:   ███████████████████████████████████████████████▎                                118306/200000 [00:01<00:00, 110033.32it/s][A
2025-02-24T16:36:13.0504420Z 
2025-02-24T16:36:13.0504660Z Packets:   ███████████████████████████████████████████████████▊                            129571/200000 [00:01<00:00, 110059.07it/s][A
2025-02-24T16:36:13.0504660Z 
2025-02-24T16:36:13.0504880Z Packets:   ████████████████████████████████████████████████████████▏                       140620/200000 [00:01<00:00, 107311.09it/s][A
2025-02-24T16:36:13.0504890Z 
2025-02-24T16:36:13.0505150Z Packets:   ████████████████████████████████████████████████████████████▊                   151957/200000 [00:01<00:00, 109045.88it/s][A
2025-02-24T16:36:13.0505160Z 
2025-02-24T16:36:13.0505400Z Packets:   █████████████████████████████████████████████████████████████████▉              164747/200000 [00:01<00:00, 114525.86it/s][A
2025-02-24T16:36:13.0505410Z 
2025-02-24T16:36:13.0505650Z Packets:   ██████████████████████████████████████████████████████████████████████▍         176244/200000 [00:01<00:00, 112294.56it/s][A
2025-02-24T16:36:13.0505760Z 
2025-02-24T16:36:13.0506010Z Packets:   ███████████████████████████████████████████████████████████████████████████▎    188403/200000 [00:01<00:00, 114998.60it/s][A
2025-02-24T16:36:13.0506140Z Iterations:                                                                                14/? [06:03<00:00, 10.74s/it]
2025-02-24T16:36:13.0506140Z 
2025-02-24T16:36:13.0506400Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 114998.60it/s][A
2025-02-24T16:36:13.0506410Z 
2025-02-24T16:36:13.0506600Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:36:13.0506690Z 
2025-02-24T16:36:13.0506880Z Packets:   ████▌                                                                           11534/200000 [00:00<00:02, 77113.29it/s][A
2025-02-24T16:36:13.0506890Z 
2025-02-24T16:36:13.0507070Z Packets:   ████████▉                                                                       22458/200000 [00:00<00:01, 92807.29it/s][A
2025-02-24T16:36:13.0507090Z 
2025-02-24T16:36:13.0507270Z Packets:   █████████████▏                                                                  33039/200000 [00:00<00:01, 98149.33it/s][A
2025-02-24T16:36:13.0507280Z 
2025-02-24T16:36:13.0507470Z Packets:   █████████████████▏                                                              43088/200000 [00:00<00:01, 91273.03it/s][A
2025-02-24T16:36:13.0507470Z 
2025-02-24T16:36:13.0507660Z Packets:   █████████████████████▋                                                          54235/200000 [00:00<00:01, 97888.87it/s][A
2025-02-24T16:36:13.0507660Z 
2025-02-24T16:36:13.0507870Z Packets:   █████████████████████████▋                                                      64207/200000 [00:00<00:01, 98234.02it/s][A
2025-02-24T16:36:13.0507870Z 
2025-02-24T16:36:13.0508070Z Packets:   █████████████████████████████▋                                                  74154/200000 [00:00<00:01, 96875.45it/s][A
2025-02-24T16:36:13.0508090Z 
2025-02-24T16:36:13.0508290Z Packets:   █████████████████████████████████▌                                              83924/200000 [00:00<00:01, 88557.77it/s][A
2025-02-24T16:36:13.0508290Z 
2025-02-24T16:36:13.0508500Z Packets:   █████████████████████████████████████▏                                          92944/200000 [00:01<00:01, 89022.17it/s][A
2025-02-24T16:36:13.0508500Z 
2025-02-24T16:36:13.0508710Z Packets:   ████████████████████████████████████████▊                                       101967/200000 [00:01<00:01, 89370.38it/s][A
2025-02-24T16:36:13.0508720Z 
2025-02-24T16:36:13.0508930Z Packets:   ████████████████████████████████████████████▊                                   112176/200000 [00:01<00:00, 93084.50it/s][A
2025-02-24T16:36:13.0508940Z 
2025-02-24T16:36:13.0509160Z Packets:   ████████████████████████████████████████████████▋                               121587/200000 [00:01<00:00, 93386.08it/s][A
2025-02-24T16:36:13.0509360Z 
2025-02-24T16:36:13.0509600Z Packets:   ████████████████████████████████████████████████████▉                           132357/200000 [00:01<00:00, 97622.65it/s][A
2025-02-24T16:36:13.0509600Z 
2025-02-24T16:36:13.0509830Z Packets:   ████████████████████████████████████████████████████████▊                       142167/200000 [00:01<00:00, 97430.67it/s][A
2025-02-24T16:36:13.0509830Z 
2025-02-24T16:36:13.0510060Z Packets:   ████████████████████████████████████████████████████████████▊                   151943/200000 [00:01<00:00, 89042.11it/s][A
2025-02-24T16:36:13.0510060Z 
2025-02-24T16:36:13.0510300Z Packets:   █████████████████████████████████████████████████████████████████▉              164946/200000 [00:01<00:00, 100495.20it/s][A
2025-02-24T16:36:13.0510440Z 
2025-02-24T16:36:13.0510680Z Packets:   ██████████████████████████████████████████████████████████████████████▎         175678/200000 [00:01<00:00, 102440.25it/s][A
2025-02-24T16:36:13.0510680Z 
2025-02-24T16:36:13.0510940Z Packets:   ██████████████████████████████████████████████████████████████████████████▊     187113/200000 [00:01<00:00, 105887.46it/s][A
2025-02-24T16:36:13.0510940Z 
2025-02-24T16:36:13.0511190Z Packets:   ███████████████████████████████████████████████████████████████████████████████▏197819/200000 [00:02<00:00, 96748.60it/s] [A
2025-02-24T16:36:13.0511310Z Iterations:                                                                                15/? [06:07<00:00,  8.49s/it]
2025-02-24T16:36:13.0511310Z 
2025-02-24T16:36:13.0511560Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 96748.60it/s][A
2025-02-24T16:36:13.0511560Z 
2025-02-24T16:36:13.0511750Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:36:13.0511750Z 
2025-02-24T16:36:13.0511930Z Packets:   █████▍                                                                          13697/200000 [00:00<00:01, 136966.21it/s][A
2025-02-24T16:36:13.0511950Z 
2025-02-24T16:36:13.0512140Z Packets:   ██████████▉                                                                     27394/200000 [00:00<00:01, 87780.37it/s] [A
2025-02-24T16:36:13.0512140Z 
2025-02-24T16:36:13.0512320Z Packets:   ███████████████▊                                                                39622/200000 [00:00<00:01, 99856.21it/s][A
2025-02-24T16:36:13.0512330Z 
2025-02-24T16:36:13.0512520Z Packets:   ████████████████████▊                                                           51940/200000 [00:00<00:01, 107627.69it/s][A
2025-02-24T16:36:13.0512530Z 
2025-02-24T16:36:13.0512740Z Packets:   ██████████████████████████▌                                                     66297/200000 [00:00<00:01, 119220.27it/s][A
2025-02-24T16:36:13.0512750Z 
2025-02-24T16:36:13.0512960Z Packets:   ████████████████████████████████                                                80147/200000 [00:00<00:00, 125299.54it/s][A
2025-02-24T16:36:13.0513040Z 
2025-02-24T16:36:13.0513280Z Packets:   █████████████████████████████████████▉                                          94754/200000 [00:00<00:00, 131750.30it/s][A
2025-02-24T16:36:13.0513290Z 
2025-02-24T16:36:13.0513500Z Packets:   ███████████████████████████████████████████▌                                    108923/200000 [00:00<00:00, 134797.65it/s][A
2025-02-24T16:36:13.0513510Z 
2025-02-24T16:36:13.0513730Z Packets:   █████████████████████████████████████████████████                               122634/200000 [00:01<00:00, 101487.65it/s][A
2025-02-24T16:36:13.0513730Z 
2025-02-24T16:36:13.0514020Z Packets:   █████████████████████████████████████████████████████▋                          134101/200000 [00:01<00:00, 104087.47it/s][A
2025-02-24T16:36:13.0514130Z 
2025-02-24T16:36:13.0514370Z Packets:   ██████████████████████████████████████████████████████████▌                     146417/200000 [00:01<00:00, 109024.19it/s][A
2025-02-24T16:36:13.0514370Z 
2025-02-24T16:36:13.0514620Z Packets:   ███████████████████████████████████████████████████████████████▎                158292/200000 [00:01<00:00, 111650.08it/s][A
2025-02-24T16:36:13.0514630Z 
2025-02-24T16:36:13.0514860Z Packets:   ████████████████████████████████████████████████████████████████████▊           171938/200000 [00:01<00:00, 118556.36it/s][A
2025-02-24T16:36:13.0514860Z 
2025-02-24T16:36:13.0515110Z Packets:   ██████████████████████████████████████████████████████████████████████████▌     186440/200000 [00:01<00:00, 126085.50it/s][A
2025-02-24T16:36:13.0515240Z Iterations:                                                                                16/? [06:10<00:00,  6.83s/it]
2025-02-24T16:36:13.0515250Z 
2025-02-24T16:36:13.0515510Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 126085.50it/s][A
2025-02-24T16:36:13.0515510Z 
2025-02-24T16:36:13.0515690Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-24T16:36:13.0515710Z 
2025-02-24T16:36:13.0515880Z Packets:   ██                                                                              12973/500000 [00:00<00:10, 45544.89it/s][A
2025-02-24T16:36:13.0515890Z 
2025-02-24T16:36:13.0516070Z Packets:   ██▊                                                                             17681/500000 [00:00<00:10, 46055.16it/s][A
2025-02-24T16:36:13.0516070Z 
2025-02-24T16:36:13.0516250Z Packets:   ███▌                                                                            22539/500000 [00:00<00:10, 45313.92it/s][A
2025-02-24T16:36:13.0516260Z 
2025-02-24T16:36:13.0516430Z Packets:   ████▎                                                                           27068/500000 [00:00<00:10, 44651.01it/s][A
2025-02-24T16:36:13.0516450Z 
2025-02-24T16:36:13.0516620Z Packets:   █████                                                                           31516/500000 [00:00<00:10, 43589.99it/s][A
2025-02-24T16:36:13.0516730Z 
2025-02-24T16:36:13.0516920Z Packets:   █████▋                                                                          35850/500000 [00:00<00:11, 40338.00it/s][A
2025-02-24T16:36:13.0516930Z 
2025-02-24T16:36:13.0517100Z Packets:   ██████▌                                                                         41012/500000 [00:00<00:10, 43523.17it/s][A
2025-02-24T16:36:13.0517110Z 
2025-02-24T16:36:13.0517290Z Packets:   ███████▍                                                                        46125/500000 [00:01<00:09, 45705.81it/s][A
2025-02-24T16:36:13.0517300Z 
2025-02-24T16:36:13.0517480Z Packets:   ████████                                                                        50750/500000 [00:01<00:10, 44648.55it/s][A
2025-02-24T16:36:13.0517870Z 
2025-02-24T16:36:13.0518270Z Packets:   ████████▉                                                                       55793/500000 [00:01<00:09, 46313.76it/s][A
2025-02-24T16:36:13.0518280Z 
2025-02-24T16:36:13.0518490Z Packets:   █████████▋                                                                      60462/500000 [00:01<00:11, 37246.87it/s][A
2025-02-24T16:36:13.0518490Z 
2025-02-24T16:36:13.0518680Z Packets:   ██████████▎                                                                     64476/500000 [00:01<00:11, 37880.53it/s][A
2025-02-24T16:36:13.0518690Z 
2025-02-24T16:36:13.0518870Z Packets:   ██████████▉                                                                     68717/500000 [00:01<00:11, 39071.03it/s][A
2025-02-24T16:36:13.0518870Z 
2025-02-24T16:36:13.0519060Z Packets:   ███████████▊                                                                    73727/500000 [00:01<00:10, 42081.68it/s][A
2025-02-24T16:36:13.0519070Z 
2025-02-24T16:36:13.0519260Z Packets:   ████████████▍                                                                   78084/500000 [00:01<00:09, 42230.93it/s][A
2025-02-24T16:36:13.0519260Z 
2025-02-24T16:36:13.0519580Z Packets:   █████████████▎                                                                  82935/500000 [00:01<00:09, 44017.33it/s][A
2025-02-24T16:36:13.0519620Z 
2025-02-24T16:36:13.0519910Z Packets:   █████████████▉                                                                  87420/500000 [00:02<00:11, 35067.27it/s][A
2025-02-24T16:36:13.0519910Z 
2025-02-24T16:36:13.0520120Z Packets:   ██████████████▌                                                                 91264/500000 [00:02<00:12, 33412.44it/s][A
2025-02-24T16:36:13.0520120Z 
2025-02-24T16:36:13.0520320Z Packets:   ███████████████▏                                                                94938/500000 [00:02<00:11, 34232.96it/s][A
2025-02-24T16:36:13.0520320Z 
2025-02-24T16:36:13.0520520Z Packets:   ███████████████▊                                                                98757/500000 [00:02<00:11, 35262.46it/s][A
2025-02-24T16:36:13.0520530Z 
2025-02-24T16:36:13.0520730Z Packets:   ████████████████▍                                                               103106/500000 [00:02<00:10, 37494.36it/s][A
2025-02-24T16:36:13.0520740Z 
2025-02-24T16:36:13.0520940Z Packets:   █████████████████▎                                                              108145/500000 [00:02<00:09, 41094.06it/s][A
2025-02-24T16:36:13.0520940Z 
2025-02-24T16:36:13.0521140Z Packets:   ██████████████████                                                              112877/500000 [00:02<00:09, 42868.63it/s][A
2025-02-24T16:36:13.0521140Z 
2025-02-24T16:36:13.0521380Z Packets:   ██████████████████▊                                                             117879/500000 [00:02<00:08, 44937.68it/s][A
2025-02-24T16:36:13.0521380Z 
2025-02-24T16:36:13.0521580Z Packets:   ███████████████████▌                                                            122443/500000 [00:03<00:09, 39041.77it/s][A
2025-02-24T16:36:13.0521720Z 
2025-02-24T16:36:13.0521930Z Packets:   ████████████████████▏                                                           126530/500000 [00:03<00:10, 34594.61it/s][A
2025-02-24T16:36:13.0522000Z 
2025-02-24T16:36:13.0522200Z Packets:   ████████████████████▉                                                           130630/500000 [00:03<00:10, 36190.85it/s][A
2025-02-24T16:36:13.0522210Z 
2025-02-24T16:36:13.0522400Z Packets:   █████████████████████▌                                                          134737/500000 [00:03<00:09, 37468.87it/s][A
2025-02-24T16:36:13.0522410Z 
2025-02-24T16:36:13.0522600Z Packets:   ██████████████████████▍                                                         139958/500000 [00:03<00:08, 41487.32it/s][A
2025-02-24T16:36:13.0522610Z 
2025-02-24T16:36:13.0522800Z Packets:   ███████████████████████                                                         144244/500000 [00:03<00:08, 40921.82it/s][A
2025-02-24T16:36:13.0522820Z 
2025-02-24T16:36:13.0523020Z Packets:   ███████████████████████▋                                                        148432/500000 [00:03<00:08, 40490.35it/s][A
2025-02-24T16:36:13.0523020Z 
2025-02-24T16:36:13.0523230Z Packets:   ████████████████████████▍                                                       152547/500000 [00:03<00:09, 35983.39it/s][A
2025-02-24T16:36:13.0523230Z 
2025-02-24T16:36:13.0523430Z Packets:   █████████████████████████                                                       156273/500000 [00:03<00:09, 36149.02it/s][A
2025-02-24T16:36:13.0523440Z 
2025-02-24T16:36:13.0523630Z Packets:   █████████████████████████▋                                                      160617/500000 [00:04<00:08, 38133.93it/s][A
2025-02-24T16:36:13.0523640Z 
2025-02-24T16:36:13.0523840Z Packets:   ██████████████████████████▎                                                     164834/500000 [00:04<00:08, 39264.31it/s][A
2025-02-24T16:36:13.0523850Z 
2025-02-24T16:36:13.0524050Z Packets:   ███████████████████████████                                                     168827/500000 [00:04<00:08, 38845.04it/s][A
2025-02-24T16:36:13.0524050Z 
2025-02-24T16:36:13.0524250Z Packets:   ███████████████████████████▋                                                    172758/500000 [00:04<00:10, 31192.39it/s][A
2025-02-24T16:36:13.0524260Z 
2025-02-24T16:36:13.0524460Z Packets:   ████████████████████████████▍                                                   177591/500000 [00:04<00:09, 35421.74it/s][A
2025-02-24T16:36:13.0524470Z 
2025-02-24T16:36:13.0524660Z Packets:   █████████████████████████████                                                   181432/500000 [00:04<00:08, 36200.71it/s][A
2025-02-24T16:36:13.0524670Z 
2025-02-24T16:36:13.0524870Z Packets:   █████████████████████████████▋                                                  185257/500000 [00:04<00:09, 31877.87it/s][A
2025-02-24T16:36:13.0524870Z 
2025-02-24T16:36:13.0525080Z Packets:   ██████████████████████████████▏                                                 188668/500000 [00:04<00:09, 32195.62it/s][A
2025-02-24T16:36:13.0525090Z 
2025-02-24T16:36:13.0525290Z Packets:   ██████████████████████████████▉                                                 193101/500000 [00:04<00:08, 35384.97it/s][A
2025-02-24T16:36:13.0525420Z 
2025-02-24T16:36:13.0525640Z Packets:   ███████████████████████████████▋                                                197785/500000 [00:05<00:07, 38507.88it/s][A
2025-02-24T16:36:13.0525650Z 
2025-02-24T16:36:13.0525870Z Packets:   ████████████████████████████████▍                                               202871/500000 [00:05<00:07, 41972.67it/s][A
2025-02-24T16:36:13.0525870Z 
2025-02-24T16:36:13.0526070Z Packets:   █████████████████████████████████▏                                              207191/500000 [00:05<00:08, 34352.29it/s][A
2025-02-24T16:36:13.0526070Z 
2025-02-24T16:36:13.0526280Z Packets:   █████████████████████████████████▋                                              210931/500000 [00:05<00:09, 31963.13it/s][A
2025-02-24T16:36:13.0526370Z 
2025-02-24T16:36:13.0526590Z Packets:   ██████████████████████████████████▎                                             214558/500000 [00:05<00:08, 33016.48it/s][A
2025-02-24T16:36:13.0526600Z 
2025-02-24T16:36:13.0526820Z Packets:   ██████████████████████████████████▉                                             218042/500000 [00:05<00:08, 31519.13it/s][A
2025-02-24T16:36:13.0526830Z 
2025-02-24T16:36:13.0527050Z Packets:   ███████████████████████████████████▍                                            221323/500000 [00:05<00:09, 30723.05it/s][A
2025-02-24T16:36:13.0527050Z 
2025-02-24T16:36:13.0527280Z Packets:   ███████████████████████████████████▉                                            224659/500000 [00:05<00:08, 31413.52it/s][A
2025-02-24T16:36:13.0527280Z 
2025-02-24T16:36:13.0527490Z Packets:   ████████████████████████████████████▌                                           228404/500000 [00:06<00:08, 33056.97it/s][A
2025-02-24T16:36:13.0527510Z 
2025-02-24T16:36:13.0527740Z Packets:   █████████████████████████████████████▏                                          232549/500000 [00:06<00:07, 35406.94it/s][A
2025-02-24T16:36:13.0527740Z 
2025-02-24T16:36:13.0527980Z Packets:   █████████████████████████████████████▉                                          236832/500000 [00:06<00:07, 37525.25it/s][A
2025-02-24T16:36:13.0527980Z 
2025-02-24T16:36:13.0528190Z Packets:   ██████████████████████████████████████▌                                         240639/500000 [00:06<00:07, 35809.20it/s][A
2025-02-24T16:36:13.0528190Z 
2025-02-24T16:36:13.0528410Z Packets:   ███████████████████████████████████████                                         244271/500000 [00:06<00:07, 32389.48it/s][A
2025-02-24T16:36:13.0528410Z 
2025-02-24T16:36:13.0528620Z Packets:   ███████████████████████████████████████▌                                        247598/500000 [00:06<00:07, 31848.33it/s][A
2025-02-24T16:36:13.0528640Z 
2025-02-24T16:36:13.0528850Z Packets:   ████████████████████████████████████████▎                                       251717/500000 [00:06<00:07, 34375.26it/s][A
2025-02-24T16:36:13.0528850Z 
2025-02-24T16:36:13.0529080Z Packets:   ████████████████████████████████████████▊                                       255396/500000 [00:06<00:06, 35047.25it/s][A
2025-02-24T16:36:13.0529150Z 
2025-02-24T16:36:13.0529390Z Packets:   █████████████████████████████████████████▍                                      259124/500000 [00:06<00:06, 35682.55it/s][A
2025-02-24T16:36:13.0529390Z 
2025-02-24T16:36:13.0529610Z Packets:   ██████████████████████████████████████████▎                                     264139/500000 [00:06<00:05, 39865.45it/s][A
2025-02-24T16:36:13.0529610Z 
2025-02-24T16:36:13.0529830Z Packets:   ██████████████████████████████████████████▉                                     268328/500000 [00:07<00:05, 40456.74it/s][A
2025-02-24T16:36:13.0529830Z 
2025-02-24T16:36:13.0530110Z Packets:   ███████████████████████████████████████████▊                                    273523/500000 [00:07<00:05, 43843.13it/s][A
2025-02-24T16:36:13.0530110Z 
2025-02-24T16:36:13.0530320Z Packets:   ████████████████████████████████████████████▍                                   277936/500000 [00:07<00:05, 40934.39it/s][A
2025-02-24T16:36:13.0530340Z 
2025-02-24T16:36:13.0530570Z Packets:   █████████████████████████████████████████████▏                                  282087/500000 [00:07<00:06, 33375.63it/s][A
2025-02-24T16:36:13.0530570Z 
2025-02-24T16:36:13.0530790Z Packets:   █████████████████████████████████████████████▋                                  285829/500000 [00:07<00:06, 34374.74it/s][A
2025-02-24T16:36:13.0530800Z 
2025-02-24T16:36:13.0531010Z Packets:   ██████████████████████████████████████████████▍                                 289912/500000 [00:07<00:05, 36057.90it/s][A
2025-02-24T16:36:13.0531020Z 
2025-02-24T16:36:13.0531250Z Packets:   ██████████████████████████████████████████████▉                                 293748/500000 [00:07<00:05, 36682.00it/s][A
2025-02-24T16:36:13.0531260Z 
2025-02-24T16:36:13.0531490Z Packets:   ███████████████████████████████████████████████▊                                298592/500000 [00:07<00:05, 39966.88it/s][A
2025-02-24T16:36:13.0531510Z 
2025-02-24T16:36:13.0531740Z Packets:   ████████████████████████████████████████████████▌                               303373/500000 [00:08<00:04, 42203.84it/s][A
2025-02-24T16:36:13.0531740Z 
2025-02-24T16:36:13.0531970Z Packets:   █████████████████████████████████████████████████▎                              308240/500000 [00:08<00:04, 44074.52it/s][A
2025-02-24T16:36:13.0531970Z 
2025-02-24T16:36:13.0532190Z Packets:   ██████████████████████████████████████████████████                              312716/500000 [00:08<00:05, 33049.41it/s][A
2025-02-24T16:36:13.0532200Z 
2025-02-24T16:36:13.0532440Z Packets:   ██████████████████████████████████████████████████▋                             316471/500000 [00:08<00:06, 30376.49it/s][A
2025-02-24T16:36:13.0532510Z 
2025-02-24T16:36:13.0533130Z Packets:   ███████████████████████████████████████████████████▏                            319962/500000 [00:08<00:05, 31427.34it/s][A
2025-02-24T16:36:13.0533180Z 
2025-02-24T16:36:13.0533760Z Packets:   ███████████████████████████████████████████████████▋                            323369/500000 [00:08<00:05, 30859.75it/s][A
2025-02-24T16:36:13.0533760Z 
2025-02-24T16:36:13.0533990Z Packets:   ████████████████████████████████████████████████████▍                           327593/500000 [00:08<00:05, 33760.54it/s][A
2025-02-24T16:36:13.0534000Z 
2025-02-24T16:36:13.0535780Z Packets:   █████████████████████████████████████████████████████                           331461/500000 [00:08<00:04, 35072.64it/s][A
2025-02-24T16:36:13.0535800Z 
2025-02-24T16:36:13.0536070Z Packets:   █████████████████████████████████████████████████████▌                          335109/500000 [00:09<00:05, 31571.43it/s][A
2025-02-24T16:36:13.0536110Z 
2025-02-24T16:36:13.0536410Z Packets:   ██████████████████████████████████████████████████████▏                         338419/500000 [00:09<00:05, 31724.73it/s][A
2025-02-24T16:36:13.0536420Z 
2025-02-24T16:36:13.0536660Z Packets:   ██████████████████████████████████████████████████████▊                         342601/500000 [00:09<00:04, 34438.20it/s][A
2025-02-24T16:36:13.0536680Z 
2025-02-24T16:36:13.0537010Z Packets:   ███████████████████████████████████████████████████████▍                        346152/500000 [00:09<00:05, 28136.34it/s][A
2025-02-24T16:36:13.0537020Z 
2025-02-24T16:36:13.0537410Z Packets:   ████████████████████████████████████████████████████████                        350275/500000 [00:09<00:04, 31320.59it/s][A
2025-02-24T16:36:13.0537430Z 
2025-02-24T16:36:13.0537810Z Packets:   ████████████████████████████████████████████████████████▋                       354104/500000 [00:09<00:04, 33116.19it/s][A
2025-02-24T16:36:13.0537820Z 
2025-02-24T16:36:13.0538360Z Packets:   █████████████████████████████████████████████████████████▏                      357620/500000 [00:09<00:04, 33222.26it/s][A
2025-02-24T16:36:13.0538400Z 
2025-02-24T16:36:13.0542370Z Packets:   █████████████████████████████████████████████████████████▊                      361086/500000 [00:09<00:04, 32842.57it/s][A
2025-02-24T16:36:13.0542780Z 
2025-02-24T16:36:13.0543060Z Packets:   ██████████████████████████████████████████████████████████▍                     365021/500000 [00:09<00:03, 34630.40it/s][A
2025-02-24T16:36:13.0543060Z 
2025-02-24T16:36:13.0543300Z Packets:   ███████████████████████████████████████████████████████████                     368961/500000 [00:10<00:03, 35980.23it/s][A
2025-02-24T16:36:13.0543320Z 
2025-02-24T16:36:13.0543630Z Packets:   ███████████████████████████████████████████████████████████▌                    372626/500000 [00:10<00:03, 35576.44it/s][A
2025-02-24T16:36:13.0543840Z 
2025-02-24T16:36:13.0544260Z Packets:   ████████████████████████████████████████████████████████████▏                   376231/500000 [00:10<00:03, 35696.44it/s][A
2025-02-24T16:36:13.0544510Z 
2025-02-24T16:36:13.0544910Z Packets:   ████████████████████████████████████████████████████████████▊                   380223/500000 [00:10<00:03, 36926.88it/s][A
2025-02-24T16:36:13.0544950Z 
2025-02-24T16:36:13.0548070Z Packets:   █████████████████████████████████████████████████████████████▍                  383943/500000 [00:10<00:03, 33633.67it/s][A
2025-02-24T16:36:13.0548090Z 
2025-02-24T16:36:13.0553510Z Packets:   ██████████████████████████████████████████████████████████████                  387559/500000 [00:10<00:03, 34329.68it/s][A
2025-02-24T16:36:13.0553630Z 
2025-02-24T16:36:13.0554100Z Packets:   ██████████████████████████████████████████████████████████████▌                 391049/500000 [00:10<00:03, 34409.70it/s][A
2025-02-24T16:36:13.0554120Z 
2025-02-24T16:36:13.0564880Z Packets:   ███████████████████████████████████████████████████████████████                 394531/500000 [00:10<00:03, 31538.21it/s][A
2025-02-24T16:36:13.0564940Z 
2025-02-24T16:36:13.0567800Z Packets:   ███████████████████████████████████████████████████████████████▊                398541/500000 [00:10<00:03, 33474.57it/s][A
2025-02-24T16:36:13.0567820Z 
2025-02-24T16:36:13.0568120Z Packets:   ████████████████████████████████████████████████████████████████▎               401950/500000 [00:11<00:03, 31959.53it/s][A
2025-02-24T16:36:13.0568130Z 
2025-02-24T16:36:13.0568370Z Packets:   ████████████████████████████████████████████████████████████████▉               405745/500000 [00:11<00:02, 33599.50it/s][A
2025-02-24T16:36:13.0568380Z 
2025-02-24T16:36:13.0568610Z Packets:   █████████████████████████████████████████████████████████████████▍              409156/500000 [00:11<00:02, 32944.76it/s][A
2025-02-24T16:36:13.0568610Z 
2025-02-24T16:36:13.0568850Z Packets:   ██████████████████████████████████████████████████████████████████              412588/500000 [00:11<00:02, 33331.10it/s][A
2025-02-24T16:36:13.0569460Z 
2025-02-24T16:36:13.0569730Z Packets:   ██████████████████████████████████████████████████████████████████▊             417247/500000 [00:11<00:02, 37133.62it/s][A
2025-02-24T16:36:13.0569730Z 
2025-02-24T16:36:13.0569970Z Packets:   ███████████████████████████████████████████████████████████████████▍            421126/500000 [00:11<00:02, 37615.12it/s][A
2025-02-24T16:36:13.0570160Z 
2025-02-24T16:36:13.0570400Z Packets:   ███████████████████████████████████████████████████████████████████▉            424915/500000 [00:11<00:02, 37217.39it/s][A
2025-02-24T16:36:13.0570410Z 
2025-02-24T16:36:13.0570650Z Packets:   ████████████████████████████████████████████████████████████████████▌           428656/500000 [00:11<00:02, 32831.95it/s][A
2025-02-24T16:36:13.0570650Z 
2025-02-24T16:36:13.0570890Z Packets:   █████████████████████████████████████████████████████████████████████▏          432468/500000 [00:11<00:01, 34253.85it/s][A
2025-02-24T16:36:13.0570890Z 
2025-02-24T16:36:13.0571140Z Packets:   █████████████████████████████████████████████████████████████████████▊          436303/500000 [00:11<00:01, 35391.06it/s][A
2025-02-24T16:36:13.0571140Z 
2025-02-24T16:36:13.0571390Z Packets:   ██████████████████████████████████████████████████████████████████████▍         440023/500000 [00:12<00:01, 35900.53it/s][A
2025-02-24T16:36:13.0571400Z 
2025-02-24T16:36:13.0571640Z Packets:   ███████████████████████████████████████████████████████████████████████         444067/500000 [00:12<00:01, 37208.95it/s][A
2025-02-24T16:36:13.0571640Z 
2025-02-24T16:36:13.0571880Z Packets:   ███████████████████████████████████████████████████████████████████████▋        447861/500000 [00:12<00:01, 37254.56it/s][A
2025-02-24T16:36:13.0571890Z 
2025-02-24T16:36:13.0573330Z Packets:   ████████████████████████████████████████████████████████████████████████▎       451616/500000 [00:12<00:01, 36518.62it/s][A
2025-02-24T16:36:13.0575180Z 
2025-02-24T16:36:13.0575550Z Packets:   ████████████████████████████████████████████████████████████████████████▉       455611/500000 [00:12<00:01, 35664.79it/s][A
2025-02-24T16:36:13.0575570Z 
2025-02-24T16:36:13.0575810Z Packets:   █████████████████████████████████████████████████████████████████████████▍      459201/500000 [00:12<00:01, 30402.17it/s][A
2025-02-24T16:36:13.0576000Z 
2025-02-24T16:36:13.0576250Z Packets:   ██████████████████████████████████████████████████████████████████████████▏     463595/500000 [00:12<00:01, 33867.34it/s][A
2025-02-24T16:36:13.0576260Z 
2025-02-24T16:36:13.0576500Z Packets:   ██████████████████████████████████████████████████████████████████████████▊     467442/500000 [00:12<00:00, 35098.80it/s][A
2025-02-24T16:36:13.0576500Z 
2025-02-24T16:36:13.0576730Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    471160/500000 [00:12<00:00, 35674.03it/s][A
2025-02-24T16:36:13.0576740Z 
2025-02-24T16:36:13.0577000Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    474819/500000 [00:13<00:00, 35415.94it/s][A
2025-02-24T16:36:13.0577090Z 
2025-02-24T16:36:13.0577350Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   478425/500000 [00:13<00:00, 34352.39it/s][A
2025-02-24T16:36:13.0577350Z 
2025-02-24T16:36:13.0577610Z Packets:   █████████████████████████████████████████████████████████████████████████████▏  482607/500000 [00:13<00:00, 36457.07it/s][A
2025-02-24T16:36:13.0577610Z 
2025-02-24T16:36:13.0577860Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  486908/500000 [00:13<00:00, 38336.99it/s][A
2025-02-24T16:36:13.0577870Z 
2025-02-24T16:36:13.0578120Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 490783/500000 [00:13<00:00, 35976.72it/s][A
2025-02-24T16:36:13.0578120Z 
2025-02-24T16:36:13.0578360Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 494436/500000 [00:13<00:00, 31974.73it/s][A
2025-02-24T16:36:13.0578380Z 
2025-02-24T16:36:13.0578640Z Packets:   ███████████████████████████████████████████████████████████████████████████████▋497741/500000 [00:13<00:00, 30332.14it/s][A
2025-02-24T16:36:13.0578770Z Iterations:                                                                                17/? [06:29<00:00, 10.78s/it]
2025-02-24T16:36:13.0578830Z 
2025-02-24T16:36:13.0579080Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:18<00:00, 30332.14it/s][A
2025-02-24T16:36:13.0579220Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0579380Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T16:36:13.0579810Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T16:36:13.0583280Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T16:36:13.0584120Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T16:36:13.0587650Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:36:13.0587870Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:36:13.0587960Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:36:13.0588030Z 	Starting iteration 1 of 5
2025-02-24T16:36:13.0588110Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:36:13.0588180Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:36:13.0588250Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:36:13.0588320Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0588320Z 
2025-02-24T16:36:13.0588410Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:36:13.0588470Z 	Plasma stratification:
2025-02-24T16:36:13.0588550Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:36:13.0588630Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:36:13.0588710Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:36:13.0588770Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:36:13.0588840Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:36:13.0588900Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:36:13.0588900Z 
2025-02-24T16:36:13.0588980Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:36:13.0589070Z 	Current t_inner = 9974.969 K
2025-02-24T16:36:13.0593600Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:36:13.0593620Z 
2025-02-24T16:36:13.0593720Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:36:13.0593790Z 	Starting iteration 2 of 5
2025-02-24T16:36:13.0593860Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:36:13.0593950Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:36:13.0597370Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:36:13.0597520Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0597520Z 
2025-02-24T16:36:13.0597620Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:36:13.0597690Z 	Plasma stratification:
2025-02-24T16:36:13.0597780Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:36:13.0597860Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:36:13.0597940Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:36:13.0598010Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:36:13.0598080Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:36:13.0598140Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:36:13.0598150Z 
2025-02-24T16:36:13.0598230Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:36:13.0598300Z 	Current t_inner = 10736.790 K
2025-02-24T16:36:13.0598400Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:36:13.0598400Z 
2025-02-24T16:36:13.0598490Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:36:13.0598550Z 	Starting iteration 3 of 5
2025-02-24T16:36:13.0598630Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:36:13.0599020Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:36:13.0599100Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:36:13.0599190Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0599190Z 
2025-02-24T16:36:13.0603690Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T16:36:13.0603830Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:36:13.0603890Z 	Plasma stratification:
2025-02-24T16:36:13.0603970Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:36:13.0604060Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:36:13.0604130Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:36:13.0604430Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:36:13.0604500Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:36:13.0604570Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:36:13.0604570Z 
2025-02-24T16:36:13.0604660Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:36:13.0604720Z 	Current t_inner = 10718.574 K
2025-02-24T16:36:13.0604820Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:36:13.0604830Z 
2025-02-24T16:36:13.0604900Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:36:13.0604970Z 	Starting iteration 4 of 5
2025-02-24T16:36:13.0605050Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:36:13.0605120Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:36:13.0605200Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:36:13.0605270Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0605280Z 
2025-02-24T16:36:13.0605460Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T16:36:13.0605540Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:36:13.0605610Z 	Plasma stratification:
2025-02-24T16:36:13.0605680Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:36:13.0605770Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:36:13.0605840Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:36:13.0605910Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:36:13.0605970Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:36:13.0606040Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:36:13.0606040Z 
2025-02-24T16:36:13.0606120Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:36:13.0606180Z 	Current t_inner = 10696.150 K
2025-02-24T16:36:13.0606270Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:36:13.0606270Z 
2025-02-24T16:36:13.0606350Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:36:13.0606420Z 	Simulation finished in 4 iterations 
2025-02-24T16:36:13.0606480Z 	Simulation took 12.47 s
2025-02-24T16:36:13.0606490Z 
2025-02-24T16:36:13.0606570Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:36:13.0606640Z 	Starting iteration 5 of 5
2025-02-24T16:36:13.0606720Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:36:13.0606790Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:36:13.0606860Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:36:13.0606930Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0607080Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T16:36:13.0607080Z 
2025-02-24T16:36:13.0607250Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11dc77110>
2025-02-24T16:36:13.0607410Z simulation = <tardis.simulation.base.Simulation object at 0x169acfd10>
2025-02-24T16:36:13.0607410Z 
2025-02-24T16:36:13.0607490Z     def test_spectrum(self, simulation):
2025-02-24T16:36:13.0607630Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:36:13.0607710Z         expected = self.get_expected_data(key)
2025-02-24T16:36:13.0607760Z     
2025-02-24T16:36:13.0607850Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0607900Z     
2025-02-24T16:36:13.0608410Z >       assert_quantity_allclose(
2025-02-24T16:36:13.0611380Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T16:36:13.0611510Z             luminosity,
2025-02-24T16:36:13.0611570Z         )
2025-02-24T16:36:13.0611580Z 
2025-02-24T16:36:13.0611660Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T16:36:13.0611750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0612130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0612250Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0612420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0614940Z 
2025-02-24T16:36:13.0615340Z args = (<function assert_allclose.<locals>.compare at 0x15310a840>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, .....), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T16:36:13.0615430Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0615640Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0615640Z 
2025-02-24T16:36:13.0615700Z     @wraps(func)
2025-02-24T16:36:13.0615760Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0615830Z         with self._recreate_cm():
2025-02-24T16:36:13.0615900Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0615960Z E           AssertionError: 
2025-02-24T16:36:13.0616050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0616100Z E           
2025-02-24T16:36:13.0616180Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:36:13.0616280Z E           Max absolute difference: 1.38672909e+39
2025-02-24T16:36:13.0616360Z E           Max relative difference: 5.25284451
2025-02-24T16:36:13.0616490Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0616560Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0616690Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0616760Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0616770Z 
2025-02-24T16:36:13.0616940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0617090Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T16:36:13.0617090Z 
2025-02-24T16:36:13.0617260Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11dc77350>
2025-02-24T16:36:13.0617410Z simulation = <tardis.simulation.base.Simulation object at 0x169acfd10>
2025-02-24T16:36:13.0617420Z 
2025-02-24T16:36:13.0617510Z     def test_virtual_spectrum(self, simulation):
2025-02-24T16:36:13.0617650Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T16:36:13.0617730Z         expected = self.get_expected_data(key)
2025-02-24T16:36:13.0617790Z     
2025-02-24T16:36:13.0617870Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0617920Z     
2025-02-24T16:36:13.0617990Z >       assert_quantity_allclose(
2025-02-24T16:36:13.0618130Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T16:36:13.0618180Z             luminosity,
2025-02-24T16:36:13.0618230Z         )
2025-02-24T16:36:13.0618240Z 
2025-02-24T16:36:13.0618310Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T16:36:13.0618400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0618680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0618750Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0618840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0618850Z 
2025-02-24T16:36:13.0619340Z args = (<function assert_allclose.<locals>.compare at 0x15310aa20>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, .....), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T16:36:13.0619430Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0619630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0619630Z 
2025-02-24T16:36:13.0619680Z     @wraps(func)
2025-02-24T16:36:13.0619740Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0619810Z         with self._recreate_cm():
2025-02-24T16:36:13.0619880Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0619950Z E           AssertionError: 
2025-02-24T16:36:13.0620090Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0620140Z E           
2025-02-24T16:36:13.0620220Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:36:13.0620300Z E           Max absolute difference: 5.26760031e+38
2025-02-24T16:36:13.0620390Z E           Max relative difference: 35562.41947434
2025-02-24T16:36:13.0620510Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0620580Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0620700Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0620770Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0620770Z 
2025-02-24T16:36:13.0620940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0621160Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T16:36:13.0621170Z 
2025-02-24T16:36:13.0622980Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc842c0>
2025-02-24T16:36:13.0623140Z simulation = <tardis.simulation.base.Simulation object at 0x1708b9580>
2025-02-24T16:36:13.0623310Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T16:36:13.0623320Z 
2025-02-24T16:36:13.0623420Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:36:13.0623510Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0623570Z         j_blue_estimator = (
2025-02-24T16:36:13.0623740Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:36:13.0623790Z         )
2025-02-24T16:36:13.0623910Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:36:13.0624000Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:36:13.0624000Z 
2025-02-24T16:36:13.0624120Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:36:13.0624220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0624220Z 
2025-02-24T16:36:13.0624430Z args = (<function assert_allclose.<locals>.compare at 0x31b0d9120>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0624490Z        [0., 0., 0.,.....,
2025-02-24T16:36:13.0624550Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0624620Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0624680Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:36:13.0624870Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0624880Z 
2025-02-24T16:36:13.0624920Z     @wraps(func)
2025-02-24T16:36:13.0624990Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0625050Z         with self._recreate_cm():
2025-02-24T16:36:13.0625110Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0625180Z E           AssertionError: 
2025-02-24T16:36:13.0625270Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0625320Z E           
2025-02-24T16:36:13.0625400Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:36:13.0626960Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:36:13.0627240Z E           Max relative difference: 7.72237896
2025-02-24T16:36:13.0627320Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0627390Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0627460Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0627540Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0627610Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0627680Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0627680Z 
2025-02-24T16:36:13.0627850Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0628080Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T16:36:13.0628080Z 
2025-02-24T16:36:13.0628340Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc84a10>
2025-02-24T16:36:13.0628500Z simulation = <tardis.simulation.base.Simulation object at 0x1708b9580>
2025-02-24T16:36:13.0628640Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T16:36:13.0628650Z 
2025-02-24T16:36:13.0628750Z     def test_spectrum(self, simulation, request):
2025-02-24T16:36:13.0628850Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0629010Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:36:13.0629140Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:36:13.0629220Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0629330Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:36:13.0629330Z 
2025-02-24T16:36:13.0629440Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:36:13.0629530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0629800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0629870Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0629970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0629970Z 
2025-02-24T16:36:13.0630340Z args = (<function assert_allclose.<locals>.compare at 0x11b448680>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:36:13.0630430Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0630620Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0630630Z 
2025-02-24T16:36:13.0630680Z     @wraps(func)
2025-02-24T16:36:13.0630750Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0630810Z         with self._recreate_cm():
2025-02-24T16:36:13.0630870Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0630940Z E           AssertionError: 
2025-02-24T16:36:13.0631030Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0631120Z E           
2025-02-24T16:36:13.0631290Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:36:13.0631400Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:36:13.0631490Z E           Max relative difference: 4.0036592
2025-02-24T16:36:13.0631690Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0631790Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0631920Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0632000Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0632010Z 
2025-02-24T16:36:13.0632210Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0632490Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T16:36:13.0632680Z 
2025-02-24T16:36:13.0633020Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc85040>
2025-02-24T16:36:13.0633220Z simulation = <tardis.simulation.base.Simulation object at 0x1708b9580>
2025-02-24T16:36:13.0633460Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T16:36:13.0633470Z 
2025-02-24T16:36:13.0633640Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:36:13.0633790Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0634030Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:36:13.0634410Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:36:13.0635920Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0636070Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:36:13.0636080Z 
2025-02-24T16:36:13.0636210Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:36:13.0636320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0636740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0636870Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0637020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0637030Z 
2025-02-24T16:36:13.0637540Z args = (<function assert_allclose.<locals>.compare at 0x30378b4c0>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, .....), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T16:36:13.0637690Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T16:36:13.0637980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0638000Z 
2025-02-24T16:36:13.0638100Z     @wraps(func)
2025-02-24T16:36:13.0638220Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0638360Z         with self._recreate_cm():
2025-02-24T16:36:13.0638480Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0638620Z E           AssertionError: 
2025-02-24T16:36:13.0638790Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0638900Z E           
2025-02-24T16:36:13.0639020Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:36:13.0639110Z E           Max absolute difference: 5.00661745e+37
2025-02-24T16:36:13.0639190Z E           Max relative difference: 17.51202125
2025-02-24T16:36:13.0639320Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:36:13.0639390Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T16:36:13.0639520Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:36:13.0639590Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T16:36:13.0639590Z 
2025-02-24T16:36:13.0639760Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0639950Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T16:36:13.0639950Z 
2025-02-24T16:36:13.0640210Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc84470>
2025-02-24T16:36:13.0640370Z simulation = <tardis.simulation.base.Simulation object at 0x152d4b590>
2025-02-24T16:36:13.0640530Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T16:36:13.0640530Z 
2025-02-24T16:36:13.0640640Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:36:13.0640720Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0640790Z         j_blue_estimator = (
2025-02-24T16:36:13.0640960Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:36:13.0641010Z         )
2025-02-24T16:36:13.0641570Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:36:13.0641660Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:36:13.0641670Z 
2025-02-24T16:36:13.0641770Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:36:13.0641870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0641870Z 
2025-02-24T16:36:13.0642070Z args = (<function assert_allclose.<locals>.compare at 0x319337240>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0642130Z        [0., 0., 0.,.....,
2025-02-24T16:36:13.0642190Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0642250Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0643290Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:36:13.0643490Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0643500Z 
2025-02-24T16:36:13.0643560Z     @wraps(func)
2025-02-24T16:36:13.0643620Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0643680Z         with self._recreate_cm():
2025-02-24T16:36:13.0643740Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0643810Z E           AssertionError: 
2025-02-24T16:36:13.0643890Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0643940Z E           
2025-02-24T16:36:13.0644020Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:36:13.0644100Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:36:13.0644180Z E           Max relative difference: 3.25828651
2025-02-24T16:36:13.0644250Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0644330Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0644400Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0644480Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0644540Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0644610Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0644620Z 
2025-02-24T16:36:13.0644780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0644950Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T16:36:13.0644970Z 
2025-02-24T16:36:13.0645220Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc84bc0>
2025-02-24T16:36:13.0645370Z simulation = <tardis.simulation.base.Simulation object at 0x152d4b590>
2025-02-24T16:36:13.0645500Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T16:36:13.0645510Z 
2025-02-24T16:36:13.0645600Z     def test_spectrum(self, simulation, request):
2025-02-24T16:36:13.0645680Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0645840Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:36:13.0645980Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:36:13.0646060Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0646160Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:36:13.0646160Z 
2025-02-24T16:36:13.0646260Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:36:13.0646360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0646630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0646690Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0646790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0646790Z 
2025-02-24T16:36:13.0647150Z args = (<function assert_allclose.<locals>.compare at 0x31b080540>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:36:13.0647310Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0647510Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0647510Z 
2025-02-24T16:36:13.0647560Z     @wraps(func)
2025-02-24T16:36:13.0647630Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0647690Z         with self._recreate_cm():
2025-02-24T16:36:13.0647750Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0647820Z E           AssertionError: 
2025-02-24T16:36:13.0647900Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0647950Z E           
2025-02-24T16:36:13.0648080Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:36:13.0648160Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:36:13.0648240Z E           Max relative difference: 1.86186015
2025-02-24T16:36:13.0648360Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0648440Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0648560Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0648640Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0648650Z 
2025-02-24T16:36:13.0648810Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0648990Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T16:36:13.0648990Z 
2025-02-24T16:36:13.0649250Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc851f0>
2025-02-24T16:36:13.0649400Z simulation = <tardis.simulation.base.Simulation object at 0x152d4b590>
2025-02-24T16:36:13.0649560Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T16:36:13.0649570Z 
2025-02-24T16:36:13.0649680Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:36:13.0649760Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0649920Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:36:13.0650050Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:36:13.0650140Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0650230Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:36:13.0650240Z 
2025-02-24T16:36:13.0650340Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:36:13.0650440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0650700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0650770Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0650860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0650870Z 
2025-02-24T16:36:13.0651370Z args = (<function assert_allclose.<locals>.compare at 0x311afa020>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, .....), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T16:36:13.0651520Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T16:36:13.0651790Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0651800Z 
2025-02-24T16:36:13.0651880Z     @wraps(func)
2025-02-24T16:36:13.0651990Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0652090Z         with self._recreate_cm():
2025-02-24T16:36:13.0652210Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0652320Z E           AssertionError: 
2025-02-24T16:36:13.0652430Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0652480Z E           
2025-02-24T16:36:13.0652570Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:36:13.0652930Z E           Max absolute difference: 2.90101642e+37
2025-02-24T16:36:13.0653030Z E           Max relative difference: 0.98973757
2025-02-24T16:36:13.0653200Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:36:13.0653300Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T16:36:13.0653490Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:36:13.0653600Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T16:36:13.0653620Z 
2025-02-24T16:36:13.0653850Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0654100Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T16:36:13.0654200Z 
2025-02-24T16:36:13.0654500Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc84740>
2025-02-24T16:36:13.0654720Z simulation = <tardis.simulation.base.Simulation object at 0x30fd44fb0>
2025-02-24T16:36:13.0654920Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T16:36:13.0654940Z 
2025-02-24T16:36:13.0655100Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:36:13.0655230Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0655320Z         j_blue_estimator = (
2025-02-24T16:36:13.0655550Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:36:13.0655630Z         )
2025-02-24T16:36:13.0655760Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:36:13.0655850Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:36:13.0655860Z 
2025-02-24T16:36:13.0655970Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:36:13.0656120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0656130Z 
2025-02-24T16:36:13.0656360Z args = (<function assert_allclose.<locals>.compare at 0x319337240>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0656430Z        [0., 0., 0.,.....,
2025-02-24T16:36:13.0656520Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0656610Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0656680Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:36:13.0656890Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0656900Z 
2025-02-24T16:36:13.0657000Z     @wraps(func)
2025-02-24T16:36:13.0657080Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0657170Z         with self._recreate_cm():
2025-02-24T16:36:13.0657280Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0657360Z E           AssertionError: 
2025-02-24T16:36:13.0657460Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0657530Z E           
2025-02-24T16:36:13.0657640Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:36:13.0657740Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:36:13.0657860Z E           Max relative difference: 3.25828651
2025-02-24T16:36:13.0657980Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0658060Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0658140Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0658220Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0658290Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0658360Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0658360Z 
2025-02-24T16:36:13.0658550Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0658750Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T16:36:13.0658760Z 
2025-02-24T16:36:13.0659050Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc84e00>
2025-02-24T16:36:13.0659320Z simulation = <tardis.simulation.base.Simulation object at 0x30fd44fb0>
2025-02-24T16:36:13.0659500Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T16:36:13.0659520Z 
2025-02-24T16:36:13.0659630Z     def test_spectrum(self, simulation, request):
2025-02-24T16:36:13.0659750Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0659960Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:36:13.0660140Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:36:13.0660240Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0660410Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:36:13.0660420Z 
2025-02-24T16:36:13.0660550Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:36:13.0660660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0660990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0661080Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0661210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0661220Z 
2025-02-24T16:36:13.0661630Z args = (<function assert_allclose.<locals>.compare at 0x31ba08ea0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:36:13.0661740Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0661970Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0661990Z 
2025-02-24T16:36:13.0662070Z     @wraps(func)
2025-02-24T16:36:13.0662180Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0662280Z         with self._recreate_cm():
2025-02-24T16:36:13.0662390Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0662500Z E           AssertionError: 
2025-02-24T16:36:13.0662600Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0662660Z E           
2025-02-24T16:36:13.0663010Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:36:13.0663160Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:36:13.0663290Z E           Max relative difference: 1.86186015
2025-02-24T16:36:13.0663420Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0663490Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0663620Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0663750Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0663760Z 
2025-02-24T16:36:13.0664000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0664230Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T16:36:13.0664240Z 
2025-02-24T16:36:13.0664520Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc85400>
2025-02-24T16:36:13.0664680Z simulation = <tardis.simulation.base.Simulation object at 0x30fd44fb0>
2025-02-24T16:36:13.0664860Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T16:36:13.0664870Z 
2025-02-24T16:36:13.0665040Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:36:13.0665160Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0665380Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:36:13.0665570Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:36:13.0665680Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0665810Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:36:13.0666030Z 
2025-02-24T16:36:13.0666160Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:36:13.0666280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0666580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0666660Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0666760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0666770Z 
2025-02-24T16:36:13.0667150Z args = (<function assert_allclose.<locals>.compare at 0x31ba09b20>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, .....), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T16:36:13.0667360Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T16:36:13.0667570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0667570Z 
2025-02-24T16:36:13.0667630Z     @wraps(func)
2025-02-24T16:36:13.0667700Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0667770Z         with self._recreate_cm():
2025-02-24T16:36:13.0667830Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0667900Z E           AssertionError: 
2025-02-24T16:36:13.0667980Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0668040Z E           
2025-02-24T16:36:13.0668120Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:36:13.0668210Z E           Max absolute difference: 2.99183385e+37
2025-02-24T16:36:13.0668290Z E           Max relative difference: 0.98992197
2025-02-24T16:36:13.0668420Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:36:13.0668490Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T16:36:13.0668630Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:36:13.0668700Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T16:36:13.0668710Z 
2025-02-24T16:36:13.0668880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0669020Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:36:13.0669020Z 
2025-02-24T16:36:13.0669020Z 
2025-02-24T16:36:13.0669520Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 130593.14it/s][A
2025-02-24T16:36:13.0669730Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T16:36:13.0669730Z 
2025-02-24T16:36:13.0669990Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc845f0>
2025-02-24T16:36:13.0670150Z simulation = <tardis.simulation.base.Simulation object at 0x318b29310>
2025-02-24T16:36:13.0670360Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T16:36:13.0670380Z 
2025-02-24T16:36:13.0670550Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:36:13.0670650Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0670720Z         j_blue_estimator = (
2025-02-24T16:36:13.0670900Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:36:13.0670950Z         )
2025-02-24T16:36:13.0671070Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:36:13.0671180Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:36:13.0671180Z 
2025-02-24T16:36:13.0671290Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:36:13.0671380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0671390Z 
2025-02-24T16:36:13.0671610Z args = (<function assert_allclose.<locals>.compare at 0x31ad8a200>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0671660Z        [0., 0., 0.,.....,
2025-02-24T16:36:13.0671870Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0671930Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0671990Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:36:13.0672200Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0672200Z 
2025-02-24T16:36:13.0672250Z     @wraps(func)
2025-02-24T16:36:13.0672310Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0672380Z         with self._recreate_cm():
2025-02-24T16:36:13.0672440Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0672510Z E           AssertionError: 
2025-02-24T16:36:13.0672600Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0672710Z E           
2025-02-24T16:36:13.0672800Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:36:13.0672890Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:36:13.0672970Z E           Max relative difference: 7.72237896
2025-02-24T16:36:13.0673050Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0673120Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0673190Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0673280Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0673340Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.0673420Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.0673420Z 
2025-02-24T16:36:13.0673580Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0673770Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T16:36:13.0673770Z 
2025-02-24T16:36:13.0674040Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc84d40>
2025-02-24T16:36:13.0674210Z simulation = <tardis.simulation.base.Simulation object at 0x318b29310>
2025-02-24T16:36:13.0679240Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T16:36:13.0679280Z 
2025-02-24T16:36:13.0679400Z     def test_spectrum(self, simulation, request):
2025-02-24T16:36:13.0679480Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0679650Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:36:13.0679790Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:36:13.0679880Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0679980Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:36:13.0679980Z 
2025-02-24T16:36:13.0680100Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:36:13.0680220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0680520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0680600Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0680700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0680700Z 
2025-02-24T16:36:13.0681080Z args = (<function assert_allclose.<locals>.compare at 0x15931bce0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:36:13.0681170Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0681380Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0681390Z 
2025-02-24T16:36:13.0681440Z     @wraps(func)
2025-02-24T16:36:13.0681510Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0681580Z         with self._recreate_cm():
2025-02-24T16:36:13.0681650Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0681720Z E           AssertionError: 
2025-02-24T16:36:13.0681810Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0682100Z E           
2025-02-24T16:36:13.0682190Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:36:13.0682270Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:36:13.0682350Z E           Max relative difference: 4.0036592
2025-02-24T16:36:13.0682490Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0682570Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0682700Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.0682770Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0682770Z 
2025-02-24T16:36:13.0682950Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0683230Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T16:36:13.0683230Z 
2025-02-24T16:36:13.0683500Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11dc85340>
2025-02-24T16:36:13.0683660Z simulation = <tardis.simulation.base.Simulation object at 0x318b29310>
2025-02-24T16:36:13.0683860Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T16:36:13.0683870Z 
2025-02-24T16:36:13.0684010Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:36:13.0684110Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0684270Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:36:13.0684400Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:36:13.0684480Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:36:13.0684590Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:36:13.0684590Z 
2025-02-24T16:36:13.0684700Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:36:13.0684800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0685090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:36:13.0685170Z     np.testing.assert_allclose(
2025-02-24T16:36:13.0685260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0685270Z 
2025-02-24T16:36:13.0685650Z args = (<function assert_allclose.<locals>.compare at 0x159318860>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, .....), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T16:36:13.0685740Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T16:36:13.0685940Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0685950Z 
2025-02-24T16:36:13.0686000Z     @wraps(func)
2025-02-24T16:36:13.0686070Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0686130Z         with self._recreate_cm():
2025-02-24T16:36:13.0686200Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0686270Z E           AssertionError: 
2025-02-24T16:36:13.0686350Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0686400Z E           
2025-02-24T16:36:13.0686490Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:36:13.0686570Z E           Max absolute difference: 5.0153284e+37
2025-02-24T16:36:13.0686660Z E           Max relative difference: 4.90769503
2025-02-24T16:36:13.0686790Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:36:13.0686870Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T16:36:13.0687000Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:36:13.0687070Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T16:36:13.0687070Z 
2025-02-24T16:36:13.0699070Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0699630Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T16:36:13.0699630Z 
2025-02-24T16:36:13.0700220Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:36:13.0700440Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x31ad2dbe0>
2025-02-24T16:36:13.0700740Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:36:13.0700820Z 
2025-02-24T16:36:13.0700900Z     def test_montecarlo_main_loop(
2025-02-24T16:36:13.0700980Z         montecarlo_main_loop_config,
2025-02-24T16:36:13.0701040Z         regression_data,
2025-02-24T16:36:13.0701100Z         atomic_dataset,
2025-02-24T16:36:13.0701150Z     ):
2025-02-24T16:36:13.0701250Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:36:13.0701380Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:36:13.0701460Z             montecarlo_main_loop_config,
2025-02-24T16:36:13.0701520Z             atom_data=atomic_dataset,
2025-02-24T16:36:13.0701600Z             virtual_packet_logging=False,
2025-02-24T16:36:13.0701660Z             legacy_mode_enabled=True,
2025-02-24T16:36:13.0701720Z         )
2025-02-24T16:36:13.0701830Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:36:13.0701920Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:36:13.0701980Z     
2025-02-24T16:36:13.0702090Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:36:13.0702170Z             montecarlo_main_loop_simulation
2025-02-24T16:36:13.0702220Z         )
2025-02-24T16:36:13.0702280Z     
2025-02-24T16:36:13.0702350Z         # Load compare data from refdata
2025-02-24T16:36:13.0702400Z     
2025-02-24T16:36:13.0702470Z         expected_nu = expected_hdf_store[
2025-02-24T16:36:13.0702570Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:36:13.0702620Z         ]
2025-02-24T16:36:13.0702700Z         expected_energy = expected_hdf_store[
2025-02-24T16:36:13.0702820Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:36:13.0702870Z         ]
2025-02-24T16:36:13.0703060Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:36:13.0703190Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:36:13.0703230Z         ]
2025-02-24T16:36:13.0703320Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:36:13.0703430Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:36:13.0703490Z         ]
2025-02-24T16:36:13.0703560Z         expected_hdf_store.close()
2025-02-24T16:36:13.0703730Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T16:36:13.0703890Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:36:13.0704010Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:36:13.0704080Z         actual_nu_bar_estimator = (
2025-02-24T16:36:13.0704200Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:36:13.0704250Z         )
2025-02-24T16:36:13.0704410Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:36:13.0704460Z     
2025-02-24T16:36:13.0704510Z         # Compare
2025-02-24T16:36:13.0704570Z >       npt.assert_allclose(
2025-02-24T16:36:13.0704710Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T16:36:13.0704760Z         )
2025-02-24T16:36:13.0704760Z 
2025-02-24T16:36:13.0704930Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T16:36:13.0705030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0705190Z 
2025-02-24T16:36:13.0705550Z args = (<function assert_allclose.<locals>.compare at 0x1531d47c0>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28, 6.....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T16:36:13.0705680Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T16:36:13.0705890Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T16:36:13.0705900Z 
2025-02-24T16:36:13.0705950Z     @wraps(func)
2025-02-24T16:36:13.0706020Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0706090Z         with self._recreate_cm():
2025-02-24T16:36:13.0706160Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0706320Z E           AssertionError: 
2025-02-24T16:36:13.0706410Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:36:13.0706470Z E           
2025-02-24T16:36:13.0706550Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:36:13.0706630Z E           Max absolute difference: 2.25821059e+25
2025-02-24T16:36:13.0706710Z E           Max relative difference: 0.00054426
2025-02-24T16:36:13.0706840Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:36:13.0706940Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:36:13.0707040Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:36:13.0707160Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:36:13.0707250Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:36:13.0707360Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:36:13.0707360Z 
2025-02-24T16:36:13.0707530Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0707680Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:36:13.0708100Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:36:13.0708460Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:36:13.0708620Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0708800Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:36:13.0708940Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0709000Z 	
2025-02-24T16:36:13.0709070Z 	Simulation finished in 0 iterations 
2025-02-24T16:36:13.0709140Z 	Simulation took 0.00 s
2025-02-24T16:36:13.0709220Z  ([1mbase.py[0m:542)
2025-02-24T16:36:13.0709360Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0709410Z 	
2025-02-24T16:36:13.0709530Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:36:13.0709670Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0709720Z 	
2025-02-24T16:36:13.0709790Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:36:13.0709860Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:36:13.0709940Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0710010Z  ([1mbase.py[0m:657)
2025-02-24T16:36:13.0710150Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:36:13.0710150Z 
2025-02-24T16:36:13.0710160Z 
2025-02-24T16:36:13.0710350Z Packets:                                                                                   7524/? [00:08<00:00, 777.28it/s]  [A
2025-02-24T16:36:13.0710360Z 
2025-02-24T16:36:13.0710540Z Packets:                                                                                   18301/? [00:08<00:00, 2603.24it/s][A
2025-02-24T16:36:13.0710550Z 
2025-02-24T16:36:13.0710730Z Packets:                                                                                   30676/? [00:08<00:00, 5486.52it/s][A
2025-02-24T16:36:13.0710790Z 
2025-02-24T16:36:13.0711000Z Packets:                                                                                   43172/? [00:08<00:00, 9415.01it/s][A
2025-02-24T16:36:13.0711010Z 
2025-02-24T16:36:13.0711200Z Packets:                                                                                   54867/? [00:08<00:00, 14239.69it/s][A
2025-02-24T16:36:13.0711200Z 
2025-02-24T16:36:13.0711390Z Packets:                                                                                   65354/? [00:08<00:00, 19545.57it/s][A
2025-02-24T16:36:13.0711390Z 
2025-02-24T16:36:13.0711570Z Packets:                                                                                   77078/? [00:08<00:00, 27230.45it/s][A
2025-02-24T16:36:13.0711650Z 
2025-02-24T16:36:13.0711840Z Packets:                                                                                   89929/? [00:08<00:00, 37461.98it/s][A
2025-02-24T16:36:13.0711840Z 
2025-02-24T16:36:13.0712030Z Packets:                                                                                   103002/? [00:09<00:00, 49224.59it/s][A
2025-02-24T16:36:13.0712160Z Iterations:                                                                                40/? [08:22<00:00,  6.16s/it]
2025-02-24T16:36:13.0712170Z 
2025-02-24T16:36:13.0712340Z Packets:                                                                                   104009/? [00:09<00:00, 49224.59it/s][A
2025-02-24T16:36:13.0712480Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:36:13.0712900Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:36:13.0713090Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:36:13.0713190Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:36:13.0713260Z 	Simulation finished in 0 iterations 
2025-02-24T16:36:13.0713330Z 	Simulation took 0.00 s
2025-02-24T16:36:13.0713340Z 
2025-02-24T16:36:13.0713420Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:36:13.0713500Z 	Starting iteration 1 of 1
2025-02-24T16:36:13.0713580Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:36:13.0713660Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:36:13.0713730Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:36:13.0713800Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0713950Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T16:36:13.0713950Z 
2025-02-24T16:36:13.0714510Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:36:13.0714750Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x152ab1f70>
2025-02-24T16:36:13.0715050Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:36:13.0715050Z 
2025-02-24T16:36:13.0715140Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T16:36:13.0715210Z         montecarlo_main_loop_config,
2025-02-24T16:36:13.0715270Z         regression_data,
2025-02-24T16:36:13.0715330Z         atomic_dataset,
2025-02-24T16:36:13.0715380Z     ):
2025-02-24T16:36:13.0715460Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:36:13.0715610Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T16:36:13.0715660Z     
2025-02-24T16:36:13.0715790Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:36:13.0715860Z             montecarlo_main_loop_config,
2025-02-24T16:36:13.0715930Z             atom_data=atomic_dataset,
2025-02-24T16:36:13.0716000Z             virtual_packet_logging=True,
2025-02-24T16:36:13.0716140Z             legacy_mode_enabled=True,
2025-02-24T16:36:13.0716190Z         )
2025-02-24T16:36:13.0716290Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:36:13.0716390Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:36:13.0716440Z     
2025-02-24T16:36:13.0716550Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T16:36:13.0716600Z     
2025-02-24T16:36:13.0719200Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T16:36:13.0719290Z     
2025-02-24T16:36:13.0719400Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:36:13.0719470Z             montecarlo_main_loop_simulation
2025-02-24T16:36:13.0719660Z         )
2025-02-24T16:36:13.0719720Z     
2025-02-24T16:36:13.0719790Z         expected_nu = expected_hdf_store[
2025-02-24T16:36:13.0719890Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:36:13.0719940Z         ]
2025-02-24T16:36:13.0720020Z         expected_energy = expected_hdf_store[
2025-02-24T16:36:13.0720140Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:36:13.0720180Z         ]
2025-02-24T16:36:13.0720280Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:36:13.0720400Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:36:13.0720440Z         ]
2025-02-24T16:36:13.0720530Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:36:13.0720630Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:36:13.0720680Z         ]
2025-02-24T16:36:13.0720780Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T16:36:13.0720930Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T16:36:13.0720980Z         ]
2025-02-24T16:36:13.0721080Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T16:36:13.0721220Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T16:36:13.0721270Z         ]
2025-02-24T16:36:13.0721330Z     
2025-02-24T16:36:13.0721410Z         transport_state = transport.transport_state
2025-02-24T16:36:13.0721460Z     
2025-02-24T16:36:13.0721600Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:36:13.0721710Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:36:13.0721830Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T16:36:13.0721920Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T16:36:13.0722050Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T16:36:13.0722190Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T16:36:13.0722250Z     
2025-02-24T16:36:13.0722320Z         expected_hdf_store.close()
2025-02-24T16:36:13.0722360Z         # Compare
2025-02-24T16:36:13.0722430Z >       npt.assert_allclose(
2025-02-24T16:36:13.0722490Z             actual_nu_bar_estimator,
2025-02-24T16:36:13.0722570Z             expected_nu_bar_estimator,
2025-02-24T16:36:13.0722620Z             rtol=1e-12,
2025-02-24T16:36:13.0722680Z             atol=1e-15,
2025-02-24T16:36:13.0722730Z         )
2025-02-24T16:36:13.0722730Z 
2025-02-24T16:36:13.0722880Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T16:36:13.0722980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0722980Z 
2025-02-24T16:36:13.0723320Z args = (<function assert_allclose.<locals>.compare at 0x30ed3e480>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28, 6.....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T16:36:13.0723450Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T16:36:13.0723660Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T16:36:13.0723660Z 
2025-02-24T16:36:13.0723720Z     @wraps(func)
2025-02-24T16:36:13.0723910Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0723980Z         with self._recreate_cm():
2025-02-24T16:36:13.0724050Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0724120Z E           AssertionError: 
2025-02-24T16:36:13.0724210Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:36:13.0724260Z E           
2025-02-24T16:36:13.0724330Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:36:13.0724410Z E           Max absolute difference: 1.93283629e+25
2025-02-24T16:36:13.0724480Z E           Max relative difference: 0.00029148
2025-02-24T16:36:13.0724600Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:36:13.0724760Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:36:13.0724860Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:36:13.0724970Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:36:13.0725060Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:36:13.0725170Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:36:13.0725170Z 
2025-02-24T16:36:13.0725330Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0725460Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:36:13.0725730Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:36:13.0726060Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:36:13.0726210Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0726380Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:36:13.0726510Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0726560Z 	
2025-02-24T16:36:13.0726630Z 	Simulation finished in 0 iterations 
2025-02-24T16:36:13.0726690Z 	Simulation took 0.00 s
2025-02-24T16:36:13.0726760Z  ([1mbase.py[0m:542)
2025-02-24T16:36:13.0726890Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0726940Z 	
2025-02-24T16:36:13.0727060Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:36:13.0727190Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0727230Z 	
2025-02-24T16:36:13.0727300Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:36:13.0727370Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:36:13.0727440Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0727520Z  ([1mbase.py[0m:657)
2025-02-24T16:36:13.0727650Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:36:13.0727650Z 
2025-02-24T16:36:13.0727650Z 
2025-02-24T16:36:13.0727840Z Packets:                                                                                   114858/? [00:11<00:00, 12196.36it/s][A
2025-02-24T16:36:13.0727850Z 
2025-02-24T16:36:13.0728020Z Packets:                                                                                   123222/? [00:11<00:00, 14509.22it/s][A
2025-02-24T16:36:13.0728020Z 
2025-02-24T16:36:13.0728210Z Packets:                                                                                   130209/? [00:12<00:00, 16816.02it/s][A
2025-02-24T16:36:13.0728210Z 
2025-02-24T16:36:13.0728390Z Packets:                                                                                   136264/? [00:12<00:00, 19068.47it/s][A
2025-02-24T16:36:13.0728390Z 
2025-02-24T16:36:13.0728560Z Packets:                                                                                   141633/? [00:12<00:00, 21482.63it/s][A
2025-02-24T16:36:13.0728570Z 
2025-02-24T16:36:13.0728740Z Packets:                                                                                   146606/? [00:12<00:00, 24047.16it/s][A
2025-02-24T16:36:13.0728870Z 
2025-02-24T16:36:13.0729060Z Packets:                                                                                   151342/? [00:12<00:00, 26996.27it/s][A
2025-02-24T16:36:13.0729060Z 
2025-02-24T16:36:13.0729230Z Packets:                                                                                   156033/? [00:12<00:00, 29902.72it/s][A
2025-02-24T16:36:13.0729240Z 
2025-02-24T16:36:13.0729400Z Packets:                                                                                   160658/? [00:12<00:00, 32480.06it/s][A
2025-02-24T16:36:13.0729410Z 
2025-02-24T16:36:13.0729580Z Packets:                                                                                   165194/? [00:12<00:00, 34768.20it/s][A
2025-02-24T16:36:13.0729770Z 
2025-02-24T16:36:13.0729970Z Packets:                                                                                   169666/? [00:13<00:00, 35533.04it/s][A
2025-02-24T16:36:13.0729980Z 
2025-02-24T16:36:13.0730150Z Packets:                                                                                   173929/? [00:13<00:00, 36800.60it/s][A
2025-02-24T16:36:13.0730160Z 
2025-02-24T16:36:13.0730330Z Packets:                                                                                   178150/? [00:13<00:00, 38146.28it/s][A
2025-02-24T16:36:13.0730330Z 
2025-02-24T16:36:13.0730510Z Packets:                                                                                   182360/? [00:13<00:00, 35830.95it/s][A
2025-02-24T16:36:13.0730510Z 
2025-02-24T16:36:13.0730680Z Packets:                                                                                   186239/? [00:13<00:00, 35425.22it/s][A
2025-02-24T16:36:13.0730690Z 
2025-02-24T16:36:13.0730860Z Packets:                                                                                   189986/? [00:13<00:00, 34742.85it/s][A
2025-02-24T16:36:13.0730870Z 
2025-02-24T16:36:13.0731040Z Packets:                                                                                   194022/? [00:13<00:00, 36230.31it/s][A
2025-02-24T16:36:13.0731040Z 
2025-02-24T16:36:13.0731210Z Packets:                                                                                   197763/? [00:13<00:00, 34790.69it/s][A
2025-02-24T16:36:13.0731220Z 
2025-02-24T16:36:13.0731390Z Packets:                                                                                   201329/? [00:13<00:00, 32911.37it/s][A
2025-02-24T16:36:13.0731510Z Iterations:                                                                                41/? [08:27<00:00,  5.87s/it]
2025-02-24T16:36:13.0731510Z 
2025-02-24T16:36:13.0731690Z Packets:                                                                                   204009/? [00:14<00:00, 32911.37it/s][A
2025-02-24T16:36:13.0731830Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:36:13.0732220Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:36:13.0732410Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:36:13.0732500Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:36:13.0732570Z 	Simulation finished in 0 iterations 
2025-02-24T16:36:13.0732630Z 	Simulation took 0.00 s
2025-02-24T16:36:13.0732630Z 
2025-02-24T16:36:13.0732720Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:36:13.0732780Z 	Starting iteration 1 of 1
2025-02-24T16:36:13.0732860Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:36:13.0732930Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:36:13.0733000Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:36:13.0733070Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0733200Z __________________________ test_boundary_interactions __________________________
2025-02-24T16:36:13.0733200Z 
2025-02-24T16:36:13.0733820Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#11b3d3e60<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float64,...xing.RPacketTracker object at 0x165c21ab0>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x11ecd7af0>])
2025-02-24T16:36:13.0734160Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x31bf8ddc0>
2025-02-24T16:36:13.0734160Z 
2025-02-24T16:36:13.0734300Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T16:36:13.0734380Z         no_of_packets = len(rpacket_tracker)
2025-02-24T16:36:13.0734420Z     
2025-02-24T16:36:13.0734490Z         # Hard coding the number of columns
2025-02-24T16:36:13.0734610Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T16:36:13.0734740Z         obtained_boundary_interaction = np.full(
2025-02-24T16:36:13.0734810Z             (no_of_packets, 64),
2025-02-24T16:36:13.0734860Z             [-1],
2025-02-24T16:36:13.0734970Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T16:36:13.0735020Z         )
2025-02-24T16:36:13.0735070Z     
2025-02-24T16:36:13.0735170Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T16:36:13.0735240Z             obtained_boundary_interaction[
2025-02-24T16:36:13.0735330Z                 i, : tracker.boundary_interaction.size
2025-02-24T16:36:13.0735400Z             ] = tracker.boundary_interaction
2025-02-24T16:36:13.0735450Z     
2025-02-24T16:36:13.0735570Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T16:36:13.0735640Z             obtained_boundary_interaction
2025-02-24T16:36:13.0735690Z         )
2025-02-24T16:36:13.0735750Z >       npt.assert_array_equal(
2025-02-24T16:36:13.0735880Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T16:36:13.0735930Z         )
2025-02-24T16:36:13.0735930Z 
2025-02-24T16:36:13.0736070Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T16:36:13.0736170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0736170Z 
2025-02-24T16:36:13.0736370Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:36:13.0736460Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T16:36:13.0736610Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T16:36:13.0736770Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T16:36:13.0736770Z 
2025-02-24T16:36:13.0736830Z     @wraps(func)
2025-02-24T16:36:13.0736890Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0736950Z         with self._recreate_cm():
2025-02-24T16:36:13.0737020Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0737090Z E           AssertionError: 
2025-02-24T16:36:13.0737150Z E           Arrays are not equal
2025-02-24T16:36:13.0737200Z E           
2025-02-24T16:36:13.0737280Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:36:13.0737390Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:36:13.0737470Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:36:13.0737560Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:36:13.0737670Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:36:13.0737740Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:36:13.0737830Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:36:13.0737840Z 
2025-02-24T16:36:13.0738000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0738140Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T16:36:13.0738140Z 
2025-02-24T16:36:13.0738690Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:36:13.0738970Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1531f06e0>
2025-02-24T16:36:13.0739260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:36:13.0739570Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x11ddf90d0>
2025-02-24T16:36:13.0739570Z 
2025-02-24T16:36:13.0739650Z     def test_montecarlo_main_loop_weighted(
2025-02-24T16:36:13.0739770Z         montecarlo_main_loop_config,
2025-02-24T16:36:13.0739830Z         regression_data,
2025-02-24T16:36:13.0739880Z         atomic_dataset,
2025-02-24T16:36:13.0739960Z         simple_weighted_packet_source,
2025-02-24T16:36:13.0740010Z     ):
2025-02-24T16:36:13.0740090Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:36:13.0740250Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T16:36:13.0740320Z             montecarlo_main_loop_config,
2025-02-24T16:36:13.0740380Z             atom_data=atomic_dataset,
2025-02-24T16:36:13.0740450Z             virtual_packet_logging=False,
2025-02-24T16:36:13.0740520Z             legacy_mode_enabled=True,
2025-02-24T16:36:13.0740570Z         )
2025-02-24T16:36:13.0740690Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T16:36:13.0740770Z             simple_weighted_packet_source
2025-02-24T16:36:13.0740820Z         )
2025-02-24T16:36:13.0740940Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T16:36:13.0741050Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T16:36:13.0741110Z     
2025-02-24T16:36:13.0741190Z         # Get the montecarlo simple regression data
2025-02-24T16:36:13.0741250Z         regression_data_dir = (
2025-02-24T16:36:13.0741410Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T16:36:13.0741520Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T16:36:13.0741570Z         )
2025-02-24T16:36:13.0741700Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T16:36:13.0741750Z     
2025-02-24T16:36:13.0741820Z         # Load compare data from refdata
2025-02-24T16:36:13.0741870Z     
2025-02-24T16:36:13.0741950Z         expected_nu = expected_hdf_store[
2025-02-24T16:36:13.0742050Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:36:13.0742090Z         ]
2025-02-24T16:36:13.0742170Z         expected_energy = expected_hdf_store[
2025-02-24T16:36:13.0742290Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:36:13.0742330Z         ]
2025-02-24T16:36:13.0742430Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:36:13.0742550Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:36:13.0742600Z         ]
2025-02-24T16:36:13.0742690Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:36:13.0742790Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:36:13.0742840Z         ]
2025-02-24T16:36:13.0742910Z         expected_hdf_store.close()
2025-02-24T16:36:13.0742970Z         transport_state = (
2025-02-24T16:36:13.0743240Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T16:36:13.0743290Z         )
2025-02-24T16:36:13.0743430Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:36:13.0743540Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:36:13.0743620Z         actual_nu_bar_estimator = (
2025-02-24T16:36:13.0743740Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:36:13.0743780Z         )
2025-02-24T16:36:13.0744050Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:36:13.0744090Z     
2025-02-24T16:36:13.0744150Z         # Compare
2025-02-24T16:36:13.0744210Z         npt.assert_allclose(
2025-02-24T16:36:13.0744330Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T16:36:13.0744380Z         )
2025-02-24T16:36:13.0744530Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T16:36:13.0744660Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T16:36:13.0744670Z 
2025-02-24T16:36:13.0744850Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T16:36:13.0745000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0745000Z 
2025-02-24T16:36:13.0745380Z args = (<function assert_allclose.<locals>.compare at 0x1728980e0>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05,...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T16:36:13.0745480Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T16:36:13.0745690Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T16:36:13.0745690Z 
2025-02-24T16:36:13.0745740Z     @wraps(func)
2025-02-24T16:36:13.0745800Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0745870Z         with self._recreate_cm():
2025-02-24T16:36:13.0745930Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0746000Z E           AssertionError: 
2025-02-24T16:36:13.0746080Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:36:13.0746140Z E           
2025-02-24T16:36:13.0746230Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:36:13.0746310Z E           Max absolute difference: 2.00640487e-05
2025-02-24T16:36:13.0746390Z E           Max relative difference: 2.06329455
2025-02-24T16:36:13.0746520Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:36:13.0746600Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:36:13.0746720Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:36:13.0746800Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:36:13.0746810Z 
2025-02-24T16:36:13.0746970Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0747100Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:36:13.0747370Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:36:13.0747720Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:36:13.0747870Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0748040Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:36:13.0748170Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0748220Z 	
2025-02-24T16:36:13.0748290Z 	Simulation finished in 0 iterations 
2025-02-24T16:36:13.0748360Z 	Simulation took 0.00 s
2025-02-24T16:36:13.0748430Z  ([1mbase.py[0m:542)
2025-02-24T16:36:13.0748570Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0748620Z 	
2025-02-24T16:36:13.0748740Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:36:13.0748860Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0748910Z 	
2025-02-24T16:36:13.0748990Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:36:13.0749060Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:36:13.0749140Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0749220Z  ([1mbase.py[0m:657)
2025-02-24T16:36:13.0749350Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:36:13.0749350Z 
2025-02-24T16:36:13.0749490Z 
2025-02-24T16:36:13.0749700Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T16:36:13.0749700Z 
2025-02-24T16:36:13.0749880Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T16:36:13.0749880Z 
2025-02-24T16:36:13.0750100Z Packets:   █████████▋                                                                      12044/100000 [00:00<00:00, 120437.82it/s][A
2025-02-24T16:36:13.0750110Z 
2025-02-24T16:36:13.0750310Z Packets:   ████████████████████▍                                                           25516/100000 [00:00<00:00, 128836.76it/s][A
2025-02-24T16:36:13.0750430Z 
2025-02-24T16:36:13.0750660Z Packets:   ███████████████████████████████▌                                                39378/100000 [00:00<00:00, 133301.96it/s][A
2025-02-24T16:36:13.0750660Z 
2025-02-24T16:36:13.0750880Z Packets:   ██████████████████████████████████████████▊                                     53479/100000 [00:00<00:00, 136341.28it/s][A
2025-02-24T16:36:13.0750900Z 
2025-02-24T16:36:13.0751120Z Packets:   █████████████████████████████████████████████████████▋                          67114/100000 [00:00<00:00, 132972.59it/s][A
2025-02-24T16:36:13.0751130Z 
2025-02-24T16:36:13.0751360Z Packets:   ████████████████████████████████████████████████████████████████▎               80426/100000 [00:00<00:00, 130649.93it/s][A
2025-02-24T16:36:13.0751360Z 
2025-02-24T16:36:13.0751610Z Packets:   ██████████████████████████████████████████████████████████████████████████▊     93570/100000 [00:00<00:00, 130901.38it/s][A
2025-02-24T16:36:13.0751740Z Iterations:                                                                                45/? [08:47<00:00,  4.57s/it]
2025-02-24T16:36:13.0751760Z 
2025-02-24T16:36:13.0752020Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 130901.38it/s][A
2025-02-24T16:36:13.0752170Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:36:13.0752580Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:36:13.0752760Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:36:13.0752850Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:36:13.0757690Z 	Simulation finished in 0 iterations 
2025-02-24T16:36:13.0757830Z 	Simulation took 0.00 s
2025-02-24T16:36:13.0757830Z 
2025-02-24T16:36:13.0757920Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:36:13.0758000Z 	Starting iteration 1 of 1
2025-02-24T16:36:13.0758090Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:36:13.0758160Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:36:13.0758230Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:36:13.0758560Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:36:13.0758750Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T16:36:13.0758750Z 
2025-02-24T16:36:13.0758960Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de35b50>
2025-02-24T16:36:13.0759190Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>
2025-02-24T16:36:13.0759420Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T16:36:13.0759480Z attribute = 'plot_data'
2025-02-24T16:36:13.0759480Z 
2025-02-24T16:36:13.0759560Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0759670Z         "attribute",
2025-02-24T16:36:13.0759730Z         [
2025-02-24T16:36:13.0759790Z             "plot_data",
2025-02-24T16:36:13.0759840Z             "plot_colors",
2025-02-24T16:36:13.0759900Z             "new_bin_edges",
2025-02-24T16:36:13.0759950Z         ],
2025-02-24T16:36:13.0760000Z     )
2025-02-24T16:36:13.0760070Z     def test_prepare_plot_data(
2025-02-24T16:36:13.0760120Z         self,
2025-02-24T16:36:13.0760180Z         plotter_prepare_plot_data,
2025-02-24T16:36:13.0760230Z         request,
2025-02-24T16:36:13.0760290Z         attribute,
2025-02-24T16:36:13.0760340Z     ):
2025-02-24T16:36:13.0760380Z         """
2025-02-24T16:36:13.0760490Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:36:13.0760540Z     
2025-02-24T16:36:13.0760590Z         Parameters:
2025-02-24T16:36:13.0760650Z         -----------
2025-02-24T16:36:13.0760800Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:36:13.0760880Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0761020Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:36:13.0761070Z         """
2025-02-24T16:36:13.0761160Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0761280Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:36:13.0761400Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:36:13.0761530Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:36:13.0761660Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:36:13.0761770Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:36:13.0761860Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:36:13.0761970Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:36:13.0761970Z 
2025-02-24T16:36:13.0762080Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:36:13.0762180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0762180Z 
2025-02-24T16:36:13.0762570Z args = (<function assert_allclose.<locals>.compare at 0x169c4cc20>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:36:13.0762660Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:36:13.0762860Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0762860Z 
2025-02-24T16:36:13.0762920Z     @wraps(func)
2025-02-24T16:36:13.0762980Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0763040Z         with self._recreate_cm():
2025-02-24T16:36:13.0763110Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0763170Z E           AssertionError: 
2025-02-24T16:36:13.0763260Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0763310Z E           
2025-02-24T16:36:13.0763390Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:36:13.0763500Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:36:13.0763600Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:36:13.0763770Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:36:13.0763890Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:36:13.0763980Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:36:13.0764080Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:36:13.0764080Z 
2025-02-24T16:36:13.0764250Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0764380Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0764710Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0764920Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0765040Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0765300Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0765460Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T16:36:13.0765470Z 
2025-02-24T16:36:13.0765680Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de35fd0>
2025-02-24T16:36:13.0765900Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>
2025-02-24T16:36:13.0766120Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T16:36:13.0766180Z attribute = 'plot_data'
2025-02-24T16:36:13.0766180Z 
2025-02-24T16:36:13.0766250Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0766300Z         "attribute",
2025-02-24T16:36:13.0766350Z         [
2025-02-24T16:36:13.0766400Z             "plot_data",
2025-02-24T16:36:13.0766460Z             "plot_colors",
2025-02-24T16:36:13.0766510Z             "new_bin_edges",
2025-02-24T16:36:13.0766560Z         ],
2025-02-24T16:36:13.0766610Z     )
2025-02-24T16:36:13.0766670Z     def test_prepare_plot_data(
2025-02-24T16:36:13.0766720Z         self,
2025-02-24T16:36:13.0766790Z         plotter_prepare_plot_data,
2025-02-24T16:36:13.0766830Z         request,
2025-02-24T16:36:13.0766880Z         attribute,
2025-02-24T16:36:13.0766930Z     ):
2025-02-24T16:36:13.0766970Z         """
2025-02-24T16:36:13.0767080Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:36:13.0767120Z     
2025-02-24T16:36:13.0767180Z         Parameters:
2025-02-24T16:36:13.0767240Z         -----------
2025-02-24T16:36:13.0767380Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:36:13.0767460Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0767590Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:36:13.0767630Z         """
2025-02-24T16:36:13.0767720Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0767830Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:36:13.0767960Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:36:13.0768090Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:36:13.0768210Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:36:13.0768310Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:36:13.0768400Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:36:13.0768500Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:36:13.0768500Z 
2025-02-24T16:36:13.0768610Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:36:13.0768710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0768720Z 
2025-02-24T16:36:13.0769140Z args = (<function assert_allclose.<locals>.compare at 0x169cb1c60>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T16:36:13.0769260Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:36:13.0769460Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0769470Z 
2025-02-24T16:36:13.0769520Z     @wraps(func)
2025-02-24T16:36:13.0769580Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0769640Z         with self._recreate_cm():
2025-02-24T16:36:13.0769720Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0769830Z E           AssertionError: 
2025-02-24T16:36:13.0769920Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0769970Z E           
2025-02-24T16:36:13.0770030Z E           (shapes (558,), (560,) mismatch)
2025-02-24T16:36:13.0770150Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:36:13.0770250Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:36:13.0770350Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:36:13.0770460Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:36:13.0770550Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:36:13.0770660Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:36:13.0770660Z 
2025-02-24T16:36:13.0770820Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0770990Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T16:36:13.0770990Z 
2025-02-24T16:36:13.0771190Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de36210>
2025-02-24T16:36:13.0771410Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>
2025-02-24T16:36:13.0771630Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T16:36:13.0771690Z attribute = 'plot_data'
2025-02-24T16:36:13.0771690Z 
2025-02-24T16:36:13.0771760Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0771820Z         "attribute",
2025-02-24T16:36:13.0771860Z         [
2025-02-24T16:36:13.0771920Z             "plot_data",
2025-02-24T16:36:13.0771970Z             "plot_colors",
2025-02-24T16:36:13.0772030Z             "new_bin_edges",
2025-02-24T16:36:13.0772080Z         ],
2025-02-24T16:36:13.0772120Z     )
2025-02-24T16:36:13.0772190Z     def test_prepare_plot_data(
2025-02-24T16:36:13.0772230Z         self,
2025-02-24T16:36:13.0772310Z         plotter_prepare_plot_data,
2025-02-24T16:36:13.0772350Z         request,
2025-02-24T16:36:13.0772400Z         attribute,
2025-02-24T16:36:13.0772450Z     ):
2025-02-24T16:36:13.0772500Z         """
2025-02-24T16:36:13.0772600Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:36:13.0772660Z     
2025-02-24T16:36:13.0772710Z         Parameters:
2025-02-24T16:36:13.0772760Z         -----------
2025-02-24T16:36:13.0772900Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:36:13.0772970Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0773100Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:36:13.0773150Z         """
2025-02-24T16:36:13.0773230Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0773340Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:36:13.0773460Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:36:13.0773600Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:36:13.0773710Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:36:13.0774140Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:36:13.0774240Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:36:13.0774330Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:36:13.0774330Z 
2025-02-24T16:36:13.0774440Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:36:13.0774540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0774540Z 
2025-02-24T16:36:13.0774880Z args = (<function assert_allclose.<locals>.compare at 0x176c4e3e0>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:36:13.0775080Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:36:13.0775280Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0775280Z 
2025-02-24T16:36:13.0775340Z     @wraps(func)
2025-02-24T16:36:13.0775400Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0775460Z         with self._recreate_cm():
2025-02-24T16:36:13.0775530Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0775590Z E           AssertionError: 
2025-02-24T16:36:13.0775680Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0775730Z E           
2025-02-24T16:36:13.0775800Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:36:13.0775920Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:36:13.0776010Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:36:13.0776110Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:36:13.0776220Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:36:13.0776320Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:36:13.0776420Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:36:13.0776420Z 
2025-02-24T16:36:13.0776590Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0776710Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0776940Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0777130Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0777260Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0777510Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0777690Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T16:36:13.0777690Z 
2025-02-24T16:36:13.0777890Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de36450>
2025-02-24T16:36:13.0778120Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>
2025-02-24T16:36:13.0778330Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T16:36:13.0778390Z attribute = 'plot_data'
2025-02-24T16:36:13.0778390Z 
2025-02-24T16:36:13.0778460Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0778510Z         "attribute",
2025-02-24T16:36:13.0778560Z         [
2025-02-24T16:36:13.0778610Z             "plot_data",
2025-02-24T16:36:13.0778670Z             "plot_colors",
2025-02-24T16:36:13.0778720Z             "new_bin_edges",
2025-02-24T16:36:13.0778770Z         ],
2025-02-24T16:36:13.0778820Z     )
2025-02-24T16:36:13.0778880Z     def test_prepare_plot_data(
2025-02-24T16:36:13.0778930Z         self,
2025-02-24T16:36:13.0778990Z         plotter_prepare_plot_data,
2025-02-24T16:36:13.0779040Z         request,
2025-02-24T16:36:13.0779180Z         attribute,
2025-02-24T16:36:13.0779230Z     ):
2025-02-24T16:36:13.0779270Z         """
2025-02-24T16:36:13.0779390Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:36:13.0779440Z     
2025-02-24T16:36:13.0779490Z         Parameters:
2025-02-24T16:36:13.0779540Z         -----------
2025-02-24T16:36:13.0779680Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:36:13.0779760Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0779890Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:36:13.0779940Z         """
2025-02-24T16:36:13.0780030Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0780200Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:36:13.0780330Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:36:13.0780460Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:36:13.0780580Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:36:13.0780680Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:36:13.0780780Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:36:13.0780880Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:36:13.0780880Z 
2025-02-24T16:36:13.0780990Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:36:13.0781080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0781090Z 
2025-02-24T16:36:13.0781390Z args = (<function assert_allclose.<locals>.compare at 0x176c4c540>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...210447, 12126.50399598,
2025-02-24T16:36:13.0781500Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:36:13.0781560Z        11042.97481792]))
2025-02-24T16:36:13.0781750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0781760Z 
2025-02-24T16:36:13.0781810Z     @wraps(func)
2025-02-24T16:36:13.0781870Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0781950Z         with self._recreate_cm():
2025-02-24T16:36:13.0782020Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0782080Z E           AssertionError: 
2025-02-24T16:36:13.0782170Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0782210Z E           
2025-02-24T16:36:13.0782280Z E           (shapes (159,), (153,) mismatch)
2025-02-24T16:36:13.0782390Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:36:13.0782490Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:36:13.0782590Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:36:13.0782700Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:36:13.0782800Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:36:13.0782900Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:36:13.0782910Z 
2025-02-24T16:36:13.0783190Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0783360Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T16:36:13.0783360Z 
2025-02-24T16:36:13.0783570Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de366c0>
2025-02-24T16:36:13.0783790Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>
2025-02-24T16:36:13.0784010Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T16:36:13.0784070Z attribute = 'plot_data'
2025-02-24T16:36:13.0784080Z 
2025-02-24T16:36:13.0784150Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0784330Z         "attribute",
2025-02-24T16:36:13.0784380Z         [
2025-02-24T16:36:13.0784430Z             "plot_data",
2025-02-24T16:36:13.0784490Z             "plot_colors",
2025-02-24T16:36:13.0784560Z             "new_bin_edges",
2025-02-24T16:36:13.0784610Z         ],
2025-02-24T16:36:13.0784650Z     )
2025-02-24T16:36:13.0784720Z     def test_prepare_plot_data(
2025-02-24T16:36:13.0784770Z         self,
2025-02-24T16:36:13.0784840Z         plotter_prepare_plot_data,
2025-02-24T16:36:13.0784890Z         request,
2025-02-24T16:36:13.0784940Z         attribute,
2025-02-24T16:36:13.0784980Z     ):
2025-02-24T16:36:13.0785030Z         """
2025-02-24T16:36:13.0785140Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:36:13.0785250Z     
2025-02-24T16:36:13.0785300Z         Parameters:
2025-02-24T16:36:13.0785360Z         -----------
2025-02-24T16:36:13.0785500Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:36:13.0785580Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0785720Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:36:13.0785760Z         """
2025-02-24T16:36:13.0785850Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0785950Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:36:13.0786070Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:36:13.0786200Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:36:13.0786320Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:36:13.0786430Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:36:13.0786520Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:36:13.0786620Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:36:13.0786620Z 
2025-02-24T16:36:13.0786730Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:36:13.0786830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0786830Z 
2025-02-24T16:36:13.0787200Z args = (<function assert_allclose.<locals>.compare at 0x176c4ce00>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:36:13.0787280Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:36:13.0787480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0787490Z 
2025-02-24T16:36:13.0787540Z     @wraps(func)
2025-02-24T16:36:13.0787600Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0787670Z         with self._recreate_cm():
2025-02-24T16:36:13.0787730Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0787800Z E           AssertionError: 
2025-02-24T16:36:13.0787890Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0787940Z E           
2025-02-24T16:36:13.0788000Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:36:13.0788110Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:36:13.0788210Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:36:13.0788310Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:36:13.0788420Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:36:13.0788520Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:36:13.0788610Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:36:13.0788620Z 
2025-02-24T16:36:13.0788780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0788910Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0789220Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0789420Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0789550Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0789800Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0789970Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T16:36:13.0789970Z 
2025-02-24T16:36:13.0790170Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de36900>
2025-02-24T16:36:13.0790460Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>
2025-02-24T16:36:13.0790670Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T16:36:13.0790740Z attribute = 'plot_data'
2025-02-24T16:36:13.0790740Z 
2025-02-24T16:36:13.0790810Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0790870Z         "attribute",
2025-02-24T16:36:13.0790910Z         [
2025-02-24T16:36:13.0790970Z             "plot_data",
2025-02-24T16:36:13.0791020Z             "plot_colors",
2025-02-24T16:36:13.0791080Z             "new_bin_edges",
2025-02-24T16:36:13.0791120Z         ],
2025-02-24T16:36:13.0791170Z     )
2025-02-24T16:36:13.0791230Z     def test_prepare_plot_data(
2025-02-24T16:36:13.0791280Z         self,
2025-02-24T16:36:13.0791350Z         plotter_prepare_plot_data,
2025-02-24T16:36:13.0791390Z         request,
2025-02-24T16:36:13.0791440Z         attribute,
2025-02-24T16:36:13.0791490Z     ):
2025-02-24T16:36:13.0791530Z         """
2025-02-24T16:36:13.0791640Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:36:13.0791690Z     
2025-02-24T16:36:13.0791740Z         Parameters:
2025-02-24T16:36:13.0791790Z         -----------
2025-02-24T16:36:13.0791940Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:36:13.0792020Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0792150Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:36:13.0792200Z         """
2025-02-24T16:36:13.0792280Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0792390Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:36:13.0792510Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:36:13.0792640Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:36:13.0792760Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:36:13.0792870Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:36:13.0792970Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:36:13.0793060Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:36:13.0793060Z 
2025-02-24T16:36:13.0793180Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:36:13.0793270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0793270Z 
2025-02-24T16:36:13.0793640Z args = (<function assert_allclose.<locals>.compare at 0x176c4d800>, array([13692.75973672, 11362.93720064, 12466.53861691, .....), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T16:36:13.0793720Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:36:13.0793920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0793930Z 
2025-02-24T16:36:13.0793980Z     @wraps(func)
2025-02-24T16:36:13.0794040Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0794100Z         with self._recreate_cm():
2025-02-24T16:36:13.0794170Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0794490Z E           AssertionError: 
2025-02-24T16:36:13.0794590Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0794630Z E           
2025-02-24T16:36:13.0794710Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T16:36:13.0794830Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:36:13.0794900Z E                  11152.962595, 11172.044815])
2025-02-24T16:36:13.0795020Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:36:13.0795080Z E                  11398.237865, 11111.204868])
2025-02-24T16:36:13.0795090Z 
2025-02-24T16:36:13.0795250Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0795470Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0795670Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0795930Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0796070Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0796350Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0796520Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T16:36:13.0796530Z 
2025-02-24T16:36:13.0796730Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de36b40>
2025-02-24T16:36:13.0796950Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>
2025-02-24T16:36:13.0797170Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T16:36:13.0797230Z attribute = 'plot_data'
2025-02-24T16:36:13.0797230Z 
2025-02-24T16:36:13.0797300Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0797350Z         "attribute",
2025-02-24T16:36:13.0797400Z         [
2025-02-24T16:36:13.0797450Z             "plot_data",
2025-02-24T16:36:13.0797510Z             "plot_colors",
2025-02-24T16:36:13.0797560Z             "new_bin_edges",
2025-02-24T16:36:13.0797610Z         ],
2025-02-24T16:36:13.0797660Z     )
2025-02-24T16:36:13.0797720Z     def test_prepare_plot_data(
2025-02-24T16:36:13.0797770Z         self,
2025-02-24T16:36:13.0797830Z         plotter_prepare_plot_data,
2025-02-24T16:36:13.0797880Z         request,
2025-02-24T16:36:13.0797930Z         attribute,
2025-02-24T16:36:13.0797970Z     ):
2025-02-24T16:36:13.0798020Z         """
2025-02-24T16:36:13.0798130Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:36:13.0798180Z     
2025-02-24T16:36:13.0798230Z         Parameters:
2025-02-24T16:36:13.0798280Z         -----------
2025-02-24T16:36:13.0798420Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:36:13.0798490Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0798620Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:36:13.0798680Z         """
2025-02-24T16:36:13.0798760Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0798880Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:36:13.0798990Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:36:13.0799120Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:36:13.0799250Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:36:13.0799360Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:36:13.0799450Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:36:13.0799550Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:36:13.0799630Z 
2025-02-24T16:36:13.0799740Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:36:13.0799840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0799840Z 
2025-02-24T16:36:13.0800190Z args = (<function assert_allclose.<locals>.compare at 0x1531d6ac0>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:36:13.0800300Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:36:13.0800500Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0800510Z 
2025-02-24T16:36:13.0800610Z     @wraps(func)
2025-02-24T16:36:13.0800670Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0800740Z         with self._recreate_cm():
2025-02-24T16:36:13.0800800Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0800870Z E           AssertionError: 
2025-02-24T16:36:13.0800950Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0801000Z E           
2025-02-24T16:36:13.0801070Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:36:13.0801230Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:36:13.0801340Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:36:13.0801450Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:36:13.0801560Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:36:13.0801650Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:36:13.0801760Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:36:13.0801760Z 
2025-02-24T16:36:13.0801920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0802040Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0802230Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0802420Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0802550Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0802800Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0802970Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T16:36:13.0802970Z 
2025-02-24T16:36:13.0803180Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de36d20>
2025-02-24T16:36:13.0803400Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>
2025-02-24T16:36:13.0803620Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T16:36:13.0803680Z attribute = 'plot_data'
2025-02-24T16:36:13.0803690Z 
2025-02-24T16:36:13.0803750Z     @pytest.mark.parametrize(
2025-02-24T16:36:13.0803810Z         "attribute",
2025-02-24T16:36:13.0803850Z         [
2025-02-24T16:36:13.0803910Z             "plot_data",
2025-02-24T16:36:13.0803960Z             "plot_colors",
2025-02-24T16:36:13.0804020Z             "new_bin_edges",
2025-02-24T16:36:13.0804070Z         ],
2025-02-24T16:36:13.0804110Z     )
2025-02-24T16:36:13.0804180Z     def test_prepare_plot_data(
2025-02-24T16:36:13.0804230Z         self,
2025-02-24T16:36:13.0804300Z         plotter_prepare_plot_data,
2025-02-24T16:36:13.0804350Z         request,
2025-02-24T16:36:13.0804400Z         attribute,
2025-02-24T16:36:13.0804450Z     ):
2025-02-24T16:36:13.0804500Z         """
2025-02-24T16:36:13.0804610Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:36:13.0804660Z     
2025-02-24T16:36:13.0804710Z         Parameters:
2025-02-24T16:36:13.0804750Z         -----------
2025-02-24T16:36:13.0805000Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:36:13.0805070Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0805210Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:36:13.0805260Z         """
2025-02-24T16:36:13.0805340Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0805450Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:36:13.0805570Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:36:13.0805700Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:36:13.0805870Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:36:13.0805980Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:36:13.0806070Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:36:13.0806170Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:36:13.0806170Z 
2025-02-24T16:36:13.0806290Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:36:13.0806380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0806380Z 
2025-02-24T16:36:13.0806680Z args = (<function assert_allclose.<locals>.compare at 0x176c4e520>, array([12466.53861691, 14269.7609746 , 11910.79400472, 11...210447, 12126.50399598,
2025-02-24T16:36:13.0806800Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:36:13.0806850Z        11042.97481792]))
2025-02-24T16:36:13.0807050Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0807060Z 
2025-02-24T16:36:13.0807110Z     @wraps(func)
2025-02-24T16:36:13.0807170Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0807230Z         with self._recreate_cm():
2025-02-24T16:36:13.0807300Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0807360Z E           AssertionError: 
2025-02-24T16:36:13.0807450Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0807500Z E           
2025-02-24T16:36:13.0807570Z E           (shapes (379,), (381,) mismatch)
2025-02-24T16:36:13.0807670Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:36:13.0807770Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:36:13.0807870Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:36:13.0807980Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:36:13.0808070Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:36:13.0808170Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:36:13.0808180Z 
2025-02-24T16:36:13.0808340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0808460Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0808650Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0808870Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0812760Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0813060Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0813220Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T16:36:13.0813230Z 
2025-02-24T16:36:13.0813440Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de35880>
2025-02-24T16:36:13.0813670Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x165b45c70>
2025-02-24T16:36:13.0814260Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>)
2025-02-24T16:36:13.0814450Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T16:36:13.0814460Z 
2025-02-24T16:36:13.0814520Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.0814660Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:36:13.0814700Z     ):
2025-02-24T16:36:13.0814750Z         """
2025-02-24T16:36:13.0814860Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:36:13.0815740Z     
2025-02-24T16:36:13.0815860Z         Compares generated plot data with regression data.
2025-02-24T16:36:13.0815910Z     
2025-02-24T16:36:13.0815960Z         Parameters:
2025-02-24T16:36:13.0816010Z         -----------
2025-02-24T16:36:13.0816140Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:36:13.0816260Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:36:13.0816340Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0816390Z         """
2025-02-24T16:36:13.0816460Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:36:13.0816550Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0816680Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:36:13.0816790Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:36:13.0816870Z             expected_values = expected.get(
2025-02-24T16:36:13.0816940Z                 "plot_data_hdf/" + item
2025-02-24T16:36:13.0817000Z             ).values.flatten()
2025-02-24T16:36:13.0819460Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:36:13.0820480Z     
2025-02-24T16:36:13.0825780Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:36:13.0826160Z                 np.testing.assert_allclose(
2025-02-24T16:36:13.0826600Z                     expected_values,
2025-02-24T16:36:13.0826780Z                     actual_values,
2025-02-24T16:36:13.0828840Z                     rtol=0.3,
2025-02-24T16:36:13.0829010Z                     atol=3,
2025-02-24T16:36:13.0829160Z                 )
2025-02-24T16:36:13.0829310Z             else:
2025-02-24T16:36:13.0829620Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:36:13.0829770Z     
2025-02-24T16:36:13.0830000Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:36:13.0830260Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:36:13.0830490Z             if isinstance(data.get_label(), str):
2025-02-24T16:36:13.0830650Z                 assert (
2025-02-24T16:36:13.0830900Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:36:13.0831080Z                     == data.get_label()
2025-02-24T16:36:13.0831250Z                 )
2025-02-24T16:36:13.0831430Z             if isinstance(data, Line2D):
2025-02-24T16:36:13.0831640Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0831810Z                     data.get_xydata(),
2025-02-24T16:36:13.0832100Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:36:13.0832260Z                     rtol=0.3,
2025-02-24T16:36:13.0832420Z                     atol=3,
2025-02-24T16:36:13.0832580Z                 )
2025-02-24T16:36:13.0832590Z 
2025-02-24T16:36:13.0832900Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:36:13.0833150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0833170Z 
2025-02-24T16:36:13.0833670Z args = (<function assert_allclose.<locals>.compare at 0x173d82020>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:36:13.0833840Z        [1.19e+04, 1.67e+02],...,
2025-02-24T16:36:13.0834000Z        [1.82e+04, 0.00e+00],
2025-02-24T16:36:13.0835390Z        [1.91e+04, 0.00e+00],
2025-02-24T16:36:13.0835550Z        [1.91e+04, 0.00e+00],
2025-02-24T16:36:13.0835710Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:36:13.0836230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:36:13.0836240Z 
2025-02-24T16:36:13.0836400Z     @wraps(func)
2025-02-24T16:36:13.0836570Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0836750Z         with self._recreate_cm():
2025-02-24T16:36:13.0836930Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0837110Z E           AssertionError: 
2025-02-24T16:36:13.0837320Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.0837740Z E           
2025-02-24T16:36:13.0837940Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:36:13.0838140Z E           Max absolute difference: 22.
2025-02-24T16:36:13.0838340Z E           Max relative difference: 0.8
2025-02-24T16:36:13.0838520Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:36:13.0838710Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:36:13.0838880Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:36:13.0839070Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:36:13.0839240Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:36:13.0839420Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:36:13.0839430Z 
2025-02-24T16:36:13.0839870Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0840190Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0840910Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0841810Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T16:36:13.0842140Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0843080Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:36:13.0843510Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T16:36:13.0843520Z 
2025-02-24T16:36:13.0844060Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de37260>
2025-02-24T16:36:13.0844690Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x11eeaa9f0>
2025-02-24T16:36:13.0845700Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>)
2025-02-24T16:36:13.0846240Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T16:36:13.0846250Z 
2025-02-24T16:36:13.0846430Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.0846780Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:36:13.0846940Z     ):
2025-02-24T16:36:13.0847090Z         """
2025-02-24T16:36:13.0847370Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:36:13.0847510Z     
2025-02-24T16:36:13.0847790Z         Compares generated plot data with regression data.
2025-02-24T16:36:13.0847940Z     
2025-02-24T16:36:13.0848100Z         Parameters:
2025-02-24T16:36:13.0848270Z         -----------
2025-02-24T16:36:13.0848610Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:36:13.0848930Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:36:13.0849130Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0849300Z         """
2025-02-24T16:36:13.0849500Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:36:13.0849730Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0850090Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:36:13.0850610Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:36:13.0850820Z             expected_values = expected.get(
2025-02-24T16:36:13.0851010Z                 "plot_data_hdf/" + item
2025-02-24T16:36:13.0851180Z             ).values.flatten()
2025-02-24T16:36:13.0851460Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:36:13.0851620Z     
2025-02-24T16:36:13.0851900Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:36:13.0852090Z                 np.testing.assert_allclose(
2025-02-24T16:36:13.0852270Z                     expected_values,
2025-02-24T16:36:13.0852440Z                     actual_values,
2025-02-24T16:36:13.0852750Z                     rtol=0.3,
2025-02-24T16:36:13.0852910Z                     atol=3,
2025-02-24T16:36:13.0853070Z                 )
2025-02-24T16:36:13.0853230Z             else:
2025-02-24T16:36:13.0853520Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:36:13.0853670Z     
2025-02-24T16:36:13.0853890Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:36:13.0854150Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:36:13.0854360Z             if isinstance(data.get_label(), str):
2025-02-24T16:36:13.0854520Z                 assert (
2025-02-24T16:36:13.0854780Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:36:13.0854950Z                     == data.get_label()
2025-02-24T16:36:13.0855110Z                 )
2025-02-24T16:36:13.0855300Z             if isinstance(data, Line2D):
2025-02-24T16:36:13.0855500Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0855680Z                     data.get_xydata(),
2025-02-24T16:36:13.0855970Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:36:13.0856140Z                     rtol=0.3,
2025-02-24T16:36:13.0856300Z                     atol=3,
2025-02-24T16:36:13.0856460Z                 )
2025-02-24T16:36:13.0856470Z 
2025-02-24T16:36:13.0856770Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:36:13.0857010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0857020Z 
2025-02-24T16:36:13.0857510Z args = (<function assert_allclose.<locals>.compare at 0x1517ab600>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:36:13.0857670Z        [1.19e+04, 1.67e+02],...,
2025-02-24T16:36:13.0857840Z        [1.82e+04, 0.00e+00],
2025-02-24T16:36:13.0858000Z        [1.91e+04, 0.00e+00],
2025-02-24T16:36:13.0858160Z        [1.91e+04, 0.00e+00],
2025-02-24T16:36:13.0858320Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:36:13.0858840Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:36:13.0858850Z 
2025-02-24T16:36:13.0859010Z     @wraps(func)
2025-02-24T16:36:13.0859180Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0859370Z         with self._recreate_cm():
2025-02-24T16:36:13.0859560Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0859740Z E           AssertionError: 
2025-02-24T16:36:13.0859960Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.0860110Z E           
2025-02-24T16:36:13.0860320Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:36:13.0860510Z E           Max absolute difference: 22.
2025-02-24T16:36:13.0860710Z E           Max relative difference: 0.8
2025-02-24T16:36:13.0860900Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:36:13.0861070Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:36:13.0861240Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:36:13.0861440Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:36:13.0861610Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:36:13.0861780Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:36:13.0861790Z 
2025-02-24T16:36:13.0862230Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0862830Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T16:36:13.0862840Z 
2025-02-24T16:36:13.0863380Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de37650>
2025-02-24T16:36:13.0868910Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x31ee315b0>
2025-02-24T16:36:13.0871380Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>)
2025-02-24T16:36:13.0871930Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T16:36:13.0872450Z 
2025-02-24T16:36:13.0872650Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.0873010Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:36:13.0873170Z     ):
2025-02-24T16:36:13.0873320Z         """
2025-02-24T16:36:13.0873620Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:36:13.0873760Z     
2025-02-24T16:36:13.0874040Z         Compares generated plot data with regression data.
2025-02-24T16:36:13.0874180Z     
2025-02-24T16:36:13.0874350Z         Parameters:
2025-02-24T16:36:13.0874530Z         -----------
2025-02-24T16:36:13.0874870Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:36:13.0875200Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:36:13.0875400Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0875560Z         """
2025-02-24T16:36:13.0875760Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:36:13.0876010Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0876370Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:36:13.0876690Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:36:13.0876910Z             expected_values = expected.get(
2025-02-24T16:36:13.0877090Z                 "plot_data_hdf/" + item
2025-02-24T16:36:13.0877270Z             ).values.flatten()
2025-02-24T16:36:13.0877550Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:36:13.0877700Z     
2025-02-24T16:36:13.0877970Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:36:13.0878170Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0878350Z                     expected_values,
2025-02-24T16:36:13.0879970Z                     actual_values,
2025-02-24T16:36:13.0881480Z                     rtol=0.3,
2025-02-24T16:36:13.0882200Z                     atol=3,
2025-02-24T16:36:13.0882840Z                 )
2025-02-24T16:36:13.0882860Z 
2025-02-24T16:36:13.0883200Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T16:36:13.0883440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0883470Z 
2025-02-24T16:36:13.0884370Z args = (<function assert_allclose.<locals>.compare at 0x31ba09300>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:36:13.0884550Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:36:13.0887140Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:36:13.0887180Z 
2025-02-24T16:36:13.0889210Z     @wraps(func)
2025-02-24T16:36:13.0890150Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0890420Z         with self._recreate_cm():
2025-02-24T16:36:13.0890500Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0890600Z E           AssertionError: 
2025-02-24T16:36:13.0890690Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.0890740Z E           
2025-02-24T16:36:13.0890820Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.0890890Z E           Max absolute difference: 34
2025-02-24T16:36:13.0891380Z E           Max relative difference: 0.71428571
2025-02-24T16:36:13.0891510Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:36:13.0891590Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.0891710Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:36:13.0891790Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.0891790Z 
2025-02-24T16:36:13.0891980Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0892120Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0892570Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0892790Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0892920Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0893180Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0893350Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T16:36:13.0893350Z 
2025-02-24T16:36:13.0893570Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11de37710>
2025-02-24T16:36:13.0893810Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x159aeb470>
2025-02-24T16:36:13.0894190Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>)
2025-02-24T16:36:13.0894400Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T16:36:13.0894400Z 
2025-02-24T16:36:13.0894480Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.0894610Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:36:13.0894660Z     ):
2025-02-24T16:36:13.0894710Z         """
2025-02-24T16:36:13.0894810Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:36:13.0894860Z     
2025-02-24T16:36:13.0894960Z         Compares generated plot data with regression data.
2025-02-24T16:36:13.0895010Z     
2025-02-24T16:36:13.0895060Z         Parameters:
2025-02-24T16:36:13.0895110Z         -----------
2025-02-24T16:36:13.0895240Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:36:13.0895360Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:36:13.0895440Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0895490Z         """
2025-02-24T16:36:13.0895560Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:36:13.0895650Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0895780Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:36:13.0895900Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:36:13.0895980Z             expected_values = expected.get(
2025-02-24T16:36:13.0896040Z                 "plot_data_hdf/" + item
2025-02-24T16:36:13.0896110Z             ).values.flatten()
2025-02-24T16:36:13.0896220Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:36:13.0896260Z     
2025-02-24T16:36:13.0896370Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:36:13.0896450Z                 np.testing.assert_allclose(
2025-02-24T16:36:13.0896520Z                     expected_values,
2025-02-24T16:36:13.0896580Z                     actual_values,
2025-02-24T16:36:13.0896650Z                     rtol=0.3,
2025-02-24T16:36:13.0896700Z                     atol=3,
2025-02-24T16:36:13.0896750Z                 )
2025-02-24T16:36:13.0896800Z             else:
2025-02-24T16:36:13.0896900Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:36:13.0897130Z     
2025-02-24T16:36:13.0897210Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:36:13.0897320Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:36:13.0897400Z             if isinstance(data.get_label(), str):
2025-02-24T16:36:13.0897450Z                 assert (
2025-02-24T16:36:13.0897550Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:36:13.0897620Z                     == data.get_label()
2025-02-24T16:36:13.0897670Z                 )
2025-02-24T16:36:13.0897730Z             if isinstance(data, Line2D):
2025-02-24T16:36:13.0897810Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0897960Z                     data.get_xydata(),
2025-02-24T16:36:13.0898080Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:36:13.0898140Z                     rtol=0.3,
2025-02-24T16:36:13.0898190Z                     atol=3,
2025-02-24T16:36:13.0898240Z                 )
2025-02-24T16:36:13.0898250Z 
2025-02-24T16:36:13.0898360Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:36:13.0898470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0898470Z 
2025-02-24T16:36:13.0898660Z args = (<function assert_allclose.<locals>.compare at 0x1530e8a40>, array([[1.10e+04, 2.72e+02],
2025-02-24T16:36:13.0898720Z        [1.19e+04, 2.72e+02],...,
2025-02-24T16:36:13.0898790Z        [1.82e+04, 5.00e+00],
2025-02-24T16:36:13.0898840Z        [1.91e+04, 5.00e+00],
2025-02-24T16:36:13.0898900Z        [1.91e+04, 0.00e+00],
2025-02-24T16:36:13.0898950Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:36:13.0899160Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:36:13.0899160Z 
2025-02-24T16:36:13.0899220Z     @wraps(func)
2025-02-24T16:36:13.0899280Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0899350Z         with self._recreate_cm():
2025-02-24T16:36:13.0899410Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0899480Z E           AssertionError: 
2025-02-24T16:36:13.0899560Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.0899610Z E           
2025-02-24T16:36:13.0899690Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:36:13.0899760Z E           Max absolute difference: 34.
2025-02-24T16:36:13.0899830Z E           Max relative difference: 0.65
2025-02-24T16:36:13.0899890Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:36:13.0899960Z E                  [1.19e+04, 2.72e+02],
2025-02-24T16:36:13.0900020Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T16:36:13.0900090Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:36:13.0900150Z E                  [1.19e+04, 3.06e+02],
2025-02-24T16:36:13.0900220Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T16:36:13.0900220Z 
2025-02-24T16:36:13.0900390Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0900520Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0900720Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0900980Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0901110Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0901400Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0901560Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T16:36:13.0901570Z 
2025-02-24T16:36:13.0901770Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11def82f0>
2025-02-24T16:36:13.0902100Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x170988350>
2025-02-24T16:36:13.0902170Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.0902300Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:36:13.0902400Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:36:13.0902560Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>)
2025-02-24T16:36:13.0902760Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T16:36:13.0902760Z 
2025-02-24T16:36:13.0902830Z     def test_generate_plot_ply(
2025-02-24T16:36:13.0903020Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.0903060Z     ):
2025-02-24T16:36:13.0903110Z         """
2025-02-24T16:36:13.0903220Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:36:13.0903260Z     
2025-02-24T16:36:13.0903370Z         Compares generated plot data with regression data.
2025-02-24T16:36:13.0903420Z     
2025-02-24T16:36:13.0903480Z         Parameters:
2025-02-24T16:36:13.0903530Z         ----------
2025-02-24T16:36:13.0903670Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:36:13.0903770Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:36:13.0903850Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0903900Z         """
2025-02-24T16:36:13.0903980Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.0904060Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0904200Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.0904250Z     
2025-02-24T16:36:13.0904380Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:36:13.0904450Z             expected_values = expected.get(
2025-02-24T16:36:13.0904660Z                 "plot_data_hdf/" + item
2025-02-24T16:36:13.0904730Z             ).values.flatten()
2025-02-24T16:36:13.0904840Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:36:13.0904890Z     
2025-02-24T16:36:13.0904990Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:36:13.0905070Z                 np.testing.assert_allclose(
2025-02-24T16:36:13.0905130Z                     expected_values,
2025-02-24T16:36:13.0905190Z                     actual_values,
2025-02-24T16:36:13.0905240Z                     rtol=0.3,
2025-02-24T16:36:13.0905300Z                     atol=3,
2025-02-24T16:36:13.0905340Z                 )
2025-02-24T16:36:13.0905390Z             else:
2025-02-24T16:36:13.0905500Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:36:13.0905580Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.0905670Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.0905730Z             if data.stackgroup:
2025-02-24T16:36:13.0905790Z                 assert (
2025-02-24T16:36:13.0905850Z                     data.stackgroup
2025-02-24T16:36:13.0905900Z                     == getattr(
2025-02-24T16:36:13.0905990Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.0906070Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.0906130Z                     ).decode()
2025-02-24T16:36:13.0906170Z                 )
2025-02-24T16:36:13.0906230Z             if data.name:
2025-02-24T16:36:13.0906290Z                 assert (
2025-02-24T16:36:13.0906340Z                     data.name
2025-02-24T16:36:13.0906400Z                     == getattr(
2025-02-24T16:36:13.0906480Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.0906560Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.0906610Z                     ).decode()
2025-02-24T16:36:13.0906660Z                 )
2025-02-24T16:36:13.0906720Z             np.testing.assert_allclose(
2025-02-24T16:36:13.0906880Z                 data.x,
2025-02-24T16:36:13.0906970Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:36:13.0907030Z                 rtol=0.3,
2025-02-24T16:36:13.0907080Z                 atol=3,
2025-02-24T16:36:13.0907130Z             )
2025-02-24T16:36:13.0907190Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.0907240Z                 data.y,
2025-02-24T16:36:13.0907340Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:36:13.0907400Z                 rtol=0.3,
2025-02-24T16:36:13.0907450Z                 atol=3,
2025-02-24T16:36:13.0907490Z             )
2025-02-24T16:36:13.0907500Z 
2025-02-24T16:36:13.0907660Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:36:13.0907760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0907760Z 
2025-02-24T16:36:13.0908080Z args = (<function assert_allclose.<locals>.compare at 0x17092c720>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:36:13.0908150Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:36:13.0908350Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:36:13.0908350Z 
2025-02-24T16:36:13.0908400Z     @wraps(func)
2025-02-24T16:36:13.0908460Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0908520Z         with self._recreate_cm():
2025-02-24T16:36:13.0908590Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0908650Z E           AssertionError: 
2025-02-24T16:36:13.0908730Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.0908780Z E           
2025-02-24T16:36:13.0908850Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.0908920Z E           Max absolute difference: 22
2025-02-24T16:36:13.0908990Z E           Max relative difference: 0.8
2025-02-24T16:36:13.0909110Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:36:13.0909180Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:36:13.0909290Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:36:13.0909370Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:36:13.0909370Z 
2025-02-24T16:36:13.0909530Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0909660Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0909870Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0910190Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T16:36:13.0910320Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0910670Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:36:13.0910840Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T16:36:13.0910840Z 
2025-02-24T16:36:13.0911040Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11def83b0>
2025-02-24T16:36:13.0911300Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x170d487a0>
2025-02-24T16:36:13.0911370Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.0911490Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:36:13.0911610Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:36:13.0911770Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>)
2025-02-24T16:36:13.0911970Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T16:36:13.0912030Z 
2025-02-24T16:36:13.0912110Z     def test_generate_plot_ply(
2025-02-24T16:36:13.0912240Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.0912290Z     ):
2025-02-24T16:36:13.0912340Z         """
2025-02-24T16:36:13.0912450Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:36:13.0912500Z     
2025-02-24T16:36:13.0912610Z         Compares generated plot data with regression data.
2025-02-24T16:36:13.0912660Z     
2025-02-24T16:36:13.0912700Z         Parameters:
2025-02-24T16:36:13.0912760Z         ----------
2025-02-24T16:36:13.0912890Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:36:13.0913040Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:36:13.0913120Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0913170Z         """
2025-02-24T16:36:13.0913240Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.0913330Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0913480Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.0913520Z     
2025-02-24T16:36:13.0913650Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:36:13.0913720Z             expected_values = expected.get(
2025-02-24T16:36:13.0913790Z                 "plot_data_hdf/" + item
2025-02-24T16:36:13.0913850Z             ).values.flatten()
2025-02-24T16:36:13.0913960Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:36:13.0914010Z     
2025-02-24T16:36:13.0914120Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:36:13.0914190Z                 np.testing.assert_allclose(
2025-02-24T16:36:13.0914260Z                     expected_values,
2025-02-24T16:36:13.0914320Z                     actual_values,
2025-02-24T16:36:13.0914380Z                     rtol=0.3,
2025-02-24T16:36:13.0914440Z                     atol=3,
2025-02-24T16:36:13.0914500Z                 )
2025-02-24T16:36:13.0914550Z             else:
2025-02-24T16:36:13.0914660Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:36:13.0914740Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.0914830Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.0914890Z             if data.stackgroup:
2025-02-24T16:36:13.0914950Z                 assert (
2025-02-24T16:36:13.0915010Z                     data.stackgroup
2025-02-24T16:36:13.0915070Z                     == getattr(
2025-02-24T16:36:13.0915150Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.0915240Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.0915300Z                     ).decode()
2025-02-24T16:36:13.0915350Z                 )
2025-02-24T16:36:13.0915400Z             if data.name:
2025-02-24T16:36:13.0915450Z                 assert (
2025-02-24T16:36:13.0915510Z                     data.name
2025-02-24T16:36:13.0915560Z                     == getattr(
2025-02-24T16:36:13.0915650Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.0915720Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.0915780Z                     ).decode()
2025-02-24T16:36:13.0915820Z                 )
2025-02-24T16:36:13.0915890Z             np.testing.assert_allclose(
2025-02-24T16:36:13.0915940Z                 data.x,
2025-02-24T16:36:13.0916030Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:36:13.0916080Z                 rtol=0.3,
2025-02-24T16:36:13.0916130Z                 atol=3,
2025-02-24T16:36:13.0916180Z             )
2025-02-24T16:36:13.0916250Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.0916300Z                 data.y,
2025-02-24T16:36:13.0916380Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:36:13.0916550Z                 rtol=0.3,
2025-02-24T16:36:13.0916600Z                 atol=3,
2025-02-24T16:36:13.0916650Z             )
2025-02-24T16:36:13.0916650Z 
2025-02-24T16:36:13.0916760Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:36:13.0916860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0916860Z 
2025-02-24T16:36:13.0917170Z args = (<function assert_allclose.<locals>.compare at 0x17092f560>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:36:13.0917230Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:36:13.0917430Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:36:13.0917510Z 
2025-02-24T16:36:13.0917570Z     @wraps(func)
2025-02-24T16:36:13.0917630Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0917700Z         with self._recreate_cm():
2025-02-24T16:36:13.0917770Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0917830Z E           AssertionError: 
2025-02-24T16:36:13.0917910Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.0922450Z E           
2025-02-24T16:36:13.0922590Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.0922660Z E           Max absolute difference: 22
2025-02-24T16:36:13.0922740Z E           Max relative difference: 0.8
2025-02-24T16:36:13.0922860Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:36:13.0922930Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:36:13.0923040Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:36:13.0923130Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:36:13.0923130Z 
2025-02-24T16:36:13.0923300Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0923480Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T16:36:13.0923480Z 
2025-02-24T16:36:13.0923680Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11def8830>
2025-02-24T16:36:13.0923930Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x31307eab0>
2025-02-24T16:36:13.0924000Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.0924130Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:36:13.0924240Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:36:13.0924390Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>)
2025-02-24T16:36:13.0924580Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T16:36:13.0924590Z 
2025-02-24T16:36:13.0924650Z     def test_generate_plot_ply(
2025-02-24T16:36:13.0924790Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.0924840Z     ):
2025-02-24T16:36:13.0924880Z         """
2025-02-24T16:36:13.0924990Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:36:13.0925030Z     
2025-02-24T16:36:13.0925140Z         Compares generated plot data with regression data.
2025-02-24T16:36:13.0925180Z     
2025-02-24T16:36:13.0925240Z         Parameters:
2025-02-24T16:36:13.0925300Z         ----------
2025-02-24T16:36:13.0925420Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:36:13.0925530Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:36:13.0925600Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0925650Z         """
2025-02-24T16:36:13.0925720Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.0925810Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0925950Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.0926260Z     
2025-02-24T16:36:13.0926380Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:36:13.0926450Z             expected_values = expected.get(
2025-02-24T16:36:13.0926520Z                 "plot_data_hdf/" + item
2025-02-24T16:36:13.0926580Z             ).values.flatten()
2025-02-24T16:36:13.0926690Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:36:13.0926740Z     
2025-02-24T16:36:13.0926840Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:36:13.0926910Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0926970Z                     expected_values,
2025-02-24T16:36:13.0927100Z                     actual_values,
2025-02-24T16:36:13.0927160Z                     rtol=0.3,
2025-02-24T16:36:13.0927220Z                     atol=3,
2025-02-24T16:36:13.0927270Z                 )
2025-02-24T16:36:13.0927270Z 
2025-02-24T16:36:13.0927380Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T16:36:13.0927480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0927490Z 
2025-02-24T16:36:13.0927810Z args = (<function assert_allclose.<locals>.compare at 0x17092eac0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:36:13.0927880Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:36:13.0928080Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:36:13.0928080Z 
2025-02-24T16:36:13.0928130Z     @wraps(func)
2025-02-24T16:36:13.0928200Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0928260Z         with self._recreate_cm():
2025-02-24T16:36:13.0928320Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0928380Z E           AssertionError: 
2025-02-24T16:36:13.0928460Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.0928510Z E           
2025-02-24T16:36:13.0928580Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.0928650Z E           Max absolute difference: 34
2025-02-24T16:36:13.0928730Z E           Max relative difference: 0.71428571
2025-02-24T16:36:13.0928840Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:36:13.0928920Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.0929030Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:36:13.0929100Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.0929110Z 
2025-02-24T16:36:13.0929270Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0929400Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0929680Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0929890Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0930010Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0930260Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0930420Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T16:36:13.0930430Z 
2025-02-24T16:36:13.0930640Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11def88f0>
2025-02-24T16:36:13.0930880Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x17d7ee720>
2025-02-24T16:36:13.0930960Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.0931080Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:36:13.0931190Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:36:13.0931420Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x16e139d60>)
2025-02-24T16:36:13.0931620Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T16:36:13.0931620Z 
2025-02-24T16:36:13.0931690Z     def test_generate_plot_ply(
2025-02-24T16:36:13.0931820Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.0931860Z     ):
2025-02-24T16:36:13.0931910Z         """
2025-02-24T16:36:13.0932020Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:36:13.0932070Z     
2025-02-24T16:36:13.0932170Z         Compares generated plot data with regression data.
2025-02-24T16:36:13.0932270Z     
2025-02-24T16:36:13.0932320Z         Parameters:
2025-02-24T16:36:13.0932380Z         ----------
2025-02-24T16:36:13.0932500Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:36:13.0932620Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:36:13.0932700Z         request: Pytest's request fixture.
2025-02-24T16:36:13.0932740Z         """
2025-02-24T16:36:13.0932820Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.0932900Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0933040Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.0933080Z     
2025-02-24T16:36:13.0933200Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:36:13.0933270Z             expected_values = expected.get(
2025-02-24T16:36:13.0933340Z                 "plot_data_hdf/" + item
2025-02-24T16:36:13.0933400Z             ).values.flatten()
2025-02-24T16:36:13.0933510Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:36:13.0933560Z     
2025-02-24T16:36:13.0933660Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:36:13.0933740Z                 np.testing.assert_allclose(
2025-02-24T16:36:13.0933800Z                     expected_values,
2025-02-24T16:36:13.0933860Z                     actual_values,
2025-02-24T16:36:13.0933920Z                     rtol=0.3,
2025-02-24T16:36:13.0933970Z                     atol=3,
2025-02-24T16:36:13.0934020Z                 )
2025-02-24T16:36:13.0934060Z             else:
2025-02-24T16:36:13.0934220Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:36:13.0934310Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.0934390Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.0934460Z             if data.stackgroup:
2025-02-24T16:36:13.0934510Z                 assert (
2025-02-24T16:36:13.0934580Z                     data.stackgroup
2025-02-24T16:36:13.0934630Z                     == getattr(
2025-02-24T16:36:13.0934720Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.0934800Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.0934850Z                     ).decode()
2025-02-24T16:36:13.0934900Z                 )
2025-02-24T16:36:13.0934960Z             if data.name:
2025-02-24T16:36:13.0935010Z                 assert (
2025-02-24T16:36:13.0935060Z                     data.name
2025-02-24T16:36:13.0935120Z                     == getattr(
2025-02-24T16:36:13.0935200Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.0935270Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.0935330Z                     ).decode()
2025-02-24T16:36:13.0935370Z                 )
2025-02-24T16:36:13.0935440Z             np.testing.assert_allclose(
2025-02-24T16:36:13.0935490Z                 data.x,
2025-02-24T16:36:13.0935580Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:36:13.0935640Z                 rtol=0.3,
2025-02-24T16:36:13.0935690Z                 atol=3,
2025-02-24T16:36:13.0935740Z             )
2025-02-24T16:36:13.0935800Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.0935930Z                 data.y,
2025-02-24T16:36:13.0936020Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:36:13.0936070Z                 rtol=0.3,
2025-02-24T16:36:13.0936120Z                 atol=3,
2025-02-24T16:36:13.0936170Z             )
2025-02-24T16:36:13.0936170Z 
2025-02-24T16:36:13.0936280Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:36:13.0936380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0936380Z 
2025-02-24T16:36:13.0936700Z args = (<function assert_allclose.<locals>.compare at 0x17092e340>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7, ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:36:13.0936810Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:36:13.0937000Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:36:13.0937010Z 
2025-02-24T16:36:13.0937060Z     @wraps(func)
2025-02-24T16:36:13.0937120Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0937190Z         with self._recreate_cm():
2025-02-24T16:36:13.0937250Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0937310Z E           AssertionError: 
2025-02-24T16:36:13.0937390Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.0937440Z E           
2025-02-24T16:36:13.0937520Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.0937580Z E           Max absolute difference: 34
2025-02-24T16:36:13.0937660Z E           Max relative difference: 0.65
2025-02-24T16:36:13.0937770Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:36:13.0937840Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.0937960Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:36:13.0938040Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.0938040Z 
2025-02-24T16:36:13.0938200Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0938330Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:36:13.0938530Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:36:13.0938790Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:36:13.0938920Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:36:13.0939200Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:36:13.0939390Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T16:36:13.0939390Z 
2025-02-24T16:36:13.0939600Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debc6e0>
2025-02-24T16:36:13.0939850Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0940110Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x318499100>
2025-02-24T16:36:13.0940330Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T16:36:13.0940340Z 
2025-02-24T16:36:13.0940420Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0940470Z         self,
2025-02-24T16:36:13.0940550Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0940620Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0940670Z         request,
2025-02-24T16:36:13.0940710Z     ):
2025-02-24T16:36:13.0940800Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0940950Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0941120Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0941270Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0941330Z             plot_object = getattr(
2025-02-24T16:36:13.0941440Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0941480Z             )
2025-02-24T16:36:13.0941570Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0941700Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0941780Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0941860Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0942360Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0942430Z                 )
2025-02-24T16:36:13.0942430Z 
2025-02-24T16:36:13.0942540Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0942650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0942650Z 
2025-02-24T16:36:13.0943020Z args = (<function assert_allclose.<locals>.compare at 0x174372020>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:36:13.0943100Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0943310Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0943310Z 
2025-02-24T16:36:13.0943360Z     @wraps(func)
2025-02-24T16:36:13.0943420Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0943480Z         with self._recreate_cm():
2025-02-24T16:36:13.0943550Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0943620Z E           AssertionError: 
2025-02-24T16:36:13.0943700Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0943750Z E           
2025-02-24T16:36:13.0943830Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.0943910Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:36:13.0944000Z E           Max relative difference: 4.76021355
2025-02-24T16:36:13.0944120Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0944190Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0944310Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0944370Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0944370Z 
2025-02-24T16:36:13.0944540Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0944860Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T16:36:13.0944860Z 
2025-02-24T16:36:13.0945070Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debc7a0>
2025-02-24T16:36:13.0945310Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0945570Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31d8a6600>
2025-02-24T16:36:13.0945790Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T16:36:13.0945790Z 
2025-02-24T16:36:13.0945860Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0945920Z         self,
2025-02-24T16:36:13.0945990Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0946050Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0946110Z         request,
2025-02-24T16:36:13.0946160Z     ):
2025-02-24T16:36:13.0946240Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0946390Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0946460Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0946740Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0946810Z             plot_object = getattr(
2025-02-24T16:36:13.0946910Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0946960Z             )
2025-02-24T16:36:13.0947040Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0947160Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0947250Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0947320Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0947420Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0947520Z                 )
2025-02-24T16:36:13.0947520Z 
2025-02-24T16:36:13.0947640Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0947730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0947730Z 
2025-02-24T16:36:13.0948090Z args = (<function assert_allclose.<locals>.compare at 0x174373c40>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:36:13.0948180Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0948380Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0948380Z 
2025-02-24T16:36:13.0948430Z     @wraps(func)
2025-02-24T16:36:13.0948500Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0948560Z         with self._recreate_cm():
2025-02-24T16:36:13.0948630Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0948690Z E           AssertionError: 
2025-02-24T16:36:13.0948770Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0948830Z E           
2025-02-24T16:36:13.0948900Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.0948980Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:36:13.0949060Z E           Max relative difference: 4.76021355
2025-02-24T16:36:13.0949190Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0949250Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0949370Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0949440Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0949440Z 
2025-02-24T16:36:13.0949600Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0949780Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T16:36:13.0949780Z 
2025-02-24T16:36:13.0949990Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debcc50>
2025-02-24T16:36:13.0950230Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0950490Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31849aab0>
2025-02-24T16:36:13.0950710Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T16:36:13.0950720Z 
2025-02-24T16:36:13.0950790Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0950840Z         self,
2025-02-24T16:36:13.0950910Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0950970Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0951020Z         request,
2025-02-24T16:36:13.0951070Z     ):
2025-02-24T16:36:13.0951160Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0951310Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0951370Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0951520Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0951640Z             plot_object = getattr(
2025-02-24T16:36:13.0951740Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0951790Z             )
2025-02-24T16:36:13.0951880Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0952010Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0952090Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0952170Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0952270Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0952320Z                 )
2025-02-24T16:36:13.0952330Z 
2025-02-24T16:36:13.0952440Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0952590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0952600Z 
2025-02-24T16:36:13.0952960Z args = (<function assert_allclose.<locals>.compare at 0x174371bc0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:36:13.0953050Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0953250Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0953260Z 
2025-02-24T16:36:13.0953310Z     @wraps(func)
2025-02-24T16:36:13.0953370Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0953430Z         with self._recreate_cm():
2025-02-24T16:36:13.0953500Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0953560Z E           AssertionError: 
2025-02-24T16:36:13.0953660Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0953710Z E           
2025-02-24T16:36:13.0953790Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.0953880Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:36:13.0953960Z E           Max relative difference: 4.76021355
2025-02-24T16:36:13.0954090Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0954150Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0954280Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0954350Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0954350Z 
2025-02-24T16:36:13.0954510Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0954700Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T16:36:13.0954700Z 
2025-02-24T16:36:13.0954910Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debcd10>
2025-02-24T16:36:13.0955160Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0955420Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31d8a68a0>
2025-02-24T16:36:13.0955650Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T16:36:13.0955650Z 
2025-02-24T16:36:13.0955730Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0955770Z         self,
2025-02-24T16:36:13.0955840Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0955920Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0955970Z         request,
2025-02-24T16:36:13.0956010Z     ):
2025-02-24T16:36:13.0956100Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0956250Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0956310Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0956460Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0956530Z             plot_object = getattr(
2025-02-24T16:36:13.0956630Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0956750Z             )
2025-02-24T16:36:13.0956830Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0956970Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0957050Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0957130Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0957240Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0957290Z                 )
2025-02-24T16:36:13.0957290Z 
2025-02-24T16:36:13.0957410Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0957500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0957560Z 
2025-02-24T16:36:13.0957930Z args = (<function assert_allclose.<locals>.compare at 0x1735a5940>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:36:13.0958020Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0958220Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0958220Z 
2025-02-24T16:36:13.0958280Z     @wraps(func)
2025-02-24T16:36:13.0958340Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0958400Z         with self._recreate_cm():
2025-02-24T16:36:13.0958480Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0958540Z E           AssertionError: 
2025-02-24T16:36:13.0958630Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0958670Z E           
2025-02-24T16:36:13.0958750Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.0958840Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:36:13.0958910Z E           Max relative difference: 4.76021355
2025-02-24T16:36:13.0959040Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0959110Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0959240Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0959300Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0959310Z 
2025-02-24T16:36:13.0959470Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0959660Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T16:36:13.0959660Z 
2025-02-24T16:36:13.0959870Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debce00>
2025-02-24T16:36:13.0960110Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0960380Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31d8a5a60>
2025-02-24T16:36:13.0960610Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T16:36:13.0960610Z 
2025-02-24T16:36:13.0960690Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0960740Z         self,
2025-02-24T16:36:13.0960810Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0960870Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0960920Z         request,
2025-02-24T16:36:13.0960970Z     ):
2025-02-24T16:36:13.0961060Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0961210Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0961280Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0961430Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0961500Z             plot_object = getattr(
2025-02-24T16:36:13.0961600Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0961650Z             )
2025-02-24T16:36:13.0961840Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0961980Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0962060Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0962140Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0962240Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0962290Z                 )
2025-02-24T16:36:13.0962290Z 
2025-02-24T16:36:13.0962400Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0962490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0962500Z 
2025-02-24T16:36:13.0962950Z args = (<function assert_allclose.<locals>.compare at 0x1735a6340>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:36:13.0963040Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0963240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0963250Z 
2025-02-24T16:36:13.0963290Z     @wraps(func)
2025-02-24T16:36:13.0963350Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0963420Z         with self._recreate_cm():
2025-02-24T16:36:13.0963480Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0963550Z E           AssertionError: 
2025-02-24T16:36:13.0963630Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0963680Z E           
2025-02-24T16:36:13.0963760Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.0963840Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:36:13.0963920Z E           Max relative difference: 178.93768705
2025-02-24T16:36:13.0964050Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0964110Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0964240Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0964310Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0964310Z 
2025-02-24T16:36:13.0964480Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0964660Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T16:36:13.0964670Z 
2025-02-24T16:36:13.0964880Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debcec0>
2025-02-24T16:36:13.0965130Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0965390Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x300d11220>
2025-02-24T16:36:13.0965620Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T16:36:13.0965630Z 
2025-02-24T16:36:13.0965710Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0965760Z         self,
2025-02-24T16:36:13.0965830Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0965900Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0965950Z         request,
2025-02-24T16:36:13.0965990Z     ):
2025-02-24T16:36:13.0966080Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0966230Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0966290Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0966440Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0966500Z             plot_object = getattr(
2025-02-24T16:36:13.0966610Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0966650Z             )
2025-02-24T16:36:13.0966740Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0966880Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0967030Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0967110Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0967220Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0967270Z                 )
2025-02-24T16:36:13.0967280Z 
2025-02-24T16:36:13.0967390Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0967490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0967500Z 
2025-02-24T16:36:13.0967860Z args = (<function assert_allclose.<locals>.compare at 0x1735a67a0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:36:13.0967980Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0968190Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0968190Z 
2025-02-24T16:36:13.0968250Z     @wraps(func)
2025-02-24T16:36:13.0968310Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0968370Z         with self._recreate_cm():
2025-02-24T16:36:13.0968440Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0968510Z E           AssertionError: 
2025-02-24T16:36:13.0968590Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0968650Z E           
2025-02-24T16:36:13.0968730Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.0968800Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:36:13.0968880Z E           Max relative difference: 178.93768705
2025-02-24T16:36:13.0969010Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0969080Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0969190Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0969270Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0969270Z 
2025-02-24T16:36:13.0969440Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0969620Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T16:36:13.0969620Z 
2025-02-24T16:36:13.0969830Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debcf80>
2025-02-24T16:36:13.0970070Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0970330Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17ff78ec0>
2025-02-24T16:36:13.0970550Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T16:36:13.0970560Z 
2025-02-24T16:36:13.0970630Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0970680Z         self,
2025-02-24T16:36:13.0970750Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0970810Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0970860Z         request,
2025-02-24T16:36:13.0970910Z     ):
2025-02-24T16:36:13.0970990Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0971130Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0971200Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0971340Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0971410Z             plot_object = getattr(
2025-02-24T16:36:13.0971510Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0971560Z             )
2025-02-24T16:36:13.0971650Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0971780Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0971870Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0971990Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0972100Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0972150Z                 )
2025-02-24T16:36:13.0972150Z 
2025-02-24T16:36:13.0972270Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0972360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0972370Z 
2025-02-24T16:36:13.0972730Z args = (<function assert_allclose.<locals>.compare at 0x1735a4f40>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:36:13.0972870Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0973070Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0973070Z 
2025-02-24T16:36:13.0973120Z     @wraps(func)
2025-02-24T16:36:13.0973190Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0973260Z         with self._recreate_cm():
2025-02-24T16:36:13.0973320Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0973390Z E           AssertionError: 
2025-02-24T16:36:13.0973470Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0973530Z E           
2025-02-24T16:36:13.0973610Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.0973690Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:36:13.0973760Z E           Max relative difference: 178.93768705
2025-02-24T16:36:13.0973890Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0973960Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0974080Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0974160Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0974160Z 
2025-02-24T16:36:13.0974320Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0974510Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T16:36:13.0974510Z 
2025-02-24T16:36:13.0974720Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd040>
2025-02-24T16:36:13.0974960Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0975230Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17ff7b740>
2025-02-24T16:36:13.0975450Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T16:36:13.0975460Z 
2025-02-24T16:36:13.0975540Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0979820Z         self,
2025-02-24T16:36:13.0979950Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0980030Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0980080Z         request,
2025-02-24T16:36:13.0980130Z     ):
2025-02-24T16:36:13.0980210Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0980360Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0980420Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0980560Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0980630Z             plot_object = getattr(
2025-02-24T16:36:13.0980730Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0980780Z             )
2025-02-24T16:36:13.0980870Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0981000Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0981080Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0981150Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0981490Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0981540Z                 )
2025-02-24T16:36:13.0981550Z 
2025-02-24T16:36:13.0981660Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0981760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0981760Z 
2025-02-24T16:36:13.0982120Z args = (<function assert_allclose.<locals>.compare at 0x1735a7a60>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:36:13.0982210Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0982450Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0982460Z 
2025-02-24T16:36:13.0982510Z     @wraps(func)
2025-02-24T16:36:13.0982570Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0982630Z         with self._recreate_cm():
2025-02-24T16:36:13.0982700Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0982760Z E           AssertionError: 
2025-02-24T16:36:13.0982850Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0982890Z E           
2025-02-24T16:36:13.0982970Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.0983050Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:36:13.0983120Z E           Max relative difference: 178.93768705
2025-02-24T16:36:13.0983250Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0983320Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0983450Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.0983520Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0983520Z 
2025-02-24T16:36:13.0983680Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0983870Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T16:36:13.0983870Z 
2025-02-24T16:36:13.0984080Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd130>
2025-02-24T16:36:13.0984320Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0984580Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31d9668d0>
2025-02-24T16:36:13.0984920Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T16:36:13.0984930Z 
2025-02-24T16:36:13.0985010Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0985060Z         self,
2025-02-24T16:36:13.0985130Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0985190Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0985240Z         request,
2025-02-24T16:36:13.0985290Z     ):
2025-02-24T16:36:13.0985370Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0985520Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0985580Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0985730Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0985790Z             plot_object = getattr(
2025-02-24T16:36:13.0985890Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0985940Z             )
2025-02-24T16:36:13.0986020Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0986150Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0986240Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0986310Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0986420Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0986600Z                 )
2025-02-24T16:36:13.0986610Z 
2025-02-24T16:36:13.0986730Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0986820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0986820Z 
2025-02-24T16:36:13.0987190Z args = (<function assert_allclose.<locals>.compare at 0x1735a56c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:36:13.0987270Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0987470Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0987680Z 
2025-02-24T16:36:13.0987760Z     @wraps(func)
2025-02-24T16:36:13.0987820Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0987890Z         with self._recreate_cm():
2025-02-24T16:36:13.0987960Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0988020Z E           AssertionError: 
2025-02-24T16:36:13.0988110Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0988150Z E           
2025-02-24T16:36:13.0988240Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.0988320Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:36:13.0988390Z E           Max relative difference: 4.76021355
2025-02-24T16:36:13.0988520Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.0988580Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0988700Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.0988770Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0988770Z 
2025-02-24T16:36:13.0988940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0989120Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T16:36:13.0989120Z 
2025-02-24T16:36:13.0989330Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd1f0>
2025-02-24T16:36:13.0989570Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0989830Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31d964e90>
2025-02-24T16:36:13.0990060Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T16:36:13.0990060Z 
2025-02-24T16:36:13.0990130Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0990170Z         self,
2025-02-24T16:36:13.0990250Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0990310Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0990360Z         request,
2025-02-24T16:36:13.0990410Z     ):
2025-02-24T16:36:13.0990490Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0990640Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0990700Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0990850Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0990910Z             plot_object = getattr(
2025-02-24T16:36:13.0991010Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0991060Z             )
2025-02-24T16:36:13.0991140Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0991270Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0991350Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0991430Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0991530Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0991580Z                 )
2025-02-24T16:36:13.0991580Z 
2025-02-24T16:36:13.0991780Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0991870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0991870Z 
2025-02-24T16:36:13.0992240Z args = (<function assert_allclose.<locals>.compare at 0x1735a6d40>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:36:13.0992310Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0992520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0992520Z 
2025-02-24T16:36:13.0992570Z     @wraps(func)
2025-02-24T16:36:13.0992680Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0992750Z         with self._recreate_cm():
2025-02-24T16:36:13.0992810Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0992870Z E           AssertionError: 
2025-02-24T16:36:13.0992960Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0993010Z E           
2025-02-24T16:36:13.0993100Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.0993180Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:36:13.0993250Z E           Max relative difference: 4.76021355
2025-02-24T16:36:13.0993380Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.0993440Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0993570Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.0993630Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0993640Z 
2025-02-24T16:36:13.0993800Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0993980Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T16:36:13.0993990Z 
2025-02-24T16:36:13.0994200Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd2b0>
2025-02-24T16:36:13.0994450Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0994700Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17ff7bb00>
2025-02-24T16:36:13.0994930Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T16:36:13.0994940Z 
2025-02-24T16:36:13.0995010Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.0995060Z         self,
2025-02-24T16:36:13.0995130Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.0995200Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.0995250Z         request,
2025-02-24T16:36:13.0995300Z     ):
2025-02-24T16:36:13.0995390Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.0995540Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.0995600Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.0995750Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.0995820Z             plot_object = getattr(
2025-02-24T16:36:13.0995920Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.0995970Z             )
2025-02-24T16:36:13.0996040Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.0996180Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.0996270Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.0996350Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.0996460Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.0996510Z                 )
2025-02-24T16:36:13.0996510Z 
2025-02-24T16:36:13.0996630Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.0996780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.0996790Z 
2025-02-24T16:36:13.0997160Z args = (<function assert_allclose.<locals>.compare at 0x1735a5a80>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:36:13.0997240Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.0997450Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.0997450Z 
2025-02-24T16:36:13.0997510Z     @wraps(func)
2025-02-24T16:36:13.0997570Z     def inner(*args, **kwds):
2025-02-24T16:36:13.0997630Z         with self._recreate_cm():
2025-02-24T16:36:13.0997750Z >           return func(*args, **kwds)
2025-02-24T16:36:13.0997820Z E           AssertionError: 
2025-02-24T16:36:13.0997910Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.0997960Z E           
2025-02-24T16:36:13.0998040Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.0998130Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:36:13.0998210Z E           Max relative difference: 4.76021355
2025-02-24T16:36:13.0998330Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.0998400Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0998520Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.0998590Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.0998590Z 
2025-02-24T16:36:13.0998760Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.0998940Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T16:36:13.0998940Z 
2025-02-24T16:36:13.0999160Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd370>
2025-02-24T16:36:13.0999410Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.0999670Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31d8a5a60>
2025-02-24T16:36:13.0999900Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T16:36:13.0999910Z 
2025-02-24T16:36:13.0999980Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.1000030Z         self,
2025-02-24T16:36:13.1000110Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.1000170Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.1000220Z         request,
2025-02-24T16:36:13.1000270Z     ):
2025-02-24T16:36:13.1000360Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1000510Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.1000570Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.1000720Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.1000790Z             plot_object = getattr(
2025-02-24T16:36:13.1000890Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.1000940Z             )
2025-02-24T16:36:13.1001020Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.1001160Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.1001240Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.1001310Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.1001420Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.1001470Z                 )
2025-02-24T16:36:13.1001480Z 
2025-02-24T16:36:13.1001590Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.1001680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1001760Z 
2025-02-24T16:36:13.1002120Z args = (<function assert_allclose.<locals>.compare at 0x1735a54e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:36:13.1002200Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1002400Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1002400Z 
2025-02-24T16:36:13.1002450Z     @wraps(func)
2025-02-24T16:36:13.1002510Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1002570Z         with self._recreate_cm():
2025-02-24T16:36:13.1002640Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1002760Z E           AssertionError: 
2025-02-24T16:36:13.1002850Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1002900Z E           
2025-02-24T16:36:13.1002980Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1003060Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:36:13.1003130Z E           Max relative difference: 4.76021355
2025-02-24T16:36:13.1003260Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1003330Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1003450Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1003520Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1003520Z 
2025-02-24T16:36:13.1003680Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1003860Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T16:36:13.1003860Z 
2025-02-24T16:36:13.1004070Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd430>
2025-02-24T16:36:13.1004310Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.1004580Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17a3a3170>
2025-02-24T16:36:13.1004810Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T16:36:13.1004810Z 
2025-02-24T16:36:13.1004880Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.1004940Z         self,
2025-02-24T16:36:13.1005010Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.1005070Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.1005120Z         request,
2025-02-24T16:36:13.1005170Z     ):
2025-02-24T16:36:13.1005250Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1005410Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.1005470Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.1005610Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.1005690Z             plot_object = getattr(
2025-02-24T16:36:13.1005790Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.1005840Z             )
2025-02-24T16:36:13.1005930Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.1006060Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.1006150Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.1006230Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.1006330Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.1006380Z                 )
2025-02-24T16:36:13.1006380Z 
2025-02-24T16:36:13.1006510Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.1006610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1006610Z 
2025-02-24T16:36:13.1006970Z args = (<function assert_allclose.<locals>.compare at 0x174370680>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:36:13.1007170Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1007370Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1007370Z 
2025-02-24T16:36:13.1007420Z     @wraps(func)
2025-02-24T16:36:13.1007480Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1007540Z         with self._recreate_cm():
2025-02-24T16:36:13.1007610Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1007670Z E           AssertionError: 
2025-02-24T16:36:13.1007750Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1007890Z E           
2025-02-24T16:36:13.1007970Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1008050Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:36:13.1008130Z E           Max relative difference: 178.93768705
2025-02-24T16:36:13.1008260Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1008330Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1008450Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1008520Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1008520Z 
2025-02-24T16:36:13.1008680Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1008870Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T16:36:13.1008870Z 
2025-02-24T16:36:13.1009090Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd4f0>
2025-02-24T16:36:13.1009330Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.1009590Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x303775be0>
2025-02-24T16:36:13.1009820Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T16:36:13.1009830Z 
2025-02-24T16:36:13.1009910Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.1009950Z         self,
2025-02-24T16:36:13.1010030Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.1010100Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.1010140Z         request,
2025-02-24T16:36:13.1010190Z     ):
2025-02-24T16:36:13.1010270Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1010430Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.1010490Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.1010640Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.1010710Z             plot_object = getattr(
2025-02-24T16:36:13.1010810Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.1010860Z             )
2025-02-24T16:36:13.1010940Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.1011080Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.1011160Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.1011240Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.1011340Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.1011390Z                 )
2025-02-24T16:36:13.1011390Z 
2025-02-24T16:36:13.1011510Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.1011600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1011610Z 
2025-02-24T16:36:13.1011980Z args = (<function assert_allclose.<locals>.compare at 0x174370540>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:36:13.1012130Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1012330Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1012330Z 
2025-02-24T16:36:13.1012380Z     @wraps(func)
2025-02-24T16:36:13.1012440Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1012500Z         with self._recreate_cm():
2025-02-24T16:36:13.1012570Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1012630Z E           AssertionError: 
2025-02-24T16:36:13.1012710Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1012760Z E           
2025-02-24T16:36:13.1012890Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1012970Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:36:13.1013050Z E           Max relative difference: 178.93768705
2025-02-24T16:36:13.1013170Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1013240Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1013370Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1013430Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1013430Z 
2025-02-24T16:36:13.1013590Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1013770Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T16:36:13.1013770Z 
2025-02-24T16:36:13.1013980Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd610>
2025-02-24T16:36:13.1014230Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.1014480Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31ede5520>
2025-02-24T16:36:13.1014700Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T16:36:13.1014710Z 
2025-02-24T16:36:13.1014780Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.1014830Z         self,
2025-02-24T16:36:13.1014900Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.1014960Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.1015010Z         request,
2025-02-24T16:36:13.1015060Z     ):
2025-02-24T16:36:13.1015140Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1015290Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.1015350Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.1015500Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.1015570Z             plot_object = getattr(
2025-02-24T16:36:13.1015670Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.1015720Z             )
2025-02-24T16:36:13.1015800Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.1015930Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.1016010Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.1016090Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.1016200Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.1016250Z                 )
2025-02-24T16:36:13.1016250Z 
2025-02-24T16:36:13.1016370Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.1016460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1016460Z 
2025-02-24T16:36:13.1016830Z args = (<function assert_allclose.<locals>.compare at 0x1735a6ca0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:36:13.1016920Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1017200Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1017200Z 
2025-02-24T16:36:13.1017250Z     @wraps(func)
2025-02-24T16:36:13.1017320Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1017390Z         with self._recreate_cm():
2025-02-24T16:36:13.1017450Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1017510Z E           AssertionError: 
2025-02-24T16:36:13.1017600Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1017650Z E           
2025-02-24T16:36:13.1017730Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1017800Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:36:13.1017940Z E           Max relative difference: 178.93768705
2025-02-24T16:36:13.1018070Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1018140Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1018260Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1018330Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1018330Z 
2025-02-24T16:36:13.1018490Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1018670Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T16:36:13.1018670Z 
2025-02-24T16:36:13.1018890Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd760>
2025-02-24T16:36:13.1019130Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>
2025-02-24T16:36:13.1019380Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30187f3b0>
2025-02-24T16:36:13.1019620Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T16:36:13.1019620Z 
2025-02-24T16:36:13.1019690Z     def test_calculate_plotting_data(
2025-02-24T16:36:13.1019750Z         self,
2025-02-24T16:36:13.1019820Z         plotter_calculate_plotting_data,
2025-02-24T16:36:13.1019890Z         calculate_plotting_data_hdf,
2025-02-24T16:36:13.1019940Z         request,
2025-02-24T16:36:13.1019990Z     ):
2025-02-24T16:36:13.1020070Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1020220Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:36:13.1020290Z         group = "plot_data_hdf/"
2025-02-24T16:36:13.1020430Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:36:13.1020490Z             plot_object = getattr(
2025-02-24T16:36:13.1020600Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:36:13.1020640Z             )
2025-02-24T16:36:13.1020720Z             if attribute_type == "attributes_np":
2025-02-24T16:36:13.1020850Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:36:13.1020940Z                     plot_object = plot_object.cgs.value
2025-02-24T16:36:13.1021010Z >               np.testing.assert_allclose(
2025-02-24T16:36:13.1021110Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:36:13.1021160Z                 )
2025-02-24T16:36:13.1021160Z 
2025-02-24T16:36:13.1021280Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:36:13.1021370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1021380Z 
2025-02-24T16:36:13.1021740Z args = (<function assert_allclose.<locals>.compare at 0x1735a6fc0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:36:13.1021820Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1022020Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1022080Z 
2025-02-24T16:36:13.1022140Z     @wraps(func)
2025-02-24T16:36:13.1022200Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1022260Z         with self._recreate_cm():
2025-02-24T16:36:13.1022320Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1022390Z E           AssertionError: 
2025-02-24T16:36:13.1022470Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1022530Z E           
2025-02-24T16:36:13.1022600Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1022680Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:36:13.1022760Z E           Max relative difference: 178.93768705
2025-02-24T16:36:13.1022940Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1023010Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1023130Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1023200Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1023200Z 
2025-02-24T16:36:13.1023370Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1023540Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T16:36:13.1023540Z 
2025-02-24T16:36:13.1023750Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debda90>
2025-02-24T16:36:13.1024000Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1536af890>
2025-02-24T16:36:13.1024080Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1024150Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1024230Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1024370Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:36:13.1024530Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1024730Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T16:36:13.1024730Z 
2025-02-24T16:36:13.1024900Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1025040Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1025090Z     ):
2025-02-24T16:36:13.1025160Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1025250Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1025390Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1025440Z     
2025-02-24T16:36:13.1025520Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1025600Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1025720Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1025800Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1025850Z             )
2025-02-24T16:36:13.1025900Z     
2025-02-24T16:36:13.1025980Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1026070Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1026130Z             if data.stackgroup:
2025-02-24T16:36:13.1026180Z                 assert (
2025-02-24T16:36:13.1026240Z                     data.stackgroup
2025-02-24T16:36:13.1026300Z                     == getattr(
2025-02-24T16:36:13.1026380Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1026460Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1026520Z                     ).decode()
2025-02-24T16:36:13.1026570Z                 )
2025-02-24T16:36:13.1026630Z             if data.name:
2025-02-24T16:36:13.1026680Z                 assert (
2025-02-24T16:36:13.1026750Z                     data.name
2025-02-24T16:36:13.1026810Z                     == getattr(
2025-02-24T16:36:13.1026890Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1027120Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1027180Z                     ).decode()
2025-02-24T16:36:13.1027230Z                 )
2025-02-24T16:36:13.1027300Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1027410Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1027460Z             )
2025-02-24T16:36:13.1027520Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1027620Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1027670Z             )
2025-02-24T16:36:13.1027670Z 
2025-02-24T16:36:13.1027790Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1028120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1028130Z 
2025-02-24T16:36:13.1028500Z args = (<function assert_allclose.<locals>.compare at 0x3054c4ae0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:36:13.1028590Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1028780Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1028790Z 
2025-02-24T16:36:13.1028840Z     @wraps(func)
2025-02-24T16:36:13.1028900Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1028960Z         with self._recreate_cm():
2025-02-24T16:36:13.1029030Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1029090Z E           AssertionError: 
2025-02-24T16:36:13.1029180Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1029220Z E           
2025-02-24T16:36:13.1029310Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1029380Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:36:13.1029460Z E           Max relative difference: 3.01858991
2025-02-24T16:36:13.1029590Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1029660Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1029780Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1029840Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1029840Z 
2025-02-24T16:36:13.1030010Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1030180Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T16:36:13.1030180Z 
2025-02-24T16:36:13.1030390Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debdb50>
2025-02-24T16:36:13.1030650Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30562cf20>
2025-02-24T16:36:13.1030720Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1030790Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1030880Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1030970Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:36:13.1031960Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1032680Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T16:36:13.1032690Z 
2025-02-24T16:36:13.1032880Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1033240Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1033390Z     ):
2025-02-24T16:36:13.1033600Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1033870Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1034240Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1034390Z     
2025-02-24T16:36:13.1034620Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1036140Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1036480Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1036720Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1036870Z             )
2025-02-24T16:36:13.1037100Z     
2025-02-24T16:36:13.1037320Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1037560Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1037800Z             if data.stackgroup:
2025-02-24T16:36:13.1038320Z                 assert (
2025-02-24T16:36:13.1044590Z                     data.stackgroup
2025-02-24T16:36:13.1044800Z                     == getattr(
2025-02-24T16:36:13.1045210Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1045300Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1045360Z                     ).decode()
2025-02-24T16:36:13.1045410Z                 )
2025-02-24T16:36:13.1045910Z             if data.name:
2025-02-24T16:36:13.1046090Z                 assert (
2025-02-24T16:36:13.1047770Z                     data.name
2025-02-24T16:36:13.1047960Z                     == getattr(
2025-02-24T16:36:13.1048200Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1048400Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1048570Z                     ).decode()
2025-02-24T16:36:13.1048730Z                 )
2025-02-24T16:36:13.1048930Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1049220Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1049380Z             )
2025-02-24T16:36:13.1049610Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1049880Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1050030Z             )
2025-02-24T16:36:13.1050240Z 
2025-02-24T16:36:13.1050480Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1050600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1050610Z 
2025-02-24T16:36:13.1050980Z args = (<function assert_allclose.<locals>.compare at 0x1735a6520>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:36:13.1051090Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1051300Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1051300Z 
2025-02-24T16:36:13.1051350Z     @wraps(func)
2025-02-24T16:36:13.1051420Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1051500Z         with self._recreate_cm():
2025-02-24T16:36:13.1051570Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1051630Z E           AssertionError: 
2025-02-24T16:36:13.1051720Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1051780Z E           
2025-02-24T16:36:13.1051890Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1051980Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:36:13.1052060Z E           Max relative difference: 3.01858991
2025-02-24T16:36:13.1052180Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1052250Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1052380Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1052450Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1052450Z 
2025-02-24T16:36:13.1052620Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1052800Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T16:36:13.1052800Z 
2025-02-24T16:36:13.1053020Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debdfd0>
2025-02-24T16:36:13.1053620Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31d92f7a0>
2025-02-24T16:36:13.1053700Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1053770Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1053850Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1053940Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:36:13.1054100Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1054300Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T16:36:13.1054380Z 
2025-02-24T16:36:13.1054440Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1054600Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1054650Z     ):
2025-02-24T16:36:13.1054730Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1054820Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1054960Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1055010Z     
2025-02-24T16:36:13.1055100Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1055180Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1055290Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1055380Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1055430Z             )
2025-02-24T16:36:13.1055470Z     
2025-02-24T16:36:13.1055550Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1055640Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1055710Z             if data.stackgroup:
2025-02-24T16:36:13.1055760Z                 assert (
2025-02-24T16:36:13.1055820Z                     data.stackgroup
2025-02-24T16:36:13.1055870Z                     == getattr(
2025-02-24T16:36:13.1055980Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1056070Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1056120Z                     ).decode()
2025-02-24T16:36:13.1056170Z                 )
2025-02-24T16:36:13.1056230Z             if data.name:
2025-02-24T16:36:13.1056280Z                 assert (
2025-02-24T16:36:13.1056330Z                     data.name
2025-02-24T16:36:13.1056390Z                     == getattr(
2025-02-24T16:36:13.1056470Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1056540Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1056600Z                     ).decode()
2025-02-24T16:36:13.1056650Z                 )
2025-02-24T16:36:13.1056730Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1056840Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1056890Z             )
2025-02-24T16:36:13.1056960Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1057060Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1057110Z             )
2025-02-24T16:36:13.1057110Z 
2025-02-24T16:36:13.1057230Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1057330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1057330Z 
2025-02-24T16:36:13.1057700Z args = (<function assert_allclose.<locals>.compare at 0x1743758a0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:36:13.1057780Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1057980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1057990Z 
2025-02-24T16:36:13.1058040Z     @wraps(func)
2025-02-24T16:36:13.1058110Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1058240Z         with self._recreate_cm():
2025-02-24T16:36:13.1058310Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1058370Z E           AssertionError: 
2025-02-24T16:36:13.1058460Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1058510Z E           
2025-02-24T16:36:13.1058580Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1058660Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:36:13.1058740Z E           Max relative difference: 3.01858991
2025-02-24T16:36:13.1058860Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1058930Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1059100Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1059170Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1059180Z 
2025-02-24T16:36:13.1059340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1059500Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T16:36:13.1059510Z 
2025-02-24T16:36:13.1059720Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe090>
2025-02-24T16:36:13.1059970Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31d964800>
2025-02-24T16:36:13.1060050Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1060110Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1060190Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1060280Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:36:13.1060440Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1060640Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T16:36:13.1060650Z 
2025-02-24T16:36:13.1060720Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1060850Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1060900Z     ):
2025-02-24T16:36:13.1060970Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1061320Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1061530Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1061580Z     
2025-02-24T16:36:13.1061670Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1061750Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1061870Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1061970Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1062030Z             )
2025-02-24T16:36:13.1062070Z     
2025-02-24T16:36:13.1062150Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1062240Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1062300Z             if data.stackgroup:
2025-02-24T16:36:13.1062360Z                 assert (
2025-02-24T16:36:13.1062420Z                     data.stackgroup
2025-02-24T16:36:13.1062480Z                     == getattr(
2025-02-24T16:36:13.1062570Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1062650Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1062700Z                     ).decode()
2025-02-24T16:36:13.1062750Z                 )
2025-02-24T16:36:13.1062810Z             if data.name:
2025-02-24T16:36:13.1062860Z                 assert (
2025-02-24T16:36:13.1062910Z                     data.name
2025-02-24T16:36:13.1062970Z                     == getattr(
2025-02-24T16:36:13.1063060Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1063140Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1063200Z                     ).decode()
2025-02-24T16:36:13.1063510Z                 )
2025-02-24T16:36:13.1063580Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1063690Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1063730Z             )
2025-02-24T16:36:13.1063800Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1063910Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1063960Z             )
2025-02-24T16:36:13.1063960Z 
2025-02-24T16:36:13.1064090Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1064180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1064180Z 
2025-02-24T16:36:13.1064660Z args = (<function assert_allclose.<locals>.compare at 0x174374220>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:36:13.1064750Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1065060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1065070Z 
2025-02-24T16:36:13.1065120Z     @wraps(func)
2025-02-24T16:36:13.1065180Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1065250Z         with self._recreate_cm():
2025-02-24T16:36:13.1065320Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1065400Z E           AssertionError: 
2025-02-24T16:36:13.1065490Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1065540Z E           
2025-02-24T16:36:13.1065620Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1065690Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:36:13.1065780Z E           Max relative difference: 3.01858991
2025-02-24T16:36:13.1065900Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1065970Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1066290Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1066410Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1066420Z 
2025-02-24T16:36:13.1066600Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1066770Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T16:36:13.1066780Z 
2025-02-24T16:36:13.1067000Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11defbfb0>
2025-02-24T16:36:13.1067260Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x305c5a660>
2025-02-24T16:36:13.1067340Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1067410Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1067490Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1067590Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:36:13.1067760Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1068670Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T16:36:13.1068680Z 
2025-02-24T16:36:13.1069280Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1069450Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1069510Z     ):
2025-02-24T16:36:13.1069580Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1069670Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1069810Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1069920Z     
2025-02-24T16:36:13.1070010Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1070090Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1070200Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1070480Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1070530Z             )
2025-02-24T16:36:13.1070580Z     
2025-02-24T16:36:13.1070650Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1070740Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1070800Z             if data.stackgroup:
2025-02-24T16:36:13.1070850Z                 assert (
2025-02-24T16:36:13.1070920Z                     data.stackgroup
2025-02-24T16:36:13.1070970Z                     == getattr(
2025-02-24T16:36:13.1071060Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1071130Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1071270Z                     ).decode()
2025-02-24T16:36:13.1071320Z                 )
2025-02-24T16:36:13.1071380Z             if data.name:
2025-02-24T16:36:13.1071430Z                 assert (
2025-02-24T16:36:13.1071490Z                     data.name
2025-02-24T16:36:13.1071550Z                     == getattr(
2025-02-24T16:36:13.1071630Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1071710Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1071760Z                     ).decode()
2025-02-24T16:36:13.1071810Z                 )
2025-02-24T16:36:13.1071870Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1071970Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1072030Z             )
2025-02-24T16:36:13.1072090Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1072270Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1072320Z             )
2025-02-24T16:36:13.1072330Z 
2025-02-24T16:36:13.1072450Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1072540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1072540Z 
2025-02-24T16:36:13.1073500Z args = (<function assert_allclose.<locals>.compare at 0x3054cce00>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:36:13.1073880Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1074510Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1074540Z 
2025-02-24T16:36:13.1074640Z     @wraps(func)
2025-02-24T16:36:13.1074710Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1074780Z         with self._recreate_cm():
2025-02-24T16:36:13.1074850Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1074920Z E           AssertionError: 
2025-02-24T16:36:13.1075020Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1075080Z E           
2025-02-24T16:36:13.1075160Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1075240Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:36:13.1075330Z E           Max relative difference: 15766.1580412
2025-02-24T16:36:13.1075470Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1075540Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1075670Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1075740Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1075740Z 
2025-02-24T16:36:13.1075910Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1076090Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T16:36:13.1076100Z 
2025-02-24T16:36:13.1076310Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debd730>
2025-02-24T16:36:13.1076560Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31851fec0>
2025-02-24T16:36:13.1076870Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1076930Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1077020Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1077100Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:36:13.1077270Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1077470Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T16:36:13.1077480Z 
2025-02-24T16:36:13.1077540Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1077680Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1077790Z     ):
2025-02-24T16:36:13.1077880Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1077960Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1078100Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1078160Z     
2025-02-24T16:36:13.1078250Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1078330Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1078450Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1078540Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1078580Z             )
2025-02-24T16:36:13.1078630Z     
2025-02-24T16:36:13.1078710Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1078790Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1078860Z             if data.stackgroup:
2025-02-24T16:36:13.1078910Z                 assert (
2025-02-24T16:36:13.1078980Z                     data.stackgroup
2025-02-24T16:36:13.1079040Z                     == getattr(
2025-02-24T16:36:13.1079120Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1079210Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1079260Z                     ).decode()
2025-02-24T16:36:13.1079320Z                 )
2025-02-24T16:36:13.1079390Z             if data.name:
2025-02-24T16:36:13.1079450Z                 assert (
2025-02-24T16:36:13.1079500Z                     data.name
2025-02-24T16:36:13.1079560Z                     == getattr(
2025-02-24T16:36:13.1079640Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1079710Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1079770Z                     ).decode()
2025-02-24T16:36:13.1079820Z                 )
2025-02-24T16:36:13.1079890Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1080000Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1080050Z             )
2025-02-24T16:36:13.1080120Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1080220Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1080280Z             )
2025-02-24T16:36:13.1080280Z 
2025-02-24T16:36:13.1080400Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1080500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1080500Z 
2025-02-24T16:36:13.1080870Z args = (<function assert_allclose.<locals>.compare at 0x1743758a0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:36:13.1080950Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1081160Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1081160Z 
2025-02-24T16:36:13.1081210Z     @wraps(func)
2025-02-24T16:36:13.1081280Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1081340Z         with self._recreate_cm():
2025-02-24T16:36:13.1081410Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1081470Z E           AssertionError: 
2025-02-24T16:36:13.1081620Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1081680Z E           
2025-02-24T16:36:13.1081750Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1081830Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:36:13.1081910Z E           Max relative difference: 15766.1580412
2025-02-24T16:36:13.1082030Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1082110Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1082220Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1082290Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1082340Z 
2025-02-24T16:36:13.1082510Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1082680Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T16:36:13.1082680Z 
2025-02-24T16:36:13.1082900Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe210>
2025-02-24T16:36:13.1083150Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x152720200>
2025-02-24T16:36:13.1083220Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1083290Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1083370Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1083460Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:36:13.1083640Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1083840Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T16:36:13.1083840Z 
2025-02-24T16:36:13.1083900Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1084040Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1084090Z     ):
2025-02-24T16:36:13.1084160Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1084250Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1084380Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1084430Z     
2025-02-24T16:36:13.1084520Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1084590Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1084710Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1084800Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1084850Z             )
2025-02-24T16:36:13.1084890Z     
2025-02-24T16:36:13.1084980Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1085060Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1085120Z             if data.stackgroup:
2025-02-24T16:36:13.1085180Z                 assert (
2025-02-24T16:36:13.1085240Z                     data.stackgroup
2025-02-24T16:36:13.1085300Z                     == getattr(
2025-02-24T16:36:13.1085380Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1085470Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1085530Z                     ).decode()
2025-02-24T16:36:13.1085570Z                 )
2025-02-24T16:36:13.1085630Z             if data.name:
2025-02-24T16:36:13.1085690Z                 assert (
2025-02-24T16:36:13.1085740Z                     data.name
2025-02-24T16:36:13.1085790Z                     == getattr(
2025-02-24T16:36:13.1085880Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1085950Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1086020Z                     ).decode()
2025-02-24T16:36:13.1086070Z                 )
2025-02-24T16:36:13.1086140Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1086240Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1086540Z             )
2025-02-24T16:36:13.1086610Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1086710Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1086760Z             )
2025-02-24T16:36:13.1086760Z 
2025-02-24T16:36:13.1086870Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1086970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1086970Z 
2025-02-24T16:36:13.1087330Z args = (<function assert_allclose.<locals>.compare at 0x1743756c0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:36:13.1087500Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1087710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1087710Z 
2025-02-24T16:36:13.1087770Z     @wraps(func)
2025-02-24T16:36:13.1087830Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1087900Z         with self._recreate_cm():
2025-02-24T16:36:13.1087970Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1088030Z E           AssertionError: 
2025-02-24T16:36:13.1088110Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1088160Z E           
2025-02-24T16:36:13.1088240Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1088310Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:36:13.1088390Z E           Max relative difference: 15766.1580412
2025-02-24T16:36:13.1088510Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1088580Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1088710Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1088770Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1088770Z 
2025-02-24T16:36:13.1088950Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1089110Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T16:36:13.1089110Z 
2025-02-24T16:36:13.1089320Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe2d0>
2025-02-24T16:36:13.1089570Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1539c4d40>
2025-02-24T16:36:13.1089640Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1089710Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1089790Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1089880Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:36:13.1090040Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1090240Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T16:36:13.1090240Z 
2025-02-24T16:36:13.1090310Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1090440Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1090490Z     ):
2025-02-24T16:36:13.1090560Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1090640Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1090790Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1090830Z     
2025-02-24T16:36:13.1090920Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1090990Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1091120Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1091200Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1091250Z             )
2025-02-24T16:36:13.1091300Z     
2025-02-24T16:36:13.1091440Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1091520Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1091590Z             if data.stackgroup:
2025-02-24T16:36:13.1091640Z                 assert (
2025-02-24T16:36:13.1091700Z                     data.stackgroup
2025-02-24T16:36:13.1091750Z                     == getattr(
2025-02-24T16:36:13.1091830Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1091910Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1091970Z                     ).decode()
2025-02-24T16:36:13.1092010Z                 )
2025-02-24T16:36:13.1092070Z             if data.name:
2025-02-24T16:36:13.1092180Z                 assert (
2025-02-24T16:36:13.1092230Z                     data.name
2025-02-24T16:36:13.1092290Z                     == getattr(
2025-02-24T16:36:13.1092370Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1092450Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1092500Z                     ).decode()
2025-02-24T16:36:13.1092550Z                 )
2025-02-24T16:36:13.1092620Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1092720Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1092770Z             )
2025-02-24T16:36:13.1092840Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1092940Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1092990Z             )
2025-02-24T16:36:13.1092990Z 
2025-02-24T16:36:13.1093110Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1093200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1093210Z 
2025-02-24T16:36:13.1093570Z args = (<function assert_allclose.<locals>.compare at 0x3054ccf40>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:36:13.1093660Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1093860Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1093860Z 
2025-02-24T16:36:13.1093910Z     @wraps(func)
2025-02-24T16:36:13.1093980Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1094040Z         with self._recreate_cm():
2025-02-24T16:36:13.1094110Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1094160Z E           AssertionError: 
2025-02-24T16:36:13.1094250Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1094300Z E           
2025-02-24T16:36:13.1094370Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1094460Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:36:13.1094530Z E           Max relative difference: 15766.1580412
2025-02-24T16:36:13.1094660Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1094730Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1094850Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1094920Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1094920Z 
2025-02-24T16:36:13.1095080Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1095250Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T16:36:13.1095250Z 
2025-02-24T16:36:13.1095450Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe540>
2025-02-24T16:36:13.1095710Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1612467e0>
2025-02-24T16:36:13.1095780Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1095840Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1095930Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1096080Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:36:13.1096230Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1096430Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T16:36:13.1096430Z 
2025-02-24T16:36:13.1096490Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1096630Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1096670Z     ):
2025-02-24T16:36:13.1096750Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1096830Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1097020Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1097060Z     
2025-02-24T16:36:13.1097150Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1097220Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1097330Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1097420Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1097460Z             )
2025-02-24T16:36:13.1097510Z     
2025-02-24T16:36:13.1097590Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1097670Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1097740Z             if data.stackgroup:
2025-02-24T16:36:13.1097790Z                 assert (
2025-02-24T16:36:13.1097850Z                     data.stackgroup
2025-02-24T16:36:13.1097910Z                     == getattr(
2025-02-24T16:36:13.1097990Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1098070Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1098120Z                     ).decode()
2025-02-24T16:36:13.1098170Z                 )
2025-02-24T16:36:13.1098230Z             if data.name:
2025-02-24T16:36:13.1098280Z                 assert (
2025-02-24T16:36:13.1098330Z                     data.name
2025-02-24T16:36:13.1098390Z                     == getattr(
2025-02-24T16:36:13.1098470Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1098540Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1098600Z                     ).decode()
2025-02-24T16:36:13.1098640Z                 )
2025-02-24T16:36:13.1098710Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1098810Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1098860Z             )
2025-02-24T16:36:13.1098930Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1099020Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1099080Z             )
2025-02-24T16:36:13.1099080Z 
2025-02-24T16:36:13.1099190Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1099290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1099290Z 
2025-02-24T16:36:13.1103820Z args = (<function assert_allclose.<locals>.compare at 0x17085eac0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:36:13.1103950Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1104150Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1104160Z 
2025-02-24T16:36:13.1104210Z     @wraps(func)
2025-02-24T16:36:13.1104270Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1104340Z         with self._recreate_cm():
2025-02-24T16:36:13.1104410Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1104470Z E           AssertionError: 
2025-02-24T16:36:13.1104560Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1104610Z E           
2025-02-24T16:36:13.1104680Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1105080Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:36:13.1105160Z E           Max relative difference: 3.01858991
2025-02-24T16:36:13.1105280Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1105350Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1105460Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1105530Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1105540Z 
2025-02-24T16:36:13.1105700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1105860Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T16:36:13.1105910Z 
2025-02-24T16:36:13.1106130Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe600>
2025-02-24T16:36:13.1106370Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x161247230>
2025-02-24T16:36:13.1106450Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1106510Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1106600Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1106680Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:36:13.1106840Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1107030Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T16:36:13.1107040Z 
2025-02-24T16:36:13.1107100Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1107240Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1107290Z     ):
2025-02-24T16:36:13.1107360Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1107440Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1107580Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1107630Z     
2025-02-24T16:36:13.1107710Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1107790Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1107910Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1107990Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1108040Z             )
2025-02-24T16:36:13.1108080Z     
2025-02-24T16:36:13.1108160Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1108240Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1108300Z             if data.stackgroup:
2025-02-24T16:36:13.1108360Z                 assert (
2025-02-24T16:36:13.1108420Z                     data.stackgroup
2025-02-24T16:36:13.1108480Z                     == getattr(
2025-02-24T16:36:13.1108560Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1108640Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1108700Z                     ).decode()
2025-02-24T16:36:13.1108750Z                 )
2025-02-24T16:36:13.1108800Z             if data.name:
2025-02-24T16:36:13.1108850Z                 assert (
2025-02-24T16:36:13.1108910Z                     data.name
2025-02-24T16:36:13.1108960Z                     == getattr(
2025-02-24T16:36:13.1109040Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1109110Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1109170Z                     ).decode()
2025-02-24T16:36:13.1109210Z                 )
2025-02-24T16:36:13.1109280Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1109390Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1109430Z             )
2025-02-24T16:36:13.1109500Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1109600Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1109910Z             )
2025-02-24T16:36:13.1109910Z 
2025-02-24T16:36:13.1110030Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1110130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1110130Z 
2025-02-24T16:36:13.1110500Z args = (<function assert_allclose.<locals>.compare at 0x3054cd8a0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:36:13.1110580Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1110780Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1110870Z 
2025-02-24T16:36:13.1110930Z     @wraps(func)
2025-02-24T16:36:13.1110990Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1111060Z         with self._recreate_cm():
2025-02-24T16:36:13.1111120Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1111190Z E           AssertionError: 
2025-02-24T16:36:13.1111280Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1111320Z E           
2025-02-24T16:36:13.1111400Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1111480Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:36:13.1111560Z E           Max relative difference: 3.01858991
2025-02-24T16:36:13.1111680Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1111740Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1111860Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1111930Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1111930Z 
2025-02-24T16:36:13.1112100Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1112260Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T16:36:13.1112260Z 
2025-02-24T16:36:13.1112480Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe6c0>
2025-02-24T16:36:13.1112730Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1536af2f0>
2025-02-24T16:36:13.1112800Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1112870Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1112940Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1113040Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:36:13.1113200Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1113400Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T16:36:13.1113400Z 
2025-02-24T16:36:13.1113470Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1113600Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1113650Z     ):
2025-02-24T16:36:13.1113720Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1113800Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1113940Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1113980Z     
2025-02-24T16:36:13.1114070Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1114140Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1114250Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1114340Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1114390Z             )
2025-02-24T16:36:13.1114440Z     
2025-02-24T16:36:13.1114510Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1114590Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1114650Z             if data.stackgroup:
2025-02-24T16:36:13.1114760Z                 assert (
2025-02-24T16:36:13.1114820Z                     data.stackgroup
2025-02-24T16:36:13.1114880Z                     == getattr(
2025-02-24T16:36:13.1114970Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1115040Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1115100Z                     ).decode()
2025-02-24T16:36:13.1115150Z                 )
2025-02-24T16:36:13.1115210Z             if data.name:
2025-02-24T16:36:13.1115260Z                 assert (
2025-02-24T16:36:13.1115310Z                     data.name
2025-02-24T16:36:13.1115370Z                     == getattr(
2025-02-24T16:36:13.1115450Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1115570Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1115620Z                     ).decode()
2025-02-24T16:36:13.1115680Z                 )
2025-02-24T16:36:13.1115740Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1115850Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1115900Z             )
2025-02-24T16:36:13.1115960Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1116060Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1116110Z             )
2025-02-24T16:36:13.1116110Z 
2025-02-24T16:36:13.1116230Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1116320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1116320Z 
2025-02-24T16:36:13.1116730Z args = (<function assert_allclose.<locals>.compare at 0x174375300>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:36:13.1116840Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1117040Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1117050Z 
2025-02-24T16:36:13.1117100Z     @wraps(func)
2025-02-24T16:36:13.1117170Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1117230Z         with self._recreate_cm():
2025-02-24T16:36:13.1117290Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1117350Z E           AssertionError: 
2025-02-24T16:36:13.1117440Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1117480Z E           
2025-02-24T16:36:13.1117560Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1117640Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:36:13.1117710Z E           Max relative difference: 3.01858991
2025-02-24T16:36:13.1117840Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1117900Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1118030Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1118100Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1118100Z 
2025-02-24T16:36:13.1118260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1118430Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T16:36:13.1118430Z 
2025-02-24T16:36:13.1118640Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe780>
2025-02-24T16:36:13.1118890Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x170912b70>
2025-02-24T16:36:13.1118960Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1119020Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1119110Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1119200Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:36:13.1119370Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1119740Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T16:36:13.1119750Z 
2025-02-24T16:36:13.1119810Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1119940Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1119990Z     ):
2025-02-24T16:36:13.1120060Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1120140Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1120290Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1120330Z     
2025-02-24T16:36:13.1120420Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1120570Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1120680Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1120770Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1120820Z             )
2025-02-24T16:36:13.1120860Z     
2025-02-24T16:36:13.1120950Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1121030Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1121090Z             if data.stackgroup:
2025-02-24T16:36:13.1121140Z                 assert (
2025-02-24T16:36:13.1121200Z                     data.stackgroup
2025-02-24T16:36:13.1121260Z                     == getattr(
2025-02-24T16:36:13.1121340Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1121420Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1121480Z                     ).decode()
2025-02-24T16:36:13.1121530Z                 )
2025-02-24T16:36:13.1121590Z             if data.name:
2025-02-24T16:36:13.1121640Z                 assert (
2025-02-24T16:36:13.1121690Z                     data.name
2025-02-24T16:36:13.1121750Z                     == getattr(
2025-02-24T16:36:13.1121830Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1121900Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1121960Z                     ).decode()
2025-02-24T16:36:13.1122010Z                 )
2025-02-24T16:36:13.1122080Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1122180Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1122220Z             )
2025-02-24T16:36:13.1122290Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1122390Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1122430Z             )
2025-02-24T16:36:13.1122440Z 
2025-02-24T16:36:13.1122550Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1122650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1122650Z 
2025-02-24T16:36:13.1123010Z args = (<function assert_allclose.<locals>.compare at 0x3054ce5c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:36:13.1123090Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1123300Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1123300Z 
2025-02-24T16:36:13.1123350Z     @wraps(func)
2025-02-24T16:36:13.1123410Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1123480Z         with self._recreate_cm():
2025-02-24T16:36:13.1123540Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1123600Z E           AssertionError: 
2025-02-24T16:36:13.1123680Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1123740Z E           
2025-02-24T16:36:13.1123810Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1123890Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:36:13.1123960Z E           Max relative difference: 3.01858991
2025-02-24T16:36:13.1124130Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1124200Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1124320Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1124390Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1124390Z 
2025-02-24T16:36:13.1124550Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1124720Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T16:36:13.1124720Z 
2025-02-24T16:36:13.1124930Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe840>
2025-02-24T16:36:13.1125220Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x176b256a0>
2025-02-24T16:36:13.1125290Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1125370Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1125450Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1125540Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:36:13.1125700Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1125900Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T16:36:13.1125900Z 
2025-02-24T16:36:13.1125960Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1126100Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1126140Z     ):
2025-02-24T16:36:13.1126210Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1126300Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1126440Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1126490Z     
2025-02-24T16:36:13.1126570Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1126650Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1126770Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1126850Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1126900Z             )
2025-02-24T16:36:13.1126950Z     
2025-02-24T16:36:13.1127020Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1127100Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1127170Z             if data.stackgroup:
2025-02-24T16:36:13.1127220Z                 assert (
2025-02-24T16:36:13.1127280Z                     data.stackgroup
2025-02-24T16:36:13.1127330Z                     == getattr(
2025-02-24T16:36:13.1127420Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1127500Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1127550Z                     ).decode()
2025-02-24T16:36:13.1127600Z                 )
2025-02-24T16:36:13.1127660Z             if data.name:
2025-02-24T16:36:13.1127710Z                 assert (
2025-02-24T16:36:13.1127770Z                     data.name
2025-02-24T16:36:13.1127820Z                     == getattr(
2025-02-24T16:36:13.1127900Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1127970Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1128030Z                     ).decode()
2025-02-24T16:36:13.1128080Z                 )
2025-02-24T16:36:13.1128140Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1128250Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1128290Z             )
2025-02-24T16:36:13.1128360Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1128460Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1128510Z             )
2025-02-24T16:36:13.1128510Z 
2025-02-24T16:36:13.1128620Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1128830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1128830Z 
2025-02-24T16:36:13.1129190Z args = (<function assert_allclose.<locals>.compare at 0x1708959e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:36:13.1129270Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1129470Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1129470Z 
2025-02-24T16:36:13.1129520Z     @wraps(func)
2025-02-24T16:36:13.1129580Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1129730Z         with self._recreate_cm():
2025-02-24T16:36:13.1129800Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1129860Z E           AssertionError: 
2025-02-24T16:36:13.1129950Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1130000Z E           
2025-02-24T16:36:13.1130080Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1130160Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:36:13.1130240Z E           Max relative difference: 15766.15804934
2025-02-24T16:36:13.1130360Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1130430Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1130550Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1130610Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1130610Z 
2025-02-24T16:36:13.1130770Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1130940Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T16:36:13.1130940Z 
2025-02-24T16:36:13.1131150Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe900>
2025-02-24T16:36:13.1131400Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x152750f20>
2025-02-24T16:36:13.1131480Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1131540Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1131620Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1131710Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:36:13.1131870Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1132060Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T16:36:13.1132070Z 
2025-02-24T16:36:13.1132140Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1132270Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1132320Z     ):
2025-02-24T16:36:13.1132390Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1132470Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1132610Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1132650Z     
2025-02-24T16:36:13.1132740Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1132820Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1132930Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1133020Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1133060Z             )
2025-02-24T16:36:13.1133110Z     
2025-02-24T16:36:13.1133190Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1133270Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1133330Z             if data.stackgroup:
2025-02-24T16:36:13.1133390Z                 assert (
2025-02-24T16:36:13.1133450Z                     data.stackgroup
2025-02-24T16:36:13.1133510Z                     == getattr(
2025-02-24T16:36:13.1133650Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1133730Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1133790Z                     ).decode()
2025-02-24T16:36:13.1133830Z                 )
2025-02-24T16:36:13.1133890Z             if data.name:
2025-02-24T16:36:13.1133940Z                 assert (
2025-02-24T16:36:13.1133990Z                     data.name
2025-02-24T16:36:13.1134090Z                     == getattr(
2025-02-24T16:36:13.1134180Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1134250Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1134300Z                     ).decode()
2025-02-24T16:36:13.1134430Z                 )
2025-02-24T16:36:13.1134510Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1134610Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1134660Z             )
2025-02-24T16:36:13.1134730Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1134830Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1134880Z             )
2025-02-24T16:36:13.1134890Z 
2025-02-24T16:36:13.1135000Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1135100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1135100Z 
2025-02-24T16:36:13.1135460Z args = (<function assert_allclose.<locals>.compare at 0x1735a5a80>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:36:13.1135540Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1135740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1135740Z 
2025-02-24T16:36:13.1135800Z     @wraps(func)
2025-02-24T16:36:13.1135870Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1135930Z         with self._recreate_cm():
2025-02-24T16:36:13.1136000Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1136060Z E           AssertionError: 
2025-02-24T16:36:13.1136140Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1136190Z E           
2025-02-24T16:36:13.1136270Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1136350Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:36:13.1136430Z E           Max relative difference: 15766.15804934
2025-02-24T16:36:13.1136550Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1136610Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1136740Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1136800Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1136800Z 
2025-02-24T16:36:13.1136960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1137130Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T16:36:13.1137140Z 
2025-02-24T16:36:13.1137340Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debe9c0>
2025-02-24T16:36:13.1137590Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31851f590>
2025-02-24T16:36:13.1137660Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1137720Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1137800Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1137880Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:36:13.1138050Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1138240Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T16:36:13.1138250Z 
2025-02-24T16:36:13.1138360Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1138500Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1138550Z     ):
2025-02-24T16:36:13.1138620Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1138700Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1138870Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1138920Z     
2025-02-24T16:36:13.1139000Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1139080Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1139200Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1139340Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1139390Z             )
2025-02-24T16:36:13.1139430Z     
2025-02-24T16:36:13.1139510Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1139590Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1140040Z             if data.stackgroup:
2025-02-24T16:36:13.1140160Z                 assert (
2025-02-24T16:36:13.1140230Z                     data.stackgroup
2025-02-24T16:36:13.1140280Z                     == getattr(
2025-02-24T16:36:13.1140360Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1140440Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1140520Z                     ).decode()
2025-02-24T16:36:13.1140570Z                 )
2025-02-24T16:36:13.1140630Z             if data.name:
2025-02-24T16:36:13.1140690Z                 assert (
2025-02-24T16:36:13.1140740Z                     data.name
2025-02-24T16:36:13.1140810Z                     == getattr(
2025-02-24T16:36:13.1140900Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1140970Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1141020Z                     ).decode()
2025-02-24T16:36:13.1141070Z                 )
2025-02-24T16:36:13.1141140Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1141250Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1141300Z             )
2025-02-24T16:36:13.1141370Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1141470Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1141520Z             )
2025-02-24T16:36:13.1141520Z 
2025-02-24T16:36:13.1141640Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1141730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1141740Z 
2025-02-24T16:36:13.1142100Z args = (<function assert_allclose.<locals>.compare at 0x3054cdbc0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:36:13.1142180Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1142390Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1142390Z 
2025-02-24T16:36:13.1142440Z     @wraps(func)
2025-02-24T16:36:13.1142500Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1142570Z         with self._recreate_cm():
2025-02-24T16:36:13.1142640Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1142700Z E           AssertionError: 
2025-02-24T16:36:13.1142780Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1142830Z E           
2025-02-24T16:36:13.1142910Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1142990Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:36:13.1143070Z E           Max relative difference: 15766.15804934
2025-02-24T16:36:13.1143200Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1143260Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1143690Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1143760Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1143770Z 
2025-02-24T16:36:13.1143920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1144100Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T16:36:13.1144100Z 
2025-02-24T16:36:13.1144320Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11debea80>
2025-02-24T16:36:13.1144560Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1743d3b90>
2025-02-24T16:36:13.1144710Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:36:13.1144770Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:36:13.1144860Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:36:13.1144950Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:36:13.1145230Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x11f173860>)
2025-02-24T16:36:13.1145430Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T16:36:13.1145430Z 
2025-02-24T16:36:13.1145490Z     def test_generate_plot_mpl(
2025-02-24T16:36:13.1145630Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:36:13.1145680Z     ):
2025-02-24T16:36:13.1145750Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:36:13.1145840Z         regression_data = RegressionData(request)
2025-02-24T16:36:13.1145970Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:36:13.1146030Z     
2025-02-24T16:36:13.1146110Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:36:13.1146190Z             np.testing.assert_array_equal(
2025-02-24T16:36:13.1146310Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:36:13.1146410Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:36:13.1146470Z             )
2025-02-24T16:36:13.1146510Z     
2025-02-24T16:36:13.1146590Z         for index, data in enumerate(fig.data):
2025-02-24T16:36:13.1146700Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:36:13.1146760Z             if data.stackgroup:
2025-02-24T16:36:13.1146820Z                 assert (
2025-02-24T16:36:13.1146880Z                     data.stackgroup
2025-02-24T16:36:13.1146930Z                     == getattr(
2025-02-24T16:36:13.1147010Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1147090Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:36:13.1147150Z                     ).decode()
2025-02-24T16:36:13.1147200Z                 )
2025-02-24T16:36:13.1147260Z             if data.name:
2025-02-24T16:36:13.1147310Z                 assert (
2025-02-24T16:36:13.1147360Z                     data.name
2025-02-24T16:36:13.1147420Z                     == getattr(
2025-02-24T16:36:13.1147510Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:36:13.1147580Z                         "_" + str(index) + "name",
2025-02-24T16:36:13.1147630Z                     ).decode()
2025-02-24T16:36:13.1147680Z                 )
2025-02-24T16:36:13.1147750Z             np.testing.assert_allclose(
2025-02-24T16:36:13.1147850Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:36:13.1147910Z             )
2025-02-24T16:36:13.1147990Z >           np.testing.assert_allclose(
2025-02-24T16:36:13.1148080Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:36:13.1148130Z             )
2025-02-24T16:36:13.1148140Z 
2025-02-24T16:36:13.1148250Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:36:13.1148340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:36:13.1148340Z 
2025-02-24T16:36:13.1148860Z args = (<function assert_allclose.<locals>.compare at 0x170896fc0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:36:13.1148950Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:36:13.1149160Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:36:13.1149170Z 
2025-02-24T16:36:13.1149220Z     @wraps(func)
2025-02-24T16:36:13.1149290Z     def inner(*args, **kwds):
2025-02-24T16:36:13.1149350Z         with self._recreate_cm():
2025-02-24T16:36:13.1149420Z >           return func(*args, **kwds)
2025-02-24T16:36:13.1149480Z E           AssertionError: 
2025-02-24T16:36:13.1149660Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1149710Z E           
2025-02-24T16:36:13.1149790Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1149870Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:36:13.1149950Z E           Max relative difference: 15766.15804934
2025-02-24T16:36:13.1150080Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1150150Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1150270Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1150340Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1150340Z 
2025-02-24T16:36:13.1150500Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:36:13.1150600Z =============================== warnings summary ===============================
2025-02-24T16:36:13.1150700Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:36:13.1150790Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:36:13.1151050Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T16:36:13.1155560Z   
2025-02-24T16:36:13.1156660Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T16:36:13.1156690Z 
2025-02-24T16:36:13.1156900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T16:36:13.1157190Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T16:36:13.1157270Z   
2025-02-24T16:36:13.1157390Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T16:36:13.1157520Z   given by the platformdirs library.  To remove this warning and
2025-02-24T16:36:13.1158140Z   see the appropriate new directories, set the environment variable
2025-02-24T16:36:13.1158330Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T16:36:13.1158470Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T16:36:13.1158470Z 
2025-02-24T16:36:13.1165220Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T16:36:13.1165450Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:36:13.1165630Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T16:36:13.1165690Z   
2025-02-24T16:36:13.1165730Z   
2025-02-24T16:36:13.1165900Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:36:13.1166120Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:36:13.1166130Z 
2025-02-24T16:36:13.1166290Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T16:36:13.1166460Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T16:36:13.1167130Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T16:36:13.1167280Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T16:36:13.1167530Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T16:36:13.1167580Z   
2025-02-24T16:36:13.1167670Z   The current CMFGEN model parser is deprecated
2025-02-24T16:36:13.1167670Z 
2025-02-24T16:36:13.1167760Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T16:36:13.1167900Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T16:36:13.1168280Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T16:36:13.1168330Z   
2025-02-24T16:36:13.1168410Z   The current CMFGEN model parser is deprecated
2025-02-24T16:36:13.1168410Z 
2025-02-24T16:36:13.1168580Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T16:36:13.1168880Z   /Users/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T16:36:13.1168920Z   
2025-02-24T16:36:13.1169250Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T16:36:13.1169260Z 
2025-02-24T16:36:13.1169340Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:36:13.1169430Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:36:13.1169570Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:36:13.1169790Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T16:36:13.1169840Z   
2025-02-24T16:36:13.1169920Z   v_inner_boundary < 0, assuming default value
2025-02-24T16:36:13.1169930Z 
2025-02-24T16:36:13.1170010Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:36:13.1170090Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:36:13.1170230Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:36:13.1170450Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T16:36:13.1170500Z   
2025-02-24T16:36:13.1170580Z   v_outer_boundary < 0, assuming default value
2025-02-24T16:36:13.1170580Z 
2025-02-24T16:36:13.1170940Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T16:36:13.1171180Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T16:36:13.1171230Z   
2025-02-24T16:36:13.1171450Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T16:36:13.1172010Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T16:36:13.1172070Z   
2025-02-24T16:36:13.1172490Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T16:36:13.1172500Z 
2025-02-24T16:36:13.1172680Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T16:36:13.1172850Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T16:36:13.1173010Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T16:36:13.1173200Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T16:36:13.1173260Z   
2025-02-24T16:36:13.1173410Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T16:36:13.1173420Z 
2025-02-24T16:36:13.1173580Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:36:13.1173900Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T16:36:13.1173940Z   
2025-02-24T16:36:13.1175410Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T16:36:13.1175440Z 
2025-02-24T16:36:13.1175650Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:36:13.1175820Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T16:36:13.1175870Z   
2025-02-24T16:36:13.1176150Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T16:36:13.1176310Z 
2025-02-24T16:36:13.1176500Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T16:36:13.1176590Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T16:36:13.1176640Z   
2025-02-24T16:36:13.1177490Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T16:36:13.1177550Z   Exception origin:
2025-02-24T16:36:13.1177760Z     File "/Users/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T16:36:13.1177830Z       raise TypeError(msg) from None
2025-02-24T16:36:13.1177890Z   [0m[0m
2025-02-24T16:36:13.1177900Z 
2025-02-24T16:36:13.1178160Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T16:36:13.1178390Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T16:36:13.1178440Z   
2025-02-24T16:36:13.1179100Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T16:36:13.1179110Z 
2025-02-24T16:36:13.1179390Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1180600Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1181510Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1182280Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1182940Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1183260Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1183550Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:36:13.1183600Z   
2025-02-24T16:36:13.1183760Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T16:36:13.1183910Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:36:13.1184100Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:36:13.1184110Z 
2025-02-24T16:36:13.1184390Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1184680Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1184970Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:36:13.1185220Z   
2025-02-24T16:36:13.1185370Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T16:36:13.1185520Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:36:13.1186350Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:36:13.1186370Z 
2025-02-24T16:36:13.1187190Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:36:13.1187920Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:36:13.1188170Z   
2025-02-24T16:36:13.1188330Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T16:36:13.1188480Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:36:13.1188680Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:36:13.1188680Z 
2025-02-24T16:36:13.1189040Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T16:36:13.1189310Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-02-24T16:36:13.1189350Z   
2025-02-24T16:36:13.1189570Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T16:36:13.1189580Z 
2025-02-24T16:36:13.1189780Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:36:13.1189950Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T16:36:13.1189990Z   
2025-02-24T16:36:13.1190040Z   
2025-02-24T16:36:13.1190200Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:36:13.1190410Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:36:13.1190410Z 
2025-02-24T16:36:13.1190610Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:36:13.1190780Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T16:36:13.1190820Z   
2025-02-24T16:36:13.1190860Z   
2025-02-24T16:36:13.1191020Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:36:13.1191160Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T16:36:13.1191160Z 
2025-02-24T16:36:13.1191350Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:36:13.1191550Z   /Users/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T16:36:13.1191590Z   
2025-02-24T16:36:13.1191740Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T16:36:13.1191750Z 
2025-02-24T16:36:13.1191910Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T16:36:13.1191910Z 
2025-02-24T16:36:13.1192040Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-02-24T16:36:13.1192130Z Coverage HTML written to dir coverage_html_report
2025-02-24T16:36:13.1192200Z Coverage XML written to file coverage.xml
2025-02-24T16:36:13.1192210Z 
2025-02-24T16:36:13.1192310Z =========================== short test summary info ============================
2025-02-24T16:36:13.1192620Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T16:36:13.1192630Z 
2025-02-24T16:36:13.1192730Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:36:13.1192820Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:36:13.1192860Z        ...
2025-02-24T16:36:13.1192930Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:36:13.1193200Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:36:13.1193280Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:36:13.1193330Z        ...
2025-02-24T16:36:13.1193390Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:36:13.1193480Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:36:13.1193550Z At positional index 54, first diff: 14 != 12
2025-02-24T16:36:13.1193770Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T16:36:13.1193840Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1193850Z 
2025-02-24T16:36:13.1194130Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:36:13.1194200Z Max absolute difference: 0.99984222
2025-02-24T16:36:13.1194260Z Max relative difference: 6337.12154973
2025-02-24T16:36:13.1194330Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.1194390Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.1194450Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:36:13.1194510Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.1194570Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.1194630Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:36:13.1195090Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:36:13.1195490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1195490Z 
2025-02-24T16:36:13.1195590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1195680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1195730Z        ...
2025-02-24T16:36:13.1195790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1195890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1195980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1196030Z        ...
2025-02-24T16:36:13.1196090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1196190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1196270Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1196670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1196680Z 
2025-02-24T16:36:13.1196750Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1197060Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1197330Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1197600Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1198010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1198080Z 
2025-02-24T16:36:13.1198150Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1198450Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1198740Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1199090Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1199460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1199460Z 
2025-02-24T16:36:13.1199560Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1199650Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1199690Z        ...
2025-02-24T16:36:13.1199760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1199860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1199940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1199990Z        ...
2025-02-24T16:36:13.1200050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1200150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1200220Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1200610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1200620Z 
2025-02-24T16:36:13.1200720Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1200800Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1200850Z        ...
2025-02-24T16:36:13.1200910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1201010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1201090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1201140Z        ...
2025-02-24T16:36:13.1201200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1201290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1201370Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1201730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1201730Z 
2025-02-24T16:36:13.1201830Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1201910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1201960Z        ...
2025-02-24T16:36:13.1202020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1202110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1202250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1202290Z        ...
2025-02-24T16:36:13.1202360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1202450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1202530Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1202910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1202920Z 
2025-02-24T16:36:13.1203010Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1203090Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1203180Z        ...
2025-02-24T16:36:13.1203250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1203340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1203430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1203480Z        ...
2025-02-24T16:36:13.1203540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1203630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1203710Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1204090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1204090Z 
2025-02-24T16:36:13.1204190Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1204270Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1204320Z        ...
2025-02-24T16:36:13.1204390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1204480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1204560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1204610Z        ...
2025-02-24T16:36:13.1204680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1204770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1204840Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1205210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1205210Z 
2025-02-24T16:36:13.1205310Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1205390Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1205440Z        ...
2025-02-24T16:36:13.1205500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1205590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1205680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1205730Z        ...
2025-02-24T16:36:13.1205790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1205880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1205950Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1206310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1206310Z 
2025-02-24T16:36:13.1206410Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1206490Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1206540Z        ...
2025-02-24T16:36:13.1206600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1206690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1206780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1206820Z        ...
2025-02-24T16:36:13.1206880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1207020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1207100Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1207490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1207500Z 
2025-02-24T16:36:13.1207570Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1207850Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1208160Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1208430Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1208810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1208810Z 
2025-02-24T16:36:13.1208880Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1209170Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1209460Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1209760Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1210110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1210110Z 
2025-02-24T16:36:13.1210210Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1210300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1210350Z        ...
2025-02-24T16:36:13.1210410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1210500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1210590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1210630Z        ...
2025-02-24T16:36:13.1210700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1210790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1210940Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1211320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1211320Z 
2025-02-24T16:36:13.1211420Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1211500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1211540Z        ...
2025-02-24T16:36:13.1211600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1211700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1211860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1211910Z        ...
2025-02-24T16:36:13.1211970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1212060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1212130Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1212490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1212490Z 
2025-02-24T16:36:13.1212590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1212670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1212720Z        ...
2025-02-24T16:36:13.1212780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1212870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1212960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1213000Z        ...
2025-02-24T16:36:13.1213070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1213160Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1213240Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1213610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1213620Z 
2025-02-24T16:36:13.1213710Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1213800Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1213840Z        ...
2025-02-24T16:36:13.1213900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1213990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1214080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1214120Z        ...
2025-02-24T16:36:13.1214180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1214280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1214350Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1214960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1214960Z 
2025-02-24T16:36:13.1215070Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1215150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1215190Z        ...
2025-02-24T16:36:13.1215250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1215340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1215420Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1215470Z        ...
2025-02-24T16:36:13.1215540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1215630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1215710Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1216060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1216150Z 
2025-02-24T16:36:13.1216260Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1216380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1216420Z        ...
2025-02-24T16:36:13.1216480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1216570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1216660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1216700Z        ...
2025-02-24T16:36:13.1216770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1216860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1216980Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1217340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1217350Z 
2025-02-24T16:36:13.1217440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1217530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1217570Z        ...
2025-02-24T16:36:13.1217630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1217730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1217810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1217870Z        ...
2025-02-24T16:36:13.1217930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1218020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1218100Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1218460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1218460Z 
2025-02-24T16:36:13.1218540Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1218820Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1219080Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1219350Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1219720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1219730Z 
2025-02-24T16:36:13.1219790Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1220080Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1220380Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1220720Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1221130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1221140Z 
2025-02-24T16:36:13.1221240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1221320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1221370Z        ...
2025-02-24T16:36:13.1221430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1221520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1221610Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1221650Z        ...
2025-02-24T16:36:13.1221720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1221810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1221880Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1222260Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1222270Z 
2025-02-24T16:36:13.1222360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1222450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1222490Z        ...
2025-02-24T16:36:13.1222550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1222650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1222730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1222780Z        ...
2025-02-24T16:36:13.1222840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1222930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1223000Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1223360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1223360Z 
2025-02-24T16:36:13.1223460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1223540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1223590Z        ...
2025-02-24T16:36:13.1223650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1223750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1223830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1223880Z        ...
2025-02-24T16:36:13.1223950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1224040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1224110Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1224480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1224490Z 
2025-02-24T16:36:13.1224590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1224670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1224760Z        ...
2025-02-24T16:36:13.1224820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1224910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1225000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1225040Z        ...
2025-02-24T16:36:13.1225100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1225200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1225270Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1225640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1225680Z 
2025-02-24T16:36:13.1225780Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1225870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1225910Z        ...
2025-02-24T16:36:13.1225970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1226070Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1226160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1226210Z        ...
2025-02-24T16:36:13.1226270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1226360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1226430Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1226790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1226790Z 
2025-02-24T16:36:13.1226890Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1226970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1227020Z        ...
2025-02-24T16:36:13.1227080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1227170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1227260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1227300Z        ...
2025-02-24T16:36:13.1227360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1227450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1227530Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1227910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1227910Z 
2025-02-24T16:36:13.1228010Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1228100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1228140Z        ...
2025-02-24T16:36:13.1228200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1228290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1228380Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1228420Z        ...
2025-02-24T16:36:13.1228490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1228580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1228650Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1229040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1229040Z 
2025-02-24T16:36:13.1229110Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1229400Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1229750Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1230010Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1230470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1230480Z 
2025-02-24T16:36:13.1230550Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1230830Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1231120Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1231420Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1231800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1231800Z 
2025-02-24T16:36:13.1231900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1231980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1232030Z        ...
2025-02-24T16:36:13.1232090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1232190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1232280Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1232320Z        ...
2025-02-24T16:36:13.1232390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1232480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1232550Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1232940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1232950Z 
2025-02-24T16:36:13.1233040Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1233130Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1233180Z        ...
2025-02-24T16:36:13.1233240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1233330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1233470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1233510Z        ...
2025-02-24T16:36:13.1233570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1233670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1233740Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1234110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1234110Z 
2025-02-24T16:36:13.1234210Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1234290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1234380Z        ...
2025-02-24T16:36:13.1234440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1234540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1234620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1234670Z        ...
2025-02-24T16:36:13.1234730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1234820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1234900Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1235290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1235290Z 
2025-02-24T16:36:13.1235390Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1235470Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1235520Z        ...
2025-02-24T16:36:13.1235580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1235680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1235760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1235800Z        ...
2025-02-24T16:36:13.1235870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1235960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1236030Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1236430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1236430Z 
2025-02-24T16:36:13.1236520Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1236610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1236680Z        ...
2025-02-24T16:36:13.1240530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1240640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1240720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1240770Z        ...
2025-02-24T16:36:13.1240830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1240930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1241000Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1241390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1241390Z 
2025-02-24T16:36:13.1241490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1241570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1241620Z        ...
2025-02-24T16:36:13.1241690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1241780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1241870Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1241910Z        ...
2025-02-24T16:36:13.1241970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1242380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1242450Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1242880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1242890Z 
2025-02-24T16:36:13.1242980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1243070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1243110Z        ...
2025-02-24T16:36:13.1243170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1243260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1243430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1243470Z        ...
2025-02-24T16:36:13.1243530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1243620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1243700Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1244140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1244140Z 
2025-02-24T16:36:13.1244210Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1244500Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1244760Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1245020Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1245460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1245470Z 
2025-02-24T16:36:13.1245530Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1245820Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1246110Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1246410Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1246880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1246880Z 
2025-02-24T16:36:13.1246980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1247070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1247110Z        ...
2025-02-24T16:36:13.1247170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1247320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1247400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1247450Z        ...
2025-02-24T16:36:13.1247510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1247600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1247690Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1248130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1248130Z 
2025-02-24T16:36:13.1248230Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1248310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1248360Z        ...
2025-02-24T16:36:13.1248420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1248520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1248600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1248650Z        ...
2025-02-24T16:36:13.1248710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1248800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1248880Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1249300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1249300Z 
2025-02-24T16:36:13.1249390Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1249480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1249520Z        ...
2025-02-24T16:36:13.1249580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1249680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1249760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1249810Z        ...
2025-02-24T16:36:13.1249870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1249970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1250040Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1250480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1250480Z 
2025-02-24T16:36:13.1250580Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1250660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1250710Z        ...
2025-02-24T16:36:13.1250770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1250860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1250960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1251000Z        ...
2025-02-24T16:36:13.1251070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1251160Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1251350Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1251800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1251800Z 
2025-02-24T16:36:13.1251900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1251980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1252030Z        ...
2025-02-24T16:36:13.1252090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1252190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1252360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1252410Z        ...
2025-02-24T16:36:13.1252470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1252560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1252640Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1253070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1253070Z 
2025-02-24T16:36:13.1253170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1253250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1253300Z        ...
2025-02-24T16:36:13.1253360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1253450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1253540Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1253580Z        ...
2025-02-24T16:36:13.1253650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1253740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1253820Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1254210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1254220Z 
2025-02-24T16:36:13.1254310Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1254400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1254440Z        ...
2025-02-24T16:36:13.1254500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1254770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1254860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1254910Z        ...
2025-02-24T16:36:13.1254970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1255060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1255130Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1255540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1255550Z 
2025-02-24T16:36:13.1255620Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1255900Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1256170Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1256520Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1256950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1256990Z 
2025-02-24T16:36:13.1257060Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1257360Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1257660Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1257970Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1258380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1258390Z 
2025-02-24T16:36:13.1258500Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1258580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1258630Z        ...
2025-02-24T16:36:13.1258690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1258800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1258880Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1258930Z        ...
2025-02-24T16:36:13.1259000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1259090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1259180Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1259610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1259610Z 
2025-02-24T16:36:13.1259710Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1259800Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1259840Z        ...
2025-02-24T16:36:13.1259910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1260010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1260100Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1260150Z        ...
2025-02-24T16:36:13.1260210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1260310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1260380Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1260840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1260840Z 
2025-02-24T16:36:13.1260940Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1261030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1261080Z        ...
2025-02-24T16:36:13.1261140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1261250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1261330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1261380Z        ...
2025-02-24T16:36:13.1261490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1261590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1261670Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1262080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1262090Z 
2025-02-24T16:36:13.1262190Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1262280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1262320Z        ...
2025-02-24T16:36:13.1262390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1262490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1262580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1262620Z        ...
2025-02-24T16:36:13.1262690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1262780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1262860Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1263290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1263300Z 
2025-02-24T16:36:13.1263400Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1263480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1263530Z        ...
2025-02-24T16:36:13.1263590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1263690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1263780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1263820Z        ...
2025-02-24T16:36:13.1263880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1263980Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1264050Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1264450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1264450Z 
2025-02-24T16:36:13.1264550Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1264630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1264680Z        ...
2025-02-24T16:36:13.1264740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1264830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1264920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1264960Z        ...
2025-02-24T16:36:13.1265020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1265110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1265190Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1265590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1265650Z 
2025-02-24T16:36:13.1265740Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1265830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1265870Z        ...
2025-02-24T16:36:13.1265940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1266030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1266110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1266160Z        ...
2025-02-24T16:36:13.1266220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1266320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1266430Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1266850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1266850Z 
2025-02-24T16:36:13.1266920Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1267210Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1267470Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1267730Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1268150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1268150Z 
2025-02-24T16:36:13.1268220Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1268500Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1268800Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1269090Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1269490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1269580Z 
2025-02-24T16:36:13.1269720Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1269800Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1269850Z        ...
2025-02-24T16:36:13.1269910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1270000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1270090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1270130Z        ...
2025-02-24T16:36:13.1270190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1270290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1270440Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1270890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1270890Z 
2025-02-24T16:36:13.1270990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1271080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1271120Z        ...
2025-02-24T16:36:13.1271180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1271280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1271360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1271410Z        ...
2025-02-24T16:36:13.1271470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1271560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1271640Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1272030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1272030Z 
2025-02-24T16:36:13.1272130Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1272210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1272260Z        ...
2025-02-24T16:36:13.1272320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1272410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1272490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1272540Z        ...
2025-02-24T16:36:13.1272600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1272690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1272770Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1273180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1273180Z 
2025-02-24T16:36:13.1273280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1273360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1273410Z        ...
2025-02-24T16:36:13.1273560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1273660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1273740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1273780Z        ...
2025-02-24T16:36:13.1273850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1273940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1274010Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1274420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1274430Z 
2025-02-24T16:36:13.1274520Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1274720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1274760Z        ...
2025-02-24T16:36:13.1274820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1274920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1275000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1275040Z        ...
2025-02-24T16:36:13.1275100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1275200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1275270Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1275670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1275710Z 
2025-02-24T16:36:13.1275820Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1275900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1275950Z        ...
2025-02-24T16:36:13.1276010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1276100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1276180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1276230Z        ...
2025-02-24T16:36:13.1276290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1276380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1276450Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1276870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1276880Z 
2025-02-24T16:36:13.1276980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1277060Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1277100Z        ...
2025-02-24T16:36:13.1277170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1277260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1277350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1277390Z        ...
2025-02-24T16:36:13.1277450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1277550Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1277620Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1278050Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1278050Z 
2025-02-24T16:36:13.1278120Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1278410Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1278680Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1278950Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1279450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1279460Z 
2025-02-24T16:36:13.1279530Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1279830Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1280180Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1280490Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1280920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1280930Z 
2025-02-24T16:36:13.1281030Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1281110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1281170Z        ...
2025-02-24T16:36:13.1281230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1281330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1281420Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1281460Z        ...
2025-02-24T16:36:13.1281530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1281620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1281700Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1282150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1282160Z 
2025-02-24T16:36:13.1282270Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1282350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1282400Z        ...
2025-02-24T16:36:13.1282470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1282570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1282660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1282710Z        ...
2025-02-24T16:36:13.1282770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1282870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1282940Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1283370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1283370Z 
2025-02-24T16:36:13.1283470Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1283560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1283610Z        ...
2025-02-24T16:36:13.1283730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1283830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1283910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1283960Z        ...
2025-02-24T16:36:13.1284030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1284130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1284200Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1284650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1284700Z 
2025-02-24T16:36:13.1284810Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1284890Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1284940Z        ...
2025-02-24T16:36:13.1285000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1285100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1285190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1285240Z        ...
2025-02-24T16:36:13.1285300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1285400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1285470Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1285920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1285930Z 
2025-02-24T16:36:13.1286020Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1286110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1286160Z        ...
2025-02-24T16:36:13.1286220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1286320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1286410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1286460Z        ...
2025-02-24T16:36:13.1286520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1286620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1286690Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1287130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1287130Z 
2025-02-24T16:36:13.1287240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1287320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1287370Z        ...
2025-02-24T16:36:13.1287440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1287540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1287630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1287670Z        ...
2025-02-24T16:36:13.1287740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1287830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1287910Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1288310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1288320Z 
2025-02-24T16:36:13.1288420Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1288510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1288560Z        ...
2025-02-24T16:36:13.1288620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1288720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1289270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1289320Z        ...
2025-02-24T16:36:13.1289380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1289480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1289550Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1289980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1289980Z 
2025-02-24T16:36:13.1290060Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1290350Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1290760Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1291030Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1291450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1291460Z 
2025-02-24T16:36:13.1291530Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1291830Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1292130Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1292440Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1292840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1292840Z 
2025-02-24T16:36:13.1292940Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1293030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1293080Z        ...
2025-02-24T16:36:13.1293140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1293240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1293390Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1293440Z        ...
2025-02-24T16:36:13.1293510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1293610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1293680Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1294110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1294110Z 
2025-02-24T16:36:13.1294210Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1294350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1294400Z        ...
2025-02-24T16:36:13.1294460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1294560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1294660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1294810Z        ...
2025-02-24T16:36:13.1294880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1294980Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1295060Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1295470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1295470Z 
2025-02-24T16:36:13.1295570Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1295660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1295710Z        ...
2025-02-24T16:36:13.1295770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1295870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1295960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1296010Z        ...
2025-02-24T16:36:13.1296070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1296170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1296250Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1296660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1296670Z 
2025-02-24T16:36:13.1296770Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1296860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1296900Z        ...
2025-02-24T16:36:13.1296970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1297070Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1297150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1297200Z        ...
2025-02-24T16:36:13.1297270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1297360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1297440Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1297850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1297850Z 
2025-02-24T16:36:13.1297950Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1298040Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1298080Z        ...
2025-02-24T16:36:13.1298150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1298250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1298330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1298380Z        ...
2025-02-24T16:36:13.1298540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1298650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1298730Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1299150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1299160Z 
2025-02-24T16:36:13.1299260Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1299340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1299390Z        ...
2025-02-24T16:36:13.1299450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1299610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1299690Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1299740Z        ...
2025-02-24T16:36:13.1299800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1299900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1299980Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1300400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1300410Z 
2025-02-24T16:36:13.1300480Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1300780Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1301050Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1301330Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1301760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1301760Z 
2025-02-24T16:36:13.1301830Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1302130Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1302440Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1302740Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1303210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1303210Z 
2025-02-24T16:36:13.1303320Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1303410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1303450Z        ...
2025-02-24T16:36:13.1303570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1303670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1303760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1303800Z        ...
2025-02-24T16:36:13.1303870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1303970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1304040Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1304470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1304480Z 
2025-02-24T16:36:13.1304580Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1304660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1304710Z        ...
2025-02-24T16:36:13.1308960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1309170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1309250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1309300Z        ...
2025-02-24T16:36:13.1309370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1309470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1309550Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1309980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1309980Z 
2025-02-24T16:36:13.1310080Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1310170Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1310210Z        ...
2025-02-24T16:36:13.1310290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1310380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1310480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1310520Z        ...
2025-02-24T16:36:13.1310590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1310680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1310760Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1311200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1311200Z 
2025-02-24T16:36:13.1311300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1311390Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1311430Z        ...
2025-02-24T16:36:13.1311500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1311600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1311680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1311740Z        ...
2025-02-24T16:36:13.1311800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1311900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1312420Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1312860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1312870Z 
2025-02-24T16:36:13.1312970Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1313050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1313100Z        ...
2025-02-24T16:36:13.1313160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1313260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1313350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1313520Z        ...
2025-02-24T16:36:13.1313590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1313680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1313760Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1314180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1314190Z 
2025-02-24T16:36:13.1314290Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1314370Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1314420Z        ...
2025-02-24T16:36:13.1314490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1314580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1314670Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1314720Z        ...
2025-02-24T16:36:13.1314780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1314880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1314950Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1315370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1315380Z 
2025-02-24T16:36:13.1315480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1315560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1315610Z        ...
2025-02-24T16:36:13.1315670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1315770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1315850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1315900Z        ...
2025-02-24T16:36:13.1315970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1316060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1316150Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1316570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1316580Z 
2025-02-24T16:36:13.1316660Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1316960Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1317230Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1317570Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1318010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1318020Z 
2025-02-24T16:36:13.1318140Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1318450Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1318760Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1319060Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1319480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1319480Z 
2025-02-24T16:36:13.1319590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1319670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1319720Z        ...
2025-02-24T16:36:13.1319790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1319890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1319990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1320030Z        ...
2025-02-24T16:36:13.1320100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1320190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1320270Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1320720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1320720Z 
2025-02-24T16:36:13.1320820Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1320900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1320950Z        ...
2025-02-24T16:36:13.1321010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1321110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1321190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1321240Z        ...
2025-02-24T16:36:13.1321310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1321410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1321490Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1321890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1321950Z 
2025-02-24T16:36:13.1322060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1322150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1322190Z        ...
2025-02-24T16:36:13.1322260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1322350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1322450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1322490Z        ...
2025-02-24T16:36:13.1322560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1322710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1322790Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1323220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1323230Z 
2025-02-24T16:36:13.1323330Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1323420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1323460Z        ...
2025-02-24T16:36:13.1323530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1323620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1323700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1323760Z        ...
2025-02-24T16:36:13.1323820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1323920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1324000Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1324430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1324430Z 
2025-02-24T16:36:13.1324540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1324620Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1324670Z        ...
2025-02-24T16:36:13.1324740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1324840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1324920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1324970Z        ...
2025-02-24T16:36:13.1325030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1325120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1325200Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1325620Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1325630Z 
2025-02-24T16:36:13.1325730Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1325820Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1325860Z        ...
2025-02-24T16:36:13.1325930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1326020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1326110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1326160Z        ...
2025-02-24T16:36:13.1326220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1326320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1326400Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1326820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1326880Z 
2025-02-24T16:36:13.1326990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1327070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1327120Z        ...
2025-02-24T16:36:13.1327180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1327280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1327360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1327410Z        ...
2025-02-24T16:36:13.1327470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1327570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1327650Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1328120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1328130Z 
2025-02-24T16:36:13.1328200Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1328500Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1328770Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1329050Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1329480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1329480Z 
2025-02-24T16:36:13.1329550Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1329850Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1330160Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1330460Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1330870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1330970Z 
2025-02-24T16:36:13.1331090Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1331180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1331220Z        ...
2025-02-24T16:36:13.1331290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1331380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1331480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1331520Z        ...
2025-02-24T16:36:13.1331590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1331690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1331990Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1332440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1332450Z 
2025-02-24T16:36:13.1332550Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1332640Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1332690Z        ...
2025-02-24T16:36:13.1332750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1332850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1332930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1332980Z        ...
2025-02-24T16:36:13.1333050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1333140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1333220Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1333630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1333630Z 
2025-02-24T16:36:13.1333740Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1333820Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1333870Z        ...
2025-02-24T16:36:13.1333940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1334030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1334120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1334160Z        ...
2025-02-24T16:36:13.1334230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1334320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1334400Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1334970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1334980Z 
2025-02-24T16:36:13.1335080Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1335170Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1335220Z        ...
2025-02-24T16:36:13.1335280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1335380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1335460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1335510Z        ...
2025-02-24T16:36:13.1335580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1335670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1335750Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1336190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1336200Z 
2025-02-24T16:36:13.1336300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1336530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1336580Z        ...
2025-02-24T16:36:13.1336640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1336740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1336830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1336870Z        ...
2025-02-24T16:36:13.1336930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1337030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1337110Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1337530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1337590Z 
2025-02-24T16:36:13.1337690Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1337780Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1337820Z        ...
2025-02-24T16:36:13.1337890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1337990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1338080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1338130Z        ...
2025-02-24T16:36:13.1338190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1338290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1338370Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1338790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1338800Z 
2025-02-24T16:36:13.1338900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1338990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1339040Z        ...
2025-02-24T16:36:13.1339100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1339210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1339290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1339340Z        ...
2025-02-24T16:36:13.1339410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1339510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1339590Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1340010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1340020Z 
2025-02-24T16:36:13.1340090Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1340400Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1340660Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1340930Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1341440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1341440Z 
2025-02-24T16:36:13.1341510Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1341810Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1342170Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1342480Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1342890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1342900Z 
2025-02-24T16:36:13.1343000Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1343090Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1343140Z        ...
2025-02-24T16:36:13.1343210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1343310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1343400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1343450Z        ...
2025-02-24T16:36:13.1343520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1343610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1343690Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1344140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1344140Z 
2025-02-24T16:36:13.1344240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1344330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1344380Z        ...
2025-02-24T16:36:13.1344450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1344540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1344630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1344680Z        ...
2025-02-24T16:36:13.1344740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1344840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1344920Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1345320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1345330Z 
2025-02-24T16:36:13.1345430Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1345520Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1345560Z        ...
2025-02-24T16:36:13.1345690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1345790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1345880Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1345930Z        ...
2025-02-24T16:36:13.1345990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1346090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1346160Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1346600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1346650Z 
2025-02-24T16:36:13.1346760Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1346850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1346890Z        ...
2025-02-24T16:36:13.1346950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1347060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1347150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1347190Z        ...
2025-02-24T16:36:13.1347250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1347350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1347420Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1347860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1347860Z 
2025-02-24T16:36:13.1347970Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1348050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1348100Z        ...
2025-02-24T16:36:13.1348160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1348260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1348350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1348400Z        ...
2025-02-24T16:36:13.1348460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1348550Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1348630Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1349050Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1349060Z 
2025-02-24T16:36:13.1349160Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1349240Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1349290Z        ...
2025-02-24T16:36:13.1349360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1349450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1349540Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1349600Z        ...
2025-02-24T16:36:13.1349660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1349760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1349830Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1350290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1350300Z 
2025-02-24T16:36:13.1350400Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1350490Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1350540Z        ...
2025-02-24T16:36:13.1350600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1350690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1351070Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1351120Z        ...
2025-02-24T16:36:13.1351190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1351290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1351360Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1351830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1351830Z 
2025-02-24T16:36:13.1351900Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1352210Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1352690Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1352970Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1353440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1353440Z 
2025-02-24T16:36:13.1353520Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1354100Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1354420Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1354730Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1355180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1355180Z 
2025-02-24T16:36:13.1355280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1355370Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1355420Z        ...
2025-02-24T16:36:13.1355490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1355740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1355830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1355880Z        ...
2025-02-24T16:36:13.1355950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1356050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1356130Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1356610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1356660Z 
2025-02-24T16:36:13.1356770Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1356860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1356910Z        ...
2025-02-24T16:36:13.1356970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1357080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1357170Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1357220Z        ...
2025-02-24T16:36:13.1357280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1357380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1357460Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1357910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1357910Z 
2025-02-24T16:36:13.1358020Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1358100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1358150Z        ...
2025-02-24T16:36:13.1358210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1358320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1358410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1358450Z        ...
2025-02-24T16:36:13.1358520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1358620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1358700Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1359250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.1359260Z 
2025-02-24T16:36:13.1359390Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:36:13.1359700Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1363300Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-02-24T16:36:13.1367100Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:36:13.1367260Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:36:13.1367760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1367770Z 
2025-02-24T16:36:13.1367870Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1367960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1368010Z        ...
2025-02-24T16:36:13.1368080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1368170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1368260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1368300Z        ...
2025-02-24T16:36:13.1368370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1368470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1368560Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1369020Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1369100Z 
2025-02-24T16:36:13.1369210Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1369290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1369340Z        ...
2025-02-24T16:36:13.1369410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1369500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1369590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1369640Z        ...
2025-02-24T16:36:13.1369700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1369870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1369940Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1370420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1370430Z 
2025-02-24T16:36:13.1370530Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1370610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1370670Z        ...
2025-02-24T16:36:13.1370730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1370830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1370920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1370960Z        ...
2025-02-24T16:36:13.1371040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1371140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1371220Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1371660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1371670Z 
2025-02-24T16:36:13.1371780Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1371860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1371910Z        ...
2025-02-24T16:36:13.1371990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1372090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1372170Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1372220Z        ...
2025-02-24T16:36:13.1372280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1372390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1372470Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1372910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1372920Z 
2025-02-24T16:36:13.1373020Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1373110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1373160Z        ...
2025-02-24T16:36:13.1373220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1373320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1373410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1373520Z        ...
2025-02-24T16:36:13.1373590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1373690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1373780Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1374230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1374470Z 
2025-02-24T16:36:13.1374570Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1374970Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1375250Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1375690Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1376150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1376150Z 
2025-02-24T16:36:13.1376230Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1376520Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1376840Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1377150Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1377580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1377580Z 
2025-02-24T16:36:13.1377690Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1377780Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1377830Z        ...
2025-02-24T16:36:13.1377890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1377990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1378070Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1378120Z        ...
2025-02-24T16:36:13.1378190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1378300Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1378370Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1378840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1378900Z 
2025-02-24T16:36:13.1379000Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1379090Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1379140Z        ...
2025-02-24T16:36:13.1379200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1379310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1379400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1379450Z        ...
2025-02-24T16:36:13.1379510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1379670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1379750Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1380180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1380190Z 
2025-02-24T16:36:13.1380300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1380380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1380430Z        ...
2025-02-24T16:36:13.1380490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1380590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1380680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1380720Z        ...
2025-02-24T16:36:13.1380790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1380890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1380960Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1381500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.1381500Z 
2025-02-24T16:36:13.1381640Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:36:13.1381950Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1385760Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T16:36:13.1389670Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:36:13.1389900Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:36:13.1390400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1390410Z 
2025-02-24T16:36:13.1394600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1394740Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1394790Z        ...
2025-02-24T16:36:13.1394870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1394970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1395060Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1395100Z        ...
2025-02-24T16:36:13.1395170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1395260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1395340Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1395810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1395820Z 
2025-02-24T16:36:13.1395920Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1396010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1396050Z        ...
2025-02-24T16:36:13.1396330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1396430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1396510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1396560Z        ...
2025-02-24T16:36:13.1396620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1396710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1396780Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1397300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1397480Z 
2025-02-24T16:36:13.1397590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1397680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1397730Z        ...
2025-02-24T16:36:13.1397790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1397890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1397980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1398020Z        ...
2025-02-24T16:36:13.1398090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1398180Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1398260Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1398700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1398710Z 
2025-02-24T16:36:13.1398810Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1398910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1398950Z        ...
2025-02-24T16:36:13.1399020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1399120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1399210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1399260Z        ...
2025-02-24T16:36:13.1399320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1399420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1399490Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1399870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1399870Z 
2025-02-24T16:36:13.1399970Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1400060Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1400110Z        ...
2025-02-24T16:36:13.1400170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1400270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1400360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1400400Z        ...
2025-02-24T16:36:13.1400470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1400560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1400640Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1401020Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1401020Z 
2025-02-24T16:36:13.1401100Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1401410Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1401850Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1402120Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1402790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1402800Z 
2025-02-24T16:36:13.1402870Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1403170Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1403470Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1403780Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1404140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1404150Z 
2025-02-24T16:36:13.1404250Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1404340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1404390Z        ...
2025-02-24T16:36:13.1404460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1404550Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1404650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1404690Z        ...
2025-02-24T16:36:13.1404750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1404850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1404920Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1405300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1405300Z 
2025-02-24T16:36:13.1405400Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1405490Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1405530Z        ...
2025-02-24T16:36:13.1405590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1405690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1405840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1405890Z        ...
2025-02-24T16:36:13.1405950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1406040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1406120Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1406470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1406470Z 
2025-02-24T16:36:13.1406570Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1406700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1406750Z        ...
2025-02-24T16:36:13.1406810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1406910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1407000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1407040Z        ...
2025-02-24T16:36:13.1407100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1407190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1407270Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1407730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.1407730Z 
2025-02-24T16:36:13.1407860Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:36:13.1408150Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1411780Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T16:36:13.1415640Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:36:13.1415890Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:36:13.1416310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1416320Z 
2025-02-24T16:36:13.1416420Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1416510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1416560Z        ...
2025-02-24T16:36:13.1416620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1416720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1416810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1416860Z        ...
2025-02-24T16:36:13.1416930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1417030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1417100Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1417500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1417500Z 
2025-02-24T16:36:13.1417600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1417690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1417740Z        ...
2025-02-24T16:36:13.1417810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1417910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1417990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1418030Z        ...
2025-02-24T16:36:13.1418090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1418190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1418260Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1418640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1418690Z 
2025-02-24T16:36:13.1418790Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1418880Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1418920Z        ...
2025-02-24T16:36:13.1418980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1419080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1419160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1419210Z        ...
2025-02-24T16:36:13.1419270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1419360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1419480Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1419840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1419850Z 
2025-02-24T16:36:13.1419940Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1420030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1420070Z        ...
2025-02-24T16:36:13.1420130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1420220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1420300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1420350Z        ...
2025-02-24T16:36:13.1420410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1420510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1420580Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1420960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1420970Z 
2025-02-24T16:36:13.1421060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1421140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1421200Z        ...
2025-02-24T16:36:13.1421260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1421350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1421430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1421480Z        ...
2025-02-24T16:36:13.1421540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1421630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1421710Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1422090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1422090Z 
2025-02-24T16:36:13.1422160Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1422460Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1422720Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1422980Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1423460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1423470Z 
2025-02-24T16:36:13.1423530Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1423820Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1424190Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1424480Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1424860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1424860Z 
2025-02-24T16:36:13.1424960Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1425050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1425100Z        ...
2025-02-24T16:36:13.1425160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1425260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1425340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1425380Z        ...
2025-02-24T16:36:13.1425450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1425540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1425620Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1426020Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1426020Z 
2025-02-24T16:36:13.1426120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1426200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1426240Z        ...
2025-02-24T16:36:13.1426310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1426400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1426480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1426530Z        ...
2025-02-24T16:36:13.1426590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1426680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1426760Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1427120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1427130Z 
2025-02-24T16:36:13.1427230Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1427360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1427410Z        ...
2025-02-24T16:36:13.1427470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1427560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1427650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1427690Z        ...
2025-02-24T16:36:13.1427750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1427850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1427930Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1428310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1428350Z 
2025-02-24T16:36:13.1428450Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1428540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1428580Z        ...
2025-02-24T16:36:13.1428650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1428740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1428830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1428870Z        ...
2025-02-24T16:36:13.1428930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1429030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1429100Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1429490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1429500Z 
2025-02-24T16:36:13.1429590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1429680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1429720Z        ...
2025-02-24T16:36:13.1429780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1429880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1429960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1430010Z        ...
2025-02-24T16:36:13.1430080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1430170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1430240Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1430610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1430620Z 
2025-02-24T16:36:13.1430720Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1430810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1430850Z        ...
2025-02-24T16:36:13.1430920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1431010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1431090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1431140Z        ...
2025-02-24T16:36:13.1431200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1431290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1431360Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1431730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1431740Z 
2025-02-24T16:36:13.1431840Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1431920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1431960Z        ...
2025-02-24T16:36:13.1432020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1432170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1432250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1432300Z        ...
2025-02-24T16:36:13.1432360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1432450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1432530Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1432900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1432910Z 
2025-02-24T16:36:13.1432970Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1433300Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1433570Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1433830Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1434210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1434220Z 
2025-02-24T16:36:13.1434290Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1434570Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1434860Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1435160Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1435520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1435530Z 
2025-02-24T16:36:13.1435630Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1435710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1435760Z        ...
2025-02-24T16:36:13.1435820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1435960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1436050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1436090Z        ...
2025-02-24T16:36:13.1436150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1436240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1436330Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1436710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1436720Z 
2025-02-24T16:36:13.1436810Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1436940Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1436990Z        ...
2025-02-24T16:36:13.1437050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1437150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1437230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1437280Z        ...
2025-02-24T16:36:13.1437340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1437430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1437500Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1437860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1437870Z 
2025-02-24T16:36:13.1437960Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1438040Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1438090Z        ...
2025-02-24T16:36:13.1438150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1438250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1438340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1438380Z        ...
2025-02-24T16:36:13.1438440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1438530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1438610Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1438990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1439000Z 
2025-02-24T16:36:13.1439090Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1439180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1439220Z        ...
2025-02-24T16:36:13.1439290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1439380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1439470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1439520Z        ...
2025-02-24T16:36:13.1439580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1439670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1439740Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1440120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1440120Z 
2025-02-24T16:36:13.1440220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1440300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1440340Z        ...
2025-02-24T16:36:13.1440400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1440500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1440580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1440630Z        ...
2025-02-24T16:36:13.1440780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1440880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1440950Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1441320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1441320Z 
2025-02-24T16:36:13.1441420Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1441510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1441550Z        ...
2025-02-24T16:36:13.1441610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1441940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1442040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1442080Z        ...
2025-02-24T16:36:13.1442140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1442240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1442310Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1442710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1442710Z 
2025-02-24T16:36:13.1442810Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1442890Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1442930Z        ...
2025-02-24T16:36:13.1442990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1443090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1443180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1443220Z        ...
2025-02-24T16:36:13.1443280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1443380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1443460Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1443860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1443860Z 
2025-02-24T16:36:13.1443930Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1444220Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1444480Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1444750Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1445150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1445160Z 
2025-02-24T16:36:13.1445220Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1445510Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1445860Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1446190Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1446580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1446580Z 
2025-02-24T16:36:13.1446690Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1446770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1446820Z        ...
2025-02-24T16:36:13.1446880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1446970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1447060Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1447100Z        ...
2025-02-24T16:36:13.1447170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1447260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1447340Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1447750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1447760Z 
2025-02-24T16:36:13.1447850Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1447940Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1447980Z        ...
2025-02-24T16:36:13.1448040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1448140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1448220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1448270Z        ...
2025-02-24T16:36:13.1448330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1448430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1448500Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1448890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1448890Z 
2025-02-24T16:36:13.1449000Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1449080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1449120Z        ...
2025-02-24T16:36:13.1449180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1449280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1449360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1449410Z        ...
2025-02-24T16:36:13.1449470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1449560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1449690Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1450090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1450090Z 
2025-02-24T16:36:13.1450190Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1450270Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1450320Z        ...
2025-02-24T16:36:13.1450380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1450480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1450570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1450660Z        ...
2025-02-24T16:36:13.1450730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1450820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1450890Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1451300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1451300Z 
2025-02-24T16:36:13.1451400Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1451480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1451530Z        ...
2025-02-24T16:36:13.1451590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1451680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1451770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1451820Z        ...
2025-02-24T16:36:13.1451880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1451970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1452050Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1452440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1452440Z 
2025-02-24T16:36:13.1452550Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1452640Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1452680Z        ...
2025-02-24T16:36:13.1452750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1452840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1452930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1452970Z        ...
2025-02-24T16:36:13.1453050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1453140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1453220Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1453680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1453680Z 
2025-02-24T16:36:13.1453790Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1453880Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1453920Z        ...
2025-02-24T16:36:13.1453990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1454080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1454160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1454210Z        ...
2025-02-24T16:36:13.1454270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1454360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1454430Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1454890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1454940Z 
2025-02-24T16:36:13.1455010Z Series values are different (4.04858 %)
2025-02-24T16:36:13.1455420Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1455690Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1456020Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:36:13.1456470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:36:13.1456480Z 
2025-02-24T16:36:13.1456540Z Series values are different (6.47773 %)
2025-02-24T16:36:13.1456830Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1457130Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1457420Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:36:13.1457850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1457860Z 
2025-02-24T16:36:13.1457960Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1458040Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1458090Z        ...
2025-02-24T16:36:13.1458150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1458250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1458340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1458380Z        ...
2025-02-24T16:36:13.1458450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1458540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1458620Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1459170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1459180Z 
2025-02-24T16:36:13.1459270Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1459360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1459400Z        ...
2025-02-24T16:36:13.1459460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1459550Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1459640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1459760Z        ...
2025-02-24T16:36:13.1459820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1459920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1459990Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1460420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1460430Z 
2025-02-24T16:36:13.1460530Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1460610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1460660Z        ...
2025-02-24T16:36:13.1460720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1460810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1460900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1460940Z        ...
2025-02-24T16:36:13.1461010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1461100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1461180Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1461630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1461630Z 
2025-02-24T16:36:13.1461730Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1461810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1461860Z        ...
2025-02-24T16:36:13.1461920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1462010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1462090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1462140Z        ...
2025-02-24T16:36:13.1462200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1462300Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1462370Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1462820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1462830Z 
2025-02-24T16:36:13.1462920Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1463010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1463050Z        ...
2025-02-24T16:36:13.1463110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1467130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1467250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1467300Z        ...
2025-02-24T16:36:13.1467360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1467470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1467550Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1468000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:36:13.1468210Z 
2025-02-24T16:36:13.1468340Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:36:13.1468420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1468470Z        ...
2025-02-24T16:36:13.1468540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1468630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1468720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:36:13.1468760Z        ...
2025-02-24T16:36:13.1468830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:36:13.1468970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:36:13.1469050Z At positional index 75, first diff: 6 != 7
2025-02-24T16:36:13.1469290Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T16:36:13.1469360Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1469370Z 
2025-02-24T16:36:13.1469440Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:36:13.1469530Z Max absolute difference: 1.
2025-02-24T16:36:13.1469590Z Max relative difference: 1.
2025-02-24T16:36:13.1469690Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:36:13.1469760Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:36:13.1469850Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:36:13.1469940Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:36:13.1470030Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:36:13.1470110Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:36:13.1470330Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T16:36:13.1470410Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1470410Z 
2025-02-24T16:36:13.1470470Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:36:13.1470530Z Max absolute difference: 4005
2025-02-24T16:36:13.1470600Z Max relative difference: 26.00649351
2025-02-24T16:36:13.1470680Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:36:13.1470750Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:36:13.1470980Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T16:36:13.1471050Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1471050Z 
2025-02-24T16:36:13.1471120Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:36:13.1471180Z Max absolute difference: 4046
2025-02-24T16:36:13.1471250Z Max relative difference: 24.82208589
2025-02-24T16:36:13.1471330Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:36:13.1471400Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:36:13.1471600Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T16:36:13.1471670Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1471670Z 
2025-02-24T16:36:13.1471740Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:36:13.1471800Z Max absolute difference: 0.99984222
2025-02-24T16:36:13.1471870Z Max relative difference: 6337.12154973
2025-02-24T16:36:13.1471930Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.1471990Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.1472040Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:36:13.1472100Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.1472160Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:36:13.1472210Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:36:13.1472390Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T16:36:13.1472510Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1472510Z 
2025-02-24T16:36:13.1472580Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:36:13.1472650Z Max absolute difference: 4.25260542e+12
2025-02-24T16:36:13.1472720Z Max relative difference: 18196.0085861
2025-02-24T16:36:13.1472830Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:36:13.1472890Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:36:13.1473000Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:36:13.1473110Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:36:13.1473170Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:36:13.1473320Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:36:13.1473580Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T16:36:13.1473650Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1473660Z 
2025-02-24T16:36:13.1473730Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:36:13.1473790Z Max absolute difference: 2.92713618
2025-02-24T16:36:13.1473860Z Max relative difference: 18196.0085861
2025-02-24T16:36:13.1473970Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:36:13.1474020Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:36:13.1474130Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:36:13.1474190Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:36:13.1474380Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T16:36:13.1474460Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1474460Z 
2025-02-24T16:36:13.1474530Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:36:13.1474600Z Max absolute difference: 282815.33818472
2025-02-24T16:36:13.1474670Z Max relative difference: 4.12352828e+47
2025-02-24T16:36:13.1474780Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:36:13.1474840Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:36:13.1474940Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:36:13.1475050Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:36:13.1475110Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:36:13.1475210Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:36:13.1475580Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.1475580Z 
2025-02-24T16:36:13.1475710Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:36:13.1475760Z [index]: [0, 1]
2025-02-24T16:36:13.1475830Z [left]:  [0.40039163797855976, 0.4500690173218345]
2025-02-24T16:36:13.1475910Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:36:13.1476050Z At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T16:36:13.1476410Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.1476420Z 
2025-02-24T16:36:13.1476550Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:36:13.1476600Z [index]: [0, 1]
2025-02-24T16:36:13.1476670Z [left]:  [9967.488442185557, 10091.396322818851]
2025-02-24T16:36:13.1476740Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:36:13.1476860Z At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T16:36:13.1477270Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:36:13.1477270Z 
2025-02-24T16:36:13.1477460Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:36:13.1477510Z [index]: [0, 1]
2025-02-24T16:36:13.1477580Z [left]:  [2869544645.3209715, 2881024886.0882792]
2025-02-24T16:36:13.1477660Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:36:13.1477790Z At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-02-24T16:36:13.1478070Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T16:36:13.1478080Z 
2025-02-24T16:36:13.1478150Z Series values are different (100.0 %)
2025-02-24T16:36:13.1478250Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:36:13.1479170Z [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-02-24T16:36:13.1480070Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:36:13.1480230Z At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-02-24T16:36:13.1480500Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T16:36:13.1480510Z 
2025-02-24T16:36:13.1480580Z Series values are different (100.0 %)
2025-02-24T16:36:13.1480670Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:36:13.1481380Z [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-02-24T16:36:13.1482090Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:36:13.1482230Z At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-02-24T16:36:13.1482500Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T16:36:13.1482510Z 
2025-02-24T16:36:13.1482580Z Series values are different (90.0 %)
2025-02-24T16:36:13.1482670Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:36:13.1483410Z [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-02-24T16:36:13.1484170Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:36:13.1484380Z At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T16:36:13.1484670Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T16:36:13.1484670Z 
2025-02-24T16:36:13.1484740Z Series values are different (95.0 %)
2025-02-24T16:36:13.1484830Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:36:13.1485700Z [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-02-24T16:36:13.1486500Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:36:13.1486640Z At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T16:36:13.1486910Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T16:36:13.1486910Z 
2025-02-24T16:36:13.1486980Z Series values are different (5.1125 %)
2025-02-24T16:36:13.1487270Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1491070Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:36:13.1494940Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:36:13.1495350Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:36:13.1495650Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T16:36:13.1495650Z 
2025-02-24T16:36:13.1495720Z Series values are different (1.3025 %)
2025-02-24T16:36:13.1496000Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:36:13.1500650Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:36:13.1505650Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:36:13.1505850Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:36:13.1506140Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T16:36:13.1506270Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1506280Z 
2025-02-24T16:36:13.1506350Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:36:13.1506420Z Max absolute difference: 4.30543741e+37
2025-02-24T16:36:13.1506490Z Max relative difference: 1.
2025-02-24T16:36:13.1506620Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1506670Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1506800Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1506860Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1507220Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T16:36:13.1507300Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1507300Z 
2025-02-24T16:36:13.1507370Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:36:13.1507450Z Max absolute difference: 4.15247374e+37
2025-02-24T16:36:13.1507510Z Max relative difference: 1.
2025-02-24T16:36:13.1507630Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1507690Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1507800Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1507870Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1508110Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T16:36:13.1508200Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1508200Z 
2025-02-24T16:36:13.1508280Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:36:13.1508350Z Max absolute difference: 4.30543741e+37
2025-02-24T16:36:13.1508420Z Max relative difference: 1.
2025-02-24T16:36:13.1508540Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1508610Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1508720Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1508780Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1509010Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T16:36:13.1509090Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1509090Z 
2025-02-24T16:36:13.1509180Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:36:13.1509250Z Max absolute difference: 5.32418652e-19
2025-02-24T16:36:13.1509320Z Max relative difference: 12.23359055
2025-02-24T16:36:13.1509380Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1509440Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1509500Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1509550Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1509620Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1509670Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1509890Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T16:36:13.1509960Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1509970Z 
2025-02-24T16:36:13.1510030Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:36:13.1510100Z Max absolute difference: 1.38672909e+39
2025-02-24T16:36:13.1510170Z Max relative difference: 5.25284451
2025-02-24T16:36:13.1510280Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1510340Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1510460Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1510530Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1510760Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T16:36:13.1510830Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1510930Z 
2025-02-24T16:36:13.1511010Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:36:13.1511080Z Max absolute difference: 5.26760031e+38
2025-02-24T16:36:13.1511150Z Max relative difference: 35562.41947434
2025-02-24T16:36:13.1511270Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1511330Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1511440Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1511500Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1511860Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T16:36:13.1512020Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1512030Z 
2025-02-24T16:36:13.1512110Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:36:13.1512170Z Max absolute difference: 7.03072887e-19
2025-02-24T16:36:13.1512240Z Max relative difference: 7.72237896
2025-02-24T16:36:13.1512310Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1512360Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1512420Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1512480Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1512530Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1512590Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1512920Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T16:36:13.1512990Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1513000Z 
2025-02-24T16:36:13.1513070Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:36:13.1513140Z Max absolute difference: 2.09719426e+39
2025-02-24T16:36:13.1513210Z Max relative difference: 4.0036592
2025-02-24T16:36:13.1513330Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1513390Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1513510Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1513570Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1513920Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T16:36:13.1514000Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1514000Z 
2025-02-24T16:36:13.1514070Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:36:13.1514140Z Max absolute difference: 5.00661745e+37
2025-02-24T16:36:13.1514210Z Max relative difference: 17.51202125
2025-02-24T16:36:13.1514330Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:36:13.1514400Z        2.279436e+31, 2.243943e+31])
2025-02-24T16:36:13.1514510Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:36:13.1514570Z        2.292907e+31, 2.257206e+31])
2025-02-24T16:36:13.1514920Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T16:36:13.1515000Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1515000Z 
2025-02-24T16:36:13.1515070Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:36:13.1515140Z Max absolute difference: 4.67863561e-19
2025-02-24T16:36:13.1515210Z Max relative difference: 3.25828651
2025-02-24T16:36:13.1515270Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1515330Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1515390Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1515450Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1515510Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1515560Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1515900Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T16:36:13.1516040Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1516040Z 
2025-02-24T16:36:13.1516110Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:36:13.1516180Z Max absolute difference: 8.5486318e+38
2025-02-24T16:36:13.1516250Z Max relative difference: 1.86186015
2025-02-24T16:36:13.1516370Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1516430Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1516550Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1516600Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1517010Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T16:36:13.1517090Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1517090Z 
2025-02-24T16:36:13.1517170Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:36:13.1517230Z Max absolute difference: 2.90101642e+37
2025-02-24T16:36:13.1517300Z Max relative difference: 0.98973757
2025-02-24T16:36:13.1517420Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:36:13.1517480Z        1.330497e+31, 1.294462e+31])
2025-02-24T16:36:13.1517600Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:36:13.1517660Z        1.375141e+31, 1.337928e+31])
2025-02-24T16:36:13.1518000Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T16:36:13.1518070Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1518080Z 
2025-02-24T16:36:13.1518150Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:36:13.1518220Z Max absolute difference: 4.67863561e-19
2025-02-24T16:36:13.1518290Z Max relative difference: 3.25828651
2025-02-24T16:36:13.1518350Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1518410Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1518470Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1518530Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1518590Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1518640Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1518980Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T16:36:13.1519040Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1519050Z 
2025-02-24T16:36:13.1519120Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:36:13.1519190Z Max absolute difference: 8.5486318e+38
2025-02-24T16:36:13.1519260Z Max relative difference: 1.86186015
2025-02-24T16:36:13.1519370Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1519430Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1519550Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1519600Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1519950Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T16:36:13.1520030Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1520030Z 
2025-02-24T16:36:13.1520100Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:36:13.1520170Z Max absolute difference: 2.99183385e+37
2025-02-24T16:36:13.1520230Z Max relative difference: 0.98992197
2025-02-24T16:36:13.1520340Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:36:13.1520400Z        1.260980e+31, 1.222587e+31])
2025-02-24T16:36:13.1520520Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:36:13.1520580Z        1.193005e+31, 1.164854e+31])
2025-02-24T16:36:13.1520920Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T16:36:13.1521060Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1521070Z 
2025-02-24T16:36:13.1521140Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:36:13.1521210Z Max absolute difference: 7.03072887e-19
2025-02-24T16:36:13.1521280Z Max relative difference: 7.72237896
2025-02-24T16:36:13.1521340Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1521400Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1521460Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1521520Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1521620Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:36:13.1521680Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:36:13.1522020Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T16:36:13.1522090Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1522100Z 
2025-02-24T16:36:13.1522170Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:36:13.1522230Z Max absolute difference: 2.09719426e+39
2025-02-24T16:36:13.1522300Z Max relative difference: 4.0036592
2025-02-24T16:36:13.1522420Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1522470Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1522590Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:36:13.1522650Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1523000Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T16:36:13.1523080Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1523080Z 
2025-02-24T16:36:13.1523150Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:36:13.1523230Z Max absolute difference: 5.0153284e+37
2025-02-24T16:36:13.1523290Z Max relative difference: 4.90769503
2025-02-24T16:36:13.1523410Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:36:13.1523460Z        2.088676e+31, 2.060278e+31])
2025-02-24T16:36:13.1523580Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:36:13.1523630Z        2.124305e+31, 2.101081e+31])
2025-02-24T16:36:13.1523910Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T16:36:13.1523990Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:36:13.1523990Z 
2025-02-24T16:36:13.1524050Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:36:13.1524130Z Max absolute difference: 2.25821059e+25
2025-02-24T16:36:13.1524190Z Max relative difference: 0.00054426
2025-02-24T16:36:13.1524300Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:36:13.1524390Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:36:13.1524490Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:36:13.1524600Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:36:13.1524690Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:36:13.1524790Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:36:13.1525090Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T16:36:13.1525170Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:36:13.1525170Z 
2025-02-24T16:36:13.1525240Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:36:13.1525310Z Max absolute difference: 1.93283629e+25
2025-02-24T16:36:13.1525380Z Max relative difference: 0.00029148
2025-02-24T16:36:13.1525480Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:36:13.1525570Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:36:13.1525730Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:36:13.1525840Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:36:13.1525930Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:36:13.1526020Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:36:13.1526300Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T16:36:13.1526350Z Arrays are not equal
2025-02-24T16:36:13.1526360Z 
2025-02-24T16:36:13.1526420Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:36:13.1526580Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:36:13.1526640Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:36:13.1526730Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:36:13.1526830Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:36:13.1526890Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:36:13.1526980Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:36:13.1527310Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T16:36:13.1527390Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:36:13.1527400Z 
2025-02-24T16:36:13.1527470Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:36:13.1527540Z Max absolute difference: 2.00640487e-05
2025-02-24T16:36:13.1527610Z Max relative difference: 2.06329455
2025-02-24T16:36:13.1527750Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:36:13.1527820Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:36:13.1527950Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:36:13.1528010Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:36:13.1528400Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T16:36:13.1528480Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1528480Z 
2025-02-24T16:36:13.1528550Z (shapes (508,), (515,) mismatch)
2025-02-24T16:36:13.1528650Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:36:13.1528740Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:36:13.1528840Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:36:13.1528940Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:36:13.1529040Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:36:13.1529140Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:36:13.1529510Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T16:36:13.1529590Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1529600Z 
2025-02-24T16:36:13.1529660Z (shapes (558,), (560,) mismatch)
2025-02-24T16:36:13.1529770Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:36:13.1529850Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:36:13.1529960Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:36:13.1530060Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:36:13.1530150Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:36:13.1530250Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:36:13.1530600Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T16:36:13.1530800Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1530810Z 
2025-02-24T16:36:13.1530870Z (shapes (147,), (136,) mismatch)
2025-02-24T16:36:13.1530980Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:36:13.1531070Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:36:13.1531170Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:36:13.1531270Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:36:13.1531360Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:36:13.1531460Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:36:13.1531910Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T16:36:13.1531990Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1531990Z 
2025-02-24T16:36:13.1532050Z (shapes (159,), (153,) mismatch)
2025-02-24T16:36:13.1532160Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:36:13.1532250Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:36:13.1532340Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:36:13.1532450Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:36:13.1532540Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:36:13.1532630Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:36:13.1532990Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T16:36:13.1533070Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1533070Z 
2025-02-24T16:36:13.1533130Z (shapes (508,), (515,) mismatch)
2025-02-24T16:36:13.1533230Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:36:13.1533330Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:36:13.1533430Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:36:13.1533530Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:36:13.1533620Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:36:13.1533710Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:36:13.1534070Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T16:36:13.1534150Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1534160Z 
2025-02-24T16:36:13.1534220Z (shapes (1466,), (1481,) mismatch)
2025-02-24T16:36:13.1534350Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:36:13.1534400Z        11152.962595, 11172.044815])
2025-02-24T16:36:13.1534520Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:36:13.1534580Z        11398.237865, 11111.204868])
2025-02-24T16:36:13.1534950Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T16:36:13.1535030Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1535030Z 
2025-02-24T16:36:13.1535090Z (shapes (147,), (136,) mismatch)
2025-02-24T16:36:13.1535200Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:36:13.1535400Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:36:13.1535510Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:36:13.1535620Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:36:13.1535710Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:36:13.1535810Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:36:13.1536300Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T16:36:13.1536380Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1536380Z 
2025-02-24T16:36:13.1536440Z (shapes (379,), (381,) mismatch)
2025-02-24T16:36:13.1536550Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:36:13.1536640Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:36:13.1536730Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:36:13.1536830Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:36:13.1536980Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:36:13.1537080Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:36:13.1537430Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T16:36:13.1537510Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.1537510Z 
2025-02-24T16:36:13.1537580Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:36:13.1537650Z Max absolute difference: 22.
2025-02-24T16:36:13.1537720Z Max relative difference: 0.8
2025-02-24T16:36:13.1537780Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:36:13.1537830Z        [1.19e+04, 1.67e+02],
2025-02-24T16:36:13.1537900Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:36:13.1537960Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:36:13.1538020Z        [1.19e+04, 1.89e+02],
2025-02-24T16:36:13.1538080Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:36:13.1538420Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T16:36:13.1538500Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.1538510Z 
2025-02-24T16:36:13.1538570Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:36:13.1538640Z Max absolute difference: 22.
2025-02-24T16:36:13.1538710Z Max relative difference: 0.8
2025-02-24T16:36:13.1538770Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:36:13.1538820Z        [1.19e+04, 1.67e+02],
2025-02-24T16:36:13.1538880Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:36:13.1538940Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:36:13.1538990Z        [1.19e+04, 1.89e+02],
2025-02-24T16:36:13.1539050Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:36:13.1539390Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T16:36:13.1539460Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.1539470Z 
2025-02-24T16:36:13.1539540Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.1539600Z Max absolute difference: 34
2025-02-24T16:36:13.1539660Z Max relative difference: 0.71428571
2025-02-24T16:36:13.1539780Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:36:13.1539840Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.1539960Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:36:13.1540020Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.1540360Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T16:36:13.1540430Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.1540430Z 
2025-02-24T16:36:13.1540500Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:36:13.1540570Z Max absolute difference: 34.
2025-02-24T16:36:13.1540630Z Max relative difference: 0.65
2025-02-24T16:36:13.1540690Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:36:13.1540750Z        [1.19e+04, 2.72e+02],
2025-02-24T16:36:13.1540800Z        [1.19e+04, 1.10e+02],...
2025-02-24T16:36:13.1540860Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:36:13.1540980Z        [1.19e+04, 3.06e+02],
2025-02-24T16:36:13.1541040Z        [1.19e+04, 1.18e+02],...
2025-02-24T16:36:13.1541380Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:36:13.1541460Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.1541460Z 
2025-02-24T16:36:13.1541520Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.1541590Z Max absolute difference: 22
2025-02-24T16:36:13.1541660Z Max relative difference: 0.8
2025-02-24T16:36:13.1541770Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:36:13.1541830Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:36:13.1541990Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:36:13.1542060Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:36:13.1542390Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:36:13.1542470Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.1542480Z 
2025-02-24T16:36:13.1542540Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.1542600Z Max absolute difference: 22
2025-02-24T16:36:13.1542670Z Max relative difference: 0.8
2025-02-24T16:36:13.1542770Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:36:13.1542840Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:36:13.1542940Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:36:13.1546170Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:36:13.1546530Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:36:13.1546610Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.1546610Z 
2025-02-24T16:36:13.1546690Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.1546750Z Max absolute difference: 34
2025-02-24T16:36:13.1546820Z Max relative difference: 0.71428571
2025-02-24T16:36:13.1546930Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:36:13.1546990Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.1547110Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:36:13.1547170Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.1547520Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:36:13.1547600Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:36:13.1547610Z 
2025-02-24T16:36:13.1547670Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:36:13.1547750Z Max absolute difference: 34
2025-02-24T16:36:13.1547810Z Max relative difference: 0.65
2025-02-24T16:36:13.1547930Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:36:13.1547990Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.1548100Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:36:13.1548160Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:36:13.1548540Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T16:36:13.1548620Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1548630Z 
2025-02-24T16:36:13.1548690Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1548760Z Max absolute difference: 4.3299331e-05
2025-02-24T16:36:13.1548830Z Max relative difference: 4.76021355
2025-02-24T16:36:13.1548950Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1549010Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1549120Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1549400Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1549790Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T16:36:13.1549870Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1549870Z 
2025-02-24T16:36:13.1549940Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1550010Z Max absolute difference: 4.3299331e-05
2025-02-24T16:36:13.1550080Z Max relative difference: 4.76021355
2025-02-24T16:36:13.1550200Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1550250Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1550430Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1550490Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1550870Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T16:36:13.1550940Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1550950Z 
2025-02-24T16:36:13.1551030Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1551100Z Max absolute difference: 4.3299331e-05
2025-02-24T16:36:13.1551160Z Max relative difference: 4.76021355
2025-02-24T16:36:13.1551280Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1551330Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1551460Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1551510Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1551890Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T16:36:13.1551970Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1551970Z 
2025-02-24T16:36:13.1552040Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1552110Z Max absolute difference: 4.3299331e-05
2025-02-24T16:36:13.1552170Z Max relative difference: 4.76021355
2025-02-24T16:36:13.1552300Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1552350Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1552470Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1552520Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1552890Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T16:36:13.1552970Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1552970Z 
2025-02-24T16:36:13.1553050Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1553120Z Max absolute difference: 3.16368526e-05
2025-02-24T16:36:13.1553190Z Max relative difference: 178.93768705
2025-02-24T16:36:13.1553300Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1553370Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1553490Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1553550Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1553930Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T16:36:13.1554010Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1554010Z 
2025-02-24T16:36:13.1554090Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1554160Z Max absolute difference: 3.16368526e-05
2025-02-24T16:36:13.1554230Z Max relative difference: 178.93768705
2025-02-24T16:36:13.1554350Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1554410Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1554520Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1554690Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1555070Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T16:36:13.1555150Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1555160Z 
2025-02-24T16:36:13.1555220Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1555290Z Max absolute difference: 3.16368526e-05
2025-02-24T16:36:13.1555360Z Max relative difference: 178.93768705
2025-02-24T16:36:13.1555480Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1555530Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1555730Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1555790Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1556170Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T16:36:13.1556250Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1556260Z 
2025-02-24T16:36:13.1556320Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1556390Z Max absolute difference: 3.16368526e-05
2025-02-24T16:36:13.1556470Z Max relative difference: 178.93768705
2025-02-24T16:36:13.1556580Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1556650Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1556770Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:36:13.1556830Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1557210Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T16:36:13.1557280Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1557290Z 
2025-02-24T16:36:13.1557350Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1557430Z Max absolute difference: 5.1807441e+47
2025-02-24T16:36:13.1557490Z Max relative difference: 4.76021355
2025-02-24T16:36:13.1557610Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1557670Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1557790Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1557840Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1558210Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T16:36:13.1558290Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1558290Z 
2025-02-24T16:36:13.1558360Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1558430Z Max absolute difference: 5.1807441e+47
2025-02-24T16:36:13.1558500Z Max relative difference: 4.76021355
2025-02-24T16:36:13.1558620Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1558680Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1558800Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1558860Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1559240Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T16:36:13.1559320Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1559320Z 
2025-02-24T16:36:13.1559390Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1559460Z Max absolute difference: 5.1807441e+47
2025-02-24T16:36:13.1559530Z Max relative difference: 4.76021355
2025-02-24T16:36:13.1559650Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1559700Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1559820Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1559940Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1560310Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T16:36:13.1560390Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1560390Z 
2025-02-24T16:36:13.1560460Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:36:13.1560530Z Max absolute difference: 5.1807441e+47
2025-02-24T16:36:13.1560600Z Max relative difference: 4.76021355
2025-02-24T16:36:13.1560710Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1560780Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1560940Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1561010Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1561400Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T16:36:13.1561480Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1561490Z 
2025-02-24T16:36:13.1561560Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1561630Z Max absolute difference: 3.78533417e+47
2025-02-24T16:36:13.1561710Z Max relative difference: 178.93768705
2025-02-24T16:36:13.1561820Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1561880Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1562000Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1562060Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1562430Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T16:36:13.1562510Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1562510Z 
2025-02-24T16:36:13.1562580Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1562650Z Max absolute difference: 3.78533417e+47
2025-02-24T16:36:13.1562710Z Max relative difference: 178.93768705
2025-02-24T16:36:13.1562830Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1562880Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1563000Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1563050Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1563420Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T16:36:13.1563500Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1563500Z 
2025-02-24T16:36:13.1563570Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1563640Z Max absolute difference: 3.78533417e+47
2025-02-24T16:36:13.1563710Z Max relative difference: 178.93768705
2025-02-24T16:36:13.1563830Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1563890Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1564010Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1564070Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1564450Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T16:36:13.1564520Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1564520Z 
2025-02-24T16:36:13.1564590Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:36:13.1564660Z Max absolute difference: 3.78533417e+47
2025-02-24T16:36:13.1564730Z Max relative difference: 178.93768705
2025-02-24T16:36:13.1564850Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1564910Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1565020Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:36:13.1565140Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1565490Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:36:13.1565570Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1565570Z 
2025-02-24T16:36:13.1565630Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1565700Z Max absolute difference: 2.08771842e-13
2025-02-24T16:36:13.1565760Z Max relative difference: 3.01858991
2025-02-24T16:36:13.1565880Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1565940Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1566110Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1566170Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1566510Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:36:13.1566590Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1566590Z 
2025-02-24T16:36:13.1566660Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1566720Z Max absolute difference: 2.08771842e-13
2025-02-24T16:36:13.1566790Z Max relative difference: 3.01858991
2025-02-24T16:36:13.1566910Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1566960Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1567080Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1567130Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1567470Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T16:36:13.1567550Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1567550Z 
2025-02-24T16:36:13.1567610Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1567680Z Max absolute difference: 2.08771842e-13
2025-02-24T16:36:13.1567750Z Max relative difference: 3.01858991
2025-02-24T16:36:13.1567860Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1567920Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1568030Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1568090Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1568430Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T16:36:13.1568500Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1568510Z 
2025-02-24T16:36:13.1568580Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1568640Z Max absolute difference: 2.08771842e-13
2025-02-24T16:36:13.1568710Z Max relative difference: 3.01858991
2025-02-24T16:36:13.1568820Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1568880Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1569000Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1569050Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1569390Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:36:13.1569460Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1569470Z 
2025-02-24T16:36:13.1569540Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1569610Z Max absolute difference: 3.02728422e-13
2025-02-24T16:36:13.1569680Z Max relative difference: 15766.1580412
2025-02-24T16:36:13.1569800Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1569850Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1569970Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1570080Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1570420Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:36:13.1570490Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1570490Z 
2025-02-24T16:36:13.1570560Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1570630Z Max absolute difference: 3.02728422e-13
2025-02-24T16:36:13.1570690Z Max relative difference: 15766.1580412
2025-02-24T16:36:13.1570810Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1570870Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1571020Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1571080Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1571420Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T16:36:13.1571490Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1571500Z 
2025-02-24T16:36:13.1571560Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1571630Z Max absolute difference: 3.02728422e-13
2025-02-24T16:36:13.1571700Z Max relative difference: 15766.1580412
2025-02-24T16:36:13.1571810Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1571870Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1571980Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1572040Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1572370Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T16:36:13.1572450Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1572450Z 
2025-02-24T16:36:13.1572510Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1572580Z Max absolute difference: 3.02728422e-13
2025-02-24T16:36:13.1572650Z Max relative difference: 15766.1580412
2025-02-24T16:36:13.1572770Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1572820Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1572930Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:36:13.1572990Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1573320Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T16:36:13.1573400Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1573400Z 
2025-02-24T16:36:13.1573470Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1573580Z Max absolute difference: 2.49794504e+39
2025-02-24T16:36:13.1573640Z Max relative difference: 3.01858991
2025-02-24T16:36:13.1573760Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1573820Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1573930Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1573990Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1574320Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T16:36:13.1574400Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1574400Z 
2025-02-24T16:36:13.1574470Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1574540Z Max absolute difference: 2.49794504e+39
2025-02-24T16:36:13.1574600Z Max relative difference: 3.01858991
2025-02-24T16:36:13.1574720Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1574770Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1574890Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1575090Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1575570Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T16:36:13.1575640Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1575650Z 
2025-02-24T16:36:13.1575710Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1575780Z Max absolute difference: 2.49794504e+39
2025-02-24T16:36:13.1575850Z Max relative difference: 3.01858991
2025-02-24T16:36:13.1575960Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1576020Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1576130Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1576300Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1576640Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T16:36:13.1576720Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1576720Z 
2025-02-24T16:36:13.1576790Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:36:13.1576850Z Max absolute difference: 2.49794504e+39
2025-02-24T16:36:13.1576920Z Max relative difference: 3.01858991
2025-02-24T16:36:13.1577040Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1577090Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1577210Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1577260Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1577600Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T16:36:13.1577680Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1577690Z 
2025-02-24T16:36:13.1577750Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1577830Z Max absolute difference: 3.62213099e+39
2025-02-24T16:36:13.1577900Z Max relative difference: 15766.15804934
2025-02-24T16:36:13.1578010Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1578070Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1578190Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1578250Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1578590Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T16:36:13.1578660Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1578660Z 
2025-02-24T16:36:13.1578730Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1578800Z Max absolute difference: 3.62213099e+39
2025-02-24T16:36:13.1578870Z Max relative difference: 15766.15804934
2025-02-24T16:36:13.1578980Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1579040Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1579150Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1579210Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1579550Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T16:36:13.1579620Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1579630Z 
2025-02-24T16:36:13.1579700Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1579760Z Max absolute difference: 3.62213099e+39
2025-02-24T16:36:13.1579830Z Max relative difference: 15766.15804934
2025-02-24T16:36:13.1579950Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1580010Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1580120Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1580180Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1580570Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T16:36:13.1580650Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:36:13.1580650Z 
2025-02-24T16:36:13.1580720Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:36:13.1580790Z Max absolute difference: 3.62213099e+39
2025-02-24T16:36:13.1580850Z Max relative difference: 15766.15804934
2025-02-24T16:36:13.1580970Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1581030Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1581140Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:36:13.1581240Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:36:13.1581450Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 861.06s (0:14:21) =
2025-02-24T16:36:15.2267160Z ##[error]Process completed with exit code 1.
