2025-01-07T17:43:23.4008061Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-07T17:43:23.4010377Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-07T17:43:23.4046700Z shell: /usr/bin/bash -l {0}
2025-01-07T17:43:23.4046958Z env:
2025-01-07T17:43:23.4047133Z   CACHE_NUMBER: 0
2025-01-07T17:43:23.4047771Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:23.4048472Z   CODECOV_TOKEN: 
2025-01-07T17:43:23.4048693Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-07T17:43:23.4049004Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-07T17:43:23.4049352Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:23.4049702Z ##[endgroup]
2025-01-07T17:43:31.7618562Z ============================= test session starts ==============================
2025-01-07T17:43:31.7619432Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-07T17:43:31.7620161Z rootdir: /home/runner/work/tardis/tardis
2025-01-07T17:43:31.7620725Z configfile: pyproject.toml
2025-01-07T17:43:31.7621427Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-07T17:43:31.7622530Z collected 1796 items / 2 deselected / 1794 selected
2025-01-07T17:43:31.7622854Z 
2025-01-07T17:43:36.5627022Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-07T17:43:39.2926382Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-07T17:43:40.9757127Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-07T17:43:42.6825334Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-07T17:43:42.6930061Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-07T17:43:43.9352814Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-07T17:43:44.2673618Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-07T17:43:44.2689290Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-07T17:43:47.9649758Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-07T17:43:47.9774207Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-07T17:43:48.0040635Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-07T17:44:23.8004107Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-07T17:44:23.8151388Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-07T17:44:23.8256792Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-07T17:44:23.8556353Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-07T17:44:23.8762562Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-07T17:44:24.1766571Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-07T17:44:24.4711059Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-07T17:44:24.5049398Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-07T17:44:24.6944036Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-07T17:44:24.7012715Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-07T17:45:20.7154985Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-07T17:45:21.6694098Z ............                                                             [ 10%]
2025-01-07T17:45:24.6503904Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-07T17:45:24.6971449Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-07T17:45:25.9421095Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-07T17:45:27.2402478Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-07T17:45:28.8021387Z tardis/opacities/tests/test_tau_sobolev.py ..                            [ 12%]
2025-01-07T17:45:31.7523748Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-07T17:46:17.2765327Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-07T17:46:28.2131778Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-07T17:46:29.8346663Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-07T17:46:32.7106047Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-07T17:46:34.4097558Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-07T17:46:37.2604543Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-07T17:46:40.1175920Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-07T17:46:40.8492220Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-07T17:46:43.9927744Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-07T17:46:46.8358846Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-07T17:46:49.8970377Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-07T17:46:51.6835326Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-07T17:46:54.8373380Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-07T17:46:57.9705831Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-07T17:46:58.3003790Z ...................s.....s....ssss.......                                [ 60%]
2025-01-07T17:46:58.4106834Z tardis/plasma/tests/test_hdf_plasma.py ................................. [ 62%]
2025-01-07T17:46:58.4227081Z ......                                                                   [ 62%]
2025-01-07T17:46:58.5556967Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-07T17:49:14.0386956Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-07T17:49:14.0412597Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-07T17:49:36.7999434Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-07T17:49:49.8551030Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-07T17:49:50.5861875Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-07T17:49:59.0893522Z tardis/simulation/tests/test_simulation.py .............                 [ 65%]
2025-01-07T17:49:59.1091828Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-07T17:49:59.5698437Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-07T17:49:59.5772626Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-07T17:50:01.6739465Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-07T17:50:01.6932708Z ..........                                                               [ 69%]
2025-01-07T17:50:01.8638634Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-07T17:50:01.8965658Z .........                                                                [ 72%]
2025-01-07T17:50:20.3609064Z tardis/spectrum/tests/test_spectrum_solver.py ....                       [ 72%]
2025-01-07T17:51:21.3979558Z tardis/tests/test_tardis_full.py ....                                    [ 72%]
2025-01-07T17:52:44.7115001Z tardis/tests/test_tardis_full_formal_integral.py ................        [ 73%]
2025-01-07T17:52:44.7861072Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-07T17:52:47.8755132Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-07T17:52:54.9134060Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-07T17:52:55.1265716Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-07T17:52:55.1439234Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-07T17:52:55.1854984Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-07T17:53:03.9229453Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py x..       [ 81%]
2025-01-07T17:53:03.9298769Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-07T17:53:10.0445269Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-07T17:53:10.5199473Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-07T17:53:11.5298460Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-07T17:53:11.6646593Z XX.........                                                              [ 84%]
2025-01-07T17:53:11.6927101Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-07T17:53:11.9941064Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-07T17:53:12.4122890Z .....                                                                    [ 85%]
2025-01-07T17:53:46.6443072Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ......         [ 85%]
2025-01-07T17:53:46.6727643Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-07T17:53:46.6759369Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-07T17:53:49.0810476Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-07T17:53:49.0981293Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-07T17:53:52.4949809Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py . [ 86%]
2025-01-07T17:53:52.4951583Z                                                                          [ 86%]
2025-01-07T17:53:53.2023024Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-07T17:53:54.5517849Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-07T17:53:56.7448950Z ......                                                                   [ 88%]
2025-01-07T17:54:03.0308830Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-07T17:54:05.4449381Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-07T17:54:08.3060106Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-07T17:54:15.3500901Z ....                                                                     [ 92%]
2025-01-07T17:54:21.7566053Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-07T17:54:25.0056862Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-07T17:54:25.4323070Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-07T17:54:25.5042698Z ....                                                                     [ 96%]
2025-01-07T17:54:26.5565451Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-07T17:54:27.1826242Z ..................                                                       [ 98%]
2025-01-07T17:55:30.9663607Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-07T17:55:37.3117475Z ......                                                                   [100%]
2025-01-07T17:55:37.3118010Z 
2025-01-07T17:55:37.3118190Z ==================================== ERRORS ====================================
2025-01-07T17:55:37.3119018Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-07T17:55:37.3119467Z 
2025-01-07T17:55:37.3119822Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3120523Z 
2025-01-07T17:55:37.3120723Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3121281Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3121779Z         """
2025-01-07T17:55:37.3122552Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3123205Z     
2025-01-07T17:55:37.3123542Z         Parameters:
2025-01-07T17:55:37.3123938Z         -----------
2025-01-07T17:55:37.3124420Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3124870Z     
2025-01-07T17:55:37.3125076Z         Returns:
2025-01-07T17:55:37.3125350Z         --------
2025-01-07T17:55:37.3125695Z         An LIVPlotter instance.
2025-01-07T17:55:37.3126056Z         """
2025-01-07T17:55:37.3126434Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3126806Z 
2025-01-07T17:55:37.3127047Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3127610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3128226Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3128872Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3129332Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3129907Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3130629Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3131242Z     return cls(
2025-01-07T17:55:37.3131599Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3132130Z 
2025-01-07T17:55:37.3132617Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3133441Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3133857Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3134785Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3135614Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3136109Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3136728Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3137365Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3137942Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3138570Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3139113Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3139470Z 
2025-01-07T17:55:37.3139610Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3140124Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3140769Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3141471Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3142270Z        0.00025518])
2025-01-07T17:55:37.3142739Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3143504Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3144461Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3145047Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3145763Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3146463Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3147218Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3148118Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3148789Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3149269Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3149733Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3150208Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3150853Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3151834Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3152812Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3153609Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3154476Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3155328Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3156091Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3156932Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3157626Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3158225Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3158602Z 
2025-01-07T17:55:37.3158830Z     def __init__(
2025-01-07T17:55:37.3159280Z         self,
2025-01-07T17:55:37.3159795Z         last_interaction_type,
2025-01-07T17:55:37.3160300Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3160957Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3161496Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3162227Z         last_interaction_in_r,
2025-01-07T17:55:37.3162745Z         lines_df,
2025-01-07T17:55:37.3163175Z         packet_nus,
2025-01-07T17:55:37.3163901Z         packet_energies,
2025-01-07T17:55:37.3164376Z         r_inner,
2025-01-07T17:55:37.3164959Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3165648Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3166482Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3167044Z         spectrum_wavelength,
2025-01-07T17:55:37.3167502Z         t_inner,
2025-01-07T17:55:37.3168040Z         time_of_simulation,
2025-01-07T17:55:37.3168573Z         time_explosion,
2025-01-07T17:55:37.3169068Z         v_inner,
2025-01-07T17:55:37.3169461Z         v_outer,
2025-01-07T17:55:37.3169961Z         velocity
2025-01-07T17:55:37.3170396Z     ):
2025-01-07T17:55:37.3170823Z         """
2025-01-07T17:55:37.3171550Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3172514Z     
2025-01-07T17:55:37.3173030Z         Parameters
2025-01-07T17:55:37.3173471Z         ----------
2025-01-07T17:55:37.3174002Z         last_interaction_type : np.array
2025-01-07T17:55:37.3174673Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3175481Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3176135Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3176855Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3177548Z             absorption (interaction in)
2025-01-07T17:55:37.3178348Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3179092Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3179783Z             emission (interaction out)
2025-01-07T17:55:37.3180323Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3181101Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3181786Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3182687Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3183382Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3184116Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3184885Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3185625Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3186298Z             unit of Hz
2025-01-07T17:55:37.3186938Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3187601Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3188326Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3188899Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3189533Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3190282Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3190940Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3191693Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3192505Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3193282Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3193922Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3194549Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3195234Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3195924Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3196530Z         """
2025-01-07T17:55:37.3197229Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3198004Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3198578Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3199182Z             {
2025-01-07T17:55:37.3199632Z                 "nus": packet_nus,
2025-01-07T17:55:37.3200298Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3201115Z                 "energies": packet_energies,
2025-01-07T17:55:37.3201822Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3202737Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3203557Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3204353Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3205099Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3205672Z             }
2025-01-07T17:55:37.3206123Z         )
2025-01-07T17:55:37.3206563Z     
2025-01-07T17:55:37.3206969Z         # Save other properties
2025-01-07T17:55:37.3207549Z         self.lines_df = lines_df
2025-01-07T17:55:37.3208056Z         self.r_inner = r_inner
2025-01-07T17:55:37.3208633Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3209579Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3210583Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3211285Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3212107Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3212696Z         )
2025-01-07T17:55:37.3213119Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3213740Z         self.t_inner = t_inner
2025-01-07T17:55:37.3214091Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3214486Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3214900Z         self.v_inner = v_inner
2025-01-07T17:55:37.3215261Z         self.v_outer = v_outer
2025-01-07T17:55:37.3215782Z     
2025-01-07T17:55:37.3216241Z         # First check if both options are provided
2025-01-07T17:55:37.3217095Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3217813Z >           raise ValueError(
2025-01-07T17:55:37.3218456Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3219290Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3219961Z             )
2025-01-07T17:55:37.3220947Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3221783Z 
2025-01-07T17:55:37.3222433Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3223305Z ---------------------------- Captured stdout setup -----------------------------
2025-01-07T17:55:37.3224428Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-07T17:55:37.3225941Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-07T17:55:37.3227278Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3228166Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-07T17:55:37.3228975Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3229659Z 	
2025-01-07T17:55:37.3230212Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:37.3230974Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3231551Z 	
2025-01-07T17:55:37.3232203Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-07T17:55:37.3232810Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-07T17:55:37.3233428Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3234152Z  ([1mbase.py[0m:657)
2025-01-07T17:55:37.3234695Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3235153Z 	
2025-01-07T17:55:37.3235542Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-07T17:55:37.3236132Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3236587Z 	
2025-01-07T17:55:37.3237095Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-07T17:55:37.3237548Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-07T17:55:37.3237961Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-07T17:55:37.3238373Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-07T17:55:37.3238796Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-07T17:55:37.3239261Z  ([1mbase.py[0m:650)
2025-01-07T17:55:37.3239753Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3240212Z 	
2025-01-07T17:55:37.3240487Z 	Current t_inner = 9974.969 K
2025-01-07T17:55:37.3240920Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-07T17:55:37.3241433Z  ([1mbase.py[0m:652)
2025-01-07T17:55:37.3241911Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3242663Z 	
2025-01-07T17:55:37.3243070Z 	Starting iteration 2 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:37.3243667Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3244129Z 	
2025-01-07T17:55:37.3244418Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-07T17:55:37.3244857Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-07T17:55:37.3245292Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3245756Z  ([1mbase.py[0m:657)
2025-01-07T17:55:37.3246228Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3246680Z 	
2025-01-07T17:55:37.3247068Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-07T17:55:37.3247867Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3248321Z 	
2025-01-07T17:55:37.3248631Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-07T17:55:37.3249080Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-07T17:55:37.3249496Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-07T17:55:37.3249915Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-07T17:55:37.3250327Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-07T17:55:37.3250778Z  ([1mbase.py[0m:650)
2025-01-07T17:55:37.3251266Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3251715Z 	
2025-01-07T17:55:37.3252161Z 	Current t_inner = 10712.281 K
2025-01-07T17:55:37.3252601Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-07T17:55:37.3253122Z  ([1mbase.py[0m:652)
2025-01-07T17:55:37.3253599Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3254060Z 	
2025-01-07T17:55:37.3254365Z 	Simulation finished in 2 iterations 
2025-01-07T17:55:37.3254780Z 	Simulation took 2.76 s
2025-01-07T17:55:37.3255168Z  ([1mbase.py[0m:542)
2025-01-07T17:55:37.3255658Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3256115Z 	
2025-01-07T17:55:37.3256513Z 	Starting iteration 3 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:37.3257111Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3257564Z 	
2025-01-07T17:55:37.3257853Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-07T17:55:37.3258288Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-07T17:55:37.3258729Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3259189Z  ([1mbase.py[0m:657)
2025-01-07T17:55:37.3259642Z ---------------------------- Captured stderr setup -----------------------------
2025-01-07T17:55:37.3260066Z 
2025-01-07T17:55:37.3260314Z Iterations:                                                                                46/? [08:42<00:00,  7.36s/it]
2025-01-07T17:55:37.3260733Z 
2025-01-07T17:55:37.3261162Z Packets:                                                                                   103999/? [00:07<00:00, 110291.24it/s]    [A
2025-01-07T17:55:37.3261568Z 
2025-01-07T17:55:37.3262180Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-07T17:55:37.3262819Z Iterations:                                                                                47/? [08:43<00:00,  5.64s/it]
2025-01-07T17:55:37.3263227Z 
2025-01-07T17:55:37.3264287Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 100123.03it/s][A
2025-01-07T17:55:37.3264792Z 
2025-01-07T17:55:37.3265216Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]               [A
2025-01-07T17:55:37.3265859Z Iterations:                                                                                48/? [08:45<00:00,  4.30s/it]
2025-01-07T17:55:37.3266277Z 
2025-01-07T17:55:37.3266863Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 68270.00it/s][A
2025-01-07T17:55:37.3267604Z ------------------------------ Captured log setup ------------------------------
2025-01-07T17:55:37.3268964Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-07T17:55:37.3270412Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-07T17:55:37.3271126Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:37.3271586Z 	Starting iteration 1 of 3
2025-01-07T17:55:37.3272135Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:37.3272607Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-07T17:55:37.3273084Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-07T17:55:37.3273745Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3274041Z 
2025-01-07T17:55:37.3274220Z INFO     tardis.simulation.base:base.py:649 
2025-01-07T17:55:37.3274666Z 	Plasma stratification:
2025-01-07T17:55:37.3275053Z INFO     tardis.simulation.base:base.py:650 
2025-01-07T17:55:37.3275543Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-07T17:55:37.3275995Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-07T17:55:37.3276407Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-07T17:55:37.3276926Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-07T17:55:37.3277356Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-07T17:55:37.3277635Z 
2025-01-07T17:55:37.3277809Z INFO     tardis.simulation.base:base.py:652 
2025-01-07T17:55:37.3278258Z 	Current t_inner = 9974.969 K
2025-01-07T17:55:37.3278692Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-07T17:55:37.3279042Z 
2025-01-07T17:55:37.3279214Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:37.3279669Z 	Starting iteration 2 of 3
2025-01-07T17:55:37.3280067Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:37.3280527Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-07T17:55:37.3280966Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-07T17:55:37.3281411Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3281708Z 
2025-01-07T17:55:37.3281880Z INFO     tardis.simulation.base:base.py:649 
2025-01-07T17:55:37.3282470Z 	Plasma stratification:
2025-01-07T17:55:37.3282865Z INFO     tardis.simulation.base:base.py:650 
2025-01-07T17:55:37.3283360Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-07T17:55:37.3283814Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-07T17:55:37.3284239Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-07T17:55:37.3284657Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-07T17:55:37.3285072Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-07T17:55:37.3285364Z 
2025-01-07T17:55:37.3285546Z INFO     tardis.simulation.base:base.py:652 
2025-01-07T17:55:37.3285998Z 	Current t_inner = 10712.281 K
2025-01-07T17:55:37.3286430Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-07T17:55:37.3286770Z 
2025-01-07T17:55:37.3286948Z INFO     tardis.simulation.base:base.py:542 
2025-01-07T17:55:37.3287412Z 	Simulation finished in 2 iterations 
2025-01-07T17:55:37.3287827Z 	Simulation took 2.76 s
2025-01-07T17:55:37.3288039Z 
2025-01-07T17:55:37.3288215Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:37.3288667Z 	Starting iteration 3 of 3
2025-01-07T17:55:37.3289243Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:37.3289707Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-07T17:55:37.3290150Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-07T17:55:37.3290589Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3291212Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-07T17:55:37.3291720Z 
2025-01-07T17:55:37.3292467Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3293022Z 
2025-01-07T17:55:37.3293170Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3293593Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3293988Z         """
2025-01-07T17:55:37.3294395Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3294911Z     
2025-01-07T17:55:37.3295182Z         Parameters:
2025-01-07T17:55:37.3295490Z         -----------
2025-01-07T17:55:37.3295865Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3296324Z     
2025-01-07T17:55:37.3296584Z         Returns:
2025-01-07T17:55:37.3296883Z         --------
2025-01-07T17:55:37.3297194Z         An LIVPlotter instance.
2025-01-07T17:55:37.3297552Z         """
2025-01-07T17:55:37.3297929Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3298303Z 
2025-01-07T17:55:37.3298542Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3299374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3299989Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3300655Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3301421Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3302323Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3303042Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3303678Z     return cls(
2025-01-07T17:55:37.3304042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3304391Z 
2025-01-07T17:55:37.3304880Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3305766Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3306461Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3307219Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3308022Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3308694Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3309316Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3309954Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3310543Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3311168Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3311701Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3312183Z 
2025-01-07T17:55:37.3312312Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3312819Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3313438Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3314100Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3314716Z        0.00025518])
2025-01-07T17:55:37.3315165Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3315926Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3316815Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3317394Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3318111Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3318800Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3319533Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3320441Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3321685Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3322317Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3322773Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3323251Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3323800Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3324528Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3325190Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3325821Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3326530Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3327374Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3328016Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3328680Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3329240Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3329695Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3329929Z 
2025-01-07T17:55:37.3330062Z     def __init__(
2025-01-07T17:55:37.3330374Z         self,
2025-01-07T17:55:37.3330678Z         last_interaction_type,
2025-01-07T17:55:37.3331068Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3331487Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3331903Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3332449Z         last_interaction_in_r,
2025-01-07T17:55:37.3332808Z         lines_df,
2025-01-07T17:55:37.3333117Z         packet_nus,
2025-01-07T17:55:37.3333430Z         packet_energies,
2025-01-07T17:55:37.3333761Z         r_inner,
2025-01-07T17:55:37.3334079Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3334643Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3335268Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3335701Z         spectrum_wavelength,
2025-01-07T17:55:37.3336052Z         t_inner,
2025-01-07T17:55:37.3336355Z         time_of_simulation,
2025-01-07T17:55:37.3336708Z         time_explosion,
2025-01-07T17:55:37.3337036Z         v_inner,
2025-01-07T17:55:37.3337324Z         v_outer,
2025-01-07T17:55:37.3337609Z         velocity
2025-01-07T17:55:37.3337890Z     ):
2025-01-07T17:55:37.3338150Z         """
2025-01-07T17:55:37.3338705Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3339380Z     
2025-01-07T17:55:37.3339647Z         Parameters
2025-01-07T17:55:37.3339956Z         ----------
2025-01-07T17:55:37.3340286Z         last_interaction_type : np.array
2025-01-07T17:55:37.3340842Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3341445Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3342074Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3342628Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3343177Z             absorption (interaction in)
2025-01-07T17:55:37.3343628Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3344361Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3344902Z             emission (interaction out)
2025-01-07T17:55:37.3345340Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3345899Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3346460Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3347011Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3347555Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3348070Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3348655Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3349210Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3349762Z             unit of Hz
2025-01-07T17:55:37.3350121Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3350639Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3351147Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3351590Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3352237Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3352786Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3353324Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3354025Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3354546Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3355076Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3355601Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3356064Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3356573Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3357056Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3357507Z         """
2025-01-07T17:55:37.3357960Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3358581Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3359050Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3359448Z             {
2025-01-07T17:55:37.3359747Z                 "nus": packet_nus,
2025-01-07T17:55:37.3360206Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3360713Z                 "energies": packet_energies,
2025-01-07T17:55:37.3361204Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3361803Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3362591Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3363233Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3363823Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3364281Z             }
2025-01-07T17:55:37.3364554Z         )
2025-01-07T17:55:37.3364815Z     
2025-01-07T17:55:37.3365099Z         # Save other properties
2025-01-07T17:55:37.3365475Z         self.lines_df = lines_df
2025-01-07T17:55:37.3365856Z         self.r_inner = r_inner
2025-01-07T17:55:37.3366327Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3366950Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3367551Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3368107Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3368634Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3369053Z         )
2025-01-07T17:55:37.3369401Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3369876Z         self.t_inner = t_inner
2025-01-07T17:55:37.3370469Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3370955Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3371383Z         self.v_inner = v_inner
2025-01-07T17:55:37.3371748Z         self.v_outer = v_outer
2025-01-07T17:55:37.3372263Z     
2025-01-07T17:55:37.3372581Z         # First check if both options are provided
2025-01-07T17:55:37.3373183Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3373768Z >           raise ValueError(
2025-01-07T17:55:37.3374253Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3374914Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3375458Z             )
2025-01-07T17:55:37.3376232Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3376999Z 
2025-01-07T17:55:37.3377310Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3377995Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-07T17:55:37.3378293Z 
2025-01-07T17:55:37.3378512Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3378942Z 
2025-01-07T17:55:37.3379102Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3379731Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3380118Z         """
2025-01-07T17:55:37.3380526Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3381040Z     
2025-01-07T17:55:37.3381306Z         Parameters:
2025-01-07T17:55:37.3381614Z         -----------
2025-01-07T17:55:37.3382133Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3382469Z     
2025-01-07T17:55:37.3382628Z         Returns:
2025-01-07T17:55:37.3382807Z         --------
2025-01-07T17:55:37.3382994Z         An LIVPlotter instance.
2025-01-07T17:55:37.3383237Z         """
2025-01-07T17:55:37.3383632Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3384021Z 
2025-01-07T17:55:37.3384255Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3384820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3385435Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3386123Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3386787Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3387225Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3387635Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3387988Z     return cls(
2025-01-07T17:55:37.3388200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3388401Z 
2025-01-07T17:55:37.3388680Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3389189Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3389586Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3390035Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3390503Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3390920Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3391287Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3391651Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3392189Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3392561Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3393061Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3393261Z 
2025-01-07T17:55:37.3393343Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3393640Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3394004Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3414842Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3415289Z        0.00025518])
2025-01-07T17:55:37.3415580Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3416032Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3416438Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3416775Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3417205Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3417611Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3418038Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3418545Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3419124Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3419415Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3419689Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3419979Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3420302Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3420801Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3421437Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3422157Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3422814Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3423432Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3424055Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3424458Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3424787Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3425056Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3425203Z 
2025-01-07T17:55:37.3425275Z     def __init__(
2025-01-07T17:55:37.3425458Z         self,
2025-01-07T17:55:37.3425645Z         last_interaction_type,
2025-01-07T17:55:37.3425881Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3426139Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3426386Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3426625Z         last_interaction_in_r,
2025-01-07T17:55:37.3426836Z         lines_df,
2025-01-07T17:55:37.3427026Z         packet_nus,
2025-01-07T17:55:37.3427225Z         packet_energies,
2025-01-07T17:55:37.3427428Z         r_inner,
2025-01-07T17:55:37.3427623Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3428123Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3428774Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3429224Z         spectrum_wavelength,
2025-01-07T17:55:37.3429600Z         t_inner,
2025-01-07T17:55:37.3429913Z         time_of_simulation,
2025-01-07T17:55:37.3430287Z         time_explosion,
2025-01-07T17:55:37.3430619Z         v_inner,
2025-01-07T17:55:37.3430920Z         v_outer,
2025-01-07T17:55:37.3431213Z         velocity
2025-01-07T17:55:37.3431500Z     ):
2025-01-07T17:55:37.3432136Z         """
2025-01-07T17:55:37.3432719Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3433393Z     
2025-01-07T17:55:37.3433661Z         Parameters
2025-01-07T17:55:37.3433974Z         ----------
2025-01-07T17:55:37.3434309Z         last_interaction_type : np.array
2025-01-07T17:55:37.3434857Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3435476Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3435985Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3436543Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3437093Z             absorption (interaction in)
2025-01-07T17:55:37.3437540Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3438091Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3438631Z             emission (interaction out)
2025-01-07T17:55:37.3439072Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3439623Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3440192Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3440737Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3441288Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3441808Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3443563Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3444141Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3444701Z             unit of Hz
2025-01-07T17:55:37.3445071Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3447522Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3448050Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3448501Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3449019Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3450502Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3451053Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3451588Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3452264Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3452816Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3453333Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3453795Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3455250Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3455747Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3456193Z         """
2025-01-07T17:55:37.3456647Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3457278Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3457741Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3458144Z             {
2025-01-07T17:55:37.3459361Z                 "nus": packet_nus,
2025-01-07T17:55:37.3459822Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3460325Z                 "energies": packet_energies,
2025-01-07T17:55:37.3460812Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3461405Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3462184Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3463709Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3464291Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3464741Z             }
2025-01-07T17:55:37.3465018Z         )
2025-01-07T17:55:37.3465476Z     
2025-01-07T17:55:37.3465761Z         # Save other properties
2025-01-07T17:55:37.3467067Z         self.lines_df = lines_df
2025-01-07T17:55:37.3467458Z         self.r_inner = r_inner
2025-01-07T17:55:37.3467932Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3468591Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3469194Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3469756Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3470249Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3471555Z         )
2025-01-07T17:55:37.3471907Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3472563Z         self.t_inner = t_inner
2025-01-07T17:55:37.3472980Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3473461Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3473888Z         self.v_inner = v_inner
2025-01-07T17:55:37.3474230Z         self.v_outer = v_outer
2025-01-07T17:55:37.3474570Z     
2025-01-07T17:55:37.3474889Z         # First check if both options are provided
2025-01-07T17:55:37.3475488Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3476070Z >           raise ValueError(
2025-01-07T17:55:37.3476539Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3477382Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3477829Z             )
2025-01-07T17:55:37.3478301Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3478837Z 
2025-01-07T17:55:37.3480051Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3480952Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-07T17:55:37.3481560Z 
2025-01-07T17:55:37.3482092Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3482467Z 
2025-01-07T17:55:37.3482561Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3482811Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3483101Z         """
2025-01-07T17:55:37.3483521Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3484035Z     
2025-01-07T17:55:37.3484306Z         Parameters:
2025-01-07T17:55:37.3484616Z         -----------
2025-01-07T17:55:37.3484990Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3485437Z     
2025-01-07T17:55:37.3485694Z         Returns:
2025-01-07T17:55:37.3485989Z         --------
2025-01-07T17:55:37.3486293Z         An LIVPlotter instance.
2025-01-07T17:55:37.3486512Z         """
2025-01-07T17:55:37.3486743Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3486966Z 
2025-01-07T17:55:37.3487111Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3488534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3489161Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3489828Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3490598Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3491062Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3491741Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3492506Z     return cls(
2025-01-07T17:55:37.3492869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3493209Z 
2025-01-07T17:55:37.3493701Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3494469Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3495036Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3497459Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3497942Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3498340Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3498708Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3499076Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3499418Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3499872Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3501316Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3501539Z 
2025-01-07T17:55:37.3501629Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3502098Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3502477Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3502875Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3503228Z        0.00025518])
2025-01-07T17:55:37.3503495Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3504074Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3504554Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3505258Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3505845Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3506245Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3506673Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3507172Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3507561Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3507842Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3508116Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3508400Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3508727Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3509454Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3510085Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3510460Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3510876Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3511253Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3511624Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3512103Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3512438Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3512703Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3512845Z 
2025-01-07T17:55:37.3512916Z     def __init__(
2025-01-07T17:55:37.3513094Z         self,
2025-01-07T17:55:37.3513277Z         last_interaction_type,
2025-01-07T17:55:37.3513520Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3513849Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3514378Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3514783Z         last_interaction_in_r,
2025-01-07T17:55:37.3515148Z         lines_df,
2025-01-07T17:55:37.3515329Z         packet_nus,
2025-01-07T17:55:37.3515517Z         packet_energies,
2025-01-07T17:55:37.3515714Z         r_inner,
2025-01-07T17:55:37.3515909Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3516245Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3516607Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3516871Z         spectrum_wavelength,
2025-01-07T17:55:37.3517081Z         t_inner,
2025-01-07T17:55:37.3517263Z         time_of_simulation,
2025-01-07T17:55:37.3517473Z         time_explosion,
2025-01-07T17:55:37.3517664Z         v_inner,
2025-01-07T17:55:37.3517837Z         v_outer,
2025-01-07T17:55:37.3518016Z         velocity
2025-01-07T17:55:37.3518190Z     ):
2025-01-07T17:55:37.3518420Z         """
2025-01-07T17:55:37.3519093Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3519598Z     
2025-01-07T17:55:37.3519762Z         Parameters
2025-01-07T17:55:37.3519948Z         ----------
2025-01-07T17:55:37.3520148Z         last_interaction_type : np.array
2025-01-07T17:55:37.3520472Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3520824Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3521120Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3521601Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3521915Z             absorption (interaction in)
2025-01-07T17:55:37.3522440Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3522774Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3523360Z             emission (interaction out)
2025-01-07T17:55:37.3523801Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3524210Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3524547Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3524867Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3525186Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3525492Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3525840Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3526160Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3526479Z             unit of Hz
2025-01-07T17:55:37.3526691Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3526997Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3527302Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3527769Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3528290Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3528723Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3529049Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3529360Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3529663Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3529976Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3530283Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3530567Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3530867Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3531153Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3531415Z         """
2025-01-07T17:55:37.3531687Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3532309Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3532903Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3533292Z             {
2025-01-07T17:55:37.3533626Z                 "nus": packet_nus,
2025-01-07T17:55:37.3533908Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3534210Z                 "energies": packet_energies,
2025-01-07T17:55:37.3534499Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3534842Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3535225Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3535591Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3535926Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3536188Z             }
2025-01-07T17:55:37.3536353Z         )
2025-01-07T17:55:37.3536514Z     
2025-01-07T17:55:37.3536687Z         # Save other properties
2025-01-07T17:55:37.3537168Z         self.lines_df = lines_df
2025-01-07T17:55:37.3537556Z         self.r_inner = r_inner
2025-01-07T17:55:37.3537974Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3538337Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3538701Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3539023Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3539315Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3539691Z         )
2025-01-07T17:55:37.3539900Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3540175Z         self.t_inner = t_inner
2025-01-07T17:55:37.3540422Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3540707Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3540957Z         self.v_inner = v_inner
2025-01-07T17:55:37.3541178Z         self.v_outer = v_outer
2025-01-07T17:55:37.3541592Z     
2025-01-07T17:55:37.3541913Z         # First check if both options are provided
2025-01-07T17:55:37.3542600Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3542943Z >           raise ValueError(
2025-01-07T17:55:37.3543325Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3543713Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3544024Z             )
2025-01-07T17:55:37.3544479Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3544915Z 
2025-01-07T17:55:37.3545108Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3545635Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-07T17:55:37.3545989Z 
2025-01-07T17:55:37.3546439Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3546986Z 
2025-01-07T17:55:37.3547145Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3547404Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3547634Z         """
2025-01-07T17:55:37.3547876Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3548174Z     
2025-01-07T17:55:37.3548332Z         Parameters:
2025-01-07T17:55:37.3548516Z         -----------
2025-01-07T17:55:37.3548736Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3549007Z     
2025-01-07T17:55:37.3549163Z         Returns:
2025-01-07T17:55:37.3549347Z         --------
2025-01-07T17:55:37.3549536Z         An LIVPlotter instance.
2025-01-07T17:55:37.3549749Z         """
2025-01-07T17:55:37.3549976Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3550193Z 
2025-01-07T17:55:37.3550339Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3550712Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3551534Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3552246Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3552702Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3553136Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3553551Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3553903Z     return cls(
2025-01-07T17:55:37.3554117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3554317Z 
2025-01-07T17:55:37.3554596Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3555221Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3555913Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3556515Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3556979Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3557364Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3557725Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3558087Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3558575Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3558937Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3559254Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3559449Z 
2025-01-07T17:55:37.3559540Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3559915Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3560528Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3561087Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3561443Z        0.00025518])
2025-01-07T17:55:37.3561708Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3562343Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3562761Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3563096Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3563513Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3563921Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3564560Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3565359Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3565755Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3566038Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3566309Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3566590Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3566905Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3567325Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3567708Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3568066Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3568499Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3569061Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3569852Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3570236Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3570559Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3570820Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3570959Z 
2025-01-07T17:55:37.3571032Z     def __init__(
2025-01-07T17:55:37.3571215Z         self,
2025-01-07T17:55:37.3571398Z         last_interaction_type,
2025-01-07T17:55:37.3571629Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3571876Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3572238Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3572476Z         last_interaction_in_r,
2025-01-07T17:55:37.3572687Z         lines_df,
2025-01-07T17:55:37.3572866Z         packet_nus,
2025-01-07T17:55:37.3573055Z         packet_energies,
2025-01-07T17:55:37.3573280Z         r_inner,
2025-01-07T17:55:37.3573623Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3574188Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3574646Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3574908Z         spectrum_wavelength,
2025-01-07T17:55:37.3575119Z         t_inner,
2025-01-07T17:55:37.3575301Z         time_of_simulation,
2025-01-07T17:55:37.3575505Z         time_explosion,
2025-01-07T17:55:37.3575840Z         v_inner,
2025-01-07T17:55:37.3576022Z         v_outer,
2025-01-07T17:55:37.3576193Z         velocity
2025-01-07T17:55:37.3576361Z     ):
2025-01-07T17:55:37.3576518Z         """
2025-01-07T17:55:37.3576841Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3577225Z     
2025-01-07T17:55:37.3577406Z         Parameters
2025-01-07T17:55:37.3577739Z         ----------
2025-01-07T17:55:37.3578074Z         last_interaction_type : np.array
2025-01-07T17:55:37.3578619Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3579035Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3579333Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3579654Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3579980Z             absorption (interaction in)
2025-01-07T17:55:37.3580244Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3580573Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3580879Z             emission (interaction out)
2025-01-07T17:55:37.3581133Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3581455Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3581783Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3582469Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3583023Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3583536Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3584110Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3584661Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3585209Z             unit of Hz
2025-01-07T17:55:37.3585498Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3585810Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3586108Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3586506Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3587011Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3587543Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3588075Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3588600Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3589298Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3589695Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3590006Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3590403Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3590918Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3591402Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3591853Z         """
2025-01-07T17:55:37.3592443Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3593066Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3593542Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3593786Z             {
2025-01-07T17:55:37.3593964Z                 "nus": packet_nus,
2025-01-07T17:55:37.3594236Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3594589Z                 "energies": packet_energies,
2025-01-07T17:55:37.3595082Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3595682Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3596342Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3596979Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3597777Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3598066Z             }
2025-01-07T17:55:37.3598233Z         )
2025-01-07T17:55:37.3598395Z     
2025-01-07T17:55:37.3598567Z         # Save other properties
2025-01-07T17:55:37.3598796Z         self.lines_df = lines_df
2025-01-07T17:55:37.3599025Z         self.r_inner = r_inner
2025-01-07T17:55:37.3599306Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3599669Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3600031Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3600353Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3600642Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3600883Z         )
2025-01-07T17:55:37.3601091Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3601366Z         self.t_inner = t_inner
2025-01-07T17:55:37.3601622Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3601911Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3602394Z         self.v_inner = v_inner
2025-01-07T17:55:37.3602608Z         self.v_outer = v_outer
2025-01-07T17:55:37.3602840Z     
2025-01-07T17:55:37.3603170Z         # First check if both options are provided
2025-01-07T17:55:37.3603773Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3604217Z >           raise ValueError(
2025-01-07T17:55:37.3604505Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3604888Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3605199Z             )
2025-01-07T17:55:37.3605652Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3606119Z 
2025-01-07T17:55:37.3606301Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3607162Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-07T17:55:37.3607715Z 
2025-01-07T17:55:37.3607941Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3608245Z 
2025-01-07T17:55:37.3608338Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3608586Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3608818Z         """
2025-01-07T17:55:37.3609199Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3609501Z     
2025-01-07T17:55:37.3609660Z         Parameters:
2025-01-07T17:55:37.3609845Z         -----------
2025-01-07T17:55:37.3610070Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3610337Z     
2025-01-07T17:55:37.3610496Z         Returns:
2025-01-07T17:55:37.3610672Z         --------
2025-01-07T17:55:37.3610861Z         An LIVPlotter instance.
2025-01-07T17:55:37.3611076Z         """
2025-01-07T17:55:37.3611305Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3611529Z 
2025-01-07T17:55:37.3611667Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3612121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3612477Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3612860Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3613311Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3613748Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3614162Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3614513Z     return cls(
2025-01-07T17:55:37.3614728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3615048Z 
2025-01-07T17:55:37.3615331Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3615846Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3616244Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3616684Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3617145Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3617536Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3617902Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3618270Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3618610Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3618969Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3619290Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3619491Z 
2025-01-07T17:55:37.3619567Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3619862Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3620226Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3620606Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3620961Z        0.00025518])
2025-01-07T17:55:37.3621231Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3621674Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3622185Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3622518Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3622936Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3623335Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3623754Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3624259Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3624650Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3625385Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3625845Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3626333Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3626879Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3627591Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3628251Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3628868Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3629522Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3629913Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3630288Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3630673Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3631008Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3631276Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3631414Z 
2025-01-07T17:55:37.3631489Z     def __init__(
2025-01-07T17:55:37.3631669Z         self,
2025-01-07T17:55:37.3631856Z         last_interaction_type,
2025-01-07T17:55:37.3632315Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3632705Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3632952Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3633190Z         last_interaction_in_r,
2025-01-07T17:55:37.3633401Z         lines_df,
2025-01-07T17:55:37.3633582Z         packet_nus,
2025-01-07T17:55:37.3633774Z         packet_energies,
2025-01-07T17:55:37.3633975Z         r_inner,
2025-01-07T17:55:37.3634168Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3634505Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3634872Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3635122Z         spectrum_wavelength,
2025-01-07T17:55:37.3635362Z         t_inner,
2025-01-07T17:55:37.3635681Z         time_of_simulation,
2025-01-07T17:55:37.3636035Z         time_explosion,
2025-01-07T17:55:37.3636358Z         v_inner,
2025-01-07T17:55:37.3636647Z         v_outer,
2025-01-07T17:55:37.3636937Z         velocity
2025-01-07T17:55:37.3637230Z     ):
2025-01-07T17:55:37.3637489Z         """
2025-01-07T17:55:37.3638045Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3638719Z     
2025-01-07T17:55:37.3638895Z         Parameters
2025-01-07T17:55:37.3638968Z         ----------
2025-01-07T17:55:37.3639064Z         last_interaction_type : np.array
2025-01-07T17:55:37.3639215Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3639334Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3639437Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3639585Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3639673Z             absorption (interaction in)
2025-01-07T17:55:37.3639776Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3639916Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3640008Z             emission (interaction out)
2025-01-07T17:55:37.3640105Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3640263Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3640356Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3640511Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3640599Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3640755Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3640980Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3641152Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3641226Z             unit of Hz
2025-01-07T17:55:37.3641319Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3641454Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3641539Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3641656Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3641767Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3641898Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3642225Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3642359Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3642462Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3642599Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3642692Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3642814Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3642914Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3643025Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3643095Z         """
2025-01-07T17:55:37.3643270Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3643506Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3643598Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3643673Z             {
2025-01-07T17:55:37.3643749Z                 "nus": packet_nus,
2025-01-07T17:55:37.3643877Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3643972Z                 "energies": packet_energies,
2025-01-07T17:55:37.3644088Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3644238Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3644387Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3644533Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3644644Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3644716Z             }
2025-01-07T17:55:37.3644781Z         )
2025-01-07T17:55:37.3644854Z     
2025-01-07T17:55:37.3644936Z         # Save other properties
2025-01-07T17:55:37.3645023Z         self.lines_df = lines_df
2025-01-07T17:55:37.3645101Z         self.r_inner = r_inner
2025-01-07T17:55:37.3645246Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3645386Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3645516Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3645628Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3645727Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3645798Z         )
2025-01-07T17:55:37.3645913Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3645995Z         self.t_inner = t_inner
2025-01-07T17:55:37.3646103Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3646201Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3646282Z         self.v_inner = v_inner
2025-01-07T17:55:37.3646362Z         self.v_outer = v_outer
2025-01-07T17:55:37.3646427Z     
2025-01-07T17:55:37.3646532Z         # First check if both options are provided
2025-01-07T17:55:37.3646703Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3646788Z >           raise ValueError(
2025-01-07T17:55:37.3646929Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3647092Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3647297Z             )
2025-01-07T17:55:37.3647647Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3647655Z 
2025-01-07T17:55:37.3647838Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3648101Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-07T17:55:37.3648109Z 
2025-01-07T17:55:37.3648328Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3648333Z 
2025-01-07T17:55:37.3648424Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3648520Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3648606Z         """
2025-01-07T17:55:37.3648755Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3648824Z     
2025-01-07T17:55:37.3648896Z         Parameters:
2025-01-07T17:55:37.3648973Z         -----------
2025-01-07T17:55:37.3649087Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3649156Z     
2025-01-07T17:55:37.3649225Z         Returns:
2025-01-07T17:55:37.3649299Z         --------
2025-01-07T17:55:37.3649381Z         An LIVPlotter instance.
2025-01-07T17:55:37.3649451Z         """
2025-01-07T17:55:37.3649583Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3649667Z 
2025-01-07T17:55:37.3649811Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3649918Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3650079Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3650231Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3650444Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3650581Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3650780Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3650854Z     return cls(
2025-01-07T17:55:37.3650959Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3650963Z 
2025-01-07T17:55:37.3651243Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3651385Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3651565Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3651744Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3652058Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3652168Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3652351Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3652456Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3652621Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3652737Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3652846Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3652855Z 
2025-01-07T17:55:37.3652934Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3653103Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3653209Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3653406Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3653472Z        0.00025518])
2025-01-07T17:55:37.3653630Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3653821Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3654065Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3654192Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3654398Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3654502Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3654740Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3654931Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3655044Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3655136Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3675576Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3675725Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3675927Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3676112Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3676248Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3676409Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3676748Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3676869Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3677045Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3677179Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3677292Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3677374Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3677383Z 
2025-01-07T17:55:37.3677456Z     def __init__(
2025-01-07T17:55:37.3677529Z         self,
2025-01-07T17:55:37.3677614Z         last_interaction_type,
2025-01-07T17:55:37.3677706Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3677794Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3677883Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3677965Z         last_interaction_in_r,
2025-01-07T17:55:37.3678048Z         lines_df,
2025-01-07T17:55:37.3678121Z         packet_nus,
2025-01-07T17:55:37.3678203Z         packet_energies,
2025-01-07T17:55:37.3678272Z         r_inner,
2025-01-07T17:55:37.3678361Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3678554Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3678652Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3678741Z         spectrum_wavelength,
2025-01-07T17:55:37.3678812Z         t_inner,
2025-01-07T17:55:37.3678900Z         time_of_simulation,
2025-01-07T17:55:37.3678977Z         time_explosion,
2025-01-07T17:55:37.3679051Z         v_inner,
2025-01-07T17:55:37.3679120Z         v_outer,
2025-01-07T17:55:37.3679194Z         velocity
2025-01-07T17:55:37.3679262Z     ):
2025-01-07T17:55:37.3679336Z         """
2025-01-07T17:55:37.3679572Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3679650Z     
2025-01-07T17:55:37.3679723Z         Parameters
2025-01-07T17:55:37.3679804Z         ----------
2025-01-07T17:55:37.3679899Z         last_interaction_type : np.array
2025-01-07T17:55:37.3680060Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3680188Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3680288Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3680443Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3680674Z             absorption (interaction in)
2025-01-07T17:55:37.3680782Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3680922Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3681016Z             emission (interaction out)
2025-01-07T17:55:37.3681111Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3681267Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3681365Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3681524Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3681609Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3681774Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3681873Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3682263Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3682348Z             unit of Hz
2025-01-07T17:55:37.3682452Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3682589Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3682678Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3682796Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3682904Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3683036Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3683274Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3683409Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3683509Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3683655Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3683743Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3683865Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3683971Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3684088Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3684158Z         """
2025-01-07T17:55:37.3684336Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3684443Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3684533Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3684605Z             {
2025-01-07T17:55:37.3684685Z                 "nus": packet_nus,
2025-01-07T17:55:37.3684812Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3684899Z                 "energies": packet_energies,
2025-01-07T17:55:37.3685018Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3685166Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3685307Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3685451Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3685563Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3685628Z             }
2025-01-07T17:55:37.3685693Z         )
2025-01-07T17:55:37.3685762Z     
2025-01-07T17:55:37.3685842Z         # Save other properties
2025-01-07T17:55:37.3685928Z         self.lines_df = lines_df
2025-01-07T17:55:37.3686011Z         self.r_inner = r_inner
2025-01-07T17:55:37.3686153Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3686287Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3686421Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3686535Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3686637Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3686706Z         )
2025-01-07T17:55:37.3686826Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3687025Z         self.t_inner = t_inner
2025-01-07T17:55:37.3687135Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3687229Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3687306Z         self.v_inner = v_inner
2025-01-07T17:55:37.3687384Z         self.v_outer = v_outer
2025-01-07T17:55:37.3687448Z     
2025-01-07T17:55:37.3687554Z         # First check if both options are provided
2025-01-07T17:55:37.3687732Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3687815Z >           raise ValueError(
2025-01-07T17:55:37.3687952Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3688126Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3688199Z             )
2025-01-07T17:55:37.3688564Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3688574Z 
2025-01-07T17:55:37.3688757Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3689029Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-07T17:55:37.3689034Z 
2025-01-07T17:55:37.3689258Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3689341Z 
2025-01-07T17:55:37.3689432Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3689530Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3689599Z         """
2025-01-07T17:55:37.3689755Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3689828Z     
2025-01-07T17:55:37.3689903Z         Parameters:
2025-01-07T17:55:37.3689985Z         -----------
2025-01-07T17:55:37.3690106Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3690181Z     
2025-01-07T17:55:37.3690250Z         Returns:
2025-01-07T17:55:37.3690332Z         --------
2025-01-07T17:55:37.3690417Z         An LIVPlotter instance.
2025-01-07T17:55:37.3690494Z         """
2025-01-07T17:55:37.3690636Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3690641Z 
2025-01-07T17:55:37.3690790Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3690900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3691069Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3691215Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3691432Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3691564Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3691761Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3691839Z     return cls(
2025-01-07T17:55:37.3692069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3692075Z 
2025-01-07T17:55:37.3692366Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3692508Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3692690Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3692871Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3693082Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3693190Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3693373Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3693473Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3693640Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3693881Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3693999Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3694003Z 
2025-01-07T17:55:37.3694087Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3694256Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3694376Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3694571Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3694643Z        0.00025518])
2025-01-07T17:55:37.3694806Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3695002Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3695128Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3695263Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3695475Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3695580Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3695818Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3696112Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3696236Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3696321Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3696439Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3696527Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3696684Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3696864Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3696989Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3697140Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3697304Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3697427Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3697592Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3697723Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3697834Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3697913Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3697918Z 
2025-01-07T17:55:37.3697993Z     def __init__(
2025-01-07T17:55:37.3698062Z         self,
2025-01-07T17:55:37.3698152Z         last_interaction_type,
2025-01-07T17:55:37.3698242Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3698328Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3698409Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3698491Z         last_interaction_in_r,
2025-01-07T17:55:37.3698562Z         lines_df,
2025-01-07T17:55:37.3698639Z         packet_nus,
2025-01-07T17:55:37.3698718Z         packet_energies,
2025-01-07T17:55:37.3698795Z         r_inner,
2025-01-07T17:55:37.3698880Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3699065Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3699160Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3699247Z         spectrum_wavelength,
2025-01-07T17:55:37.3699319Z         t_inner,
2025-01-07T17:55:37.3699402Z         time_of_simulation,
2025-01-07T17:55:37.3699476Z         time_explosion,
2025-01-07T17:55:37.3699550Z         v_inner,
2025-01-07T17:55:37.3699621Z         v_outer,
2025-01-07T17:55:37.3699776Z         velocity
2025-01-07T17:55:37.3699843Z     ):
2025-01-07T17:55:37.3699908Z         """
2025-01-07T17:55:37.3700146Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3700213Z     
2025-01-07T17:55:37.3700290Z         Parameters
2025-01-07T17:55:37.3700362Z         ----------
2025-01-07T17:55:37.3700461Z         last_interaction_type : np.array
2025-01-07T17:55:37.3700613Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3700736Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3700835Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3700988Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3701076Z             absorption (interaction in)
2025-01-07T17:55:37.3701179Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3701320Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3701413Z             emission (interaction out)
2025-01-07T17:55:37.3701508Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3701654Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3701750Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3701895Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3702225Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3702391Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3702485Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3702647Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3702723Z             unit of Hz
2025-01-07T17:55:37.3702819Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3702960Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3703054Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3703166Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3703278Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3703397Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3703504Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3703625Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3703727Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3703862Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3703951Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3704073Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3704174Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3704284Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3704357Z         """
2025-01-07T17:55:37.3704545Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3704650Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3704745Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3704812Z             {
2025-01-07T17:55:37.3704893Z                 "nus": packet_nus,
2025-01-07T17:55:37.3705021Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3705118Z                 "energies": packet_energies,
2025-01-07T17:55:37.3705234Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3705384Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3705522Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3705664Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3705776Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3705964Z             }
2025-01-07T17:55:37.3706035Z         )
2025-01-07T17:55:37.3706101Z     
2025-01-07T17:55:37.3706189Z         # Save other properties
2025-01-07T17:55:37.3706270Z         self.lines_df = lines_df
2025-01-07T17:55:37.3706354Z         self.r_inner = r_inner
2025-01-07T17:55:37.3706493Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3706630Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3706764Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3706873Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3706966Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3707035Z         )
2025-01-07T17:55:37.3707149Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3707232Z         self.t_inner = t_inner
2025-01-07T17:55:37.3707341Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3707448Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3707531Z         self.v_inner = v_inner
2025-01-07T17:55:37.3707607Z         self.v_outer = v_outer
2025-01-07T17:55:37.3707678Z     
2025-01-07T17:55:37.3707779Z         # First check if both options are provided
2025-01-07T17:55:37.3707962Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3708043Z >           raise ValueError(
2025-01-07T17:55:37.3708282Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3708445Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3708516Z             )
2025-01-07T17:55:37.3708872Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3708878Z 
2025-01-07T17:55:37.3709058Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3709337Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-07T17:55:37.3709342Z 
2025-01-07T17:55:37.3709557Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3709562Z 
2025-01-07T17:55:37.3709649Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3709735Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3709804Z         """
2025-01-07T17:55:37.3709956Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3710027Z     
2025-01-07T17:55:37.3710101Z         Parameters:
2025-01-07T17:55:37.3710178Z         -----------
2025-01-07T17:55:37.3710293Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3710364Z     
2025-01-07T17:55:37.3710432Z         Returns:
2025-01-07T17:55:37.3710507Z         --------
2025-01-07T17:55:37.3710590Z         An LIVPlotter instance.
2025-01-07T17:55:37.3710662Z         """
2025-01-07T17:55:37.3710801Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3710809Z 
2025-01-07T17:55:37.3710946Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3711057Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3711214Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3711360Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3711574Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3711709Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3711907Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3712094Z     return cls(
2025-01-07T17:55:37.3712199Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3712209Z 
2025-01-07T17:55:37.3712486Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3712748Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3712927Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3713105Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3713303Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3713413Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3713594Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3713690Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3713849Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3713961Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3714075Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3714083Z 
2025-01-07T17:55:37.3714161Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3714327Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3714431Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3714628Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3714832Z        0.00025518])
2025-01-07T17:55:37.3714993Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3715184Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3715311Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3715445Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3715648Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3715763Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3715996Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3716193Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3716306Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3716401Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3716509Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3716604Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3716757Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3716935Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3717061Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3717213Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3717381Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3717510Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3717675Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3717803Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3717917Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3717993Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3717998Z 
2025-01-07T17:55:37.3718075Z     def __init__(
2025-01-07T17:55:37.3718144Z         self,
2025-01-07T17:55:37.3718232Z         last_interaction_type,
2025-01-07T17:55:37.3718322Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3718415Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3718587Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3718676Z         last_interaction_in_r,
2025-01-07T17:55:37.3718747Z         lines_df,
2025-01-07T17:55:37.3718829Z         packet_nus,
2025-01-07T17:55:37.3718909Z         packet_energies,
2025-01-07T17:55:37.3718990Z         r_inner,
2025-01-07T17:55:37.3719080Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3719261Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3719368Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3719450Z         spectrum_wavelength,
2025-01-07T17:55:37.3719526Z         t_inner,
2025-01-07T17:55:37.3719607Z         time_of_simulation,
2025-01-07T17:55:37.3719688Z         time_explosion,
2025-01-07T17:55:37.3719757Z         v_inner,
2025-01-07T17:55:37.3719830Z         v_outer,
2025-01-07T17:55:37.3719899Z         velocity
2025-01-07T17:55:37.3719971Z     ):
2025-01-07T17:55:37.3720040Z         """
2025-01-07T17:55:37.3720269Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3720340Z     
2025-01-07T17:55:37.3720419Z         Parameters
2025-01-07T17:55:37.3720489Z         ----------
2025-01-07T17:55:37.3720587Z         last_interaction_type : np.array
2025-01-07T17:55:37.3720737Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3720857Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3721042Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3721187Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3721281Z             absorption (interaction in)
2025-01-07T17:55:37.3721380Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3721525Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3721611Z             emission (interaction out)
2025-01-07T17:55:37.3721710Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3721862Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3722146Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3722313Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3722404Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3722567Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3722661Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3722827Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3722898Z             unit of Hz
2025-01-07T17:55:37.3722997Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3723124Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3723213Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3723324Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3723439Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3723566Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3723680Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3723803Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3723907Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3724047Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3724136Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3724263Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3724358Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3724474Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3724541Z         """
2025-01-07T17:55:37.3724719Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3724823Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3725045Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3725113Z             {
2025-01-07T17:55:37.3725198Z                 "nus": packet_nus,
2025-01-07T17:55:37.3725323Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3725421Z                 "energies": packet_energies,
2025-01-07T17:55:37.3725542Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3725701Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3725849Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3725989Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3726106Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3726174Z             }
2025-01-07T17:55:37.3726245Z         )
2025-01-07T17:55:37.3726311Z     
2025-01-07T17:55:37.3726399Z         # Save other properties
2025-01-07T17:55:37.3726484Z         self.lines_df = lines_df
2025-01-07T17:55:37.3726571Z         self.r_inner = r_inner
2025-01-07T17:55:37.3726709Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3726853Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3726984Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3727095Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3727328Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3727394Z         )
2025-01-07T17:55:37.3727516Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3727596Z         self.t_inner = t_inner
2025-01-07T17:55:37.3727709Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3727803Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3727884Z         self.v_inner = v_inner
2025-01-07T17:55:37.3727960Z         self.v_outer = v_outer
2025-01-07T17:55:37.3728035Z     
2025-01-07T17:55:37.3728136Z         # First check if both options are provided
2025-01-07T17:55:37.3728310Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3728391Z >           raise ValueError(
2025-01-07T17:55:37.3728536Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3728698Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3728775Z             )
2025-01-07T17:55:37.3729137Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3729143Z 
2025-01-07T17:55:37.3729315Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3729578Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-07T17:55:37.3729583Z 
2025-01-07T17:55:37.3729796Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3729805Z 
2025-01-07T17:55:37.3729897Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3729987Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3730060Z         """
2025-01-07T17:55:37.3730216Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3730281Z     
2025-01-07T17:55:37.3730360Z         Parameters:
2025-01-07T17:55:37.3730434Z         -----------
2025-01-07T17:55:37.3730552Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3730618Z     
2025-01-07T17:55:37.3730692Z         Returns:
2025-01-07T17:55:37.3730763Z         --------
2025-01-07T17:55:37.3730851Z         An LIVPlotter instance.
2025-01-07T17:55:37.3730919Z         """
2025-01-07T17:55:37.3731055Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3731060Z 
2025-01-07T17:55:37.3731195Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3731402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3731560Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3731711Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3732046Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3732180Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3732387Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3732460Z     return cls(
2025-01-07T17:55:37.3732570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3732575Z 
2025-01-07T17:55:37.3732853Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3732996Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3733170Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3733354Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3733556Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3733663Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3733850Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3734061Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3734227Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3734335Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3734448Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3734453Z 
2025-01-07T17:55:37.3734530Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3734698Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3734809Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3735008Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3735084Z        0.00025518])
2025-01-07T17:55:37.3735241Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3735445Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3735566Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3735697Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3735899Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3736009Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3736241Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3736434Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3736548Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3736638Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3736751Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3736843Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3737006Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3737180Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3737307Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3737455Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3737625Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3737863Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3738027Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3738159Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3738269Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3738353Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3738358Z 
2025-01-07T17:55:37.3738428Z     def __init__(
2025-01-07T17:55:37.3738504Z         self,
2025-01-07T17:55:37.3738588Z         last_interaction_type,
2025-01-07T17:55:37.3738682Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3738769Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3738859Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3738940Z         last_interaction_in_r,
2025-01-07T17:55:37.3739017Z         lines_df,
2025-01-07T17:55:37.3739094Z         packet_nus,
2025-01-07T17:55:37.3739185Z         packet_energies,
2025-01-07T17:55:37.3739255Z         r_inner,
2025-01-07T17:55:37.3739347Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3739533Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3739630Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3739720Z         spectrum_wavelength,
2025-01-07T17:55:37.3739789Z         t_inner,
2025-01-07T17:55:37.3739957Z         time_of_simulation,
2025-01-07T17:55:37.3740034Z         time_explosion,
2025-01-07T17:55:37.3740110Z         v_inner,
2025-01-07T17:55:37.3740179Z         v_outer,
2025-01-07T17:55:37.3740251Z         velocity
2025-01-07T17:55:37.3740317Z     ):
2025-01-07T17:55:37.3740388Z         """
2025-01-07T17:55:37.3740616Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3740689Z     
2025-01-07T17:55:37.3740763Z         Parameters
2025-01-07T17:55:37.3740840Z         ----------
2025-01-07T17:55:37.3740937Z         last_interaction_type : np.array
2025-01-07T17:55:37.3741094Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3741212Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3741315Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3741468Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3741559Z             absorption (interaction in)
2025-01-07T17:55:37.3741664Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3741804Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3741895Z             emission (interaction out)
2025-01-07T17:55:37.3742101Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3742259Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3742353Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3742512Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3742596Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3742758Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3742855Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3743015Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3743095Z             unit of Hz
2025-01-07T17:55:37.3743192Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3743327Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3743413Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3743529Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3743640Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3743769Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3743878Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3744130Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3744234Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3744380Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3744470Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3744594Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3744701Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3744812Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3744889Z         """
2025-01-07T17:55:37.3745069Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3745180Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3745275Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3745349Z             {
2025-01-07T17:55:37.3745429Z                 "nus": packet_nus,
2025-01-07T17:55:37.3745568Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3745660Z                 "energies": packet_energies,
2025-01-07T17:55:37.3745785Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3745942Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3746095Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3746347Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3746461Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3746534Z             }
2025-01-07T17:55:37.3746601Z         )
2025-01-07T17:55:37.3746673Z     
2025-01-07T17:55:37.3746757Z         # Save other properties
2025-01-07T17:55:37.3746844Z         self.lines_df = lines_df
2025-01-07T17:55:37.3746923Z         self.r_inner = r_inner
2025-01-07T17:55:37.3747073Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3747215Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3747354Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3747466Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3747569Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3747643Z         )
2025-01-07T17:55:37.3747762Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3747852Z         self.t_inner = t_inner
2025-01-07T17:55:37.3747965Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3748071Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3748150Z         self.v_inner = v_inner
2025-01-07T17:55:37.3748236Z         self.v_outer = v_outer
2025-01-07T17:55:37.3748303Z     
2025-01-07T17:55:37.3748415Z         # First check if both options are provided
2025-01-07T17:55:37.3748590Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3748683Z >           raise ValueError(
2025-01-07T17:55:37.3748824Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3748996Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3749075Z             )
2025-01-07T17:55:37.3749433Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3749441Z 
2025-01-07T17:55:37.3749625Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3749899Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-07T17:55:37.3749905Z 
2025-01-07T17:55:37.3750126Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3750132Z 
2025-01-07T17:55:37.3750222Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3750426Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3750496Z         """
2025-01-07T17:55:37.3750651Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3750726Z     
2025-01-07T17:55:37.3750800Z         Parameters:
2025-01-07T17:55:37.3750877Z         -----------
2025-01-07T17:55:37.3750995Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3751067Z     
2025-01-07T17:55:37.3751142Z         Returns:
2025-01-07T17:55:37.3751217Z         --------
2025-01-07T17:55:37.3751300Z         An LIVPlotter instance.
2025-01-07T17:55:37.3751372Z         """
2025-01-07T17:55:37.3751502Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3751507Z 
2025-01-07T17:55:37.3751647Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3751756Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3752061Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3752217Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3752442Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3752583Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3752782Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3752859Z     return cls(
2025-01-07T17:55:37.3753084Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3753089Z 
2025-01-07T17:55:37.3753375Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3753515Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3753700Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3753876Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3754089Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3754197Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3754379Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3754481Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3754646Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3754769Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3754881Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3754885Z 
2025-01-07T17:55:37.3754968Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3755135Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3755250Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3755443Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3755522Z        0.00025518])
2025-01-07T17:55:37.3755682Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3755878Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3756006Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3756139Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3756354Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3756462Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3756699Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3756883Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3757116Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3757213Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3757322Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3757418Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3757571Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3757752Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3757880Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3758035Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3758201Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3758327Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3758486Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3758624Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3758741Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3758816Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3758821Z 
2025-01-07T17:55:37.3758898Z     def __init__(
2025-01-07T17:55:37.3758967Z         self,
2025-01-07T17:55:37.3759139Z         last_interaction_type,
2025-01-07T17:55:37.3759227Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3759318Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3759401Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3759489Z         last_interaction_in_r,
2025-01-07T17:55:37.3759558Z         lines_df,
2025-01-07T17:55:37.3759633Z         packet_nus,
2025-01-07T17:55:37.3759709Z         packet_energies,
2025-01-07T17:55:37.3759782Z         r_inner,
2025-01-07T17:55:37.3759866Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3760051Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3760152Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3760234Z         spectrum_wavelength,
2025-01-07T17:55:37.3760308Z         t_inner,
2025-01-07T17:55:37.3760386Z         time_of_simulation,
2025-01-07T17:55:37.3760467Z         time_explosion,
2025-01-07T17:55:37.3760536Z         v_inner,
2025-01-07T17:55:37.3760616Z         v_outer,
2025-01-07T17:55:37.3760686Z         velocity
2025-01-07T17:55:37.3760758Z     ):
2025-01-07T17:55:37.3760826Z         """
2025-01-07T17:55:37.3761059Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3761126Z     
2025-01-07T17:55:37.3761203Z         Parameters
2025-01-07T17:55:37.3761272Z         ----------
2025-01-07T17:55:37.3761365Z         last_interaction_type : np.array
2025-01-07T17:55:37.3761515Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3761641Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3761745Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3761890Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3762177Z             absorption (interaction in)
2025-01-07T17:55:37.3762284Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3762432Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3762524Z             emission (interaction out)
2025-01-07T17:55:37.3762624Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3762772Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3762874Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3763017Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3763105Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3763391Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3763485Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3763648Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3763719Z             unit of Hz
2025-01-07T17:55:37.3763821Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3763949Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3764042Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3764153Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3764266Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3764387Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3764497Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3764616Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3764720Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3764860Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3764951Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3765075Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3765170Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3765285Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3765464Z         """
2025-01-07T17:55:37.3765644Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3765749Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3765846Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3765913Z             {
2025-01-07T17:55:37.3765997Z                 "nus": packet_nus,
2025-01-07T17:55:37.3766129Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3766223Z                 "energies": packet_energies,
2025-01-07T17:55:37.3766344Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3766499Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3766644Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3766783Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3766902Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3766974Z             }
2025-01-07T17:55:37.3767046Z         )
2025-01-07T17:55:37.3767113Z     
2025-01-07T17:55:37.3767200Z         # Save other properties
2025-01-07T17:55:37.3767283Z         self.lines_df = lines_df
2025-01-07T17:55:37.3767368Z         self.r_inner = r_inner
2025-01-07T17:55:37.3767508Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3767647Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3767778Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3767893Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3767990Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3768063Z         )
2025-01-07T17:55:37.3768184Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3768262Z         self.t_inner = t_inner
2025-01-07T17:55:37.3768377Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3768506Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3768591Z         self.v_inner = v_inner
2025-01-07T17:55:37.3768666Z         self.v_outer = v_outer
2025-01-07T17:55:37.3768738Z     
2025-01-07T17:55:37.3768839Z         # First check if both options are provided
2025-01-07T17:55:37.3769013Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3769092Z >           raise ValueError(
2025-01-07T17:55:37.3769233Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3769479Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3769555Z             )
2025-01-07T17:55:37.3769906Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3769917Z 
2025-01-07T17:55:37.3770090Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3770375Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-07T17:55:37.3770381Z 
2025-01-07T17:55:37.3770596Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3770600Z 
2025-01-07T17:55:37.3770692Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3770782Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3770855Z         """
2025-01-07T17:55:37.3771002Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3771077Z     
2025-01-07T17:55:37.3771154Z         Parameters:
2025-01-07T17:55:37.3771225Z         -----------
2025-01-07T17:55:37.3771346Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3771412Z     
2025-01-07T17:55:37.3771486Z         Returns:
2025-01-07T17:55:37.3771556Z         --------
2025-01-07T17:55:37.3771643Z         An LIVPlotter instance.
2025-01-07T17:55:37.3771711Z         """
2025-01-07T17:55:37.3772042Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3772049Z 
2025-01-07T17:55:37.3772189Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3772302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3772460Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3772610Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3772824Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3772967Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3773167Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3773238Z     return cls(
2025-01-07T17:55:37.3773348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3773353Z 
2025-01-07T17:55:37.3773629Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3773774Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3773952Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3774129Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3774327Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3774433Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3774623Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3774719Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3774886Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3774998Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3775114Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3775120Z 
2025-01-07T17:55:37.3775196Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3775365Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3775471Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3775664Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3775732Z        0.00025518])
2025-01-07T17:55:37.3775892Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3776264Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3776387Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3776519Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3776718Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3776830Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3777056Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3777250Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3777361Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3777451Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3777567Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3777655Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3777815Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3777989Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3778115Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3778400Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3778571Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3778688Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3778854Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3778980Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3779098Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3779176Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3779181Z 
2025-01-07T17:55:37.3779253Z     def __init__(
2025-01-07T17:55:37.3779326Z         self,
2025-01-07T17:55:37.3779410Z         last_interaction_type,
2025-01-07T17:55:37.3779500Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3779586Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3779679Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3779759Z         last_interaction_in_r,
2025-01-07T17:55:37.3779834Z         lines_df,
2025-01-07T17:55:37.3779906Z         packet_nus,
2025-01-07T17:55:37.3779990Z         packet_energies,
2025-01-07T17:55:37.3780063Z         r_inner,
2025-01-07T17:55:37.3780151Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3780330Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3780430Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3780521Z         spectrum_wavelength,
2025-01-07T17:55:37.3780591Z         t_inner,
2025-01-07T17:55:37.3780675Z         time_of_simulation,
2025-01-07T17:55:37.3780750Z         time_explosion,
2025-01-07T17:55:37.3780823Z         v_inner,
2025-01-07T17:55:37.3780892Z         v_outer,
2025-01-07T17:55:37.3780966Z         velocity
2025-01-07T17:55:37.3781033Z     ):
2025-01-07T17:55:37.3781105Z         """
2025-01-07T17:55:37.3781334Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3781409Z     
2025-01-07T17:55:37.3781481Z         Parameters
2025-01-07T17:55:37.3781557Z         ----------
2025-01-07T17:55:37.3781648Z         last_interaction_type : np.array
2025-01-07T17:55:37.3781800Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3781915Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3782202Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3782485Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3782575Z             absorption (interaction in)
2025-01-07T17:55:37.3782680Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3782820Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3782912Z             emission (interaction out)
2025-01-07T17:55:37.3783006Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3783167Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3783258Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3783411Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3783493Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3783655Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3783743Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3783907Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3783986Z             unit of Hz
2025-01-07T17:55:37.3784081Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3784216Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3784300Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3784416Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3784636Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3784767Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3784873Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3784998Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3785094Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3785236Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3785320Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3785449Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3785549Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3785661Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3785734Z         """
2025-01-07T17:55:37.3785907Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3786018Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3786112Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3786184Z             {
2025-01-07T17:55:37.3786263Z                 "nus": packet_nus,
2025-01-07T17:55:37.3786390Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3786482Z                 "energies": packet_energies,
2025-01-07T17:55:37.3786604Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3786752Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3786902Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3787045Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3787156Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3787229Z             }
2025-01-07T17:55:37.3787297Z         )
2025-01-07T17:55:37.3787369Z     
2025-01-07T17:55:37.3787450Z         # Save other properties
2025-01-07T17:55:37.3787543Z         self.lines_df = lines_df
2025-01-07T17:55:37.3787622Z         self.r_inner = r_inner
2025-01-07T17:55:37.3787764Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3787898Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3788034Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3788143Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3788252Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3788407Z         )
2025-01-07T17:55:37.3788530Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3788614Z         self.t_inner = t_inner
2025-01-07T17:55:37.3788728Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3788831Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3788909Z         self.v_inner = v_inner
2025-01-07T17:55:37.3788990Z         self.v_outer = v_outer
2025-01-07T17:55:37.3789059Z     
2025-01-07T17:55:37.3789166Z         # First check if both options are provided
2025-01-07T17:55:37.3789337Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3789421Z >           raise ValueError(
2025-01-07T17:55:37.3789560Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3789727Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3789794Z             )
2025-01-07T17:55:37.3790156Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3790162Z 
2025-01-07T17:55:37.3790339Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3790600Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-07T17:55:37.3790605Z 
2025-01-07T17:55:37.3790904Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3790909Z 
2025-01-07T17:55:37.3790995Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3791090Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3791157Z         """
2025-01-07T17:55:37.3791312Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3791379Z     
2025-01-07T17:55:37.3791456Z         Parameters:
2025-01-07T17:55:37.3791533Z         -----------
2025-01-07T17:55:37.3791647Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3791723Z     
2025-01-07T17:55:37.3791793Z         Returns:
2025-01-07T17:55:37.3791867Z         --------
2025-01-07T17:55:37.3792055Z         An LIVPlotter instance.
2025-01-07T17:55:37.3792132Z         """
2025-01-07T17:55:37.3792265Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3792269Z 
2025-01-07T17:55:37.3792411Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3792523Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3792686Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3792833Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3793051Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3793184Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3793384Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3793464Z     return cls(
2025-01-07T17:55:37.3793569Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3793573Z 
2025-01-07T17:55:37.3793855Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3793993Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3794174Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3794349Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3794555Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3794654Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3794842Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3794943Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3795222Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3795337Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3795448Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3795452Z 
2025-01-07T17:55:37.3795536Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3795701Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3795812Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3796006Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3796080Z        0.00025518])
2025-01-07T17:55:37.3796235Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3796434Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3796564Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3796692Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3796901Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3797004Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3797236Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3797555Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3797673Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3797758Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3797872Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3797966Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3798119Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3798303Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3798425Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3798578Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3798742Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3798867Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3799024Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3799153Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3799261Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3799339Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3799343Z 
2025-01-07T17:55:37.3799421Z     def __init__(
2025-01-07T17:55:37.3799493Z         self,
2025-01-07T17:55:37.3799580Z         last_interaction_type,
2025-01-07T17:55:37.3799666Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3799756Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3799840Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3799925Z         last_interaction_in_r,
2025-01-07T17:55:37.3799997Z         lines_df,
2025-01-07T17:55:37.3800079Z         packet_nus,
2025-01-07T17:55:37.3800164Z         packet_energies,
2025-01-07T17:55:37.3800240Z         r_inner,
2025-01-07T17:55:37.3800323Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3800506Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3800601Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3800687Z         spectrum_wavelength,
2025-01-07T17:55:37.3800762Z         t_inner,
2025-01-07T17:55:37.3800840Z         time_of_simulation,
2025-01-07T17:55:37.3801011Z         time_explosion,
2025-01-07T17:55:37.3801081Z         v_inner,
2025-01-07T17:55:37.3801154Z         v_outer,
2025-01-07T17:55:37.3801223Z         velocity
2025-01-07T17:55:37.3801295Z     ):
2025-01-07T17:55:37.3801362Z         """
2025-01-07T17:55:37.3801591Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3801657Z     
2025-01-07T17:55:37.3801733Z         Parameters
2025-01-07T17:55:37.3801808Z         ----------
2025-01-07T17:55:37.3801906Z         last_interaction_type : np.array
2025-01-07T17:55:37.3802250Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3802378Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3802476Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3802625Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3802718Z             absorption (interaction in)
2025-01-07T17:55:37.3802815Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3802967Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3803053Z             emission (interaction out)
2025-01-07T17:55:37.3803150Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3803296Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3803393Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3803666Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3803754Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3803911Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3804004Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3804163Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3804241Z             unit of Hz
2025-01-07T17:55:37.3804341Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3804472Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3804561Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3804674Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3804786Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3804911Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3805024Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3805144Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3805247Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3805383Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3805491Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3805610Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3805710Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3805827Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3805896Z         """
2025-01-07T17:55:37.3806074Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3806179Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3806272Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3806340Z             {
2025-01-07T17:55:37.3806425Z                 "nus": packet_nus,
2025-01-07T17:55:37.3806556Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3806650Z                 "energies": packet_energies,
2025-01-07T17:55:37.3806769Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3806916Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3807056Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3807200Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3807433Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3807502Z             }
2025-01-07T17:55:37.3807573Z         )
2025-01-07T17:55:37.3807642Z     
2025-01-07T17:55:37.3807730Z         # Save other properties
2025-01-07T17:55:37.3807812Z         self.lines_df = lines_df
2025-01-07T17:55:37.3807896Z         self.r_inner = r_inner
2025-01-07T17:55:37.3808035Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3808178Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3808310Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3808426Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3808522Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3808593Z         )
2025-01-07T17:55:37.3808710Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3808793Z         self.t_inner = t_inner
2025-01-07T17:55:37.3808913Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3809006Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3809088Z         self.v_inner = v_inner
2025-01-07T17:55:37.3809165Z         self.v_outer = v_outer
2025-01-07T17:55:37.3809235Z     
2025-01-07T17:55:37.3809334Z         # First check if both options are provided
2025-01-07T17:55:37.3809509Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3809670Z >           raise ValueError(
2025-01-07T17:55:37.3809813Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3809981Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3810053Z             )
2025-01-07T17:55:37.3810407Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3810417Z 
2025-01-07T17:55:37.3810592Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3810861Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-07T17:55:37.3810866Z 
2025-01-07T17:55:37.3811078Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3811083Z 
2025-01-07T17:55:37.3811173Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3811265Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3811338Z         """
2025-01-07T17:55:37.3811485Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3811555Z     
2025-01-07T17:55:37.3811630Z         Parameters:
2025-01-07T17:55:37.3811705Z         -----------
2025-01-07T17:55:37.3811821Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3811891Z     
2025-01-07T17:55:37.3812135Z         Returns:
2025-01-07T17:55:37.3812208Z         --------
2025-01-07T17:55:37.3812300Z         An LIVPlotter instance.
2025-01-07T17:55:37.3812367Z         """
2025-01-07T17:55:37.3812505Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3812510Z 
2025-01-07T17:55:37.3812647Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3812758Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3812916Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3813068Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3813283Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3813420Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3813622Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3813694Z     return cls(
2025-01-07T17:55:37.3813804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3813926Z 
2025-01-07T17:55:37.3814211Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3814355Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3814533Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3814714Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3814917Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3815023Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3815205Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3815306Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3815473Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3815584Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3815704Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3815709Z 
2025-01-07T17:55:37.3815786Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3815953Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3816059Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3816360Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3816437Z        0.00025518])
2025-01-07T17:55:37.3816597Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3816798Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3816922Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3817052Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3817258Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3817365Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3817597Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3817788Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3817906Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3817997Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3818109Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3818205Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3818361Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3818534Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3818664Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3818812Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3818980Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3819100Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3819264Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3819392Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3819505Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3819583Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3819589Z 
2025-01-07T17:55:37.3819660Z     def __init__(
2025-01-07T17:55:37.3819732Z         self,
2025-01-07T17:55:37.3819816Z         last_interaction_type,
2025-01-07T17:55:37.3819907Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3820078Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3820168Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3820247Z         last_interaction_in_r,
2025-01-07T17:55:37.3820321Z         lines_df,
2025-01-07T17:55:37.3820394Z         packet_nus,
2025-01-07T17:55:37.3820475Z         packet_energies,
2025-01-07T17:55:37.3820545Z         r_inner,
2025-01-07T17:55:37.3820634Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3820816Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3820915Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3820999Z         spectrum_wavelength,
2025-01-07T17:55:37.3821074Z         t_inner,
2025-01-07T17:55:37.3821162Z         time_of_simulation,
2025-01-07T17:55:37.3821238Z         time_explosion,
2025-01-07T17:55:37.3821312Z         v_inner,
2025-01-07T17:55:37.3821383Z         v_outer,
2025-01-07T17:55:37.3821457Z         velocity
2025-01-07T17:55:37.3821531Z     ):
2025-01-07T17:55:37.3821603Z         """
2025-01-07T17:55:37.3821831Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3821901Z     
2025-01-07T17:55:37.3822082Z         Parameters
2025-01-07T17:55:37.3822160Z         ----------
2025-01-07T17:55:37.3822252Z         last_interaction_type : np.array
2025-01-07T17:55:37.3822405Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3822657Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3822761Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3822905Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3823002Z             absorption (interaction in)
2025-01-07T17:55:37.3823105Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3823244Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3823335Z             emission (interaction out)
2025-01-07T17:55:37.3823434Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3823587Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3823681Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3823835Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3823918Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3824082Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3824172Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3824340Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3824411Z             unit of Hz
2025-01-07T17:55:37.3824510Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3824642Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3824727Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3824845Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3824957Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3825085Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3825192Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3825320Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3825417Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3825563Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3825646Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3825773Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3825868Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3825987Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3826059Z         """
2025-01-07T17:55:37.3826231Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3826468Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3826559Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3826634Z             {
2025-01-07T17:55:37.3826713Z                 "nus": packet_nus,
2025-01-07T17:55:37.3826843Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3826934Z                 "energies": packet_energies,
2025-01-07T17:55:37.3827061Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3827209Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3827354Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3827492Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3827605Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3827677Z             }
2025-01-07T17:55:37.3827747Z         )
2025-01-07T17:55:37.3827818Z     
2025-01-07T17:55:37.3827900Z         # Save other properties
2025-01-07T17:55:37.3827987Z         self.lines_df = lines_df
2025-01-07T17:55:37.3828067Z         self.r_inner = r_inner
2025-01-07T17:55:37.3828211Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3828344Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3828479Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3828670Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3828772Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3828839Z         )
2025-01-07T17:55:37.3828965Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3829048Z         self.t_inner = t_inner
2025-01-07T17:55:37.3829160Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3829261Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3829343Z         self.v_inner = v_inner
2025-01-07T17:55:37.3829425Z         self.v_outer = v_outer
2025-01-07T17:55:37.3829491Z     
2025-01-07T17:55:37.3829595Z         # First check if both options are provided
2025-01-07T17:55:37.3829765Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3829850Z >           raise ValueError(
2025-01-07T17:55:37.3829986Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3830158Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3830226Z             )
2025-01-07T17:55:37.3830588Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3830594Z 
2025-01-07T17:55:37.3830769Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3831040Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-07T17:55:37.3831048Z 
2025-01-07T17:55:37.3831269Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3831274Z 
2025-01-07T17:55:37.3831360Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3831453Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3831521Z         """
2025-01-07T17:55:37.3831675Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3831745Z     
2025-01-07T17:55:37.3831823Z         Parameters:
2025-01-07T17:55:37.3831894Z         -----------
2025-01-07T17:55:37.3832115Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3832188Z     
2025-01-07T17:55:37.3832258Z         Returns:
2025-01-07T17:55:37.3832331Z         --------
2025-01-07T17:55:37.3832413Z         An LIVPlotter instance.
2025-01-07T17:55:37.3832485Z         """
2025-01-07T17:55:37.3832616Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3832737Z 
2025-01-07T17:55:37.3832880Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3832989Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3833154Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3833300Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3833513Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3833650Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3833850Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3833927Z     return cls(
2025-01-07T17:55:37.3834030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3834034Z 
2025-01-07T17:55:37.3834315Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3834455Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3834631Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3834807Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3835011Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3835113Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3835410Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3835513Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3835674Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3835789Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3835898Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3835906Z 
2025-01-07T17:55:37.3835986Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3836152Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3836263Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3836455Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3836528Z        0.00025518])
2025-01-07T17:55:37.3836689Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3836887Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3837013Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3837140Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3837346Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3837448Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3837689Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3837875Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3837993Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3838079Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3838195Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3838289Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3838448Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3838628Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3838749Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3838902Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3839173Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3839296Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3839452Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3839582Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3839696Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3839776Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3839780Z 
2025-01-07T17:55:37.3839859Z     def __init__(
2025-01-07T17:55:37.3839927Z         self,
2025-01-07T17:55:37.3840018Z         last_interaction_type,
2025-01-07T17:55:37.3840104Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3840195Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3840279Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3840363Z         last_interaction_in_r,
2025-01-07T17:55:37.3840436Z         lines_df,
2025-01-07T17:55:37.3840514Z         packet_nus,
2025-01-07T17:55:37.3840594Z         packet_energies,
2025-01-07T17:55:37.3840667Z         r_inner,
2025-01-07T17:55:37.3840751Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3840935Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3841031Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3841199Z         spectrum_wavelength,
2025-01-07T17:55:37.3841269Z         t_inner,
2025-01-07T17:55:37.3841356Z         time_of_simulation,
2025-01-07T17:55:37.3849556Z         time_explosion,
2025-01-07T17:55:37.3849643Z         v_inner,
2025-01-07T17:55:37.3849722Z         v_outer,
2025-01-07T17:55:37.3849792Z         velocity
2025-01-07T17:55:37.3849867Z     ):
2025-01-07T17:55:37.3849938Z         """
2025-01-07T17:55:37.3850185Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3850266Z     
2025-01-07T17:55:37.3850341Z         Parameters
2025-01-07T17:55:37.3850420Z         ----------
2025-01-07T17:55:37.3850517Z         last_interaction_type : np.array
2025-01-07T17:55:37.3850681Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3850805Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3850908Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3851061Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3851155Z             absorption (interaction in)
2025-01-07T17:55:37.3851256Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3851403Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3851491Z             emission (interaction out)
2025-01-07T17:55:37.3851593Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3851747Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3851844Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3852157Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3852245Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3852411Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3852506Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3852678Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3852751Z             unit of Hz
2025-01-07T17:55:37.3852853Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3852992Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3853083Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3853200Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3853315Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3853447Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3853755Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3853891Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3853992Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3854136Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3854222Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3854355Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3854452Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3854572Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3854640Z         """
2025-01-07T17:55:37.3854823Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3854934Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3855026Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3855103Z             {
2025-01-07T17:55:37.3855181Z                 "nus": packet_nus,
2025-01-07T17:55:37.3855315Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3855405Z                 "energies": packet_energies,
2025-01-07T17:55:37.3855535Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3855684Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3855952Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3856091Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3856216Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3856283Z             }
2025-01-07T17:55:37.3856356Z         )
2025-01-07T17:55:37.3856423Z     
2025-01-07T17:55:37.3856513Z         # Save other properties
2025-01-07T17:55:37.3856602Z         self.lines_df = lines_df
2025-01-07T17:55:37.3856685Z         self.r_inner = r_inner
2025-01-07T17:55:37.3856835Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3856971Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3857109Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3857220Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3857325Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3857398Z         )
2025-01-07T17:55:37.3857521Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3857600Z         self.t_inner = t_inner
2025-01-07T17:55:37.3857714Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3857808Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3857889Z         self.v_inner = v_inner
2025-01-07T17:55:37.3857965Z         self.v_outer = v_outer
2025-01-07T17:55:37.3858037Z     
2025-01-07T17:55:37.3858144Z         # First check if both options are provided
2025-01-07T17:55:37.3858322Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3858408Z >           raise ValueError(
2025-01-07T17:55:37.3858548Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3858716Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3858782Z             )
2025-01-07T17:55:37.3859149Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3859155Z 
2025-01-07T17:55:37.3859336Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3859603Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-07T17:55:37.3859608Z 
2025-01-07T17:55:37.3859831Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3859922Z 
2025-01-07T17:55:37.3860012Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3860106Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3860173Z         """
2025-01-07T17:55:37.3860330Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3860396Z     
2025-01-07T17:55:37.3860477Z         Parameters:
2025-01-07T17:55:37.3860550Z         -----------
2025-01-07T17:55:37.3860680Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3860746Z     
2025-01-07T17:55:37.3860819Z         Returns:
2025-01-07T17:55:37.3860889Z         --------
2025-01-07T17:55:37.3860976Z         An LIVPlotter instance.
2025-01-07T17:55:37.3861042Z         """
2025-01-07T17:55:37.3861186Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3861190Z 
2025-01-07T17:55:37.3861331Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3861440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3861610Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3861758Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3862088Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3862223Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3862427Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3862615Z     return cls(
2025-01-07T17:55:37.3862728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3862732Z 
2025-01-07T17:55:37.3863010Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3863157Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3863337Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3863514Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3863723Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3863828Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3864015Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3864115Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3864287Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3864403Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3864521Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3864526Z 
2025-01-07T17:55:37.3864609Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3864775Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3864892Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3865087Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3865161Z        0.00025518])
2025-01-07T17:55:37.3865322Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3865525Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3865652Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3865790Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3865996Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3866107Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3866353Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3866653Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3866771Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3866857Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3866974Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3867064Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3867222Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3867399Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3867526Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3867681Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3867844Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3867967Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3868129Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3868261Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3868371Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3868451Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3868563Z 
2025-01-07T17:55:37.3868637Z     def __init__(
2025-01-07T17:55:37.3868711Z         self,
2025-01-07T17:55:37.3868794Z         last_interaction_type,
2025-01-07T17:55:37.3868888Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3868979Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3869063Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3869149Z         last_interaction_in_r,
2025-01-07T17:55:37.3869218Z         lines_df,
2025-01-07T17:55:37.3869297Z         packet_nus,
2025-01-07T17:55:37.3869375Z         packet_energies,
2025-01-07T17:55:37.3869453Z         r_inner,
2025-01-07T17:55:37.3869536Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3869724Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3869821Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3869909Z         spectrum_wavelength,
2025-01-07T17:55:37.3869978Z         t_inner,
2025-01-07T17:55:37.3870059Z         time_of_simulation,
2025-01-07T17:55:37.3870137Z         time_explosion,
2025-01-07T17:55:37.3870210Z         v_inner,
2025-01-07T17:55:37.3870277Z         v_outer,
2025-01-07T17:55:37.3870350Z         velocity
2025-01-07T17:55:37.3870415Z     ):
2025-01-07T17:55:37.3870486Z         """
2025-01-07T17:55:37.3870715Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3870785Z     
2025-01-07T17:55:37.3870856Z         Parameters
2025-01-07T17:55:37.3870932Z         ----------
2025-01-07T17:55:37.3871025Z         last_interaction_type : np.array
2025-01-07T17:55:37.3871188Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3871312Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3871408Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3871557Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3871644Z             absorption (interaction in)
2025-01-07T17:55:37.3871750Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3871891Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3872088Z             emission (interaction out)
2025-01-07T17:55:37.3872184Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3872337Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3872431Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3872582Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3872786Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3872946Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3873036Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3873196Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3873272Z             unit of Hz
2025-01-07T17:55:37.3873367Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3873502Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3873587Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3873702Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3873810Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3873937Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3874042Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3874167Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3874273Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3874409Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3874496Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3874616Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3874716Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3874935Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3875007Z         """
2025-01-07T17:55:37.3875181Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3875292Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3875386Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3875456Z             {
2025-01-07T17:55:37.3875533Z                 "nus": packet_nus,
2025-01-07T17:55:37.3875661Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3875752Z                 "energies": packet_energies,
2025-01-07T17:55:37.3875872Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3876023Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3876162Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3876305Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3876418Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3876495Z             }
2025-01-07T17:55:37.3876561Z         )
2025-01-07T17:55:37.3876632Z     
2025-01-07T17:55:37.3876715Z         # Save other properties
2025-01-07T17:55:37.3876800Z         self.lines_df = lines_df
2025-01-07T17:55:37.3876877Z         self.r_inner = r_inner
2025-01-07T17:55:37.3877020Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3877153Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3877292Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3877403Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3877497Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3877568Z         )
2025-01-07T17:55:37.3877681Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3877768Z         self.t_inner = t_inner
2025-01-07T17:55:37.3877877Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3877973Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3878050Z         self.v_inner = v_inner
2025-01-07T17:55:37.3878132Z         self.v_outer = v_outer
2025-01-07T17:55:37.3878198Z     
2025-01-07T17:55:37.3878302Z         # First check if both options are provided
2025-01-07T17:55:37.3878470Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3878553Z >           raise ValueError(
2025-01-07T17:55:37.3878796Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3878964Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3879034Z             )
2025-01-07T17:55:37.3879382Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3879391Z 
2025-01-07T17:55:37.3879565Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3879830Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-07T17:55:37.3879836Z 
2025-01-07T17:55:37.3880055Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3880060Z 
2025-01-07T17:55:37.3880146Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3880238Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3880308Z         """
2025-01-07T17:55:37.3880459Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3880529Z     
2025-01-07T17:55:37.3880602Z         Parameters:
2025-01-07T17:55:37.3880676Z         -----------
2025-01-07T17:55:37.3880793Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3880862Z     
2025-01-07T17:55:37.3880930Z         Returns:
2025-01-07T17:55:37.3881003Z         --------
2025-01-07T17:55:37.3881163Z         An LIVPlotter instance.
2025-01-07T17:55:37.3881233Z         """
2025-01-07T17:55:37.3881361Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3881366Z 
2025-01-07T17:55:37.3881504Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3881611Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3881776Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3882037Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3882338Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3882480Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3882678Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3882755Z     return cls(
2025-01-07T17:55:37.3882860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3882868Z 
2025-01-07T17:55:37.3883157Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3883303Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3883485Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3883659Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3883864Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3883971Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3884155Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3884256Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3884421Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3884539Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3884649Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3884654Z 
2025-01-07T17:55:37.3884736Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3884899Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3885014Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3885212Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3885403Z        0.00025518])
2025-01-07T17:55:37.3885564Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3885755Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3885881Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3886008Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3886217Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3886318Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3886563Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3886750Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3886867Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3886960Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3887069Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3887162Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3887312Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3887489Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3887722Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3887875Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3888039Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3888160Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3888321Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3888451Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3888562Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3888635Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3888639Z 
2025-01-07T17:55:37.3888712Z     def __init__(
2025-01-07T17:55:37.3888778Z         self,
2025-01-07T17:55:37.3888869Z         last_interaction_type,
2025-01-07T17:55:37.3888956Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3889045Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3889127Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3889212Z         last_interaction_in_r,
2025-01-07T17:55:37.3889280Z         lines_df,
2025-01-07T17:55:37.3889357Z         packet_nus,
2025-01-07T17:55:37.3889434Z         packet_energies,
2025-01-07T17:55:37.3889510Z         r_inner,
2025-01-07T17:55:37.3889599Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3889780Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3889883Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3889963Z         spectrum_wavelength,
2025-01-07T17:55:37.3890036Z         t_inner,
2025-01-07T17:55:37.3890114Z         time_of_simulation,
2025-01-07T17:55:37.3890193Z         time_explosion,
2025-01-07T17:55:37.3890260Z         v_inner,
2025-01-07T17:55:37.3890332Z         v_outer,
2025-01-07T17:55:37.3890400Z         velocity
2025-01-07T17:55:37.3890473Z     ):
2025-01-07T17:55:37.3890540Z         """
2025-01-07T17:55:37.3890776Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3890844Z     
2025-01-07T17:55:37.3890920Z         Parameters
2025-01-07T17:55:37.3890990Z         ----------
2025-01-07T17:55:37.3891085Z         last_interaction_type : np.array
2025-01-07T17:55:37.3891233Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3891356Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3891561Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3891708Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3891798Z             absorption (interaction in)
2025-01-07T17:55:37.3891900Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3892153Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3892254Z             emission (interaction out)
2025-01-07T17:55:37.3892350Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3892496Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3892596Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3892740Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3892825Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3892980Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3893076Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3893234Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3893310Z             unit of Hz
2025-01-07T17:55:37.3893403Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3893535Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3893619Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3893854Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3893965Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3894089Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3894197Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3894319Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3894421Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3894555Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3894646Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3894765Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3894862Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3894970Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3895086Z         """
2025-01-07T17:55:37.3895391Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3895509Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3895605Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3895672Z             {
2025-01-07T17:55:37.3895752Z                 "nus": packet_nus,
2025-01-07T17:55:37.3895873Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3895978Z                 "energies": packet_energies,
2025-01-07T17:55:37.3896190Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3896365Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3896506Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3896647Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3896758Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3896853Z             }
2025-01-07T17:55:37.3896986Z         )
2025-01-07T17:55:37.3897080Z     
2025-01-07T17:55:37.3897169Z         # Save other properties
2025-01-07T17:55:37.3897250Z         self.lines_df = lines_df
2025-01-07T17:55:37.3897332Z         self.r_inner = r_inner
2025-01-07T17:55:37.3897473Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3897610Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3897835Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3897956Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3898188Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3898259Z         )
2025-01-07T17:55:37.3898374Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3898455Z         self.t_inner = t_inner
2025-01-07T17:55:37.3898650Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3898774Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3898857Z         self.v_inner = v_inner
2025-01-07T17:55:37.3898938Z         self.v_outer = v_outer
2025-01-07T17:55:37.3899007Z     
2025-01-07T17:55:37.3899107Z         # First check if both options are provided
2025-01-07T17:55:37.3899281Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3899411Z >           raise ValueError(
2025-01-07T17:55:37.3899606Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3899771Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3899846Z             )
2025-01-07T17:55:37.3900257Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3900268Z 
2025-01-07T17:55:37.3900479Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3900751Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-07T17:55:37.3900869Z 
2025-01-07T17:55:37.3901206Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3901215Z 
2025-01-07T17:55:37.3901370Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3901464Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3901535Z         """
2025-01-07T17:55:37.3901685Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3901754Z     
2025-01-07T17:55:37.3901877Z         Parameters:
2025-01-07T17:55:37.3902147Z         -----------
2025-01-07T17:55:37.3902279Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3902353Z     
2025-01-07T17:55:37.3902422Z         Returns:
2025-01-07T17:55:37.3902497Z         --------
2025-01-07T17:55:37.3902577Z         An LIVPlotter instance.
2025-01-07T17:55:37.3902648Z         """
2025-01-07T17:55:37.3902782Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3902796Z 
2025-01-07T17:55:37.3902939Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3903052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3903210Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3903363Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3903581Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3903727Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3903928Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3904005Z     return cls(
2025-01-07T17:55:37.3904110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3904121Z 
2025-01-07T17:55:37.3904400Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3904546Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3904720Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3904897Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3905093Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3905200Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3905380Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3905621Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3905782Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3905898Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3906014Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3906022Z 
2025-01-07T17:55:37.3906099Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3906267Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3906372Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3906576Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3906645Z        0.00025518])
2025-01-07T17:55:37.3906806Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3907004Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3907130Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3907258Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3907464Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3907686Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3907919Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3908109Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3908222Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3908311Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3908418Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3908515Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3908667Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3908844Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3908966Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3909116Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3909288Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3909407Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3909567Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3909693Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3909805Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3909882Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3909886Z 
2025-01-07T17:55:37.3909961Z     def __init__(
2025-01-07T17:55:37.3910029Z         self,
2025-01-07T17:55:37.3910118Z         last_interaction_type,
2025-01-07T17:55:37.3910208Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3910292Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3910379Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3910461Z         last_interaction_in_r,
2025-01-07T17:55:37.3910534Z         lines_df,
2025-01-07T17:55:37.3910606Z         packet_nus,
2025-01-07T17:55:37.3910688Z         packet_energies,
2025-01-07T17:55:37.3910757Z         r_inner,
2025-01-07T17:55:37.3910843Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3911020Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3911121Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3911204Z         spectrum_wavelength,
2025-01-07T17:55:37.3911385Z         t_inner,
2025-01-07T17:55:37.3911463Z         time_of_simulation,
2025-01-07T17:55:37.3911546Z         time_explosion,
2025-01-07T17:55:37.3911613Z         v_inner,
2025-01-07T17:55:37.3911685Z         v_outer,
2025-01-07T17:55:37.3911753Z         velocity
2025-01-07T17:55:37.3911823Z     ):
2025-01-07T17:55:37.3911894Z         """
2025-01-07T17:55:37.3912289Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3912368Z     
2025-01-07T17:55:37.3912442Z         Parameters
2025-01-07T17:55:37.3912517Z         ----------
2025-01-07T17:55:37.3912608Z         last_interaction_type : np.array
2025-01-07T17:55:37.3912761Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3912877Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3912979Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3913122Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3913219Z             absorption (interaction in)
2025-01-07T17:55:37.3913316Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3913458Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3913543Z             emission (interaction out)
2025-01-07T17:55:37.3913642Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3913795Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3914007Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3914160Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3914241Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3914401Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3914488Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3914653Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3914728Z             unit of Hz
2025-01-07T17:55:37.3914827Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3914956Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3915044Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3915152Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3915262Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3915393Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3915497Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3915623Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3915720Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3915859Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3915946Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3916070Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3916167Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3916281Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3916347Z         """
2025-01-07T17:55:37.3916523Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3916625Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3916720Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3916794Z             {
2025-01-07T17:55:37.3916871Z                 "nus": packet_nus,
2025-01-07T17:55:37.3916999Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3917087Z                 "energies": packet_energies,
2025-01-07T17:55:37.3917209Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3917354Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3917497Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3917752Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3917868Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3917934Z             }
2025-01-07T17:55:37.3918004Z         )
2025-01-07T17:55:37.3918068Z     
2025-01-07T17:55:37.3918153Z         # Save other properties
2025-01-07T17:55:37.3918239Z         self.lines_df = lines_df
2025-01-07T17:55:37.3918319Z         self.r_inner = r_inner
2025-01-07T17:55:37.3918465Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3918599Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3918737Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3918841Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3918940Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3919006Z         )
2025-01-07T17:55:37.3919132Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3919211Z         self.t_inner = t_inner
2025-01-07T17:55:37.3919327Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3919419Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3919504Z         self.v_inner = v_inner
2025-01-07T17:55:37.3919580Z         self.v_outer = v_outer
2025-01-07T17:55:37.3919648Z     
2025-01-07T17:55:37.3919836Z         # First check if both options are provided
2025-01-07T17:55:37.3920006Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3920086Z >           raise ValueError(
2025-01-07T17:55:37.3920222Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3920386Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3920452Z             )
2025-01-07T17:55:37.3920806Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3920816Z 
2025-01-07T17:55:37.3920984Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3921249Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-07T17:55:37.3921255Z 
2025-01-07T17:55:37.3921471Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3921478Z 
2025-01-07T17:55:37.3921566Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3921659Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3921725Z         """
2025-01-07T17:55:37.3921877Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3922082Z     
2025-01-07T17:55:37.3922208Z         Parameters:
2025-01-07T17:55:37.3922294Z         -----------
2025-01-07T17:55:37.3922416Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3922481Z     
2025-01-07T17:55:37.3922559Z         Returns:
2025-01-07T17:55:37.3922627Z         --------
2025-01-07T17:55:37.3922713Z         An LIVPlotter instance.
2025-01-07T17:55:37.3922779Z         """
2025-01-07T17:55:37.3922914Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3922919Z 
2025-01-07T17:55:37.3923059Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3923164Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3923334Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3923479Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3923694Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3923823Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3924022Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3924095Z     return cls(
2025-01-07T17:55:37.3924327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3924332Z 
2025-01-07T17:55:37.3924607Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3924750Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3924929Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3925107Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3925312Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3925412Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3925597Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3925690Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3925853Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3925968Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3926081Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3926086Z 
2025-01-07T17:55:37.3926166Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3926329Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3926574Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3926766Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3926839Z        0.00025518])
2025-01-07T17:55:37.3926994Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3927190Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3927310Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3927444Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3927645Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3927750Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3927983Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3928173Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3928289Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3928371Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3928481Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3928570Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3928724Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3928897Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3929025Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3929178Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3929341Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3929464Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3929618Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3929749Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3929855Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3929931Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3929936Z 
2025-01-07T17:55:37.3930005Z     def __init__(
2025-01-07T17:55:37.3930077Z         self,
2025-01-07T17:55:37.3930246Z         last_interaction_type,
2025-01-07T17:55:37.3930337Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3930426Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3930507Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3930593Z         last_interaction_in_r,
2025-01-07T17:55:37.3930661Z         lines_df,
2025-01-07T17:55:37.3930737Z         packet_nus,
2025-01-07T17:55:37.3930814Z         packet_energies,
2025-01-07T17:55:37.3930890Z         r_inner,
2025-01-07T17:55:37.3930973Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3931154Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3931247Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3931332Z         spectrum_wavelength,
2025-01-07T17:55:37.3931401Z         t_inner,
2025-01-07T17:55:37.3931482Z         time_of_simulation,
2025-01-07T17:55:37.3931556Z         time_explosion,
2025-01-07T17:55:37.3931629Z         v_inner,
2025-01-07T17:55:37.3931701Z         v_outer,
2025-01-07T17:55:37.3931773Z         velocity
2025-01-07T17:55:37.3931838Z     ):
2025-01-07T17:55:37.3931910Z         """
2025-01-07T17:55:37.3932248Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3932316Z     
2025-01-07T17:55:37.3932391Z         Parameters
2025-01-07T17:55:37.3932459Z         ----------
2025-01-07T17:55:37.3932553Z         last_interaction_type : np.array
2025-01-07T17:55:37.3932845Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3932965Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3933059Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3933210Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3933298Z             absorption (interaction in)
2025-01-07T17:55:37.3933400Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3933540Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3933631Z             emission (interaction out)
2025-01-07T17:55:37.3933722Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3933876Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3933972Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3934115Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3934203Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3934358Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3934450Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3934605Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3934680Z             unit of Hz
2025-01-07T17:55:37.3934772Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3934904Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3934989Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3935105Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3935212Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3935339Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3935452Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3935582Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3935687Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3935824Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3935915Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3936040Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3936143Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3936253Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3936443Z         """
2025-01-07T17:55:37.3936631Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3936743Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3936841Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3936909Z             {
2025-01-07T17:55:37.3936993Z                 "nus": packet_nus,
2025-01-07T17:55:37.3937116Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3937214Z                 "energies": packet_energies,
2025-01-07T17:55:37.3937331Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3937486Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3937627Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3937768Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3937877Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3937955Z             }
2025-01-07T17:55:37.3938021Z         )
2025-01-07T17:55:37.3938092Z     
2025-01-07T17:55:37.3938175Z         # Save other properties
2025-01-07T17:55:37.3938262Z         self.lines_df = lines_df
2025-01-07T17:55:37.3938346Z         self.r_inner = r_inner
2025-01-07T17:55:37.3938489Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3938715Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3938845Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3938958Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3939054Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3939124Z         )
2025-01-07T17:55:37.3939240Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3939322Z         self.t_inner = t_inner
2025-01-07T17:55:37.3939427Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3939528Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3939604Z         self.v_inner = v_inner
2025-01-07T17:55:37.3939685Z         self.v_outer = v_outer
2025-01-07T17:55:37.3939749Z     
2025-01-07T17:55:37.3939852Z         # First check if both options are provided
2025-01-07T17:55:37.3940028Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3940109Z >           raise ValueError(
2025-01-07T17:55:37.3940250Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3940412Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3940485Z             )
2025-01-07T17:55:37.3940836Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3940841Z 
2025-01-07T17:55:37.3941020Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3941292Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-07T17:55:37.3941297Z 
2025-01-07T17:55:37.3941515Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3941520Z 
2025-01-07T17:55:37.3941611Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3941700Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3941775Z         """
2025-01-07T17:55:37.3942022Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3942096Z     
2025-01-07T17:55:37.3942168Z         Parameters:
2025-01-07T17:55:37.3942243Z         -----------
2025-01-07T17:55:37.3942356Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3942425Z     
2025-01-07T17:55:37.3942494Z         Returns:
2025-01-07T17:55:37.3942568Z         --------
2025-01-07T17:55:37.3942649Z         An LIVPlotter instance.
2025-01-07T17:55:37.3942721Z         """
2025-01-07T17:55:37.3942976Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3942985Z 
2025-01-07T17:55:37.3943122Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3943233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3943391Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3943539Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3943754Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3943890Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3944091Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3944165Z     return cls(
2025-01-07T17:55:37.3944269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3944274Z 
2025-01-07T17:55:37.3944557Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3944701Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3944872Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3945052Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3945251Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3945469Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3945648Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3945748Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3945910Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3946026Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3946138Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3946148Z 
2025-01-07T17:55:37.3946223Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3946389Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3946491Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3946689Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3946761Z        0.00025518])
2025-01-07T17:55:37.3946924Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3947116Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3947240Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3947368Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3947574Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3947684Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3947911Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3948102Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3948214Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3948307Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3948416Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3948511Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3948663Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3948842Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3948965Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3949228Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3949396Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3949514Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3949675Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3949803Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3949915Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3949987Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3949991Z 
2025-01-07T17:55:37.3950065Z     def __init__(
2025-01-07T17:55:37.3950133Z         self,
2025-01-07T17:55:37.3950219Z         last_interaction_type,
2025-01-07T17:55:37.3950304Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3950397Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3950490Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3950568Z         last_interaction_in_r,
2025-01-07T17:55:37.3950642Z         lines_df,
2025-01-07T17:55:37.3950716Z         packet_nus,
2025-01-07T17:55:37.3950796Z         packet_energies,
2025-01-07T17:55:37.3950865Z         r_inner,
2025-01-07T17:55:37.3950953Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3951132Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3951314Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3951395Z         spectrum_wavelength,
2025-01-07T17:55:37.3951469Z         t_inner,
2025-01-07T17:55:37.3951546Z         time_of_simulation,
2025-01-07T17:55:37.3951626Z         time_explosion,
2025-01-07T17:55:37.3951693Z         v_inner,
2025-01-07T17:55:37.3951768Z         v_outer,
2025-01-07T17:55:37.3951836Z         velocity
2025-01-07T17:55:37.3951906Z     ):
2025-01-07T17:55:37.3952072Z         """
2025-01-07T17:55:37.3952308Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3952377Z     
2025-01-07T17:55:37.3952448Z         Parameters
2025-01-07T17:55:37.3952522Z         ----------
2025-01-07T17:55:37.3952612Z         last_interaction_type : np.array
2025-01-07T17:55:37.3952767Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3952880Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3952983Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3953127Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3953217Z             absorption (interaction in)
2025-01-07T17:55:37.3953313Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3953457Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3953542Z             emission (interaction out)
2025-01-07T17:55:37.3953640Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3953791Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3953890Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3954041Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3954124Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3954288Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3954379Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3954540Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3954611Z             unit of Hz
2025-01-07T17:55:37.3954709Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3954835Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3954927Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3955036Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3955269Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3955399Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3955502Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3955627Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3955725Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3955863Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3955949Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3956073Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3956167Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3956280Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3956349Z         """
2025-01-07T17:55:37.3956534Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3956637Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3956735Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3956806Z             {
2025-01-07T17:55:37.3956886Z                 "nus": packet_nus,
2025-01-07T17:55:37.3957013Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3957101Z                 "energies": packet_energies,
2025-01-07T17:55:37.3957221Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3957478Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3957624Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3957765Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3957878Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3957943Z             }
2025-01-07T17:55:37.3958013Z         )
2025-01-07T17:55:37.3958078Z     
2025-01-07T17:55:37.3958168Z         # Save other properties
2025-01-07T17:55:37.3958249Z         self.lines_df = lines_df
2025-01-07T17:55:37.3958330Z         self.r_inner = r_inner
2025-01-07T17:55:37.3958477Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3958612Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3958747Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3958858Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3958957Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3959022Z         )
2025-01-07T17:55:37.3959144Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3959221Z         self.t_inner = t_inner
2025-01-07T17:55:37.3959336Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3959429Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3959512Z         self.v_inner = v_inner
2025-01-07T17:55:37.3959586Z         self.v_outer = v_outer
2025-01-07T17:55:37.3959663Z     
2025-01-07T17:55:37.3959763Z         # First check if both options are provided
2025-01-07T17:55:37.3959938Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3960021Z >           raise ValueError(
2025-01-07T17:55:37.3960158Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3960323Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3960393Z             )
2025-01-07T17:55:37.3960751Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3960756Z 
2025-01-07T17:55:37.3960927Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3961203Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-07T17:55:37.3961208Z 
2025-01-07T17:55:37.3961509Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3961520Z 
2025-01-07T17:55:37.3961614Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3961706Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3961773Z         """
2025-01-07T17:55:37.3962049Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3962166Z     
2025-01-07T17:55:37.3962254Z         Parameters:
2025-01-07T17:55:37.3962325Z         -----------
2025-01-07T17:55:37.3962448Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3962513Z     
2025-01-07T17:55:37.3962586Z         Returns:
2025-01-07T17:55:37.3962655Z         --------
2025-01-07T17:55:37.3962742Z         An LIVPlotter instance.
2025-01-07T17:55:37.3962809Z         """
2025-01-07T17:55:37.3962947Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3962952Z 
2025-01-07T17:55:37.3963090Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3963208Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3963372Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3963517Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3963744Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3964001Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3964203Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3964273Z     return cls(
2025-01-07T17:55:37.3964384Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3964388Z 
2025-01-07T17:55:37.3964661Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3964804Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3964986Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3965156Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3965357Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3965457Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3965650Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3965744Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3965911Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3966022Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3966136Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3966141Z 
2025-01-07T17:55:37.3966221Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3966387Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3966496Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3966694Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3966766Z        0.00025518])
2025-01-07T17:55:37.3966921Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3967117Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3967239Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3967368Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3967571Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3967676Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3967911Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3968213Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3968329Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3968413Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3968558Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3968652Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3968808Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3968979Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3969103Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3969249Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3969415Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3969538Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3969694Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3969825Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3969932Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3970107Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3970111Z 
2025-01-07T17:55:37.3970180Z     def __init__(
2025-01-07T17:55:37.3970251Z         self,
2025-01-07T17:55:37.3970333Z         last_interaction_type,
2025-01-07T17:55:37.3970423Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3970508Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3970597Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3970682Z         last_interaction_in_r,
2025-01-07T17:55:37.3970751Z         lines_df,
2025-01-07T17:55:37.3970829Z         packet_nus,
2025-01-07T17:55:37.3970904Z         packet_energies,
2025-01-07T17:55:37.3970977Z         r_inner,
2025-01-07T17:55:37.3971061Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3971244Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3971340Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3971426Z         spectrum_wavelength,
2025-01-07T17:55:37.3971497Z         t_inner,
2025-01-07T17:55:37.3971579Z         time_of_simulation,
2025-01-07T17:55:37.3971655Z         time_explosion,
2025-01-07T17:55:37.3971727Z         v_inner,
2025-01-07T17:55:37.3971795Z         v_outer,
2025-01-07T17:55:37.3971866Z         velocity
2025-01-07T17:55:37.3972035Z     ):
2025-01-07T17:55:37.3972109Z         """
2025-01-07T17:55:37.3972335Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3972405Z     
2025-01-07T17:55:37.3972481Z         Parameters
2025-01-07T17:55:37.3972553Z         ----------
2025-01-07T17:55:37.3972648Z         last_interaction_type : np.array
2025-01-07T17:55:37.3972795Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3972913Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3973006Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3973153Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3973242Z             absorption (interaction in)
2025-01-07T17:55:37.3973344Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3973481Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3973569Z             emission (interaction out)
2025-01-07T17:55:37.3973661Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3973813Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3973914Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3974198Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3974284Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3974442Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3974534Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3974691Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3974769Z             unit of Hz
2025-01-07T17:55:37.3974862Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3974995Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3975077Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3975191Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3975298Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3975429Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3975543Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3975666Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3975769Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3975905Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3975992Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3976111Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3976322Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3976432Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3976503Z         """
2025-01-07T17:55:37.3976675Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3976784Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3976871Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3976941Z             {
2025-01-07T17:55:37.3977020Z                 "nus": packet_nus,
2025-01-07T17:55:37.3977150Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3977242Z                 "energies": packet_energies,
2025-01-07T17:55:37.3977358Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3977509Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3977648Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3977794Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3977904Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3977975Z             }
2025-01-07T17:55:37.3978040Z         )
2025-01-07T17:55:37.3978111Z     
2025-01-07T17:55:37.3978192Z         # Save other properties
2025-01-07T17:55:37.3978276Z         self.lines_df = lines_df
2025-01-07T17:55:37.3978354Z         self.r_inner = r_inner
2025-01-07T17:55:37.3978499Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3978635Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3978763Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3978874Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3978969Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3979040Z         )
2025-01-07T17:55:37.3979157Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3979239Z         self.t_inner = t_inner
2025-01-07T17:55:37.3979349Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3979446Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3979522Z         self.v_inner = v_inner
2025-01-07T17:55:37.3979602Z         self.v_outer = v_outer
2025-01-07T17:55:37.3979666Z     
2025-01-07T17:55:37.3979772Z         # First check if both options are provided
2025-01-07T17:55:37.3979938Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3980110Z >           raise ValueError(
2025-01-07T17:55:37.3980253Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3980415Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3980486Z             )
2025-01-07T17:55:37.3980837Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3980846Z 
2025-01-07T17:55:37.3981022Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3981278Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-07T17:55:37.3981283Z 
2025-01-07T17:55:37.3981499Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3981504Z 
2025-01-07T17:55:37.3981594Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3981686Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3981757Z         """
2025-01-07T17:55:37.3981906Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3982074Z     
2025-01-07T17:55:37.3982149Z         Parameters:
2025-01-07T17:55:37.3982223Z         -----------
2025-01-07T17:55:37.3982336Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3982519Z     
2025-01-07T17:55:37.3982588Z         Returns:
2025-01-07T17:55:37.3982662Z         --------
2025-01-07T17:55:37.3982744Z         An LIVPlotter instance.
2025-01-07T17:55:37.3982814Z         """
2025-01-07T17:55:37.3982943Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3982948Z 
2025-01-07T17:55:37.3983087Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3983198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3983353Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3983509Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3983722Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3983859Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3984055Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3984133Z     return cls(
2025-01-07T17:55:37.3984237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3984241Z 
2025-01-07T17:55:37.3984521Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3984657Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3984835Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3985014Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3985213Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3985315Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3985493Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3985592Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3985753Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3985867Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3985978Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3985983Z 
2025-01-07T17:55:37.3986063Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3986230Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3986334Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3986651Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3986720Z        0.00025518])
2025-01-07T17:55:37.3986877Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3987069Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3987193Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3987322Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3987527Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3987626Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3987860Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3988047Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3988161Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3988252Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3988358Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3988451Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3988601Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3988877Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3988997Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3989149Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3989314Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3989434Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3989598Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3989725Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3989835Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3989907Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3989912Z 
2025-01-07T17:55:37.3989986Z     def __init__(
2025-01-07T17:55:37.3990054Z         self,
2025-01-07T17:55:37.3990139Z         last_interaction_type,
2025-01-07T17:55:37.3990224Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3990314Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3990395Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3990479Z         last_interaction_in_r,
2025-01-07T17:55:37.3990554Z         lines_df,
2025-01-07T17:55:37.3990625Z         packet_nus,
2025-01-07T17:55:37.3990709Z         packet_energies,
2025-01-07T17:55:37.3990776Z         r_inner,
2025-01-07T17:55:37.3990864Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3991046Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3991149Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3991230Z         spectrum_wavelength,
2025-01-07T17:55:37.3991303Z         t_inner,
2025-01-07T17:55:37.3991379Z         time_of_simulation,
2025-01-07T17:55:37.3991462Z         time_explosion,
2025-01-07T17:55:37.3991533Z         v_inner,
2025-01-07T17:55:37.3991605Z         v_outer,
2025-01-07T17:55:37.3991674Z         velocity
2025-01-07T17:55:37.3991744Z     ):
2025-01-07T17:55:37.3991811Z         """
2025-01-07T17:55:37.3992136Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3992203Z     
2025-01-07T17:55:37.3992276Z         Parameters
2025-01-07T17:55:37.3992352Z         ----------
2025-01-07T17:55:37.3992443Z         last_interaction_type : np.array
2025-01-07T17:55:37.3992595Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3992824Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3992925Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3993066Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3993157Z             absorption (interaction in)
2025-01-07T17:55:37.3993253Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3993401Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3993486Z             emission (interaction out)
2025-01-07T17:55:37.3993584Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3993727Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3993825Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3993974Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3994055Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3994217Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3994306Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3994465Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3994534Z             unit of Hz
2025-01-07T17:55:37.3994634Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3994762Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3994978Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3995087Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3995201Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3995325Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3995438Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3995565Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3995664Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3995803Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3995884Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3996008Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3996101Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3996215Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3996284Z         """
2025-01-07T17:55:37.3996461Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3996563Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3996658Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3996723Z             {
2025-01-07T17:55:37.3996804Z                 "nus": packet_nus,
2025-01-07T17:55:37.3996934Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3997022Z                 "energies": packet_energies,
2025-01-07T17:55:37.3997145Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3997293Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3997437Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3997577Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3997697Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3997762Z             }
2025-01-07T17:55:37.3997832Z         )
2025-01-07T17:55:37.3997897Z     
2025-01-07T17:55:37.3997984Z         # Save other properties
2025-01-07T17:55:37.3998064Z         self.lines_df = lines_df
2025-01-07T17:55:37.3998147Z         self.r_inner = r_inner
2025-01-07T17:55:37.3998286Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3998422Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3998642Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3998749Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3998848Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3998914Z         )
2025-01-07T17:55:37.3999031Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3999109Z         self.t_inner = t_inner
2025-01-07T17:55:37.3999222Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3999319Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3999400Z         self.v_inner = v_inner
2025-01-07T17:55:37.3999475Z         self.v_outer = v_outer
2025-01-07T17:55:37.3999544Z     
2025-01-07T17:55:37.3999645Z         # First check if both options are provided
2025-01-07T17:55:37.3999816Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3999899Z >           raise ValueError(
2025-01-07T17:55:37.4000031Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4000200Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4000265Z             )
2025-01-07T17:55:37.4000618Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4000624Z 
2025-01-07T17:55:37.4000793Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4001147Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-07T17:55:37.4001152Z 
2025-01-07T17:55:37.4001366Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4001376Z 
2025-01-07T17:55:37.4001461Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4001555Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4001621Z         """
2025-01-07T17:55:37.4001770Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4001838Z     
2025-01-07T17:55:37.4001915Z         Parameters:
2025-01-07T17:55:37.4002144Z         -----------
2025-01-07T17:55:37.4002284Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4002350Z     
2025-01-07T17:55:37.4002422Z         Returns:
2025-01-07T17:55:37.4002492Z         --------
2025-01-07T17:55:37.4002579Z         An LIVPlotter instance.
2025-01-07T17:55:37.4002651Z         """
2025-01-07T17:55:37.4002785Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4002789Z 
2025-01-07T17:55:37.4002923Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4003035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4003202Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4003349Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4003568Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4003704Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4003904Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4003974Z     return cls(
2025-01-07T17:55:37.4004086Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4004091Z 
2025-01-07T17:55:37.4004371Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4004509Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4004679Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4004858Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4005063Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4005161Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4005473Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4005567Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4005733Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4005841Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4005963Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4005968Z 
2025-01-07T17:55:37.4006044Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4006212Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4006319Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4006513Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4006585Z        0.00025518])
2025-01-07T17:55:37.4006744Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4006938Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4007057Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4007188Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4007394Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4007610Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4007837Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4008024Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4008141Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4008225Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4008341Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4008429Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4008584Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4008751Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4008877Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4009030Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4009199Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4009319Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4009476Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4009605Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4009715Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4009791Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4009796Z 
2025-01-07T17:55:37.4009864Z     def __init__(
2025-01-07T17:55:37.4009935Z         self,
2025-01-07T17:55:37.4010017Z         last_interaction_type,
2025-01-07T17:55:37.4010107Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4010200Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4010287Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4010367Z         last_interaction_in_r,
2025-01-07T17:55:37.4010441Z         lines_df,
2025-01-07T17:55:37.4010520Z         packet_nus,
2025-01-07T17:55:37.4010597Z         packet_energies,
2025-01-07T17:55:37.4010670Z         r_inner,
2025-01-07T17:55:37.4010752Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4010936Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4011029Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4011200Z         spectrum_wavelength,
2025-01-07T17:55:37.4011269Z         t_inner,
2025-01-07T17:55:37.4011350Z         time_of_simulation,
2025-01-07T17:55:37.4011426Z         time_explosion,
2025-01-07T17:55:37.4011498Z         v_inner,
2025-01-07T17:55:37.4011564Z         v_outer,
2025-01-07T17:55:37.4011636Z         velocity
2025-01-07T17:55:37.4011701Z     ):
2025-01-07T17:55:37.4011772Z         """
2025-01-07T17:55:37.4012109Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4012180Z     
2025-01-07T17:55:37.4012251Z         Parameters
2025-01-07T17:55:37.4012325Z         ----------
2025-01-07T17:55:37.4012419Z         last_interaction_type : np.array
2025-01-07T17:55:37.4012563Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4012681Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4012775Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4012926Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4013012Z             absorption (interaction in)
2025-01-07T17:55:37.4013113Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4013252Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4013341Z             emission (interaction out)
2025-01-07T17:55:37.4013549Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4013702Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4013797Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4013946Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4014031Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4014189Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4014282Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4014446Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4014521Z             unit of Hz
2025-01-07T17:55:37.4040793Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4041072Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4041213Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4041382Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4041560Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4041752Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4042090Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4042307Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4042424Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4042581Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4042670Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4042817Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4042922Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4043049Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4043118Z         """
2025-01-07T17:55:37.4043314Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4043428Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4043529Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4043598Z             {
2025-01-07T17:55:37.4043683Z                 "nus": packet_nus,
2025-01-07T17:55:37.4043814Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4043914Z                 "energies": packet_energies,
2025-01-07T17:55:37.4044040Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4044187Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4044524Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4044664Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4044785Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4044851Z             }
2025-01-07T17:55:37.4044924Z         )
2025-01-07T17:55:37.4044990Z     
2025-01-07T17:55:37.4045088Z         # Save other properties
2025-01-07T17:55:37.4045171Z         self.lines_df = lines_df
2025-01-07T17:55:37.4045254Z         self.r_inner = r_inner
2025-01-07T17:55:37.4045397Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4045541Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4045673Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4045790Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4045893Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4045966Z         )
2025-01-07T17:55:37.4046087Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4046165Z         self.t_inner = t_inner
2025-01-07T17:55:37.4046281Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4046377Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4046464Z         self.v_inner = v_inner
2025-01-07T17:55:37.4046659Z         self.v_outer = v_outer
2025-01-07T17:55:37.4046734Z     
2025-01-07T17:55:37.4046837Z         # First check if both options are provided
2025-01-07T17:55:37.4047018Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4047098Z >           raise ValueError(
2025-01-07T17:55:37.4047244Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4047409Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4047484Z             )
2025-01-07T17:55:37.4047854Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4047861Z 
2025-01-07T17:55:37.4048043Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4048321Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-07T17:55:37.4048330Z 
2025-01-07T17:55:37.4048549Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4048554Z 
2025-01-07T17:55:37.4048650Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4048739Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4048813Z         """
2025-01-07T17:55:37.4048972Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4049040Z     
2025-01-07T17:55:37.4049121Z         Parameters:
2025-01-07T17:55:37.4049195Z         -----------
2025-01-07T17:55:37.4049324Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4049392Z     
2025-01-07T17:55:37.4049466Z         Returns:
2025-01-07T17:55:37.4049540Z         --------
2025-01-07T17:55:37.4049631Z         An LIVPlotter instance.
2025-01-07T17:55:37.4049699Z         """
2025-01-07T17:55:37.4049839Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4049844Z 
2025-01-07T17:55:37.4049988Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4050108Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4050279Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4050437Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4050672Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4050810Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4051018Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4051182Z     return cls(
2025-01-07T17:55:37.4051295Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4051300Z 
2025-01-07T17:55:37.4051580Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4051725Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4051908Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4052297Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4052508Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4052611Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4052801Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4052902Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4053077Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4053194Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4053312Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4053318Z 
2025-01-07T17:55:37.4053395Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4053722Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4053831Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4054034Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4054111Z        0.00025518])
2025-01-07T17:55:37.4054266Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4054464Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4054590Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4054730Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4054935Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4055045Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4055284Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4055480Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4055598Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4055684Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4055801Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4055892Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4056053Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4056226Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4056353Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4056506Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4056683Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4056811Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4056974Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4057104Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4057212Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4057291Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4057407Z 
2025-01-07T17:55:37.4057481Z     def __init__(
2025-01-07T17:55:37.4057557Z         self,
2025-01-07T17:55:37.4057641Z         last_interaction_type,
2025-01-07T17:55:37.4057732Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4057819Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4057906Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4057985Z         last_interaction_in_r,
2025-01-07T17:55:37.4058064Z         lines_df,
2025-01-07T17:55:37.4058137Z         packet_nus,
2025-01-07T17:55:37.4058220Z         packet_energies,
2025-01-07T17:55:37.4058289Z         r_inner,
2025-01-07T17:55:37.4058378Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4058568Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4058664Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4058753Z         spectrum_wavelength,
2025-01-07T17:55:37.4058822Z         t_inner,
2025-01-07T17:55:37.4058906Z         time_of_simulation,
2025-01-07T17:55:37.4058990Z         time_explosion,
2025-01-07T17:55:37.4059065Z         v_inner,
2025-01-07T17:55:37.4059133Z         v_outer,
2025-01-07T17:55:37.4059207Z         velocity
2025-01-07T17:55:37.4059275Z     ):
2025-01-07T17:55:37.4059348Z         """
2025-01-07T17:55:37.4059579Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4059652Z     
2025-01-07T17:55:37.4059834Z         Parameters
2025-01-07T17:55:37.4059912Z         ----------
2025-01-07T17:55:37.4060006Z         last_interaction_type : np.array
2025-01-07T17:55:37.4060164Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4060288Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4060386Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4060539Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4060626Z             absorption (interaction in)
2025-01-07T17:55:37.4060735Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4060875Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4060968Z             emission (interaction out)
2025-01-07T17:55:37.4061063Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4061219Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4061318Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4061474Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4061557Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4061723Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4061818Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4062147Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4062231Z             unit of Hz
2025-01-07T17:55:37.4062334Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4062469Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4062559Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4062674Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4062782Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4062915Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4063026Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4063156Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4063255Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4063398Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4063487Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4063607Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4063711Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4063947Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4064024Z         """
2025-01-07T17:55:37.4064201Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4064312Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4064403Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4064477Z             {
2025-01-07T17:55:37.4064561Z                 "nus": packet_nus,
2025-01-07T17:55:37.4064694Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4064787Z                 "energies": packet_energies,
2025-01-07T17:55:37.4064915Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4065069Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4065211Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4065352Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4065467Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4065538Z             }
2025-01-07T17:55:37.4065606Z         )
2025-01-07T17:55:37.4065676Z     
2025-01-07T17:55:37.4065762Z         # Save other properties
2025-01-07T17:55:37.4065852Z         self.lines_df = lines_df
2025-01-07T17:55:37.4065931Z         self.r_inner = r_inner
2025-01-07T17:55:37.4066191Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4066324Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4066460Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4066572Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4066668Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4066740Z         )
2025-01-07T17:55:37.4066856Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4066944Z         self.t_inner = t_inner
2025-01-07T17:55:37.4067051Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4067151Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4067230Z         self.v_inner = v_inner
2025-01-07T17:55:37.4067313Z         self.v_outer = v_outer
2025-01-07T17:55:37.4067379Z     
2025-01-07T17:55:37.4067487Z         # First check if both options are provided
2025-01-07T17:55:37.4067663Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4067750Z >           raise ValueError(
2025-01-07T17:55:37.4067888Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4068056Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4068130Z             )
2025-01-07T17:55:37.4068482Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4068493Z 
2025-01-07T17:55:37.4068700Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4068963Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-07T17:55:37.4068968Z 
2025-01-07T17:55:37.4069190Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4069195Z 
2025-01-07T17:55:37.4069285Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4069380Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4069448Z         """
2025-01-07T17:55:37.4069599Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4069671Z     
2025-01-07T17:55:37.4069745Z         Parameters:
2025-01-07T17:55:37.4069822Z         -----------
2025-01-07T17:55:37.4069937Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4070009Z     
2025-01-07T17:55:37.4070079Z         Returns:
2025-01-07T17:55:37.4070158Z         --------
2025-01-07T17:55:37.4070329Z         An LIVPlotter instance.
2025-01-07T17:55:37.4070403Z         """
2025-01-07T17:55:37.4070533Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4070538Z 
2025-01-07T17:55:37.4070680Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4070787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4070954Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4071099Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4071317Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4071455Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4071650Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4071726Z     return cls(
2025-01-07T17:55:37.4071834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4071842Z 
2025-01-07T17:55:37.4072330Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4072475Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4072657Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4072831Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4073156Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4073263Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4073452Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4073555Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4073721Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4073844Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4073955Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4073960Z 
2025-01-07T17:55:37.4074045Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4074212Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4074324Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4074522Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4074597Z        0.00025518])
2025-01-07T17:55:37.4074758Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4074954Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4075082Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4075210Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4075421Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4075524Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4075765Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4075957Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4076080Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4076173Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4076283Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4076381Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4076534Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4076712Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4076973Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4077126Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4077288Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4077414Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4077574Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4077704Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4077821Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4077894Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4077899Z 
2025-01-07T17:55:37.4077974Z     def __init__(
2025-01-07T17:55:37.4078042Z         self,
2025-01-07T17:55:37.4078131Z         last_interaction_type,
2025-01-07T17:55:37.4078221Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4078311Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4078394Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4078482Z         last_interaction_in_r,
2025-01-07T17:55:37.4078552Z         lines_df,
2025-01-07T17:55:37.4078630Z         packet_nus,
2025-01-07T17:55:37.4078708Z         packet_energies,
2025-01-07T17:55:37.4078783Z         r_inner,
2025-01-07T17:55:37.4078977Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4079163Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4079263Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4079345Z         spectrum_wavelength,
2025-01-07T17:55:37.4079419Z         t_inner,
2025-01-07T17:55:37.4079497Z         time_of_simulation,
2025-01-07T17:55:37.4079578Z         time_explosion,
2025-01-07T17:55:37.4079648Z         v_inner,
2025-01-07T17:55:37.4079720Z         v_outer,
2025-01-07T17:55:37.4079789Z         velocity
2025-01-07T17:55:37.4079869Z     ):
2025-01-07T17:55:37.4079938Z         """
2025-01-07T17:55:37.4080169Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4080236Z     
2025-01-07T17:55:37.4080314Z         Parameters
2025-01-07T17:55:37.4080387Z         ----------
2025-01-07T17:55:37.4080487Z         last_interaction_type : np.array
2025-01-07T17:55:37.4080636Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4080764Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4080867Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4081017Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4081110Z             absorption (interaction in)
2025-01-07T17:55:37.4081209Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4081352Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4081442Z             emission (interaction out)
2025-01-07T17:55:37.4081542Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4081690Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4081789Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4082094Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4082200Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4082362Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4082458Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4082638Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4082715Z             unit of Hz
2025-01-07T17:55:37.4082818Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4082952Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4083043Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4083277Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4083391Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4083513Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4083624Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4083750Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4083856Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4083989Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4084077Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4084202Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4084298Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4084410Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4084476Z         """
2025-01-07T17:55:37.4084652Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4084760Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4084853Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4084919Z             {
2025-01-07T17:55:37.4085001Z                 "nus": packet_nus,
2025-01-07T17:55:37.4085124Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4085216Z                 "energies": packet_energies,
2025-01-07T17:55:37.4085444Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4085595Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4085737Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4085873Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4085986Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4086052Z             }
2025-01-07T17:55:37.4086124Z         )
2025-01-07T17:55:37.4086188Z     
2025-01-07T17:55:37.4086273Z         # Save other properties
2025-01-07T17:55:37.4086354Z         self.lines_df = lines_df
2025-01-07T17:55:37.4086434Z         self.r_inner = r_inner
2025-01-07T17:55:37.4086576Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4086712Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4086843Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4086955Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4087053Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4087119Z         )
2025-01-07T17:55:37.4087236Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4087313Z         self.t_inner = t_inner
2025-01-07T17:55:37.4087425Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4087519Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4087604Z         self.v_inner = v_inner
2025-01-07T17:55:37.4087679Z         self.v_outer = v_outer
2025-01-07T17:55:37.4087747Z     
2025-01-07T17:55:37.4087846Z         # First check if both options are provided
2025-01-07T17:55:37.4088019Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4088097Z >           raise ValueError(
2025-01-07T17:55:37.4088239Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4088400Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4088468Z             )
2025-01-07T17:55:37.4088825Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4088831Z 
2025-01-07T17:55:37.4089003Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4089271Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-07T17:55:37.4089361Z 
2025-01-07T17:55:37.4089576Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4089581Z 
2025-01-07T17:55:37.4089671Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4089757Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4089828Z         """
2025-01-07T17:55:37.4089973Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4090047Z     
2025-01-07T17:55:37.4090122Z         Parameters:
2025-01-07T17:55:37.4090191Z         -----------
2025-01-07T17:55:37.4090309Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4090374Z     
2025-01-07T17:55:37.4090444Z         Returns:
2025-01-07T17:55:37.4090511Z         --------
2025-01-07T17:55:37.4090594Z         An LIVPlotter instance.
2025-01-07T17:55:37.4090660Z         """
2025-01-07T17:55:37.4090790Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4090798Z 
2025-01-07T17:55:37.4090930Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4091040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4091194Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4091344Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4091639Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4091772Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4092140Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4092216Z     return cls(
2025-01-07T17:55:37.4092325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4092330Z 
2025-01-07T17:55:37.4092605Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4092752Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4092924Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4093105Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4093307Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4093417Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4093601Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4093695Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4093863Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4093977Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4094090Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4094097Z 
2025-01-07T17:55:37.4094173Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4094341Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4094449Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4094645Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4094716Z        0.00025518])
2025-01-07T17:55:37.4094872Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4095068Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4095189Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4095319Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4095526Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4095760Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4095993Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4096182Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4096295Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4096384Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4096502Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4096593Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4096755Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4096936Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4097062Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4097212Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4097384Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4097501Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4097661Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4097792Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4098011Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4098091Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4098096Z 
2025-01-07T17:55:37.4098166Z     def __init__(
2025-01-07T17:55:37.4098236Z         self,
2025-01-07T17:55:37.4098321Z         last_interaction_type,
2025-01-07T17:55:37.4098411Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4098497Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4098582Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4098666Z         last_interaction_in_r,
2025-01-07T17:55:37.4098740Z         lines_df,
2025-01-07T17:55:37.4098812Z         packet_nus,
2025-01-07T17:55:37.4098893Z         packet_energies,
2025-01-07T17:55:37.4098961Z         r_inner,
2025-01-07T17:55:37.4099048Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4099225Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4099327Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4099410Z         spectrum_wavelength,
2025-01-07T17:55:37.4099478Z         t_inner,
2025-01-07T17:55:37.4099558Z         time_of_simulation,
2025-01-07T17:55:37.4099633Z         time_explosion,
2025-01-07T17:55:37.4099705Z         v_inner,
2025-01-07T17:55:37.4099770Z         v_outer,
2025-01-07T17:55:37.4099839Z         velocity
2025-01-07T17:55:37.4099905Z     ):
2025-01-07T17:55:37.4099974Z         """
2025-01-07T17:55:37.4100199Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4100271Z     
2025-01-07T17:55:37.4100343Z         Parameters
2025-01-07T17:55:37.4100418Z         ----------
2025-01-07T17:55:37.4100509Z         last_interaction_type : np.array
2025-01-07T17:55:37.4100664Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4100778Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4100880Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4101030Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4101118Z             absorption (interaction in)
2025-01-07T17:55:37.4101220Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4101360Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4101448Z             emission (interaction out)
2025-01-07T17:55:37.4101542Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4101694Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4101889Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4102201Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4102287Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4102450Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4102545Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4102707Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4102782Z             unit of Hz
2025-01-07T17:55:37.4102878Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4103009Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4103090Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4103205Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4103313Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4103441Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4103545Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4103669Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4103766Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4103906Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4104110Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4104231Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4104328Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4104438Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4104509Z         """
2025-01-07T17:55:37.4104685Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4104794Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4104883Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4104956Z             {
2025-01-07T17:55:37.4105033Z                 "nus": packet_nus,
2025-01-07T17:55:37.4105159Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4105252Z                 "energies": packet_energies,
2025-01-07T17:55:37.4105372Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4105517Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4105663Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4105802Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4105913Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4105980Z             }
2025-01-07T17:55:37.4106046Z         )
2025-01-07T17:55:37.4106113Z     
2025-01-07T17:55:37.4106194Z         # Save other properties
2025-01-07T17:55:37.4106278Z         self.lines_df = lines_df
2025-01-07T17:55:37.4106358Z         self.r_inner = r_inner
2025-01-07T17:55:37.4106500Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4106629Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4106769Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4106875Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4106978Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4107045Z         )
2025-01-07T17:55:37.4107160Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4107241Z         self.t_inner = t_inner
2025-01-07T17:55:37.4107349Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4107444Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4107521Z         self.v_inner = v_inner
2025-01-07T17:55:37.4107599Z         self.v_outer = v_outer
2025-01-07T17:55:37.4107667Z     
2025-01-07T17:55:37.4107887Z         # First check if both options are provided
2025-01-07T17:55:37.4108055Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4108136Z >           raise ValueError(
2025-01-07T17:55:37.4108273Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4108434Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4108503Z             )
2025-01-07T17:55:37.4108857Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4108863Z 
2025-01-07T17:55:37.4109032Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4109301Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-07T17:55:37.4109305Z 
2025-01-07T17:55:37.4109519Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4109528Z 
2025-01-07T17:55:37.4109611Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4109702Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4109768Z         """
2025-01-07T17:55:37.4109917Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4109988Z     
2025-01-07T17:55:37.4110061Z         Parameters:
2025-01-07T17:55:37.4110133Z         -----------
2025-01-07T17:55:37.4110329Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4110396Z     
2025-01-07T17:55:37.4110463Z         Returns:
2025-01-07T17:55:37.4110533Z         --------
2025-01-07T17:55:37.4110612Z         An LIVPlotter instance.
2025-01-07T17:55:37.4110680Z         """
2025-01-07T17:55:37.4110810Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4110815Z 
2025-01-07T17:55:37.4110954Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4111059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4111221Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4111361Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4111573Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4111707Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4111907Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4112168Z     return cls(
2025-01-07T17:55:37.4112289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4112294Z 
2025-01-07T17:55:37.4112580Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4112716Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4112892Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4113072Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4113273Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4113372Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4113559Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4113663Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4113822Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4113937Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4114045Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4114050Z 
2025-01-07T17:55:37.4114128Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4114291Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4114517Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4114710Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4114781Z        0.00025518])
2025-01-07T17:55:37.4114932Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4115122Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4115247Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4115371Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4115574Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4115674Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4115908Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4116096Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4116209Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4116291Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4116402Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4116492Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4116754Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4116936Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4117056Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4117204Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4117367Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4117490Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4117646Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4117774Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4117896Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4117969Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4117977Z 
2025-01-07T17:55:37.4118048Z     def __init__(
2025-01-07T17:55:37.4118118Z         self,
2025-01-07T17:55:37.4118201Z         last_interaction_type,
2025-01-07T17:55:37.4118286Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4118371Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4118453Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4118536Z         last_interaction_in_r,
2025-01-07T17:55:37.4118605Z         lines_df,
2025-01-07T17:55:37.4118681Z         packet_nus,
2025-01-07T17:55:37.4118761Z         packet_energies,
2025-01-07T17:55:37.4118833Z         r_inner,
2025-01-07T17:55:37.4118917Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4119096Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4119193Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4119274Z         spectrum_wavelength,
2025-01-07T17:55:37.4119348Z         t_inner,
2025-01-07T17:55:37.4119429Z         time_of_simulation,
2025-01-07T17:55:37.4119507Z         time_explosion,
2025-01-07T17:55:37.4119575Z         v_inner,
2025-01-07T17:55:37.4119644Z         v_outer,
2025-01-07T17:55:37.4119711Z         velocity
2025-01-07T17:55:37.4119780Z     ):
2025-01-07T17:55:37.4119846Z         """
2025-01-07T17:55:37.4120073Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4120136Z     
2025-01-07T17:55:37.4120209Z         Parameters
2025-01-07T17:55:37.4120279Z         ----------
2025-01-07T17:55:37.4120473Z         last_interaction_type : np.array
2025-01-07T17:55:37.4120621Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4120737Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4120834Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4120980Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4121071Z             absorption (interaction in)
2025-01-07T17:55:37.4121171Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4121313Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4121398Z             emission (interaction out)
2025-01-07T17:55:37.4121495Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4121643Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4121736Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4121881Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4122151Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4122319Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4122412Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4122572Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4122643Z             unit of Hz
2025-01-07T17:55:37.4122888Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4123016Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4123104Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4123214Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4123325Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4123451Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4123560Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4123683Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4123784Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4123919Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4124006Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4124129Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4124226Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4124344Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4124418Z         """
2025-01-07T17:55:37.4124601Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4124708Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4124807Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4124875Z             {
2025-01-07T17:55:37.4124958Z                 "nus": packet_nus,
2025-01-07T17:55:37.4125083Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4125182Z                 "energies": packet_energies,
2025-01-07T17:55:37.4125300Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4125456Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4125606Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4125747Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4125864Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4125931Z             }
2025-01-07T17:55:37.4126003Z         )
2025-01-07T17:55:37.4126069Z     
2025-01-07T17:55:37.4126157Z         # Save other properties
2025-01-07T17:55:37.4126239Z         self.lines_df = lines_df
2025-01-07T17:55:37.4126323Z         self.r_inner = r_inner
2025-01-07T17:55:37.4126465Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4126727Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4126861Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4126972Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4127069Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4127140Z         )
2025-01-07T17:55:37.4127261Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4127344Z         self.t_inner = t_inner
2025-01-07T17:55:37.4127458Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4127552Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4127633Z         self.v_inner = v_inner
2025-01-07T17:55:37.4127709Z         self.v_outer = v_outer
2025-01-07T17:55:37.4127780Z     
2025-01-07T17:55:37.4127881Z         # First check if both options are provided
2025-01-07T17:55:37.4128058Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4128143Z >           raise ValueError(
2025-01-07T17:55:37.4128290Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4128456Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4128528Z             )
2025-01-07T17:55:37.4128876Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4128966Z 
2025-01-07T17:55:37.4129141Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4129376Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-07T17:55:37.4129381Z 
2025-01-07T17:55:37.4129593Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4129598Z 
2025-01-07T17:55:37.4129693Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4129782Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4129858Z         """
2025-01-07T17:55:37.4130007Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4130078Z     
2025-01-07T17:55:37.4130152Z         Parameters:
2025-01-07T17:55:37.4130228Z         -----------
2025-01-07T17:55:37.4130347Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4130414Z     
2025-01-07T17:55:37.4130488Z         Returns:
2025-01-07T17:55:37.4130563Z         --------
2025-01-07T17:55:37.4130651Z         An LIVPlotter instance.
2025-01-07T17:55:37.4130721Z         """
2025-01-07T17:55:37.4130856Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4130861Z 
2025-01-07T17:55:37.4130997Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4131109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4131268Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4131417Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4131634Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4131772Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4132137Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4132222Z     return cls(
2025-01-07T17:55:37.4132334Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4132344Z 
2025-01-07T17:55:37.4132625Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4132765Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4132941Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4133121Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4133318Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4133546Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4133734Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4133830Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4133999Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4134115Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4134232Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4134237Z 
2025-01-07T17:55:37.4134315Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4134484Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4134590Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4134789Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4134862Z        0.00025518])
2025-01-07T17:55:37.4135024Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4135224Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4135345Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4135586Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4135789Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4135899Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4136134Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4136326Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4136439Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4136535Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4136642Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4136745Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4136903Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4137076Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4137206Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4137353Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4137523Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4137641Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4137806Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4137937Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4138053Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4138132Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4138136Z 
2025-01-07T17:55:37.4138207Z     def __init__(
2025-01-07T17:55:37.4138279Z         self,
2025-01-07T17:55:37.4138362Z         last_interaction_type,
2025-01-07T17:55:37.4138455Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4138541Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4138632Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4138711Z         last_interaction_in_r,
2025-01-07T17:55:37.4138785Z         lines_df,
2025-01-07T17:55:37.4138857Z         packet_nus,
2025-01-07T17:55:37.4138940Z         packet_energies,
2025-01-07T17:55:37.4139010Z         r_inner,
2025-01-07T17:55:37.4139099Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4139280Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4139469Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4139557Z         spectrum_wavelength,
2025-01-07T17:55:37.4139626Z         t_inner,
2025-01-07T17:55:37.4139709Z         time_of_simulation,
2025-01-07T17:55:37.4139786Z         time_explosion,
2025-01-07T17:55:37.4139859Z         v_inner,
2025-01-07T17:55:37.4139926Z         v_outer,
2025-01-07T17:55:37.4140003Z         velocity
2025-01-07T17:55:37.4140070Z     ):
2025-01-07T17:55:37.4140142Z         """
2025-01-07T17:55:37.4140370Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4140441Z     
2025-01-07T17:55:37.4140513Z         Parameters
2025-01-07T17:55:37.4140589Z         ----------
2025-01-07T17:55:37.4140682Z         last_interaction_type : np.array
2025-01-07T17:55:37.4140838Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4140953Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4141061Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4141207Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4141301Z             absorption (interaction in)
2025-01-07T17:55:37.4141404Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4141544Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4141719Z             emission (interaction out)
2025-01-07T17:55:37.4141813Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4142073Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4142169Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4142322Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4142405Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4142572Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4142669Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4142833Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4142912Z             unit of Hz
2025-01-07T17:55:37.4143007Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4143143Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4143230Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4143347Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4143454Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4143583Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4143687Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4143815Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4143911Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4144050Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4144139Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4144266Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4144365Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4144474Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4144547Z         """
2025-01-07T17:55:37.4144725Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4144833Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4144929Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4145001Z             {
2025-01-07T17:55:37.4145079Z                 "nus": packet_nus,
2025-01-07T17:55:37.4145209Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4145300Z                 "energies": packet_energies,
2025-01-07T17:55:37.4145423Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4145690Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4145835Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4145979Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4146095Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4146170Z             }
2025-01-07T17:55:37.4146237Z         )
2025-01-07T17:55:37.4146307Z     
2025-01-07T17:55:37.4146390Z         # Save other properties
2025-01-07T17:55:37.4146476Z         self.lines_df = lines_df
2025-01-07T17:55:37.4146556Z         self.r_inner = r_inner
2025-01-07T17:55:37.4146701Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4146834Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4146978Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4147090Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4147192Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4147259Z         )
2025-01-07T17:55:37.4147380Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4147463Z         self.t_inner = t_inner
2025-01-07T17:55:37.4147571Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4147669Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4147877Z         self.v_inner = v_inner
2025-01-07T17:55:37.4147958Z         self.v_outer = v_outer
2025-01-07T17:55:37.4148023Z     
2025-01-07T17:55:37.4148130Z         # First check if both options are provided
2025-01-07T17:55:37.4148300Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4148384Z >           raise ValueError(
2025-01-07T17:55:37.4148519Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4148685Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4148757Z             )
2025-01-07T17:55:37.4149114Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4149119Z 
2025-01-07T17:55:37.4149294Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4149522Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-07T17:55:37.4149530Z 
2025-01-07T17:55:37.4149748Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4149753Z 
2025-01-07T17:55:37.4149839Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4149936Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4150004Z         """
2025-01-07T17:55:37.4150158Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4150224Z     
2025-01-07T17:55:37.4150305Z         Parameters:
2025-01-07T17:55:37.4150375Z         -----------
2025-01-07T17:55:37.4150495Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4150570Z     
2025-01-07T17:55:37.4150640Z         Returns:
2025-01-07T17:55:37.4150713Z         --------
2025-01-07T17:55:37.4150796Z         An LIVPlotter instance.
2025-01-07T17:55:37.4150869Z         """
2025-01-07T17:55:37.4150999Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4151007Z 
2025-01-07T17:55:37.4151144Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4151253Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4151416Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4151562Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4151777Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4151908Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4152331Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4152408Z     return cls(
2025-01-07T17:55:37.4152513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4152518Z 
2025-01-07T17:55:37.4152804Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4152942Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4153121Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4153299Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4153504Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4153605Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4153796Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4153901Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4154064Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4154181Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4154290Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4154400Z 
2025-01-07T17:55:37.4154484Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4154648Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4154758Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4154950Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4155025Z        0.00025518])
2025-01-07T17:55:37.4155180Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4155384Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4155509Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4155635Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4155843Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4155950Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4156189Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4156375Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4156492Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4156578Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4156692Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4156788Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4156938Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4157119Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4157240Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4157392Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4157560Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4157683Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4157841Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4157971Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4158081Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4158247Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4158252Z 
2025-01-07T17:55:37.4158327Z     def __init__(
2025-01-07T17:55:37.4158396Z         self,
2025-01-07T17:55:37.4158486Z         last_interaction_type,
2025-01-07T17:55:37.4158571Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4158662Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4158744Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4158832Z         last_interaction_in_r,
2025-01-07T17:55:37.4158902Z         lines_df,
2025-01-07T17:55:37.4158980Z         packet_nus,
2025-01-07T17:55:37.4159058Z         packet_energies,
2025-01-07T17:55:37.4159132Z         r_inner,
2025-01-07T17:55:37.4159216Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4159398Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4159493Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4159581Z         spectrum_wavelength,
2025-01-07T17:55:37.4159657Z         t_inner,
2025-01-07T17:55:37.4159735Z         time_of_simulation,
2025-01-07T17:55:37.4159816Z         time_explosion,
2025-01-07T17:55:37.4159884Z         v_inner,
2025-01-07T17:55:37.4159957Z         v_outer,
2025-01-07T17:55:37.4160027Z         velocity
2025-01-07T17:55:37.4160098Z     ):
2025-01-07T17:55:37.4160165Z         """
2025-01-07T17:55:37.4160393Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4160544Z     
2025-01-07T17:55:37.4160621Z         Parameters
2025-01-07T17:55:37.4160692Z         ----------
2025-01-07T17:55:37.4160790Z         last_interaction_type : np.array
2025-01-07T17:55:37.4160941Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4161060Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4161156Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4161304Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4161400Z             absorption (interaction in)
2025-01-07T17:55:37.4161497Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4161642Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4161729Z             emission (interaction out)
2025-01-07T17:55:37.4161827Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4162120Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4162245Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4162392Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4162480Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4162637Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4162731Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4162893Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4162975Z             unit of Hz
2025-01-07T17:55:37.4163074Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4163201Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4163292Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4163405Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4163518Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4163648Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4163759Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4163883Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4163992Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4164129Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4164222Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4164343Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4164567Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4164683Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4164753Z         """
2025-01-07T17:55:37.4164935Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4165040Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4165138Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4165211Z             {
2025-01-07T17:55:37.4165296Z                 "nus": packet_nus,
2025-01-07T17:55:37.4165422Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4165523Z                 "energies": packet_energies,
2025-01-07T17:55:37.4165645Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4165800Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4165943Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4166092Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4166210Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4166279Z             }
2025-01-07T17:55:37.4166351Z         )
2025-01-07T17:55:37.4166417Z     
2025-01-07T17:55:37.4166508Z         # Save other properties
2025-01-07T17:55:37.4166590Z         self.lines_df = lines_df
2025-01-07T17:55:37.4166785Z         self.r_inner = r_inner
2025-01-07T17:55:37.4166927Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4167067Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4167200Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4167314Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4167411Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4167483Z         )
2025-01-07T17:55:37.4167605Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4167691Z         self.t_inner = t_inner
2025-01-07T17:55:37.4167805Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4167899Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4167981Z         self.v_inner = v_inner
2025-01-07T17:55:37.4168058Z         self.v_outer = v_outer
2025-01-07T17:55:37.4168129Z     
2025-01-07T17:55:37.4168234Z         # First check if both options are provided
2025-01-07T17:55:37.4168411Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4168491Z >           raise ValueError(
2025-01-07T17:55:37.4168664Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4168829Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4168903Z             )
2025-01-07T17:55:37.4169256Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4169271Z 
2025-01-07T17:55:37.4169443Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4169678Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-07T17:55:37.4169683Z 
2025-01-07T17:55:37.4169899Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4169907Z 
2025-01-07T17:55:37.4170000Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4170090Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4170163Z         """
2025-01-07T17:55:37.4170314Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4170386Z     
2025-01-07T17:55:37.4170460Z         Parameters:
2025-01-07T17:55:37.4170538Z         -----------
2025-01-07T17:55:37.4170653Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4170724Z     
2025-01-07T17:55:37.4170903Z         Returns:
2025-01-07T17:55:37.4170973Z         --------
2025-01-07T17:55:37.4171062Z         An LIVPlotter instance.
2025-01-07T17:55:37.4171129Z         """
2025-01-07T17:55:37.4171267Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4171272Z 
2025-01-07T17:55:37.4171407Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4171520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4171681Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4171829Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4172215Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4172357Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4172556Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4172632Z     return cls(
2025-01-07T17:55:37.4172747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4172752Z 
2025-01-07T17:55:37.4173034Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4173174Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4173350Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4173652Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4173857Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4173964Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4174147Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4174247Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4174415Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4174531Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4174646Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4174651Z 
2025-01-07T17:55:37.4174728Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4174897Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4175006Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4175210Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4175278Z        0.00025518])
2025-01-07T17:55:37.4175439Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4175633Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4175759Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4175897Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4176100Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4176209Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4176439Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4176632Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4176746Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4176838Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4176948Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4177048Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4177208Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4177382Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4177626Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4177774Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4177945Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4178069Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4178234Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4178360Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4178472Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4178546Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4178555Z 
2025-01-07T17:55:37.4178627Z     def __init__(
2025-01-07T17:55:37.4178701Z         self,
2025-01-07T17:55:37.4178789Z         last_interaction_type,
2025-01-07T17:55:37.4178883Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4178970Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4179058Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4179138Z         last_interaction_in_r,
2025-01-07T17:55:37.4179213Z         lines_df,
2025-01-07T17:55:37.4179285Z         packet_nus,
2025-01-07T17:55:37.4179367Z         packet_energies,
2025-01-07T17:55:37.4179519Z         r_inner,
2025-01-07T17:55:37.4179611Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4179789Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4179891Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4179972Z         spectrum_wavelength,
2025-01-07T17:55:37.4180047Z         t_inner,
2025-01-07T17:55:37.4180125Z         time_of_simulation,
2025-01-07T17:55:37.4180205Z         time_explosion,
2025-01-07T17:55:37.4180280Z         v_inner,
2025-01-07T17:55:37.4180351Z         v_outer,
2025-01-07T17:55:37.4180425Z         velocity
2025-01-07T17:55:37.4180491Z     ):
2025-01-07T17:55:37.4180565Z         """
2025-01-07T17:55:37.4180788Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4180858Z     
2025-01-07T17:55:37.4180930Z         Parameters
2025-01-07T17:55:37.4181006Z         ----------
2025-01-07T17:55:37.4181099Z         last_interaction_type : np.array
2025-01-07T17:55:37.4181259Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4181377Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4181478Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4181625Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4181718Z             absorption (interaction in)
2025-01-07T17:55:37.4181821Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4182079Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4182175Z             emission (interaction out)
2025-01-07T17:55:37.4182270Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4182422Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4182515Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4182667Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4182753Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4182918Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4183007Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4183173Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4183248Z             unit of Hz
2025-01-07T17:55:37.4183348Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4183482Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4183705Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4183822Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4183929Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4184057Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4184165Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4184293Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4184391Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4184532Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4184614Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4184740Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4184835Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4184954Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4185030Z         """
2025-01-07T17:55:37.4185201Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4185307Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4185398Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4185471Z             {
2025-01-07T17:55:37.4185550Z                 "nus": packet_nus,
2025-01-07T17:55:37.4185680Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4185883Z                 "energies": packet_energies,
2025-01-07T17:55:37.4186005Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4186151Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4186298Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4186441Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4186558Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4186635Z             }
2025-01-07T17:55:37.4186704Z         )
2025-01-07T17:55:37.4186774Z     
2025-01-07T17:55:37.4186858Z         # Save other properties
2025-01-07T17:55:37.4186946Z         self.lines_df = lines_df
2025-01-07T17:55:37.4187026Z         self.r_inner = r_inner
2025-01-07T17:55:37.4187176Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4187312Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4187448Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4187557Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4187657Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4187724Z         )
2025-01-07T17:55:37.4187846Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4187924Z         self.t_inner = t_inner
2025-01-07T17:55:37.4188040Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4188141Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4188220Z         self.v_inner = v_inner
2025-01-07T17:55:37.4188303Z         self.v_outer = v_outer
2025-01-07T17:55:37.4188369Z     
2025-01-07T17:55:37.4188475Z         # First check if both options are provided
2025-01-07T17:55:37.4188647Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4188735Z >           raise ValueError(
2025-01-07T17:55:37.4188873Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4189043Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4189111Z             )
2025-01-07T17:55:37.4189467Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4189473Z 
2025-01-07T17:55:37.4189650Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4189966Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-07T17:55:37.4189972Z 
2025-01-07T17:55:37.4190192Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4190197Z 
2025-01-07T17:55:37.4190283Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4190377Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4190449Z         """
2025-01-07T17:55:37.4190600Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4190667Z     
2025-01-07T17:55:37.4190746Z         Parameters:
2025-01-07T17:55:37.4190817Z         -----------
2025-01-07T17:55:37.4190935Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4191002Z     
2025-01-07T17:55:37.4191080Z         Returns:
2025-01-07T17:55:37.4191155Z         --------
2025-01-07T17:55:37.4191239Z         An LIVPlotter instance.
2025-01-07T17:55:37.4191311Z         """
2025-01-07T17:55:37.4191448Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4191453Z 
2025-01-07T17:55:37.4191593Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4191700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4191863Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4192115Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4192451Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4192585Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4192788Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4192860Z     return cls(
2025-01-07T17:55:37.4192972Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4192977Z 
2025-01-07T17:55:37.4193261Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4193400Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4193580Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4193756Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4193957Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4194062Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4194251Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4194348Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4194514Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4194629Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4194743Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4194747Z 
2025-01-07T17:55:37.4194829Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4194993Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4195102Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4195295Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4195372Z        0.00025518])
2025-01-07T17:55:37.4195527Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4195727Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4195857Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4195984Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4196193Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4196432Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4196668Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4196856Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4196972Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4197061Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4197173Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4197263Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4197422Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4197600Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4197722Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4197879Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4198046Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4198169Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4198325Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4198536Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4198645Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4198724Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4198729Z 
2025-01-07T17:55:37.4198805Z     def __init__(
2025-01-07T17:55:37.4198875Z         self,
2025-01-07T17:55:37.4198963Z         last_interaction_type,
2025-01-07T17:55:37.4199048Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4199140Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4199228Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4199313Z         last_interaction_in_r,
2025-01-07T17:55:37.4199383Z         lines_df,
2025-01-07T17:55:37.4199459Z         packet_nus,
2025-01-07T17:55:37.4199539Z         packet_energies,
2025-01-07T17:55:37.4199614Z         r_inner,
2025-01-07T17:55:37.4199697Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4199887Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4199988Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4200075Z         spectrum_wavelength,
2025-01-07T17:55:37.4200145Z         t_inner,
2025-01-07T17:55:37.4200230Z         time_of_simulation,
2025-01-07T17:55:37.4200305Z         time_explosion,
2025-01-07T17:55:37.4200380Z         v_inner,
2025-01-07T17:55:37.4200454Z         v_outer,
2025-01-07T17:55:37.4200523Z         velocity
2025-01-07T17:55:37.4200595Z     ):
2025-01-07T17:55:37.4200661Z         """
2025-01-07T17:55:37.4200895Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4200962Z     
2025-01-07T17:55:37.4201041Z         Parameters
2025-01-07T17:55:37.4201112Z         ----------
2025-01-07T17:55:37.4201209Z         last_interaction_type : np.array
2025-01-07T17:55:37.4201360Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4201482Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4201583Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4201733Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4201822Z             absorption (interaction in)
2025-01-07T17:55:37.4202039Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4202248Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4202337Z             emission (interaction out)
2025-01-07T17:55:37.4202436Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4202708Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4202806Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4202953Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4203045Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4203206Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4203304Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4203462Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4203538Z             unit of Hz
2025-01-07T17:55:37.4203634Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4203770Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4203860Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4203970Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4204084Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4204210Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4204324Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4204444Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4204547Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4204681Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4204881Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4205002Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4205102Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4205216Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4205289Z         """
2025-01-07T17:55:37.4205472Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4205577Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4205677Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4205749Z             {
2025-01-07T17:55:37.4205832Z                 "nus": packet_nus,
2025-01-07T17:55:37.4205956Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4206051Z                 "energies": packet_energies,
2025-01-07T17:55:37.4206166Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4206322Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4206467Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4206611Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4206724Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4206798Z             }
2025-01-07T17:55:37.4216610Z         )
2025-01-07T17:55:37.4216848Z     
2025-01-07T17:55:37.4217084Z         # Save other properties
2025-01-07T17:55:37.4217307Z         self.lines_df = lines_df
2025-01-07T17:55:37.4217493Z         self.r_inner = r_inner
2025-01-07T17:55:37.4217746Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4217969Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4218178Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4218363Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4218517Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4218632Z         )
2025-01-07T17:55:37.4218820Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4218954Z         self.t_inner = t_inner
2025-01-07T17:55:37.4219128Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4219286Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4219410Z         self.v_inner = v_inner
2025-01-07T17:55:37.4219542Z         self.v_outer = v_outer
2025-01-07T17:55:37.4219865Z     
2025-01-07T17:55:37.4220031Z         # First check if both options are provided
2025-01-07T17:55:37.4220300Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4220428Z >           raise ValueError(
2025-01-07T17:55:37.4220655Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4220926Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4221046Z             )
2025-01-07T17:55:37.4221688Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4221700Z 
2025-01-07T17:55:37.4222192Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4222580Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-07T17:55:37.4222595Z 
2025-01-07T17:55:37.4222976Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4222994Z 
2025-01-07T17:55:37.4223164Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4223318Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4223441Z         """
2025-01-07T17:55:37.4223697Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4223845Z     
2025-01-07T17:55:37.4223973Z         Parameters:
2025-01-07T17:55:37.4224260Z         -----------
2025-01-07T17:55:37.4224442Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4224551Z     
2025-01-07T17:55:37.4224661Z         Returns:
2025-01-07T17:55:37.4224781Z         --------
2025-01-07T17:55:37.4224911Z         An LIVPlotter instance.
2025-01-07T17:55:37.4225025Z         """
2025-01-07T17:55:37.4225235Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4225243Z 
2025-01-07T17:55:37.4225461Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4225646Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4225900Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4226138Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4226475Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4226691Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4227012Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4227144Z     return cls(
2025-01-07T17:55:37.4227313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4227325Z 
2025-01-07T17:55:37.4227779Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4228006Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4228291Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4228586Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4228900Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4229068Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4229356Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4229528Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4229798Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4229980Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4230157Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4230164Z 
2025-01-07T17:55:37.4230288Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4230562Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4230909Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4231235Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4231348Z        0.00025518])
2025-01-07T17:55:37.4231608Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4232071Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4232282Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4232497Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4232846Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4233026Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4233417Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4233734Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4233910Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4234050Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4234220Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4234540Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4234789Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4235074Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4235280Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4235520Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4235791Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4235994Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4236264Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4236473Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4236650Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4236777Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4236784Z 
2025-01-07T17:55:37.4236901Z     def __init__(
2025-01-07T17:55:37.4237008Z         self,
2025-01-07T17:55:37.4257802Z         last_interaction_type,
2025-01-07T17:55:37.4257906Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4257997Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4258083Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4258163Z         last_interaction_in_r,
2025-01-07T17:55:37.4258233Z         lines_df,
2025-01-07T17:55:37.4258314Z         packet_nus,
2025-01-07T17:55:37.4258393Z         packet_energies,
2025-01-07T17:55:37.4258458Z         r_inner,
2025-01-07T17:55:37.4258543Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4258741Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4258842Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4258923Z         spectrum_wavelength,
2025-01-07T17:55:37.4258997Z         t_inner,
2025-01-07T17:55:37.4259073Z         time_of_simulation,
2025-01-07T17:55:37.4259147Z         time_explosion,
2025-01-07T17:55:37.4259212Z         v_inner,
2025-01-07T17:55:37.4259279Z         v_outer,
2025-01-07T17:55:37.4259343Z         velocity
2025-01-07T17:55:37.4259409Z     ):
2025-01-07T17:55:37.4259476Z         """
2025-01-07T17:55:37.4259709Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4259775Z     
2025-01-07T17:55:37.4259844Z         Parameters
2025-01-07T17:55:37.4260095Z         ----------
2025-01-07T17:55:37.4260190Z         last_interaction_type : np.array
2025-01-07T17:55:37.4260347Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4260465Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4260562Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4260709Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4260802Z             absorption (interaction in)
2025-01-07T17:55:37.4260899Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4261043Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4261127Z             emission (interaction out)
2025-01-07T17:55:37.4261222Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4261373Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4261464Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4261617Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4261698Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4261867Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4262202Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4262376Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4262569Z             unit of Hz
2025-01-07T17:55:37.4262666Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4262796Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4262881Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4262990Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4263096Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4263228Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4263333Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4263463Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4263562Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4263700Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4263782Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4263904Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4264000Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4264112Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4264177Z         """
2025-01-07T17:55:37.4264355Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4264459Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4264549Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4264617Z             {
2025-01-07T17:55:37.4264693Z                 "nus": packet_nus,
2025-01-07T17:55:37.4264822Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4264910Z                 "energies": packet_energies,
2025-01-07T17:55:37.4265030Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4265176Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4265317Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4265452Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4265563Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4265626Z             }
2025-01-07T17:55:37.4265692Z         )
2025-01-07T17:55:37.4265754Z     
2025-01-07T17:55:37.4265838Z         # Save other properties
2025-01-07T17:55:37.4265920Z         self.lines_df = lines_df
2025-01-07T17:55:37.4265995Z         self.r_inner = r_inner
2025-01-07T17:55:37.4266139Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4266415Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4266547Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4266652Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4266750Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4266814Z         )
2025-01-07T17:55:37.4266934Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4267011Z         self.t_inner = t_inner
2025-01-07T17:55:37.4267126Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4267217Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4267294Z         self.v_inner = v_inner
2025-01-07T17:55:37.4267367Z         self.v_outer = v_outer
2025-01-07T17:55:37.4267431Z     
2025-01-07T17:55:37.4267533Z         # First check if both options are provided
2025-01-07T17:55:37.4267720Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4267809Z >           raise ValueError(
2025-01-07T17:55:37.4267947Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4268113Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4268178Z             )
2025-01-07T17:55:37.4268544Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4268633Z 
2025-01-07T17:55:37.4268815Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4269055Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-07T17:55:37.4269061Z 
2025-01-07T17:55:37.4269285Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4269289Z 
2025-01-07T17:55:37.4269377Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4269475Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4269543Z         """
2025-01-07T17:55:37.4269696Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4269761Z     
2025-01-07T17:55:37.4269840Z         Parameters:
2025-01-07T17:55:37.4269914Z         -----------
2025-01-07T17:55:37.4270034Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4270100Z     
2025-01-07T17:55:37.4270179Z         Returns:
2025-01-07T17:55:37.4270248Z         --------
2025-01-07T17:55:37.4270336Z         An LIVPlotter instance.
2025-01-07T17:55:37.4270402Z         """
2025-01-07T17:55:37.4270539Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4270544Z 
2025-01-07T17:55:37.4270691Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4270801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4270967Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4271119Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4271338Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4271469Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4271671Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4271742Z     return cls(
2025-01-07T17:55:37.4271858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4271863Z 
2025-01-07T17:55:37.4272314Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4272459Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4272640Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4272816Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4273142Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4273242Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4273427Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4273521Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4273694Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4273812Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4273926Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4273931Z 
2025-01-07T17:55:37.4274012Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4274176Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4274288Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4274482Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4274560Z        0.00025518])
2025-01-07T17:55:37.4274715Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4274943Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4275065Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4275311Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4275521Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4275626Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4275865Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4276053Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4276173Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4276259Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4276372Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4276460Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4276622Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4276793Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4276924Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4277078Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4277248Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4277368Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4277529Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4277664Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4277770Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4277848Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4277852Z 
2025-01-07T17:55:37.4277922Z     def __init__(
2025-01-07T17:55:37.4277998Z         self,
2025-01-07T17:55:37.4278084Z         last_interaction_type,
2025-01-07T17:55:37.4278175Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4278267Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4278350Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4278432Z         last_interaction_in_r,
2025-01-07T17:55:37.4278502Z         lines_df,
2025-01-07T17:55:37.4278579Z         packet_nus,
2025-01-07T17:55:37.4278655Z         packet_energies,
2025-01-07T17:55:37.4278728Z         r_inner,
2025-01-07T17:55:37.4278810Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4279079Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4279176Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4279262Z         spectrum_wavelength,
2025-01-07T17:55:37.4279330Z         t_inner,
2025-01-07T17:55:37.4279415Z         time_of_simulation,
2025-01-07T17:55:37.4279489Z         time_explosion,
2025-01-07T17:55:37.4279562Z         v_inner,
2025-01-07T17:55:37.4279632Z         v_outer,
2025-01-07T17:55:37.4279705Z         velocity
2025-01-07T17:55:37.4279770Z     ):
2025-01-07T17:55:37.4279841Z         """
2025-01-07T17:55:37.4280069Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4280135Z     
2025-01-07T17:55:37.4280209Z         Parameters
2025-01-07T17:55:37.4280282Z         ----------
2025-01-07T17:55:37.4280382Z         last_interaction_type : np.array
2025-01-07T17:55:37.4280534Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4280661Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4280759Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4280908Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4280996Z             absorption (interaction in)
2025-01-07T17:55:37.4281098Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4281238Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4281434Z             emission (interaction out)
2025-01-07T17:55:37.4281533Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4281678Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4281774Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4282082Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4282185Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4282345Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4282437Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4282595Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4282672Z             unit of Hz
2025-01-07T17:55:37.4282765Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4282896Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4282982Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4283096Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4283208Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4283331Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4283441Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4283559Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4283657Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4283794Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4283882Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4284001Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4284102Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4284213Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4284288Z         """
2025-01-07T17:55:37.4284460Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4284568Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4284660Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4284728Z             {
2025-01-07T17:55:37.4284809Z                 "nus": packet_nus,
2025-01-07T17:55:37.4284932Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4285027Z                 "energies": packet_energies,
2025-01-07T17:55:37.4285265Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4285417Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4285555Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4285694Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4285802Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4285875Z             }
2025-01-07T17:55:37.4285941Z         )
2025-01-07T17:55:37.4286010Z     
2025-01-07T17:55:37.4286091Z         # Save other properties
2025-01-07T17:55:37.4286176Z         self.lines_df = lines_df
2025-01-07T17:55:37.4286258Z         self.r_inner = r_inner
2025-01-07T17:55:37.4286393Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4286529Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4286661Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4286777Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4286871Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4286942Z         )
2025-01-07T17:55:37.4287056Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4287139Z         self.t_inner = t_inner
2025-01-07T17:55:37.4287251Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4287460Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4287537Z         self.v_inner = v_inner
2025-01-07T17:55:37.4287621Z         self.v_outer = v_outer
2025-01-07T17:55:37.4287690Z     
2025-01-07T17:55:37.4287791Z         # First check if both options are provided
2025-01-07T17:55:37.4287965Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4288043Z >           raise ValueError(
2025-01-07T17:55:37.4288185Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4288351Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4288422Z             )
2025-01-07T17:55:37.4288769Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4288775Z 
2025-01-07T17:55:37.4288950Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4289179Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-07T17:55:37.4289192Z 
2025-01-07T17:55:37.4289405Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4289410Z 
2025-01-07T17:55:37.4289501Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4289587Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4289658Z         """
2025-01-07T17:55:37.4289805Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4289877Z     
2025-01-07T17:55:37.4289951Z         Parameters:
2025-01-07T17:55:37.4290026Z         -----------
2025-01-07T17:55:37.4290140Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4290210Z     
2025-01-07T17:55:37.4290278Z         Returns:
2025-01-07T17:55:37.4290351Z         --------
2025-01-07T17:55:37.4290433Z         An LIVPlotter instance.
2025-01-07T17:55:37.4290504Z         """
2025-01-07T17:55:37.4290638Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4290648Z 
2025-01-07T17:55:37.4290785Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4290899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4291057Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4291206Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4291418Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4291659Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4291861Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4292098Z     return cls(
2025-01-07T17:55:37.4292263Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4292268Z 
2025-01-07T17:55:37.4292558Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4292711Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4292975Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4293155Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4293355Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4293464Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4293647Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4293745Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4293906Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4294021Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4294130Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4294267Z 
2025-01-07T17:55:37.4294348Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4294518Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4294626Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4294820Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4294888Z        0.00025518])
2025-01-07T17:55:37.4295046Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4295246Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4295377Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4295504Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4295712Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4295824Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4296055Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4296248Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4296361Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4296450Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4296559Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4296657Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4296814Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4296991Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4297111Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4297265Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4297434Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4297551Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4297716Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4297843Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4298071Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4298145Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4298150Z 
2025-01-07T17:55:37.4298224Z     def __init__(
2025-01-07T17:55:37.4298292Z         self,
2025-01-07T17:55:37.4298378Z         last_interaction_type,
2025-01-07T17:55:37.4298462Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4298552Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4298643Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4298723Z         last_interaction_in_r,
2025-01-07T17:55:37.4298795Z         lines_df,
2025-01-07T17:55:37.4298874Z         packet_nus,
2025-01-07T17:55:37.4298957Z         packet_energies,
2025-01-07T17:55:37.4299025Z         r_inner,
2025-01-07T17:55:37.4299113Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4299292Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4299394Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4299479Z         spectrum_wavelength,
2025-01-07T17:55:37.4299552Z         t_inner,
2025-01-07T17:55:37.4299628Z         time_of_simulation,
2025-01-07T17:55:37.4299708Z         time_explosion,
2025-01-07T17:55:37.4299776Z         v_inner,
2025-01-07T17:55:37.4299848Z         v_outer,
2025-01-07T17:55:37.4299915Z         velocity
2025-01-07T17:55:37.4299988Z     ):
2025-01-07T17:55:37.4300055Z         """
2025-01-07T17:55:37.4300287Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4300440Z     
2025-01-07T17:55:37.4300511Z         Parameters
2025-01-07T17:55:37.4300585Z         ----------
2025-01-07T17:55:37.4300675Z         last_interaction_type : np.array
2025-01-07T17:55:37.4300830Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4300947Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4301046Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4301189Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4301286Z             absorption (interaction in)
2025-01-07T17:55:37.4301383Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4301527Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4301612Z             emission (interaction out)
2025-01-07T17:55:37.4301710Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4301868Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4302143Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4302326Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4302410Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4302575Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4302663Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4302828Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4302903Z             unit of Hz
2025-01-07T17:55:37.4303001Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4303135Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4303223Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4303330Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4303445Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4303576Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4303683Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4303809Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4303907Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4304047Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4304130Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4304384Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4304478Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4304597Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4304663Z         """
2025-01-07T17:55:37.4304841Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4304941Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4305040Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4305111Z             {
2025-01-07T17:55:37.4305190Z                 "nus": packet_nus,
2025-01-07T17:55:37.4305319Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4305408Z                 "energies": packet_energies,
2025-01-07T17:55:37.4305530Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4305674Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4305824Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4305960Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4306078Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4306144Z             }
2025-01-07T17:55:37.4306213Z         )
2025-01-07T17:55:37.4306279Z     
2025-01-07T17:55:37.4306365Z         # Save other properties
2025-01-07T17:55:37.4306564Z         self.lines_df = lines_df
2025-01-07T17:55:37.4306646Z         self.r_inner = r_inner
2025-01-07T17:55:37.4306791Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4306927Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4307063Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4307169Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4307269Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4307347Z         )
2025-01-07T17:55:37.4307465Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4307542Z         self.t_inner = t_inner
2025-01-07T17:55:37.4307655Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4307747Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4307828Z         self.v_inner = v_inner
2025-01-07T17:55:37.4307901Z         self.v_outer = v_outer
2025-01-07T17:55:37.4307975Z     
2025-01-07T17:55:37.4308076Z         # First check if both options are provided
2025-01-07T17:55:37.4308252Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4308337Z >           raise ValueError(
2025-01-07T17:55:37.4308472Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4308637Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4308704Z             )
2025-01-07T17:55:37.4309066Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4309075Z 
2025-01-07T17:55:37.4309246Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4309477Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-07T17:55:37.4309483Z 
2025-01-07T17:55:37.4309696Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4309709Z 
2025-01-07T17:55:37.4309797Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4309889Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4309955Z         """
2025-01-07T17:55:37.4310107Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4310173Z     
2025-01-07T17:55:37.4310250Z         Parameters:
2025-01-07T17:55:37.4310320Z         -----------
2025-01-07T17:55:37.4310438Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4310591Z     
2025-01-07T17:55:37.4310665Z         Returns:
2025-01-07T17:55:37.4310734Z         --------
2025-01-07T17:55:37.4310821Z         An LIVPlotter instance.
2025-01-07T17:55:37.4310887Z         """
2025-01-07T17:55:37.4311023Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4311029Z 
2025-01-07T17:55:37.4311169Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4311281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4311446Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4311589Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4311805Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4312074Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4312310Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4312391Z     return cls(
2025-01-07T17:55:37.4312508Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4312512Z 
2025-01-07T17:55:37.4312790Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4312937Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4313118Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4313434Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4313640Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4313747Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4313934Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4314031Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4314202Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4314317Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4314434Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4314438Z 
2025-01-07T17:55:37.4314520Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4314685Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4314802Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4314995Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4315068Z        0.00025518])
2025-01-07T17:55:37.4315225Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4315419Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4315545Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4315680Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4315884Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4315995Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4316233Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4316423Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4316540Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4316629Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4316740Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4316828Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4316987Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4317284Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4317410Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4317557Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4317725Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4317851Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4318008Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4318137Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4318244Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4318322Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4318327Z 
2025-01-07T17:55:37.4318396Z     def __init__(
2025-01-07T17:55:37.4318473Z         self,
2025-01-07T17:55:37.4318557Z         last_interaction_type,
2025-01-07T17:55:37.4318651Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4318736Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4318826Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4318912Z         last_interaction_in_r,
2025-01-07T17:55:37.4318981Z         lines_df,
2025-01-07T17:55:37.4319057Z         packet_nus,
2025-01-07T17:55:37.4319216Z         packet_energies,
2025-01-07T17:55:37.4319289Z         r_inner,
2025-01-07T17:55:37.4319371Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4319555Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4319651Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4319738Z         spectrum_wavelength,
2025-01-07T17:55:37.4319806Z         t_inner,
2025-01-07T17:55:37.4319888Z         time_of_simulation,
2025-01-07T17:55:37.4319966Z         time_explosion,
2025-01-07T17:55:37.4320041Z         v_inner,
2025-01-07T17:55:37.4320108Z         v_outer,
2025-01-07T17:55:37.4320180Z         velocity
2025-01-07T17:55:37.4320246Z     ):
2025-01-07T17:55:37.4320317Z         """
2025-01-07T17:55:37.4320541Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4320611Z     
2025-01-07T17:55:37.4320686Z         Parameters
2025-01-07T17:55:37.4320758Z         ----------
2025-01-07T17:55:37.4320858Z         last_interaction_type : np.array
2025-01-07T17:55:37.4321008Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4321131Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4321227Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4321381Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4321469Z             absorption (interaction in)
2025-01-07T17:55:37.4321571Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4321716Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4321807Z             emission (interaction out)
2025-01-07T17:55:37.4321901Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4322226Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4322328Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4322482Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4322568Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4322727Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4322823Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4322983Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4323059Z             unit of Hz
2025-01-07T17:55:37.4323153Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4323407Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4323491Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4323607Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4323715Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4323845Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4323954Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4324077Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4324177Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4324311Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4324398Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4324515Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4324614Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4324725Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4324801Z         """
2025-01-07T17:55:37.4324976Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4325082Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4325173Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4325244Z             {
2025-01-07T17:55:37.4325326Z                 "nus": packet_nus,
2025-01-07T17:55:37.4325561Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4325655Z                 "energies": packet_energies,
2025-01-07T17:55:37.4325770Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4325923Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4326066Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4326208Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4326324Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4326394Z             }
2025-01-07T17:55:37.4326460Z         )
2025-01-07T17:55:37.4326528Z     
2025-01-07T17:55:37.4326610Z         # Save other properties
2025-01-07T17:55:37.4326698Z         self.lines_df = lines_df
2025-01-07T17:55:37.4326776Z         self.r_inner = r_inner
2025-01-07T17:55:37.4326920Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4327060Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4327191Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4327303Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4327398Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4327468Z         )
2025-01-07T17:55:37.4327582Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4327669Z         self.t_inner = t_inner
2025-01-07T17:55:37.4327782Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4327879Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4327955Z         self.v_inner = v_inner
2025-01-07T17:55:37.4328035Z         self.v_outer = v_outer
2025-01-07T17:55:37.4328100Z     
2025-01-07T17:55:37.4328204Z         # First check if both options are provided
2025-01-07T17:55:37.4328375Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4328462Z >           raise ValueError(
2025-01-07T17:55:37.4328604Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4328766Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4328836Z             )
2025-01-07T17:55:37.4329183Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4329188Z 
2025-01-07T17:55:37.4329453Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4329652Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-07T17:55:37.4329657Z 
2025-01-07T17:55:37.4329879Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4329883Z 
2025-01-07T17:55:37.4329974Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4330063Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4330139Z         """
2025-01-07T17:55:37.4330288Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4330357Z     
2025-01-07T17:55:37.4330429Z         Parameters:
2025-01-07T17:55:37.4330503Z         -----------
2025-01-07T17:55:37.4330617Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4330687Z     
2025-01-07T17:55:37.4330754Z         Returns:
2025-01-07T17:55:37.4330827Z         --------
2025-01-07T17:55:37.4330908Z         An LIVPlotter instance.
2025-01-07T17:55:37.4330982Z         """
2025-01-07T17:55:37.4331114Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4331119Z 
2025-01-07T17:55:37.4331259Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4331372Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4331529Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4331760Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4332166Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4332314Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4332514Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4332590Z     return cls(
2025-01-07T17:55:37.4332695Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4332699Z 
2025-01-07T17:55:37.4332985Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4333123Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4333302Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4333480Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4333685Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4333790Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4333969Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4334068Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4334231Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4334346Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4334460Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4334465Z 
2025-01-07T17:55:37.4334546Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4334713Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4334818Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4335013Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4335086Z        0.00025518])
2025-01-07T17:55:37.4335248Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4335437Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4335561Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4335687Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4335891Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4336119Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4336358Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4336549Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4336664Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4336753Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4336860Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4336954Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4337104Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4337287Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4337408Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4337563Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4337727Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4337847Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4338008Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4338260Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4338371Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4338444Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4338449Z 
2025-01-07T17:55:37.4338522Z     def __init__(
2025-01-07T17:55:37.4338588Z         self,
2025-01-07T17:55:37.4338675Z         last_interaction_type,
2025-01-07T17:55:37.4338761Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4338855Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4338936Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4339019Z         last_interaction_in_r,
2025-01-07T17:55:37.4339091Z         lines_df,
2025-01-07T17:55:37.4339164Z         packet_nus,
2025-01-07T17:55:37.4339244Z         packet_energies,
2025-01-07T17:55:37.4339312Z         r_inner,
2025-01-07T17:55:37.4339399Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4339582Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4339683Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4339764Z         spectrum_wavelength,
2025-01-07T17:55:37.4339844Z         t_inner,
2025-01-07T17:55:37.4339921Z         time_of_simulation,
2025-01-07T17:55:37.4340001Z         time_explosion,
2025-01-07T17:55:37.4340069Z         v_inner,
2025-01-07T17:55:37.4340140Z         v_outer,
2025-01-07T17:55:37.4340207Z         velocity
2025-01-07T17:55:37.4340278Z     ):
2025-01-07T17:55:37.4340346Z         """
2025-01-07T17:55:37.4340579Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4340647Z     
2025-01-07T17:55:37.4340724Z         Parameters
2025-01-07T17:55:37.4340798Z         ----------
2025-01-07T17:55:37.4340890Z         last_interaction_type : np.array
2025-01-07T17:55:37.4341046Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4341163Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4341265Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4341408Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4341499Z             absorption (interaction in)
2025-01-07T17:55:37.4341595Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4341737Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4341824Z             emission (interaction out)
2025-01-07T17:55:37.4342117Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4342266Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4342363Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4342514Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4342595Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4342758Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4342852Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4343015Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4343084Z             unit of Hz
2025-01-07T17:55:37.4343182Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4343310Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4343399Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4343509Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4343621Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4343742Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4343851Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4343976Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4344074Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4344351Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4344434Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4344557Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4344650Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4344767Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4344833Z         """
2025-01-07T17:55:37.4345009Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4345114Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4345208Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4345274Z             {
2025-01-07T17:55:37.4345357Z                 "nus": packet_nus,
2025-01-07T17:55:37.4345484Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4345573Z                 "energies": packet_energies,
2025-01-07T17:55:37.4345697Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4345849Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4345992Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4346130Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4346246Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4346313Z             }
2025-01-07T17:55:37.4346383Z         )
2025-01-07T17:55:37.4346451Z     
2025-01-07T17:55:37.4346540Z         # Save other properties
2025-01-07T17:55:37.4346620Z         self.lines_df = lines_df
2025-01-07T17:55:37.4346705Z         self.r_inner = r_inner
2025-01-07T17:55:37.4346844Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4346983Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4347124Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4347233Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4347329Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4347395Z         )
2025-01-07T17:55:37.4347514Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4347595Z         self.t_inner = t_inner
2025-01-07T17:55:37.4347709Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4347802Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4347884Z         self.v_inner = v_inner
2025-01-07T17:55:37.4348077Z         self.v_outer = v_outer
2025-01-07T17:55:37.4348146Z     
2025-01-07T17:55:37.4348245Z         # First check if both options are provided
2025-01-07T17:55:37.4348419Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4348500Z >           raise ValueError(
2025-01-07T17:55:37.4348639Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4348807Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4348873Z             )
2025-01-07T17:55:37.4349226Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4349232Z 
2025-01-07T17:55:37.4349402Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4349610Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-07T17:55:37.4349619Z 
2025-01-07T17:55:37.4349831Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4349840Z 
2025-01-07T17:55:37.4349926Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4350018Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4350084Z         """
2025-01-07T17:55:37.4350235Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4350299Z     
2025-01-07T17:55:37.4350458Z         Parameters:
2025-01-07T17:55:37.4350528Z         -----------
2025-01-07T17:55:37.4350648Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4350713Z     
2025-01-07T17:55:37.4350786Z         Returns:
2025-01-07T17:55:37.4350856Z         --------
2025-01-07T17:55:37.4350942Z         An LIVPlotter instance.
2025-01-07T17:55:37.4351007Z         """
2025-01-07T17:55:37.4351139Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4351144Z 
2025-01-07T17:55:37.4351278Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4351395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4351558Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4351702Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4352020Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4352157Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4352355Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4352425Z     return cls(
2025-01-07T17:55:37.4352532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4352537Z 
2025-01-07T17:55:37.4352811Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4352951Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4353130Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4353311Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4353513Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4353614Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4353802Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4353896Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4354060Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4354170Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4354286Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4354291Z 
2025-01-07T17:55:37.4354366Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4354651Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4354759Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4354950Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4355023Z        0.00025518])
2025-01-07T17:55:37.4355175Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4355375Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4355495Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4355626Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4355829Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4355937Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4356173Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4356361Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4356475Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4356560Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4356672Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4356869Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4357025Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4357198Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4357321Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4357474Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4357644Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4357767Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4357927Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4358058Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4358164Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4358245Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4358250Z 
2025-01-07T17:55:37.4358318Z     def __init__(
2025-01-07T17:55:37.4358390Z         self,
2025-01-07T17:55:37.4358471Z         last_interaction_type,
2025-01-07T17:55:37.4358561Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4358644Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4358733Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4358811Z         last_interaction_in_r,
2025-01-07T17:55:37.4358886Z         lines_df,
2025-01-07T17:55:37.4358966Z         packet_nus,
2025-01-07T17:55:37.4359042Z         packet_energies,
2025-01-07T17:55:37.4359118Z         r_inner,
2025-01-07T17:55:37.4359201Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4359384Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4359480Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4359565Z         spectrum_wavelength,
2025-01-07T17:55:37.4359636Z         t_inner,
2025-01-07T17:55:37.4359719Z         time_of_simulation,
2025-01-07T17:55:37.4359794Z         time_explosion,
2025-01-07T17:55:37.4359868Z         v_inner,
2025-01-07T17:55:37.4359934Z         v_outer,
2025-01-07T17:55:37.4360008Z         velocity
2025-01-07T17:55:37.4360072Z     ):
2025-01-07T17:55:37.4360144Z         """
2025-01-07T17:55:37.4360369Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4360443Z     
2025-01-07T17:55:37.4360512Z         Parameters
2025-01-07T17:55:37.4360691Z         ----------
2025-01-07T17:55:37.4360787Z         last_interaction_type : np.array
2025-01-07T17:55:37.4360934Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4361053Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4361148Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4361297Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4361388Z             absorption (interaction in)
2025-01-07T17:55:37.4361490Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4361630Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4361721Z             emission (interaction out)
2025-01-07T17:55:37.4361814Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4362123Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4362264Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4362424Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4362510Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4362666Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4362759Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4362918Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4363121Z             unit of Hz
2025-01-07T17:55:37.4363214Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4363349Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4363433Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4363549Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4363654Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4363783Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4363893Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4364021Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4364120Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4364258Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4364345Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4364464Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4364564Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4364675Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4364748Z         """
2025-01-07T17:55:37.4364924Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4365031Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4365122Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4365193Z             {
2025-01-07T17:55:37.4365273Z                 "nus": packet_nus,
2025-01-07T17:55:37.4365404Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4365496Z                 "energies": packet_energies,
2025-01-07T17:55:37.4365613Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4365763Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4365904Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4366049Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4366162Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4366233Z             }
2025-01-07T17:55:37.4366299Z         )
2025-01-07T17:55:37.4366368Z     
2025-01-07T17:55:37.4366451Z         # Save other properties
2025-01-07T17:55:37.4366537Z         self.lines_df = lines_df
2025-01-07T17:55:37.4366616Z         self.r_inner = r_inner
2025-01-07T17:55:37.4366877Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4367008Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4367150Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4367260Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4367353Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4367427Z         )
2025-01-07T17:55:37.4367539Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4367624Z         self.t_inner = t_inner
2025-01-07T17:55:37.4367731Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4367828Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4367905Z         self.v_inner = v_inner
2025-01-07T17:55:37.4367984Z         self.v_outer = v_outer
2025-01-07T17:55:37.4368049Z     
2025-01-07T17:55:37.4368157Z         # First check if both options are provided
2025-01-07T17:55:37.4368326Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4368413Z >           raise ValueError(
2025-01-07T17:55:37.4368552Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4368719Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4368790Z             )
2025-01-07T17:55:37.4369142Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4369229Z 
2025-01-07T17:55:37.4369407Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4369608Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-07T17:55:37.4369613Z 
2025-01-07T17:55:37.4369831Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4369835Z 
2025-01-07T17:55:37.4369920Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4370019Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4370090Z         """
2025-01-07T17:55:37.4370238Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4370308Z     
2025-01-07T17:55:37.4370381Z         Parameters:
2025-01-07T17:55:37.4370455Z         -----------
2025-01-07T17:55:37.4370567Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4370640Z     
2025-01-07T17:55:37.4370708Z         Returns:
2025-01-07T17:55:37.4370780Z         --------
2025-01-07T17:55:37.4370864Z         An LIVPlotter instance.
2025-01-07T17:55:37.4370934Z         """
2025-01-07T17:55:37.4371063Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4371068Z 
2025-01-07T17:55:37.4371209Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4371315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4371476Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4371627Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4371840Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4372139Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4372351Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4372432Z     return cls(
2025-01-07T17:55:37.4372536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4372540Z 
2025-01-07T17:55:37.4372819Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4372954Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4373132Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4373303Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4373626Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4373733Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4373915Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4374017Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4374181Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4374295Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4374403Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4374408Z 
2025-01-07T17:55:37.4374489Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4374650Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4374759Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4374992Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4375058Z        0.00025518])
2025-01-07T17:55:37.4375215Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4375408Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4375531Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4375769Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4375974Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4376099Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4376473Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4376770Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4376900Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4376989Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4377097Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4377191Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4377339Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4377519Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4377639Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4377790Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4377953Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4378075Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4378241Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4378367Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4378481Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4378554Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4378559Z 
2025-01-07T17:55:37.4378633Z     def __init__(
2025-01-07T17:55:37.4378703Z         self,
2025-01-07T17:55:37.4378790Z         last_interaction_type,
2025-01-07T17:55:37.4378876Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4378967Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4379049Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4379137Z         last_interaction_in_r,
2025-01-07T17:55:37.4379206Z         lines_df,
2025-01-07T17:55:37.4379284Z         packet_nus,
2025-01-07T17:55:37.4379362Z         packet_energies,
2025-01-07T17:55:37.4379439Z         r_inner,
2025-01-07T17:55:37.4379527Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4379802Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4379902Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4379983Z         spectrum_wavelength,
2025-01-07T17:55:37.4380056Z         t_inner,
2025-01-07T17:55:37.4380132Z         time_of_simulation,
2025-01-07T17:55:37.4380213Z         time_explosion,
2025-01-07T17:55:37.4380284Z         v_inner,
2025-01-07T17:55:37.4380356Z         v_outer,
2025-01-07T17:55:37.4380424Z         velocity
2025-01-07T17:55:37.4380495Z     ):
2025-01-07T17:55:37.4380561Z         """
2025-01-07T17:55:37.4380803Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4380870Z     
2025-01-07T17:55:37.4380952Z         Parameters
2025-01-07T17:55:37.4381024Z         ----------
2025-01-07T17:55:37.4381124Z         last_interaction_type : np.array
2025-01-07T17:55:37.4381279Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4381400Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4381502Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4381648Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4381742Z             absorption (interaction in)
2025-01-07T17:55:37.4381840Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4382203Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4382297Z             emission (interaction out)
2025-01-07T17:55:37.4382398Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4382550Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4382653Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4382801Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4382894Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4383060Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4383149Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4383316Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4383388Z             unit of Hz
2025-01-07T17:55:37.4383489Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4383615Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4383708Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4383819Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4383930Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4384053Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4384162Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4384283Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4384384Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4384527Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4384611Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4384734Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4384828Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4384943Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4385013Z         """
2025-01-07T17:55:37.4385193Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4385296Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4385391Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4385459Z             {
2025-01-07T17:55:37.4385544Z                 "nus": packet_nus,
2025-01-07T17:55:37.4385669Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4385764Z                 "energies": packet_energies,
2025-01-07T17:55:37.4386030Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4386177Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4386322Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4386460Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4386575Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4386645Z             }
2025-01-07T17:55:37.4386717Z         )
2025-01-07T17:55:37.4386784Z     
2025-01-07T17:55:37.4386872Z         # Save other properties
2025-01-07T17:55:37.4386955Z         self.lines_df = lines_df
2025-01-07T17:55:37.4387039Z         self.r_inner = r_inner
2025-01-07T17:55:37.4387177Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4387314Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4387446Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4387561Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4387665Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4387731Z         )
2025-01-07T17:55:37.4387853Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4387931Z         self.t_inner = t_inner
2025-01-07T17:55:37.4388048Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4388252Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4388334Z         self.v_inner = v_inner
2025-01-07T17:55:37.4388410Z         self.v_outer = v_outer
2025-01-07T17:55:37.4388482Z     
2025-01-07T17:55:37.4388583Z         # First check if both options are provided
2025-01-07T17:55:37.4388758Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4388836Z >           raise ValueError(
2025-01-07T17:55:37.4388977Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4389149Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4389216Z             )
2025-01-07T17:55:37.4389569Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4389575Z 
2025-01-07T17:55:37.4389747Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4389957Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-07T17:55:37.4389963Z 
2025-01-07T17:55:37.4390175Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4390180Z 
2025-01-07T17:55:37.4390271Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4390359Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4390434Z         """
2025-01-07T17:55:37.4390588Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4390657Z     
2025-01-07T17:55:37.4390738Z         Parameters:
2025-01-07T17:55:37.4390812Z         -----------
2025-01-07T17:55:37.4390932Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4390997Z     
2025-01-07T17:55:37.4391070Z         Returns:
2025-01-07T17:55:37.4391139Z         --------
2025-01-07T17:55:37.4391227Z         An LIVPlotter instance.
2025-01-07T17:55:37.4391294Z         """
2025-01-07T17:55:37.4391431Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4391436Z 
2025-01-07T17:55:37.4391570Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4391681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4391841Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4392097Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4392319Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4392570Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4392776Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4392848Z     return cls(
2025-01-07T17:55:37.4392956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4392960Z 
2025-01-07T17:55:37.4393238Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4393384Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4393561Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4393736Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4393937Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4394039Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4394229Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4394325Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4394489Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4394600Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4394817Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4394822Z 
2025-01-07T17:55:37.4394898Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4395063Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4395167Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4395363Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4395440Z        0.00025518])
2025-01-07T17:55:37.4395594Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4395795Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4395916Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4396048Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4396248Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4396356Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4396584Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4396777Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4396894Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4396982Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4397097Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4397185Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4397346Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4397515Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4397646Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4397794Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4397962Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4398079Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4398245Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4398377Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4398574Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4398651Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4398656Z 
2025-01-07T17:55:37.4398726Z     def __init__(
2025-01-07T17:55:37.4398801Z         self,
2025-01-07T17:55:37.4398884Z         last_interaction_type,
2025-01-07T17:55:37.4398974Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4399059Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4399154Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4399232Z         last_interaction_in_r,
2025-01-07T17:55:37.4399308Z         lines_df,
2025-01-07T17:55:37.4399380Z         packet_nus,
2025-01-07T17:55:37.4399463Z         packet_energies,
2025-01-07T17:55:37.4399532Z         r_inner,
2025-01-07T17:55:37.4399622Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4399805Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4399899Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4399995Z         spectrum_wavelength,
2025-01-07T17:55:37.4400063Z         t_inner,
2025-01-07T17:55:37.4400146Z         time_of_simulation,
2025-01-07T17:55:37.4400222Z         time_explosion,
2025-01-07T17:55:37.4400295Z         v_inner,
2025-01-07T17:55:37.4400362Z         v_outer,
2025-01-07T17:55:37.4400435Z         velocity
2025-01-07T17:55:37.4400501Z     ):
2025-01-07T17:55:37.4400572Z         """
2025-01-07T17:55:37.4400901Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4400971Z     
2025-01-07T17:55:37.4401043Z         Parameters
2025-01-07T17:55:37.4401119Z         ----------
2025-01-07T17:55:37.4401210Z         last_interaction_type : np.array
2025-01-07T17:55:37.4401368Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4401490Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4401586Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4401741Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4401828Z             absorption (interaction in)
2025-01-07T17:55:37.4402096Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4402277Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4402372Z             emission (interaction out)
2025-01-07T17:55:37.4402468Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4402631Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4402723Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4402879Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4402962Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4403133Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4403226Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4403392Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4403473Z             unit of Hz
2025-01-07T17:55:37.4403567Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4403700Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4403783Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4403897Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4404007Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4404142Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4404248Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4404381Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4404480Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4404621Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4404707Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4404979Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4405078Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4405187Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4405260Z         """
2025-01-07T17:55:37.4405434Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4405541Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4405635Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4405708Z             {
2025-01-07T17:55:37.4405786Z                 "nus": packet_nus,
2025-01-07T17:55:37.4405916Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4406004Z                 "energies": packet_energies,
2025-01-07T17:55:37.4406128Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4406281Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4406426Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4406571Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4406681Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4406756Z             }
2025-01-07T17:55:37.4406823Z         )
2025-01-07T17:55:37.4406893Z     
2025-01-07T17:55:37.4407106Z         # Save other properties
2025-01-07T17:55:37.4407192Z         self.lines_df = lines_df
2025-01-07T17:55:37.4407270Z         self.r_inner = r_inner
2025-01-07T17:55:37.4407415Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4407550Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4407685Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4407791Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4407893Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4407969Z         )
2025-01-07T17:55:37.4408083Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4408167Z         self.t_inner = t_inner
2025-01-07T17:55:37.4408279Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4408377Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4408456Z         self.v_inner = v_inner
2025-01-07T17:55:37.4408539Z         self.v_outer = v_outer
2025-01-07T17:55:37.4408611Z     
2025-01-07T17:55:37.4408719Z         # First check if both options are provided
2025-01-07T17:55:37.4408890Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4408975Z >           raise ValueError(
2025-01-07T17:55:37.4409112Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4409278Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4409350Z             )
2025-01-07T17:55:37.4409710Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4409715Z 
2025-01-07T17:55:37.4409892Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4410093Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-07T17:55:37.4410098Z 
2025-01-07T17:55:37.4410317Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4410322Z 
2025-01-07T17:55:37.4410408Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4418708Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4418802Z         """
2025-01-07T17:55:37.4418980Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4419049Z     
2025-01-07T17:55:37.4419132Z         Parameters:
2025-01-07T17:55:37.4419206Z         -----------
2025-01-07T17:55:37.4419337Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4419588Z     
2025-01-07T17:55:37.4419660Z         Returns:
2025-01-07T17:55:37.4419738Z         --------
2025-01-07T17:55:37.4419823Z         An LIVPlotter instance.
2025-01-07T17:55:37.4419895Z         """
2025-01-07T17:55:37.4420044Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4420050Z 
2025-01-07T17:55:37.4420208Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4420330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4420504Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4420660Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4420892Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4421029Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4421240Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4421326Z     return cls(
2025-01-07T17:55:37.4421437Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4421443Z 
2025-01-07T17:55:37.4421732Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4421877Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4422350Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4422539Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4422750Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4422854Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4423044Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4423147Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4423315Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4423435Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4423547Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4423551Z 
2025-01-07T17:55:37.4423636Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4423807Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4423922Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4424122Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4424198Z        0.00025518])
2025-01-07T17:55:37.4424356Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4424553Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4424684Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4424814Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4425026Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4425131Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4425372Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4425564Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4425682Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4425768Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4425885Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4425980Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4426136Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4426433Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4426557Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4426713Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4426877Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4427005Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4427165Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4427304Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4427414Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4427495Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4427500Z 
2025-01-07T17:55:37.4427581Z     def __init__(
2025-01-07T17:55:37.4427649Z         self,
2025-01-07T17:55:37.4427740Z         last_interaction_type,
2025-01-07T17:55:37.4427827Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4427920Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4428004Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4428089Z         last_interaction_in_r,
2025-01-07T17:55:37.4428158Z         lines_df,
2025-01-07T17:55:37.4428334Z         packet_nus,
2025-01-07T17:55:37.4428412Z         packet_energies,
2025-01-07T17:55:37.4428487Z         r_inner,
2025-01-07T17:55:37.4428570Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4428755Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4428851Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4428943Z         spectrum_wavelength,
2025-01-07T17:55:37.4429018Z         t_inner,
2025-01-07T17:55:37.4429099Z         time_of_simulation,
2025-01-07T17:55:37.4429179Z         time_explosion,
2025-01-07T17:55:37.4429252Z         v_inner,
2025-01-07T17:55:37.4429325Z         v_outer,
2025-01-07T17:55:37.4429393Z         velocity
2025-01-07T17:55:37.4429465Z     ):
2025-01-07T17:55:37.4429533Z         """
2025-01-07T17:55:37.4429771Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4429837Z     
2025-01-07T17:55:37.4429914Z         Parameters
2025-01-07T17:55:37.4429992Z         ----------
2025-01-07T17:55:37.4430093Z         last_interaction_type : np.array
2025-01-07T17:55:37.4430247Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4430370Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4430467Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4430620Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4430715Z             absorption (interaction in)
2025-01-07T17:55:37.4430813Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4430964Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4431049Z             emission (interaction out)
2025-01-07T17:55:37.4431148Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4431295Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4431394Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4431546Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4431635Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4431795Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4431892Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4432168Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4432252Z             unit of Hz
2025-01-07T17:55:37.4432353Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4432601Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4432691Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4432799Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4432910Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4433034Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4433144Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4433271Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4433376Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4433510Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4433598Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4433717Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4433818Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4433932Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4434004Z         """
2025-01-07T17:55:37.4434184Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4434288Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4434384Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4434452Z             {
2025-01-07T17:55:37.4434535Z                 "nus": packet_nus,
2025-01-07T17:55:37.4434774Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4434869Z                 "energies": packet_energies,
2025-01-07T17:55:37.4434985Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4435140Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4435281Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4435424Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4435545Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4435611Z             }
2025-01-07T17:55:37.4435683Z         )
2025-01-07T17:55:37.4435748Z     
2025-01-07T17:55:37.4435837Z         # Save other properties
2025-01-07T17:55:37.4435919Z         self.lines_df = lines_df
2025-01-07T17:55:37.4436004Z         self.r_inner = r_inner
2025-01-07T17:55:37.4436144Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4436286Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4436418Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4436531Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4436626Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4436703Z         )
2025-01-07T17:55:37.4436817Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4436901Z         self.t_inner = t_inner
2025-01-07T17:55:37.4437020Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4437113Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4437197Z         self.v_inner = v_inner
2025-01-07T17:55:37.4437275Z         self.v_outer = v_outer
2025-01-07T17:55:37.4437346Z     
2025-01-07T17:55:37.4437451Z         # First check if both options are provided
2025-01-07T17:55:37.4437628Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4437713Z >           raise ValueError(
2025-01-07T17:55:37.4437855Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4438016Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4438089Z             )
2025-01-07T17:55:37.4438441Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4438452Z 
2025-01-07T17:55:37.4438716Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4438916Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-07T17:55:37.4438927Z 
2025-01-07T17:55:37.4439143Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4439148Z 
2025-01-07T17:55:37.4439240Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4439331Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4439402Z         """
2025-01-07T17:55:37.4439553Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4439624Z     
2025-01-07T17:55:37.4439696Z         Parameters:
2025-01-07T17:55:37.4439771Z         -----------
2025-01-07T17:55:37.4439889Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4439958Z     
2025-01-07T17:55:37.4440026Z         Returns:
2025-01-07T17:55:37.4440100Z         --------
2025-01-07T17:55:37.4440181Z         An LIVPlotter instance.
2025-01-07T17:55:37.4440256Z         """
2025-01-07T17:55:37.4440388Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4440399Z 
2025-01-07T17:55:37.4440535Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4440648Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4440807Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4441061Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4441276Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4441410Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4441607Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4441682Z     return cls(
2025-01-07T17:55:37.4441787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4441795Z 
2025-01-07T17:55:37.4442276Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4442430Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4442606Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4442785Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4442988Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4443094Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4443274Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4443377Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4443539Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4443656Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4443775Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4443780Z 
2025-01-07T17:55:37.4443857Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4444026Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4444130Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4444327Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4444399Z        0.00025518])
2025-01-07T17:55:37.4444556Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4444747Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4444871Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4444996Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4445337Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4445443Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4445677Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4445872Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4445988Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4446078Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4446188Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4446283Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4446433Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4446609Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4446729Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4446885Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4447051Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4447166Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4447328Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4447563Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4447676Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4447749Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4447753Z 
2025-01-07T17:55:37.4447826Z     def __init__(
2025-01-07T17:55:37.4447893Z         self,
2025-01-07T17:55:37.4447980Z         last_interaction_type,
2025-01-07T17:55:37.4448064Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4448159Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4448248Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4448326Z         last_interaction_in_r,
2025-01-07T17:55:37.4448399Z         lines_df,
2025-01-07T17:55:37.4448472Z         packet_nus,
2025-01-07T17:55:37.4448555Z         packet_energies,
2025-01-07T17:55:37.4448625Z         r_inner,
2025-01-07T17:55:37.4448711Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4448892Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4448991Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4449071Z         spectrum_wavelength,
2025-01-07T17:55:37.4449145Z         t_inner,
2025-01-07T17:55:37.4449223Z         time_of_simulation,
2025-01-07T17:55:37.4449304Z         time_explosion,
2025-01-07T17:55:37.4449372Z         v_inner,
2025-01-07T17:55:37.4449444Z         v_outer,
2025-01-07T17:55:37.4449511Z         velocity
2025-01-07T17:55:37.4449580Z     ):
2025-01-07T17:55:37.4449650Z         """
2025-01-07T17:55:37.4449880Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4449950Z     
2025-01-07T17:55:37.4450021Z         Parameters
2025-01-07T17:55:37.4450096Z         ----------
2025-01-07T17:55:37.4450187Z         last_interaction_type : np.array
2025-01-07T17:55:37.4450344Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4450464Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4450569Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4450713Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4450807Z             absorption (interaction in)
2025-01-07T17:55:37.4450903Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4451047Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4451131Z             emission (interaction out)
2025-01-07T17:55:37.4451317Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4451471Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4451560Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4451711Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4451792Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4452104Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4452221Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4452388Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4452460Z             unit of Hz
2025-01-07T17:55:37.4452560Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4452687Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4452778Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4452884Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4453001Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4453128Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4453233Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4453357Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4453454Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4453715Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4453798Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4453921Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4454015Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4454128Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4454198Z         """
2025-01-07T17:55:37.4454378Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4454485Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4454578Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4454650Z             {
2025-01-07T17:55:37.4454726Z                 "nus": packet_nus,
2025-01-07T17:55:37.4454852Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4454941Z                 "energies": packet_energies,
2025-01-07T17:55:37.4455066Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4455213Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4455359Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4455497Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4455611Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4455677Z             }
2025-01-07T17:55:37.4455746Z         )
2025-01-07T17:55:37.4455814Z     
2025-01-07T17:55:37.4455903Z         # Save other properties
2025-01-07T17:55:37.4455989Z         self.lines_df = lines_df
2025-01-07T17:55:37.4456068Z         self.r_inner = r_inner
2025-01-07T17:55:37.4456207Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4456343Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4456477Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4456588Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4456686Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4456753Z         )
2025-01-07T17:55:37.4456870Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4456949Z         self.t_inner = t_inner
2025-01-07T17:55:37.4457062Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4457155Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4457235Z         self.v_inner = v_inner
2025-01-07T17:55:37.4457439Z         self.v_outer = v_outer
2025-01-07T17:55:37.4457511Z     
2025-01-07T17:55:37.4457616Z         # First check if both options are provided
2025-01-07T17:55:37.4457785Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4457868Z >           raise ValueError(
2025-01-07T17:55:37.4458003Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4458174Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4458240Z             )
2025-01-07T17:55:37.4458593Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4458599Z 
2025-01-07T17:55:37.4458776Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4458984Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-07T17:55:37.4458991Z 
2025-01-07T17:55:37.4459207Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4459211Z 
2025-01-07T17:55:37.4459295Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4459388Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4459454Z         """
2025-01-07T17:55:37.4459612Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4459825Z     
2025-01-07T17:55:37.4459903Z         Parameters:
2025-01-07T17:55:37.4459976Z         -----------
2025-01-07T17:55:37.4460103Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4460167Z     
2025-01-07T17:55:37.4460240Z         Returns:
2025-01-07T17:55:37.4460309Z         --------
2025-01-07T17:55:37.4460396Z         An LIVPlotter instance.
2025-01-07T17:55:37.4460461Z         """
2025-01-07T17:55:37.4460593Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4460598Z 
2025-01-07T17:55:37.4460734Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4460850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4461007Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4461158Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4461375Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4461517Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4461722Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4461793Z     return cls(
2025-01-07T17:55:37.4461903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4461908Z 
2025-01-07T17:55:37.4462298Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4462440Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4462618Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4462796Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4462993Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4463098Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4463286Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4463380Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4463549Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4463660Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4463774Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4463779Z 
2025-01-07T17:55:37.4463853Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4464158Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4464267Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4464464Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4464532Z        0.00025518])
2025-01-07T17:55:37.4464691Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4464893Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4465014Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4465145Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4465350Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4465457Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4465692Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4465881Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4465996Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4466084Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4466192Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4466399Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4466557Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4466728Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4466852Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4466998Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4467164Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4467285Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4467449Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4467576Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4467689Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4467778Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4467783Z 
2025-01-07T17:55:37.4467852Z     def __init__(
2025-01-07T17:55:37.4467928Z         self,
2025-01-07T17:55:37.4468009Z         last_interaction_type,
2025-01-07T17:55:37.4468099Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4468183Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4468270Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4468349Z         last_interaction_in_r,
2025-01-07T17:55:37.4468426Z         lines_df,
2025-01-07T17:55:37.4468499Z         packet_nus,
2025-01-07T17:55:37.4468581Z         packet_energies,
2025-01-07T17:55:37.4468648Z         r_inner,
2025-01-07T17:55:37.4468736Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4468913Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4469014Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4469103Z         spectrum_wavelength,
2025-01-07T17:55:37.4469170Z         t_inner,
2025-01-07T17:55:37.4469255Z         time_of_simulation,
2025-01-07T17:55:37.4469330Z         time_explosion,
2025-01-07T17:55:37.4469402Z         v_inner,
2025-01-07T17:55:37.4469471Z         v_outer,
2025-01-07T17:55:37.4469543Z         velocity
2025-01-07T17:55:37.4469608Z     ):
2025-01-07T17:55:37.4469679Z         """
2025-01-07T17:55:37.4469907Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4469977Z     
2025-01-07T17:55:37.4470138Z         Parameters
2025-01-07T17:55:37.4470213Z         ----------
2025-01-07T17:55:37.4470304Z         last_interaction_type : np.array
2025-01-07T17:55:37.4470457Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4470572Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4470674Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4470817Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4470912Z             absorption (interaction in)
2025-01-07T17:55:37.4471014Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4471155Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4471245Z             emission (interaction out)
2025-01-07T17:55:37.4471337Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4471492Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4471590Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4471743Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4471824Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4472088Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4472179Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4472342Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4472532Z             unit of Hz
2025-01-07T17:55:37.4472625Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4472757Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4472839Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4472957Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4473062Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4473193Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4473301Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4473425Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4473520Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4473662Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4473745Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4473871Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4473969Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4474077Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4474147Z         """
2025-01-07T17:55:37.4474318Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4474426Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4474516Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4474587Z             {
2025-01-07T17:55:37.4474667Z                 "nus": packet_nus,
2025-01-07T17:55:37.4474829Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4474921Z                 "energies": packet_energies,
2025-01-07T17:55:37.4475042Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4475188Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4475338Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4475479Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4475588Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4475657Z             }
2025-01-07T17:55:37.4475722Z         )
2025-01-07T17:55:37.4475792Z     
2025-01-07T17:55:37.4475872Z         # Save other properties
2025-01-07T17:55:37.4475959Z         self.lines_df = lines_df
2025-01-07T17:55:37.4476036Z         self.r_inner = r_inner
2025-01-07T17:55:37.4476329Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4476461Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4476594Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4476701Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4476800Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4476870Z         )
2025-01-07T17:55:37.4476989Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4477071Z         self.t_inner = t_inner
2025-01-07T17:55:37.4477181Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4477279Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4477363Z         self.v_inner = v_inner
2025-01-07T17:55:37.4477445Z         self.v_outer = v_outer
2025-01-07T17:55:37.4477510Z     
2025-01-07T17:55:37.4477614Z         # First check if both options are provided
2025-01-07T17:55:37.4477787Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4477869Z >           raise ValueError(
2025-01-07T17:55:37.4478005Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4478174Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4478240Z             )
2025-01-07T17:55:37.4478593Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4478678Z 
2025-01-07T17:55:37.4478857Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4479055Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-07T17:55:37.4479060Z 
2025-01-07T17:55:37.4479277Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4479281Z 
2025-01-07T17:55:37.4479364Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4479461Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4479526Z         """
2025-01-07T17:55:37.4479681Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4479748Z     
2025-01-07T17:55:37.4479825Z         Parameters:
2025-01-07T17:55:37.4479895Z         -----------
2025-01-07T17:55:37.4480015Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4480087Z     
2025-01-07T17:55:37.4480154Z         Returns:
2025-01-07T17:55:37.4480228Z         --------
2025-01-07T17:55:37.4480307Z         An LIVPlotter instance.
2025-01-07T17:55:37.4480378Z         """
2025-01-07T17:55:37.4480505Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4480510Z 
2025-01-07T17:55:37.4480648Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4480752Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4480912Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4481059Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4481276Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4481408Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4481609Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4481686Z     return cls(
2025-01-07T17:55:37.4481791Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4481795Z 
2025-01-07T17:55:37.4482250Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4482391Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4482566Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4482737Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4483063Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4483162Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4483346Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4483444Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4483608Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4483723Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4483830Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4483835Z 
2025-01-07T17:55:37.4483915Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4484078Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4484192Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4484385Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4484457Z        0.00025518])
2025-01-07T17:55:37.4484610Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4484805Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4484932Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4485167Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4485375Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4485476Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4485709Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4485893Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4486013Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4486097Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4486209Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4486297Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4486454Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4486635Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4486755Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4486906Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4487067Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4487189Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4487351Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4487479Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4487587Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4487664Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4487669Z 
2025-01-07T17:55:37.4487741Z     def __init__(
2025-01-07T17:55:37.4487812Z         self,
2025-01-07T17:55:37.4487899Z         last_interaction_type,
2025-01-07T17:55:37.4487984Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4488075Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4488157Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4488239Z         last_interaction_in_r,
2025-01-07T17:55:37.4488307Z         lines_df,
2025-01-07T17:55:37.4488384Z         packet_nus,
2025-01-07T17:55:37.4488461Z         packet_energies,
2025-01-07T17:55:37.4488535Z         r_inner,
2025-01-07T17:55:37.4488726Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4488910Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4489005Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4489090Z         spectrum_wavelength,
2025-01-07T17:55:37.4489163Z         t_inner,
2025-01-07T17:55:37.4489240Z         time_of_simulation,
2025-01-07T17:55:37.4489320Z         time_explosion,
2025-01-07T17:55:37.4489389Z         v_inner,
2025-01-07T17:55:37.4489461Z         v_outer,
2025-01-07T17:55:37.4489528Z         velocity
2025-01-07T17:55:37.4489598Z     ):
2025-01-07T17:55:37.4489665Z         """
2025-01-07T17:55:37.4489893Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4489958Z     
2025-01-07T17:55:37.4490034Z         Parameters
2025-01-07T17:55:37.4490104Z         ----------
2025-01-07T17:55:37.4490200Z         last_interaction_type : np.array
2025-01-07T17:55:37.4490352Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4490477Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4490574Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4490723Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4490819Z             absorption (interaction in)
2025-01-07T17:55:37.4490915Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4491260Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4491344Z             emission (interaction out)
2025-01-07T17:55:37.4491441Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4491589Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4491684Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4491833Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4492077Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4492288Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4492383Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4492544Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4492621Z             unit of Hz
2025-01-07T17:55:37.4492719Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4492846Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4492936Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4493044Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4493154Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4493277Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4493385Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4493504Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4493612Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4493747Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4493832Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4493950Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4494048Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4494164Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4494234Z         """
2025-01-07T17:55:37.4494410Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4494512Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4494605Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4494672Z             {
2025-01-07T17:55:37.4494756Z                 "nus": packet_nus,
2025-01-07T17:55:37.4494880Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4494973Z                 "energies": packet_energies,
2025-01-07T17:55:37.4495216Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4495368Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4495507Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4495649Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4495771Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4495836Z             }
2025-01-07T17:55:37.4495906Z         )
2025-01-07T17:55:37.4495970Z     
2025-01-07T17:55:37.4496056Z         # Save other properties
2025-01-07T17:55:37.4496140Z         self.lines_df = lines_df
2025-01-07T17:55:37.4496222Z         self.r_inner = r_inner
2025-01-07T17:55:37.4496360Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4496495Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4496629Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4496744Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4496838Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4496910Z         )
2025-01-07T17:55:37.4497023Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4497105Z         self.t_inner = t_inner
2025-01-07T17:55:37.4497217Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4497422Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4497503Z         self.v_inner = v_inner
2025-01-07T17:55:37.4497578Z         self.v_outer = v_outer
2025-01-07T17:55:37.4497647Z     
2025-01-07T17:55:37.4497745Z         # First check if both options are provided
2025-01-07T17:55:37.4497921Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4497999Z >           raise ValueError(
2025-01-07T17:55:37.4498140Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4498304Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4498374Z             )
2025-01-07T17:55:37.4498721Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4498732Z 
2025-01-07T17:55:37.4498902Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4499131Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-07T17:55:37.4499137Z 
2025-01-07T17:55:37.4499349Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4499354Z 
2025-01-07T17:55:37.4499443Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4499530Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4499606Z         """
2025-01-07T17:55:37.4499752Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4499825Z     
2025-01-07T17:55:37.4499899Z         Parameters:
2025-01-07T17:55:37.4499974Z         -----------
2025-01-07T17:55:37.4500091Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4500165Z     
2025-01-07T17:55:37.4500238Z         Returns:
2025-01-07T17:55:37.4500307Z         --------
2025-01-07T17:55:37.4500394Z         An LIVPlotter instance.
2025-01-07T17:55:37.4500465Z         """
2025-01-07T17:55:37.4500604Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4500609Z 
2025-01-07T17:55:37.4500747Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4500865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4501023Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4501172Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4501384Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4501607Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4501805Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4501880Z     return cls(
2025-01-07T17:55:37.4502095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4502101Z 
2025-01-07T17:55:37.4502385Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4502525Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4502697Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4502871Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4503068Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4503170Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4503354Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4503456Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4503622Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4503733Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4503959Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4503964Z 
2025-01-07T17:55:37.4504040Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4504210Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4504313Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4504513Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4504580Z        0.00025518])
2025-01-07T17:55:37.4504742Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4504932Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4505056Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4505188Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4505388Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4505499Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4505729Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4505919Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4506028Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4506117Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4506227Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4506320Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4506477Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4506648Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4506772Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4506921Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4507089Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4507205Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4507368Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4507493Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4507722Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4507795Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4507805Z 
2025-01-07T17:55:37.4507877Z     def __init__(
2025-01-07T17:55:37.4507949Z         self,
2025-01-07T17:55:37.4508034Z         last_interaction_type,
2025-01-07T17:55:37.4508123Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4508209Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4508300Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4508378Z         last_interaction_in_r,
2025-01-07T17:55:37.4508452Z         lines_df,
2025-01-07T17:55:37.4508523Z         packet_nus,
2025-01-07T17:55:37.4508605Z         packet_energies,
2025-01-07T17:55:37.4508673Z         r_inner,
2025-01-07T17:55:37.4508762Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4508940Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4509040Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4509125Z         spectrum_wavelength,
2025-01-07T17:55:37.4509201Z         t_inner,
2025-01-07T17:55:37.4509278Z         time_of_simulation,
2025-01-07T17:55:37.4509360Z         time_explosion,
2025-01-07T17:55:37.4509433Z         v_inner,
2025-01-07T17:55:37.4509499Z         v_outer,
2025-01-07T17:55:37.4509571Z         velocity
2025-01-07T17:55:37.4509636Z     ):
2025-01-07T17:55:37.4509707Z         """
2025-01-07T17:55:37.4510048Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4510119Z     
2025-01-07T17:55:37.4510189Z         Parameters
2025-01-07T17:55:37.4510265Z         ----------
2025-01-07T17:55:37.4510355Z         last_interaction_type : np.array
2025-01-07T17:55:37.4510508Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4510623Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4510722Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4510870Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4510961Z             absorption (interaction in)
2025-01-07T17:55:37.4511064Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4511203Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4511292Z             emission (interaction out)
2025-01-07T17:55:37.4511389Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4511547Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4511639Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4511795Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4511878Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4512148Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4512312Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4512568Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4512643Z             unit of Hz
2025-01-07T17:55:37.4512744Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4512880Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4512967Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4513083Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4513194Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4513323Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4513427Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4513554Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4513653Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4513792Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4513874Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4514133Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4514228Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4514344Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4514415Z         """
2025-01-07T17:55:37.4514592Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4514705Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4514796Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4514867Z             {
2025-01-07T17:55:37.4514945Z                 "nus": packet_nus,
2025-01-07T17:55:37.4515072Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4515162Z                 "energies": packet_energies,
2025-01-07T17:55:37.4515283Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4515434Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4515591Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4515728Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4515845Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4515916Z             }
2025-01-07T17:55:37.4515982Z         )
2025-01-07T17:55:37.4516052Z     
2025-01-07T17:55:37.4516304Z         # Save other properties
2025-01-07T17:55:37.4516391Z         self.lines_df = lines_df
2025-01-07T17:55:37.4516470Z         self.r_inner = r_inner
2025-01-07T17:55:37.4516618Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4516752Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4516885Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4516994Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4517095Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4517167Z         )
2025-01-07T17:55:37.4517287Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4517364Z         self.t_inner = t_inner
2025-01-07T17:55:37.4517478Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4517577Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4517655Z         self.v_inner = v_inner
2025-01-07T17:55:37.4517738Z         self.v_outer = v_outer
2025-01-07T17:55:37.4517802Z     
2025-01-07T17:55:37.4517908Z         # First check if both options are provided
2025-01-07T17:55:37.4518083Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4518166Z >           raise ValueError(
2025-01-07T17:55:37.4518305Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4518470Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4518537Z             )
2025-01-07T17:55:37.4518898Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4518903Z 
2025-01-07T17:55:37.4519082Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4519307Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-07T17:55:37.4519316Z 
2025-01-07T17:55:37.4519537Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4519541Z 
2025-01-07T17:55:37.4519625Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4519719Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4519785Z         """
2025-01-07T17:55:37.4519937Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4520003Z     
2025-01-07T17:55:37.4520081Z         Parameters:
2025-01-07T17:55:37.4520152Z         -----------
2025-01-07T17:55:37.4520270Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4520420Z     
2025-01-07T17:55:37.4520493Z         Returns:
2025-01-07T17:55:37.4520567Z         --------
2025-01-07T17:55:37.4520649Z         An LIVPlotter instance.
2025-01-07T17:55:37.4520719Z         """
2025-01-07T17:55:37.4520851Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4520856Z 
2025-01-07T17:55:37.4520996Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4521108Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4521273Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4521419Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4521638Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4521771Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4522173Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4522261Z     return cls(
2025-01-07T17:55:37.4522376Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4522380Z 
2025-01-07T17:55:37.4522665Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4522803Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4523105Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4523280Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4523484Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4523583Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4523767Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4523860Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4524036Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4524155Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4524266Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4524271Z 
2025-01-07T17:55:37.4524351Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4524517Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4524627Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4524821Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4524894Z        0.00025518])
2025-01-07T17:55:37.4525050Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4525246Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4525376Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4525503Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4525711Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4525812Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4526057Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4526242Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4526358Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4526444Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4526558Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4526647Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4526801Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4527094Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4527216Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4527369Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4527531Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4527656Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4527816Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4527946Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4528053Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4528131Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4528139Z 
2025-01-07T17:55:37.4528212Z     def __init__(
2025-01-07T17:55:37.4528278Z         self,
2025-01-07T17:55:37.4528365Z         last_interaction_type,
2025-01-07T17:55:37.4528450Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4528542Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4528623Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4528706Z         last_interaction_in_r,
2025-01-07T17:55:37.4528774Z         lines_df,
2025-01-07T17:55:37.4528930Z         packet_nus,
2025-01-07T17:55:37.4529007Z         packet_energies,
2025-01-07T17:55:37.4529079Z         r_inner,
2025-01-07T17:55:37.4529163Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4529348Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4529443Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4529528Z         spectrum_wavelength,
2025-01-07T17:55:37.4529598Z         t_inner,
2025-01-07T17:55:37.4529680Z         time_of_simulation,
2025-01-07T17:55:37.4529758Z         time_explosion,
2025-01-07T17:55:37.4529833Z         v_inner,
2025-01-07T17:55:37.4529903Z         v_outer,
2025-01-07T17:55:37.4529970Z         velocity
2025-01-07T17:55:37.4530040Z     ):
2025-01-07T17:55:37.4530106Z         """
2025-01-07T17:55:37.4530336Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4530400Z     
2025-01-07T17:55:37.4530476Z         Parameters
2025-01-07T17:55:37.4530549Z         ----------
2025-01-07T17:55:37.4530645Z         last_interaction_type : np.array
2025-01-07T17:55:37.4530794Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4530914Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4531011Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4531161Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4531247Z             absorption (interaction in)
2025-01-07T17:55:37.4531354Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4531498Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4531583Z             emission (interaction out)
2025-01-07T17:55:37.4531681Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4531829Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4532057Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4532256Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4532345Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4532508Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4532601Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4532759Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4532835Z             unit of Hz
2025-01-07T17:55:37.4532928Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4533182Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4533270Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4533380Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4533495Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4533617Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4533732Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4533853Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4533954Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4534088Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4534174Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4534293Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4534390Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4534502Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4534574Z         """
2025-01-07T17:55:37.4534750Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4534852Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4534946Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4535012Z             {
2025-01-07T17:55:37.4535247Z                 "nus": packet_nus,
2025-01-07T17:55:37.4535371Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4535464Z                 "energies": packet_energies,
2025-01-07T17:55:37.4535578Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4535729Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4535871Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4536013Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4536126Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4536196Z             }
2025-01-07T17:55:37.4536267Z         )
2025-01-07T17:55:37.4536332Z     
2025-01-07T17:55:37.4536420Z         # Save other properties
2025-01-07T17:55:37.4536501Z         self.lines_df = lines_df
2025-01-07T17:55:37.4536585Z         self.r_inner = r_inner
2025-01-07T17:55:37.4536726Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4536863Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4536990Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4537102Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4537196Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4537266Z         )
2025-01-07T17:55:37.4537379Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4537462Z         self.t_inner = t_inner
2025-01-07T17:55:37.4537571Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4537668Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4537753Z         self.v_inner = v_inner
2025-01-07T17:55:37.4537829Z         self.v_outer = v_outer
2025-01-07T17:55:37.4537899Z     
2025-01-07T17:55:37.4538000Z         # First check if both options are provided
2025-01-07T17:55:37.4538174Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4538256Z >           raise ValueError(
2025-01-07T17:55:37.4538396Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4538557Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4538628Z             )
2025-01-07T17:55:37.4538978Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4539068Z 
2025-01-07T17:55:37.4539246Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4539479Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-07T17:55:37.4539484Z 
2025-01-07T17:55:37.4539698Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4539702Z 
2025-01-07T17:55:37.4539792Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4539883Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4539953Z         """
2025-01-07T17:55:37.4540103Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4540173Z     
2025-01-07T17:55:37.4540246Z         Parameters:
2025-01-07T17:55:37.4540322Z         -----------
2025-01-07T17:55:37.4540435Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4540507Z     
2025-01-07T17:55:37.4540573Z         Returns:
2025-01-07T17:55:37.4540648Z         --------
2025-01-07T17:55:37.4540733Z         An LIVPlotter instance.
2025-01-07T17:55:37.4540803Z         """
2025-01-07T17:55:37.4540937Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4540942Z 
2025-01-07T17:55:37.4541076Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4541188Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4541342Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4541578Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4541788Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4542027Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4542230Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4542309Z     return cls(
2025-01-07T17:55:37.4542421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4542436Z 
2025-01-07T17:55:37.4542716Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4542857Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4543032Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4543209Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4543408Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4543511Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4543689Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4543788Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4543950Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4544069Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4544189Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4544193Z 
2025-01-07T17:55:37.4544266Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4544433Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4544538Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4544740Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4544807Z        0.00025518])
2025-01-07T17:55:37.4544966Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4545162Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4545290Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4545421Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4545740Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4545845Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4546074Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4546262Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4546377Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4546469Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4546575Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4546668Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4546818Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4546994Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4547123Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4547268Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4547440Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4547557Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4547825Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4547950Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4548060Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4548132Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4548136Z 
2025-01-07T17:55:37.4548209Z     def __init__(
2025-01-07T17:55:37.4548282Z         self,
2025-01-07T17:55:37.4548364Z         last_interaction_type,
2025-01-07T17:55:37.4548455Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4548543Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4548630Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4548708Z         last_interaction_in_r,
2025-01-07T17:55:37.4548782Z         lines_df,
2025-01-07T17:55:37.4548852Z         packet_nus,
2025-01-07T17:55:37.4548933Z         packet_energies,
2025-01-07T17:55:37.4549001Z         r_inner,
2025-01-07T17:55:37.4549089Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4549267Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4549367Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4549447Z         spectrum_wavelength,
2025-01-07T17:55:37.4549520Z         t_inner,
2025-01-07T17:55:37.4549596Z         time_of_simulation,
2025-01-07T17:55:37.4549675Z         time_explosion,
2025-01-07T17:55:37.4549744Z         v_inner,
2025-01-07T17:55:37.4549815Z         v_outer,
2025-01-07T17:55:37.4549887Z         velocity
2025-01-07T17:55:37.4549956Z     ):
2025-01-07T17:55:37.4550026Z         """
2025-01-07T17:55:37.4550250Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4550321Z     
2025-01-07T17:55:37.4550392Z         Parameters
2025-01-07T17:55:37.4550467Z         ----------
2025-01-07T17:55:37.4550558Z         last_interaction_type : np.array
2025-01-07T17:55:37.4550713Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4550830Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4550930Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4551074Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4551167Z             absorption (interaction in)
2025-01-07T17:55:37.4551265Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4551410Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4551499Z             emission (interaction out)
2025-01-07T17:55:37.4551679Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4551832Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4552021Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4552175Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4552257Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4552423Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4552511Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4552676Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4552749Z             unit of Hz
2025-01-07T17:55:37.4552848Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4552973Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4553060Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4553179Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4553289Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4553416Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4553523Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4553647Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4553857Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4553995Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4554076Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4554200Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4554296Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4554412Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4554479Z         """
2025-01-07T17:55:37.4554656Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4554767Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4554856Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4554927Z             {
2025-01-07T17:55:37.4555007Z                 "nus": packet_nus,
2025-01-07T17:55:37.4555133Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4555221Z                 "energies": packet_energies,
2025-01-07T17:55:37.4555348Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4555495Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4555642Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4555778Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4555893Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4555961Z             }
2025-01-07T17:55:37.4556034Z         )
2025-01-07T17:55:37.4556104Z     
2025-01-07T17:55:37.4556183Z         # Save other properties
2025-01-07T17:55:37.4556268Z         self.lines_df = lines_df
2025-01-07T17:55:37.4556345Z         self.r_inner = r_inner
2025-01-07T17:55:37.4556487Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4556621Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4556759Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4556865Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4556964Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4557030Z         )
2025-01-07T17:55:37.4557149Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4557226Z         self.t_inner = t_inner
2025-01-07T17:55:37.4557339Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4557431Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4557648Z         self.v_inner = v_inner
2025-01-07T17:55:37.4557729Z         self.v_outer = v_outer
2025-01-07T17:55:37.4557794Z     
2025-01-07T17:55:37.4557898Z         # First check if both options are provided
2025-01-07T17:55:37.4558067Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4558150Z >           raise ValueError(
2025-01-07T17:55:37.4558285Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4558453Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4558519Z             )
2025-01-07T17:55:37.4558875Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4558880Z 
2025-01-07T17:55:37.4559052Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4559284Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-07T17:55:37.4559292Z 
2025-01-07T17:55:37.4559509Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4559514Z 
2025-01-07T17:55:37.4559598Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4559691Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4559758Z         """
2025-01-07T17:55:37.4559907Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4560052Z     
2025-01-07T17:55:37.4560129Z         Parameters:
2025-01-07T17:55:37.4560199Z         -----------
2025-01-07T17:55:37.4560317Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4560382Z     
2025-01-07T17:55:37.4560455Z         Returns:
2025-01-07T17:55:37.4560522Z         --------
2025-01-07T17:55:37.4560609Z         An LIVPlotter instance.
2025-01-07T17:55:37.4560676Z         """
2025-01-07T17:55:37.4560811Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4560819Z 
2025-01-07T17:55:37.4560959Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4561067Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4561232Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4561377Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4561596Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4561733Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4562057Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4562178Z     return cls(
2025-01-07T17:55:37.4562291Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4562295Z 
2025-01-07T17:55:37.4562577Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4562718Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4562896Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4563068Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4563272Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4563373Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4563560Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4563656Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4563818Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4563930Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4564042Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4564164Z 
2025-01-07T17:55:37.4564248Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4564410Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4564518Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4564708Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4564782Z        0.00025518])
2025-01-07T17:55:37.4564938Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4565133Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4565252Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4565383Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4565594Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4565697Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4565936Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4566119Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4566237Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4566324Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4566545Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4566638Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4566797Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4566967Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4567091Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4567243Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4567411Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4567534Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4567692Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4567821Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4567930Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4568009Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4568014Z 
2025-01-07T17:55:37.4568084Z     def __init__(
2025-01-07T17:55:37.4568157Z         self,
2025-01-07T17:55:37.4568239Z         last_interaction_type,
2025-01-07T17:55:37.4568330Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4568419Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4568501Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4568585Z         last_interaction_in_r,
2025-01-07T17:55:37.4568657Z         lines_df,
2025-01-07T17:55:37.4568734Z         packet_nus,
2025-01-07T17:55:37.4568810Z         packet_energies,
2025-01-07T17:55:37.4568884Z         r_inner,
2025-01-07T17:55:37.4568966Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4569149Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4569242Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4569332Z         spectrum_wavelength,
2025-01-07T17:55:37.4569400Z         t_inner,
2025-01-07T17:55:37.4569481Z         time_of_simulation,
2025-01-07T17:55:37.4569558Z         time_explosion,
2025-01-07T17:55:37.4569630Z         v_inner,
2025-01-07T17:55:37.4569698Z         v_outer,
2025-01-07T17:55:37.4569769Z         velocity
2025-01-07T17:55:37.4569839Z     ):
2025-01-07T17:55:37.4569907Z         """
2025-01-07T17:55:37.4570136Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4570288Z     
2025-01-07T17:55:37.4570366Z         Parameters
2025-01-07T17:55:37.4570436Z         ----------
2025-01-07T17:55:37.4570532Z         last_interaction_type : np.array
2025-01-07T17:55:37.4570680Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4570798Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4570893Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4571046Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4571132Z             absorption (interaction in)
2025-01-07T17:55:37.4571235Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4571374Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4571465Z             emission (interaction out)
2025-01-07T17:55:37.4571562Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4571712Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4571814Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4572109Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4572217Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4572377Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4572471Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4572752Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4572827Z             unit of Hz
2025-01-07T17:55:37.4572922Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4573054Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4573137Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4573250Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4573361Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4573483Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4573597Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4573717Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4573815Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4573948Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4574035Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4574160Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4574258Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4574365Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4574436Z         """
2025-01-07T17:55:37.4574610Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4574716Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4574840Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4574910Z             {
2025-01-07T17:55:37.4574996Z                 "nus": packet_nus,
2025-01-07T17:55:37.4575121Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4575216Z                 "energies": packet_energies,
2025-01-07T17:55:37.4575333Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4575483Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4575625Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4575767Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4575877Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4575948Z             }
2025-01-07T17:55:37.4576014Z         )
2025-01-07T17:55:37.4576083Z     
2025-01-07T17:55:37.4576170Z         # Save other properties
2025-01-07T17:55:37.4576250Z         self.lines_df = lines_df
2025-01-07T17:55:37.4576451Z         self.r_inner = r_inner
2025-01-07T17:55:37.4576588Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4576723Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4576853Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4576965Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4577059Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4577134Z         )
2025-01-07T17:55:37.4577247Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4577329Z         self.t_inner = t_inner
2025-01-07T17:55:37.4577436Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4577531Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4577608Z         self.v_inner = v_inner
2025-01-07T17:55:37.4577689Z         self.v_outer = v_outer
2025-01-07T17:55:37.4577758Z     
2025-01-07T17:55:37.4577859Z         # First check if both options are provided
2025-01-07T17:55:37.4578041Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4578117Z >           raise ValueError(
2025-01-07T17:55:37.4578258Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4578417Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4578488Z             )
2025-01-07T17:55:37.4578920Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4578925Z 
2025-01-07T17:55:37.4579100Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4579323Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-07T17:55:37.4579333Z 
2025-01-07T17:55:37.4579548Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4579556Z 
2025-01-07T17:55:37.4579647Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4579734Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4579805Z         """
2025-01-07T17:55:37.4579952Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4580022Z     
2025-01-07T17:55:37.4580093Z         Parameters:
2025-01-07T17:55:37.4580168Z         -----------
2025-01-07T17:55:37.4580280Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4580353Z     
2025-01-07T17:55:37.4580421Z         Returns:
2025-01-07T17:55:37.4580494Z         --------
2025-01-07T17:55:37.4580576Z         An LIVPlotter instance.
2025-01-07T17:55:37.4580649Z         """
2025-01-07T17:55:37.4580778Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4580788Z 
2025-01-07T17:55:37.4580921Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4581031Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4581191Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4581341Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4581550Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4581685Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4581881Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4582076Z     return cls(
2025-01-07T17:55:37.4582184Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4582189Z 
2025-01-07T17:55:37.4582472Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4582612Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4582786Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4583097Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4583293Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4583395Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4588161Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4588321Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4588518Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4588640Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4588763Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4588768Z 
2025-01-07T17:55:37.4588851Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4589033Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4589153Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4589367Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4589443Z        0.00025518])
2025-01-07T17:55:37.4589613Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4589818Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4590112Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4590254Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4590464Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4590578Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4590817Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4591015Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4591143Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4591233Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4591355Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4591448Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4591625Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4591809Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4592190Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4592464Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4592643Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4592771Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4592938Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4593074Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4593184Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4593267Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4593272Z 
2025-01-07T17:55:37.4593349Z     def __init__(
2025-01-07T17:55:37.4593426Z         self,
2025-01-07T17:55:37.4593512Z         last_interaction_type,
2025-01-07T17:55:37.4593607Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4593699Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4593789Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4593870Z         last_interaction_in_r,
2025-01-07T17:55:37.4593948Z         lines_df,
2025-01-07T17:55:37.4594029Z         packet_nus,
2025-01-07T17:55:37.4594109Z         packet_energies,
2025-01-07T17:55:37.4594316Z         r_inner,
2025-01-07T17:55:37.4594404Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4594595Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4594693Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4594782Z         spectrum_wavelength,
2025-01-07T17:55:37.4594852Z         t_inner,
2025-01-07T17:55:37.4594938Z         time_of_simulation,
2025-01-07T17:55:37.4595019Z         time_explosion,
2025-01-07T17:55:37.4595095Z         v_inner,
2025-01-07T17:55:37.4595164Z         v_outer,
2025-01-07T17:55:37.4595238Z         velocity
2025-01-07T17:55:37.4595305Z     ):
2025-01-07T17:55:37.4595379Z         """
2025-01-07T17:55:37.4595613Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4595688Z     
2025-01-07T17:55:37.4595760Z         Parameters
2025-01-07T17:55:37.4595841Z         ----------
2025-01-07T17:55:37.4595943Z         last_interaction_type : np.array
2025-01-07T17:55:37.4596102Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4596232Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4596333Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4596493Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4596590Z             absorption (interaction in)
2025-01-07T17:55:37.4596809Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4596950Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4597046Z             emission (interaction out)
2025-01-07T17:55:37.4597142Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4597304Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4597428Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4597694Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4597851Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4598105Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4598264Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4598538Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4598665Z             unit of Hz
2025-01-07T17:55:37.4598823Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4599041Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4599134Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4599256Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4599367Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4599503Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4599613Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4599742Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4599853Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4599991Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4600081Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4600206Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4600311Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4600427Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4600504Z         """
2025-01-07T17:55:37.4600684Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4600794Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4600887Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4600962Z             {
2025-01-07T17:55:37.4601044Z                 "nus": packet_nus,
2025-01-07T17:55:37.4601178Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4601381Z                 "energies": packet_energies,
2025-01-07T17:55:37.4601505Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4601659Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4601806Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4602135Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4602295Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4602376Z             }
2025-01-07T17:55:37.4602445Z         )
2025-01-07T17:55:37.4602519Z     
2025-01-07T17:55:37.4602607Z         # Save other properties
2025-01-07T17:55:37.4602696Z         self.lines_df = lines_df
2025-01-07T17:55:37.4602778Z         self.r_inner = r_inner
2025-01-07T17:55:37.4602927Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4603067Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4603208Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4603325Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4603423Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4603497Z         )
2025-01-07T17:55:37.4603615Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4603703Z         self.t_inner = t_inner
2025-01-07T17:55:37.4603966Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4604070Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4604153Z         self.v_inner = v_inner
2025-01-07T17:55:37.4604237Z         self.v_outer = v_outer
2025-01-07T17:55:37.4604307Z     
2025-01-07T17:55:37.4604417Z         # First check if both options are provided
2025-01-07T17:55:37.4604596Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4604687Z >           raise ValueError(
2025-01-07T17:55:37.4604841Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4605008Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4605084Z             )
2025-01-07T17:55:37.4605448Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4605457Z 
2025-01-07T17:55:37.4605641Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4605871Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-07T17:55:37.4605876Z 
2025-01-07T17:55:37.4606098Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4606103Z 
2025-01-07T17:55:37.4606193Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4606289Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4606366Z         """
2025-01-07T17:55:37.4606524Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4606597Z     
2025-01-07T17:55:37.4606674Z         Parameters:
2025-01-07T17:55:37.4606754Z         -----------
2025-01-07T17:55:37.4606873Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4606946Z     
2025-01-07T17:55:37.4607016Z         Returns:
2025-01-07T17:55:37.4607094Z         --------
2025-01-07T17:55:37.4607183Z         An LIVPlotter instance.
2025-01-07T17:55:37.4607260Z         """
2025-01-07T17:55:37.4607398Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4607403Z 
2025-01-07T17:55:37.4607552Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4607665Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4607842Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4607994Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4608349Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4608492Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4608692Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4608771Z     return cls(
2025-01-07T17:55:37.4608879Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4608888Z 
2025-01-07T17:55:37.4609176Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4609318Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4609499Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4609679Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4609886Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4609993Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4610182Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4610284Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4610449Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4610568Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4610768Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4610773Z 
2025-01-07T17:55:37.4610856Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4611021Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4611132Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4611325Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4611403Z        0.00025518])
2025-01-07T17:55:37.4611559Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4611758Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4611885Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4612199Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4612419Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4612523Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4612765Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4612954Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4613072Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4613162Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4613277Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4613373Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4613526Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4613705Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4613832Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4613987Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4614152Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4614277Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4614438Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4614569Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4614805Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4614885Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4614890Z 
2025-01-07T17:55:37.4614967Z     def __init__(
2025-01-07T17:55:37.4615036Z         self,
2025-01-07T17:55:37.4615124Z         last_interaction_type,
2025-01-07T17:55:37.4615209Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4615307Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4615391Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4615477Z         last_interaction_in_r,
2025-01-07T17:55:37.4615549Z         lines_df,
2025-01-07T17:55:37.4615627Z         packet_nus,
2025-01-07T17:55:37.4615707Z         packet_energies,
2025-01-07T17:55:37.4615782Z         r_inner,
2025-01-07T17:55:37.4615865Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4616049Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4616149Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4616240Z         spectrum_wavelength,
2025-01-07T17:55:37.4616316Z         t_inner,
2025-01-07T17:55:37.4616395Z         time_of_simulation,
2025-01-07T17:55:37.4616475Z         time_explosion,
2025-01-07T17:55:37.4616545Z         v_inner,
2025-01-07T17:55:37.4616618Z         v_outer,
2025-01-07T17:55:37.4616686Z         velocity
2025-01-07T17:55:37.4616874Z     ):
2025-01-07T17:55:37.4616943Z         """
2025-01-07T17:55:37.4617174Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4617240Z     
2025-01-07T17:55:37.4617317Z         Parameters
2025-01-07T17:55:37.4617389Z         ----------
2025-01-07T17:55:37.4617488Z         last_interaction_type : np.array
2025-01-07T17:55:37.4617640Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4617763Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4617866Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4618021Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4618115Z             absorption (interaction in)
2025-01-07T17:55:37.4618213Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4618360Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4618448Z             emission (interaction out)
2025-01-07T17:55:37.4618554Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4618704Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4618804Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4618954Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4619043Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4619198Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4619299Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4619460Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4619537Z             unit of Hz
2025-01-07T17:55:37.4619639Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4619767Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4619856Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4619970Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4620083Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4620205Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4620317Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4620438Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4620539Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4620675Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4620849Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4620970Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4621070Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4621188Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4621255Z         """
2025-01-07T17:55:37.4621433Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4621539Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4621636Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4621703Z             {
2025-01-07T17:55:37.4621788Z                 "nus": packet_nus,
2025-01-07T17:55:37.4621915Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4622121Z                 "energies": packet_energies,
2025-01-07T17:55:37.4622241Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4622393Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4622537Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4622683Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4622800Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4622868Z             }
2025-01-07T17:55:37.4623058Z         )
2025-01-07T17:55:37.4623125Z     
2025-01-07T17:55:37.4623216Z         # Save other properties
2025-01-07T17:55:37.4623299Z         self.lines_df = lines_df
2025-01-07T17:55:37.4623383Z         self.r_inner = r_inner
2025-01-07T17:55:37.4623523Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4623662Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4623793Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4623905Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4624004Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4624078Z         )
2025-01-07T17:55:37.4624196Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4624279Z         self.t_inner = t_inner
2025-01-07T17:55:37.4624391Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4624487Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4624573Z         self.v_inner = v_inner
2025-01-07T17:55:37.4624650Z         self.v_outer = v_outer
2025-01-07T17:55:37.4624722Z     
2025-01-07T17:55:37.4624823Z         # First check if both options are provided
2025-01-07T17:55:37.4625003Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4625084Z >           raise ValueError(
2025-01-07T17:55:37.4625228Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4625390Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4625466Z             )
2025-01-07T17:55:37.4625819Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4625830Z 
2025-01-07T17:55:37.4626003Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4626235Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-07T17:55:37.4626242Z 
2025-01-07T17:55:37.4626459Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4626465Z 
2025-01-07T17:55:37.4626559Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4626649Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4626722Z         """
2025-01-07T17:55:37.4626872Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4626944Z     
2025-01-07T17:55:37.4627019Z         Parameters:
2025-01-07T17:55:37.4627095Z         -----------
2025-01-07T17:55:37.4627331Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4627402Z     
2025-01-07T17:55:37.4627476Z         Returns:
2025-01-07T17:55:37.4627547Z         --------
2025-01-07T17:55:37.4627633Z         An LIVPlotter instance.
2025-01-07T17:55:37.4627700Z         """
2025-01-07T17:55:37.4627835Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4627840Z 
2025-01-07T17:55:37.4627980Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4628092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4628252Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4628401Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4628615Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4628752Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4628952Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4629030Z     return cls(
2025-01-07T17:55:37.4629139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4629143Z 
2025-01-07T17:55:37.4629420Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4629564Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4629823Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4630004Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4630205Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4630311Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4630493Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4630598Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4630765Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4630877Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4630991Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4630996Z 
2025-01-07T17:55:37.4631076Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4631249Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4631355Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4631552Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4631621Z        0.00025518])
2025-01-07T17:55:37.4631779Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4632154Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4632337Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4632471Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4632679Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4632783Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4633022Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4633218Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4633336Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4633427Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4633537Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4633635Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4633936Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4634116Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4634241Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4634399Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4634569Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4634692Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4634857Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4634987Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4635099Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4635175Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4635184Z 
2025-01-07T17:55:37.4635259Z     def __init__(
2025-01-07T17:55:37.4635327Z         self,
2025-01-07T17:55:37.4635416Z         last_interaction_type,
2025-01-07T17:55:37.4635503Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4635594Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4635679Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4635766Z         last_interaction_in_r,
2025-01-07T17:55:37.4635953Z         lines_df,
2025-01-07T17:55:37.4636027Z         packet_nus,
2025-01-07T17:55:37.4636110Z         packet_energies,
2025-01-07T17:55:37.4636179Z         r_inner,
2025-01-07T17:55:37.4636268Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4636448Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4636549Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4636631Z         spectrum_wavelength,
2025-01-07T17:55:37.4636706Z         t_inner,
2025-01-07T17:55:37.4636789Z         time_of_simulation,
2025-01-07T17:55:37.4636870Z         time_explosion,
2025-01-07T17:55:37.4636939Z         v_inner,
2025-01-07T17:55:37.4637014Z         v_outer,
2025-01-07T17:55:37.4637084Z         velocity
2025-01-07T17:55:37.4637158Z     ):
2025-01-07T17:55:37.4637227Z         """
2025-01-07T17:55:37.4637465Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4637535Z     
2025-01-07T17:55:37.4637614Z         Parameters
2025-01-07T17:55:37.4637691Z         ----------
2025-01-07T17:55:37.4637784Z         last_interaction_type : np.array
2025-01-07T17:55:37.4637940Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4638058Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4638161Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4638306Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4638401Z             absorption (interaction in)
2025-01-07T17:55:37.4638503Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4638650Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4638737Z             emission (interaction out)
2025-01-07T17:55:37.4638836Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4638985Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4639088Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4639241Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4639324Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4639489Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4639578Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4639744Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4639817Z             unit of Hz
2025-01-07T17:55:37.4640006Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4640135Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4640226Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4640336Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4640449Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4640574Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4640689Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4640816Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4640914Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4641056Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4641142Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4641267Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4641368Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4641489Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4641557Z         """
2025-01-07T17:55:37.4641734Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4641839Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4642132Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4642335Z             {
2025-01-07T17:55:37.4642425Z                 "nus": packet_nus,
2025-01-07T17:55:37.4642557Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4642655Z                 "energies": packet_energies,
2025-01-07T17:55:37.4642782Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4642932Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4643080Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4643223Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4643343Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4643412Z             }
2025-01-07T17:55:37.4643484Z         )
2025-01-07T17:55:37.4643550Z     
2025-01-07T17:55:37.4643639Z         # Save other properties
2025-01-07T17:55:37.4643723Z         self.lines_df = lines_df
2025-01-07T17:55:37.4643810Z         self.r_inner = r_inner
2025-01-07T17:55:37.4643953Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4644096Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4644234Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4644343Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4644443Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4644509Z         )
2025-01-07T17:55:37.4644631Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4644713Z         self.t_inner = t_inner
2025-01-07T17:55:37.4644827Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4644923Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4645005Z         self.v_inner = v_inner
2025-01-07T17:55:37.4645082Z         self.v_outer = v_outer
2025-01-07T17:55:37.4645154Z     
2025-01-07T17:55:37.4645257Z         # First check if both options are provided
2025-01-07T17:55:37.4645441Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4645522Z >           raise ValueError(
2025-01-07T17:55:37.4645668Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4645834Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4645903Z             )
2025-01-07T17:55:37.4646266Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4646386Z 
2025-01-07T17:55:37.4646564Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4646801Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-07T17:55:37.4646806Z 
2025-01-07T17:55:37.4647025Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4647029Z 
2025-01-07T17:55:37.4647127Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4647222Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4647290Z         """
2025-01-07T17:55:37.4647444Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4647510Z     
2025-01-07T17:55:37.4647589Z         Parameters:
2025-01-07T17:55:37.4647660Z         -----------
2025-01-07T17:55:37.4647780Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4647846Z     
2025-01-07T17:55:37.4647919Z         Returns:
2025-01-07T17:55:37.4647994Z         --------
2025-01-07T17:55:37.4648082Z         An LIVPlotter instance.
2025-01-07T17:55:37.4648150Z         """
2025-01-07T17:55:37.4648288Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4648295Z 
2025-01-07T17:55:37.4648430Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4648544Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4648788Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4648936Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4649159Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4649293Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4649495Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4649568Z     return cls(
2025-01-07T17:55:37.4649683Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4649692Z 
2025-01-07T17:55:37.4649968Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4650113Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4650292Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4650472Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4650678Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4650780Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4650964Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4651061Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4651230Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4651344Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4651460Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4651465Z 
2025-01-07T17:55:37.4651542Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4651714Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4651826Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4652223Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4652303Z        0.00025518])
2025-01-07T17:55:37.4652464Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4652666Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4652787Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4653045Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4653250Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4653358Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4653589Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4653786Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4653910Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4653997Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4654114Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4654204Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4654366Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4654540Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4654671Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4654824Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4654998Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4655124Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4655412Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4655545Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4655651Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4655729Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4655733Z 
2025-01-07T17:55:37.4655808Z     def __init__(
2025-01-07T17:55:37.4655881Z         self,
2025-01-07T17:55:37.4655967Z         last_interaction_type,
2025-01-07T17:55:37.4656063Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4656149Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4656239Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4656319Z         last_interaction_in_r,
2025-01-07T17:55:37.4656397Z         lines_df,
2025-01-07T17:55:37.4656469Z         packet_nus,
2025-01-07T17:55:37.4656552Z         packet_energies,
2025-01-07T17:55:37.4656625Z         r_inner,
2025-01-07T17:55:37.4656713Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4656896Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4656993Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4657080Z         spectrum_wavelength,
2025-01-07T17:55:37.4657149Z         t_inner,
2025-01-07T17:55:37.4657233Z         time_of_simulation,
2025-01-07T17:55:37.4657311Z         time_explosion,
2025-01-07T17:55:37.4657384Z         v_inner,
2025-01-07T17:55:37.4657452Z         v_outer,
2025-01-07T17:55:37.4657529Z         velocity
2025-01-07T17:55:37.4657596Z     ):
2025-01-07T17:55:37.4657670Z         """
2025-01-07T17:55:37.4657900Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4657971Z     
2025-01-07T17:55:37.4658044Z         Parameters
2025-01-07T17:55:37.4658120Z         ----------
2025-01-07T17:55:37.4658219Z         last_interaction_type : np.array
2025-01-07T17:55:37.4658374Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4658494Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4658592Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4658743Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4658830Z             absorption (interaction in)
2025-01-07T17:55:37.4658933Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4659072Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4659252Z             emission (interaction out)
2025-01-07T17:55:37.4659348Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4659503Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4659597Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4659750Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4659841Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4659997Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4660091Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4660250Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4660328Z             unit of Hz
2025-01-07T17:55:37.4660423Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4660558Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4660647Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4660761Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4660870Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4660999Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4661104Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4661230Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4661413Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4661549Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4661637Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4661757Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4661859Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4662079Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4662153Z         """
2025-01-07T17:55:37.4662337Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4662449Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4662540Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4662614Z             {
2025-01-07T17:55:37.4662691Z                 "nus": packet_nus,
2025-01-07T17:55:37.4662820Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4662920Z                 "energies": packet_energies,
2025-01-07T17:55:37.4663038Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4663190Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4663331Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4663474Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4663585Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4663662Z             }
2025-01-07T17:55:37.4663729Z         )
2025-01-07T17:55:37.4663800Z     
2025-01-07T17:55:37.4663883Z         # Save other properties
2025-01-07T17:55:37.4663971Z         self.lines_df = lines_df
2025-01-07T17:55:37.4664050Z         self.r_inner = r_inner
2025-01-07T17:55:37.4664195Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4664333Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4664472Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4664584Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4664680Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4664753Z         )
2025-01-07T17:55:37.4664867Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4664952Z         self.t_inner = t_inner
2025-01-07T17:55:37.4665060Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4665159Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4665378Z         self.v_inner = v_inner
2025-01-07T17:55:37.4665461Z         self.v_outer = v_outer
2025-01-07T17:55:37.4665526Z     
2025-01-07T17:55:37.4665631Z         # First check if both options are provided
2025-01-07T17:55:37.4665807Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4665896Z >           raise ValueError(
2025-01-07T17:55:37.4666039Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4666204Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4666276Z             )
2025-01-07T17:55:37.4666630Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4666635Z 
2025-01-07T17:55:37.4666810Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4667016Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-07T17:55:37.4667025Z 
2025-01-07T17:55:37.4667300Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4667513Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4667764Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4667878Z 
2025-01-07T17:55:37.4667973Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4668084Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4668156Z         """
2025-01-07T17:55:37.4668244Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4668314Z     
2025-01-07T17:55:37.4668386Z         Parameters
2025-01-07T17:55:37.4668461Z         ----------
2025-01-07T17:55:37.4668603Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4668688Z             Simulation object.
2025-01-07T17:55:37.4668756Z     
2025-01-07T17:55:37.4668830Z         Returns
2025-01-07T17:55:37.4668901Z         -------
2025-01-07T17:55:37.4669038Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4669105Z         """
2025-01-07T17:55:37.4669247Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4669252Z 
2025-01-07T17:55:37.4669402Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4669514Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4669683Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4669829Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4670041Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4670175Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4670379Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4670453Z     return cls(
2025-01-07T17:55:37.4670566Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4670571Z 
2025-01-07T17:55:37.4670844Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4670988Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4671174Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4671349Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4671551Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4671652Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4671835Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4672029Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4672334Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4672449Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4672566Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4672570Z 
2025-01-07T17:55:37.4672652Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4672822Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4672933Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4673127Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4673201Z        0.00025518])
2025-01-07T17:55:37.4673356Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4673560Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4673687Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4673822Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4674025Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4674136Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4674384Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4674637Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4674857Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4674972Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4675061Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4675171Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4675274Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4675426Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4675600Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4675730Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4675879Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4676050Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4676167Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4676334Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4676463Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4676579Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4676656Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4676661Z 
2025-01-07T17:55:37.4676737Z     def __init__(
2025-01-07T17:55:37.4676805Z         self,
2025-01-07T17:55:37.4676895Z         last_interaction_type,
2025-01-07T17:55:37.4676987Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4677076Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4677165Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4677248Z         last_interaction_in_r,
2025-01-07T17:55:37.4677323Z         lines_df,
2025-01-07T17:55:37.4677396Z         packet_nus,
2025-01-07T17:55:37.4677477Z         packet_energies,
2025-01-07T17:55:37.4677550Z         r_inner,
2025-01-07T17:55:37.4677640Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4677815Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4677924Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4678006Z         spectrum_wavelength,
2025-01-07T17:55:37.4678168Z         t_inner,
2025-01-07T17:55:37.4678248Z         time_of_simulation,
2025-01-07T17:55:37.4678329Z         time_explosion,
2025-01-07T17:55:37.4678398Z         v_inner,
2025-01-07T17:55:37.4678472Z         v_outer,
2025-01-07T17:55:37.4678541Z         velocity
2025-01-07T17:55:37.4678612Z     ):
2025-01-07T17:55:37.4678683Z         """
2025-01-07T17:55:37.4678916Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4678990Z     
2025-01-07T17:55:37.4679062Z         Parameters
2025-01-07T17:55:37.4679138Z         ----------
2025-01-07T17:55:37.4679230Z         last_interaction_type : np.array
2025-01-07T17:55:37.4679386Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4679500Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4679602Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4679747Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4679845Z             absorption (interaction in)
2025-01-07T17:55:37.4679944Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4680091Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4680184Z             emission (interaction out)
2025-01-07T17:55:37.4680281Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4680435Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4680630Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4680784Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4680868Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4681029Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4681116Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4681279Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4681354Z             unit of Hz
2025-01-07T17:55:37.4681455Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4681582Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4681672Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4681786Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4681894Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4682197Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4682309Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4682437Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4682533Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4682674Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4682758Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4682881Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4682979Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4683095Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4683163Z         """
2025-01-07T17:55:37.4683343Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4683450Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4683544Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4683622Z             {
2025-01-07T17:55:37.4683703Z                 "nus": packet_nus,
2025-01-07T17:55:37.4683835Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4683925Z                 "energies": packet_energies,
2025-01-07T17:55:37.4684050Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4684203Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4684350Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4684615Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4684737Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4684807Z             }
2025-01-07T17:55:37.4684880Z         )
2025-01-07T17:55:37.4684947Z     
2025-01-07T17:55:37.4685035Z         # Save other properties
2025-01-07T17:55:37.4685123Z         self.lines_df = lines_df
2025-01-07T17:55:37.4685206Z         self.r_inner = r_inner
2025-01-07T17:55:37.4685350Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4685485Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4685621Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4685727Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4685828Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4685899Z         )
2025-01-07T17:55:37.4686023Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4686103Z         self.t_inner = t_inner
2025-01-07T17:55:37.4686217Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4686311Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4686394Z         self.v_inner = v_inner
2025-01-07T17:55:37.4686471Z         self.v_outer = v_outer
2025-01-07T17:55:37.4686543Z     
2025-01-07T17:55:37.4686765Z         # First check if both options are provided
2025-01-07T17:55:37.4686937Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4687024Z >           raise ValueError(
2025-01-07T17:55:37.4687161Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4687327Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4687394Z             )
2025-01-07T17:55:37.4687754Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4687764Z 
2025-01-07T17:55:37.4687938Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4688098Z ---------------------------- Captured stdout setup -----------------------------
2025-01-07T17:55:37.4688316Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-07T17:55:37.4688472Z log_level = CRITICAL will be used for Log Level Determination
2025-01-07T17:55:37.4688476Z 
2025-01-07T17:55:37.4688629Z ---------------------------- Captured stderr setup -----------------------------
2025-01-07T17:55:37.4688634Z 
2025-01-07T17:55:37.4688638Z 
2025-01-07T17:55:37.4689045Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]            [A
2025-01-07T17:55:37.4689051Z 
2025-01-07T17:55:37.4689270Z Packets:                                                                                   0/4000 [00:00<?, ?it/s][A
2025-01-07T17:55:37.4689418Z Iterations:                                                                                49/? [09:01<00:00,  7.88s/it]
2025-01-07T17:55:37.4689427Z 
2025-01-07T17:55:37.4689779Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉3999/4000 [00:00<00:00, 99925.06it/s][A
2025-01-07T17:55:37.4689787Z 
2025-01-07T17:55:37.4690022Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-07T17:55:37.4690173Z Iterations:                                                                                50/? [09:02<00:00,  5.86s/it]
2025-01-07T17:55:37.4690178Z 
2025-01-07T17:55:37.4690496Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 95157.48it/s][A
2025-01-07T17:55:37.4690502Z 
2025-01-07T17:55:37.4690727Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-07T17:55:37.4690960Z Iterations:                                                                                51/? [09:03<00:00,  4.45s/it]
2025-01-07T17:55:37.4690965Z 
2025-01-07T17:55:37.4691281Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 67532.97it/s][A
2025-01-07T17:55:37.4691484Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-07T17:55:37.4691499Z 
2025-01-07T17:55:37.4691780Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4692173Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4692418Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4692423Z 
2025-01-07T17:55:37.4692518Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4692642Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4692716Z         """
2025-01-07T17:55:37.4692804Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4692875Z     
2025-01-07T17:55:37.4692949Z         Parameters
2025-01-07T17:55:37.4693029Z         ----------
2025-01-07T17:55:37.4693172Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4693257Z             Simulation object.
2025-01-07T17:55:37.4693448Z     
2025-01-07T17:55:37.4693523Z         Returns
2025-01-07T17:55:37.4693594Z         -------
2025-01-07T17:55:37.4693734Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4693803Z         """
2025-01-07T17:55:37.4693944Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4693949Z 
2025-01-07T17:55:37.4694098Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4694210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4694380Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4694529Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4694749Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4694884Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4695087Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4695164Z     return cls(
2025-01-07T17:55:37.4695275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4695279Z 
2025-01-07T17:55:37.4695553Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4695701Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4695886Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4696062Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4696381Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4696484Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4696670Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4696767Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4696940Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4697053Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4697169Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4697174Z 
2025-01-07T17:55:37.4697256Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4697422Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4697535Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4697732Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4697806Z        0.00025518])
2025-01-07T17:55:37.4697961Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4698157Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4698282Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4698418Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4698621Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4698732Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4698982Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4699125Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4699320Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4699434Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4699528Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4699639Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4699736Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4699977Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4700153Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4700281Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4700429Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4700600Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4700722Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4700886Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4701015Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4701128Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4701207Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4701211Z 
2025-01-07T17:55:37.4701288Z     def __init__(
2025-01-07T17:55:37.4701356Z         self,
2025-01-07T17:55:37.4701446Z         last_interaction_type,
2025-01-07T17:55:37.4701542Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4701630Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4701719Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4701802Z         last_interaction_in_r,
2025-01-07T17:55:37.4701875Z         lines_df,
2025-01-07T17:55:37.4702061Z         packet_nus,
2025-01-07T17:55:37.4702288Z         packet_energies,
2025-01-07T17:55:37.4702359Z         r_inner,
2025-01-07T17:55:37.4702448Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4702631Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4702732Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4702815Z         spectrum_wavelength,
2025-01-07T17:55:37.4702893Z         t_inner,
2025-01-07T17:55:37.4702972Z         time_of_simulation,
2025-01-07T17:55:37.4703053Z         time_explosion,
2025-01-07T17:55:37.4703121Z         v_inner,
2025-01-07T17:55:37.4703196Z         v_outer,
2025-01-07T17:55:37.4703269Z         velocity
2025-01-07T17:55:37.4703336Z     ):
2025-01-07T17:55:37.4703408Z         """
2025-01-07T17:55:37.4703639Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4703710Z     
2025-01-07T17:55:37.4703787Z         Parameters
2025-01-07T17:55:37.4703863Z         ----------
2025-01-07T17:55:37.4703962Z         last_interaction_type : np.array
2025-01-07T17:55:37.4704121Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4704237Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4704340Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4704491Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4704588Z             absorption (interaction in)
2025-01-07T17:55:37.4704686Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4704839Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4704931Z             emission (interaction out)
2025-01-07T17:55:37.4705026Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4705186Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4705280Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4705441Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4705525Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4705689Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4705779Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4705944Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4706136Z             unit of Hz
2025-01-07T17:55:37.4706237Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4706368Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4706461Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4706575Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4706687Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4706818Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4706924Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4707055Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4707152Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4707297Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4707381Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4707506Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4707604Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4707719Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4707786Z         """
2025-01-07T17:55:37.4707968Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4708078Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4708171Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4708243Z             {
2025-01-07T17:55:37.4708322Z                 "nus": packet_nus,
2025-01-07T17:55:37.4708541Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4708631Z                 "energies": packet_energies,
2025-01-07T17:55:37.4708756Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4708904Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4709054Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4709198Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4709317Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4709384Z             }
2025-01-07T17:55:37.4709456Z         )
2025-01-07T17:55:37.4709529Z     
2025-01-07T17:55:37.4709612Z         # Save other properties
2025-01-07T17:55:37.4709700Z         self.lines_df = lines_df
2025-01-07T17:55:37.4709779Z         self.r_inner = r_inner
2025-01-07T17:55:37.4709923Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4710060Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4710197Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4710305Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4710405Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4710472Z         )
2025-01-07T17:55:37.4710598Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4710681Z         self.t_inner = t_inner
2025-01-07T17:55:37.4710795Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4710890Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4710974Z         self.v_inner = v_inner
2025-01-07T17:55:37.4711056Z         self.v_outer = v_outer
2025-01-07T17:55:37.4711122Z     
2025-01-07T17:55:37.4711231Z         # First check if both options are provided
2025-01-07T17:55:37.4711403Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4711491Z >           raise ValueError(
2025-01-07T17:55:37.4711629Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4711798Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4711866Z             )
2025-01-07T17:55:37.4712334Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4712454Z 
2025-01-07T17:55:37.4712630Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4712836Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-07T17:55:37.4712841Z 
2025-01-07T17:55:37.4713116Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4713329Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4713569Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4713573Z 
2025-01-07T17:55:37.4713661Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4713777Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4713846Z         """
2025-01-07T17:55:37.4713940Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4714006Z     
2025-01-07T17:55:37.4714088Z         Parameters
2025-01-07T17:55:37.4714160Z         ----------
2025-01-07T17:55:37.4714308Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4714388Z             Simulation object.
2025-01-07T17:55:37.4714460Z     
2025-01-07T17:55:37.4714533Z         Returns
2025-01-07T17:55:37.4714604Z         -------
2025-01-07T17:55:37.4714740Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4714808Z         """
2025-01-07T17:55:37.4714948Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4715063Z 
2025-01-07T17:55:37.4715210Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4715325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4715487Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4715636Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4715849Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4715989Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4716190Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4716262Z     return cls(
2025-01-07T17:55:37.4716373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4716378Z 
2025-01-07T17:55:37.4716650Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4716803Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4716978Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4717160Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4717361Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4717476Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4717661Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4717762Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4717935Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4718050Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4718171Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4718178Z 
2025-01-07T17:55:37.4718256Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4718425Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4718529Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4718729Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4718798Z        0.00025518])
2025-01-07T17:55:37.4719043Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4719242Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4719363Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4719494Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4719698Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4719807Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4720058Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4720204Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4720394Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4720513Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4720602Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4720715Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4720811Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4720965Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4721141Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4721262Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4721494Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4721660Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4721785Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4722109Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4722280Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4722395Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4722471Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4722476Z 
2025-01-07T17:55:37.4722550Z     def __init__(
2025-01-07T17:55:37.4722619Z         self,
2025-01-07T17:55:37.4722708Z         last_interaction_type,
2025-01-07T17:55:37.4722795Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4722887Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4722974Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4723063Z         last_interaction_in_r,
2025-01-07T17:55:37.4723135Z         lines_df,
2025-01-07T17:55:37.4723212Z         packet_nus,
2025-01-07T17:55:37.4723291Z         packet_energies,
2025-01-07T17:55:37.4723366Z         r_inner,
2025-01-07T17:55:37.4723450Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4723638Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4723743Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4723826Z         spectrum_wavelength,
2025-01-07T17:55:37.4723901Z         t_inner,
2025-01-07T17:55:37.4723980Z         time_of_simulation,
2025-01-07T17:55:37.4724061Z         time_explosion,
2025-01-07T17:55:37.4724130Z         v_inner,
2025-01-07T17:55:37.4724203Z         v_outer,
2025-01-07T17:55:37.4724272Z         velocity
2025-01-07T17:55:37.4724347Z     ):
2025-01-07T17:55:37.4724414Z         """
2025-01-07T17:55:37.4724650Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4724717Z     
2025-01-07T17:55:37.4724793Z         Parameters
2025-01-07T17:55:37.4724865Z         ----------
2025-01-07T17:55:37.4724962Z         last_interaction_type : np.array
2025-01-07T17:55:37.4725112Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4725232Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4725459Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4725613Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4725709Z             absorption (interaction in)
2025-01-07T17:55:37.4725809Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4725955Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4726042Z             emission (interaction out)
2025-01-07T17:55:37.4726146Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4726297Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4726397Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4726542Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4726631Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4726787Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4726886Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4727047Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4727124Z             unit of Hz
2025-01-07T17:55:37.4727224Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4727352Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4727443Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4727553Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4727818Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4727944Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4728054Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4728174Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4728278Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4728420Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4728510Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4728635Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4728730Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4728846Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4728913Z         """
2025-01-07T17:55:37.4729093Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4729197Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4729296Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4729366Z             {
2025-01-07T17:55:37.4729453Z                 "nus": packet_nus,
2025-01-07T17:55:37.4729578Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4729675Z                 "energies": packet_energies,
2025-01-07T17:55:37.4729792Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4729948Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4730090Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4730234Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4730350Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4730418Z             }
2025-01-07T17:55:37.4730489Z         )
2025-01-07T17:55:37.4730555Z     
2025-01-07T17:55:37.4730644Z         # Save other properties
2025-01-07T17:55:37.4730727Z         self.lines_df = lines_df
2025-01-07T17:55:37.4730815Z         self.r_inner = r_inner
2025-01-07T17:55:37.4730956Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4731097Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4731231Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4731437Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4731534Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4731608Z         )
2025-01-07T17:55:37.4731729Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4731808Z         self.t_inner = t_inner
2025-01-07T17:55:37.4732042Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4732190Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4732275Z         self.v_inner = v_inner
2025-01-07T17:55:37.4732358Z         self.v_outer = v_outer
2025-01-07T17:55:37.4732429Z     
2025-01-07T17:55:37.4732531Z         # First check if both options are provided
2025-01-07T17:55:37.4732712Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4732792Z >           raise ValueError(
2025-01-07T17:55:37.4732935Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4733102Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4733175Z             )
2025-01-07T17:55:37.4733525Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4733536Z 
2025-01-07T17:55:37.4733711Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4733994Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-07T17:55:37.4734120Z 
2025-01-07T17:55:37.4734392Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4734612Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4734840Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4734846Z 
2025-01-07T17:55:37.4734936Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4735051Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4735124Z         """
2025-01-07T17:55:37.4735215Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4735281Z     
2025-01-07T17:55:37.4735357Z         Parameters
2025-01-07T17:55:37.4735429Z         ----------
2025-01-07T17:55:37.4735575Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4735654Z             Simulation object.
2025-01-07T17:55:37.4735725Z     
2025-01-07T17:55:37.4735794Z         Returns
2025-01-07T17:55:37.4735872Z         -------
2025-01-07T17:55:37.4736002Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4736075Z         """
2025-01-07T17:55:37.4736208Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4736212Z 
2025-01-07T17:55:37.4736361Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4736471Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4736640Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4736794Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4737008Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4737146Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4737344Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4737421Z     return cls(
2025-01-07T17:55:37.4737533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4737538Z 
2025-01-07T17:55:37.4737818Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4737954Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4738132Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4738431Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4738628Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4738731Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4738914Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4739015Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4739176Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4739298Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4739409Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4739414Z 
2025-01-07T17:55:37.4739495Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4739659Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4739773Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4739975Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4740045Z        0.00025518])
2025-01-07T17:55:37.4740204Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4740395Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4740520Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4740729Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4740939Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4741043Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4741288Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4741438Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4741628Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4741744Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4741831Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4742050Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4742145Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4742300Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4742472Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4742600Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4742748Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4742919Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4743046Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4743207Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4743337Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4743446Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4743524Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4743528Z 
2025-01-07T17:55:37.4743603Z     def __init__(
2025-01-07T17:55:37.4743676Z         self,
2025-01-07T17:55:37.4743760Z         last_interaction_type,
2025-01-07T17:55:37.4743854Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4743941Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4744034Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4744113Z         last_interaction_in_r,
2025-01-07T17:55:37.4744189Z         lines_df,
2025-01-07T17:55:37.4744387Z         packet_nus,
2025-01-07T17:55:37.4744464Z         packet_energies,
2025-01-07T17:55:37.4744538Z         r_inner,
2025-01-07T17:55:37.4744623Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4744807Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4744904Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4744990Z         spectrum_wavelength,
2025-01-07T17:55:37.4745059Z         t_inner,
2025-01-07T17:55:37.4745142Z         time_of_simulation,
2025-01-07T17:55:37.4745224Z         time_explosion,
2025-01-07T17:55:37.4745298Z         v_inner,
2025-01-07T17:55:37.4745367Z         v_outer,
2025-01-07T17:55:37.4745442Z         velocity
2025-01-07T17:55:37.4745508Z     ):
2025-01-07T17:55:37.4745581Z         """
2025-01-07T17:55:37.4745808Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4745879Z     
2025-01-07T17:55:37.4745952Z         Parameters
2025-01-07T17:55:37.4746034Z         ----------
2025-01-07T17:55:37.4746132Z         last_interaction_type : np.array
2025-01-07T17:55:37.4746285Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4746406Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4746504Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4746652Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4746741Z             absorption (interaction in)
2025-01-07T17:55:37.4746960Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4747102Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4747194Z             emission (interaction out)
2025-01-07T17:55:37.4747287Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4747445Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4747538Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4747695Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4747787Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4747945Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4748038Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4748198Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4748277Z             unit of Hz
2025-01-07T17:55:37.4748389Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4748537Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4748622Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4748737Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4748845Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4748972Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4749081Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4749207Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4749310Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4749446Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4749534Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4749651Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4749751Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4749869Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4749941Z         """
2025-01-07T17:55:37.4750114Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4750225Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4750316Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4750388Z             {
2025-01-07T17:55:37.4750467Z                 "nus": packet_nus,
2025-01-07T17:55:37.4750703Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4750798Z                 "energies": packet_energies,
2025-01-07T17:55:37.4750914Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4751064Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4751206Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4751349Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4751467Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4751539Z             }
2025-01-07T17:55:37.4751605Z         )
2025-01-07T17:55:37.4751677Z     
2025-01-07T17:55:37.4751761Z         # Save other properties
2025-01-07T17:55:37.4751848Z         self.lines_df = lines_df
2025-01-07T17:55:37.4752024Z         self.r_inner = r_inner
2025-01-07T17:55:37.4752177Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4752315Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4752444Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4752556Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4752651Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4752722Z         )
2025-01-07T17:55:37.4752838Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4752922Z         self.t_inner = t_inner
2025-01-07T17:55:37.4753145Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4753247Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4753325Z         self.v_inner = v_inner
2025-01-07T17:55:37.4753406Z         self.v_outer = v_outer
2025-01-07T17:55:37.4753472Z     
2025-01-07T17:55:37.4753578Z         # First check if both options are provided
2025-01-07T17:55:37.4753750Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4753838Z >           raise ValueError(
2025-01-07T17:55:37.4753981Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4754145Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4754218Z             )
2025-01-07T17:55:37.4754572Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4754582Z 
2025-01-07T17:55:37.4754763Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4755036Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-07T17:55:37.4755041Z 
2025-01-07T17:55:37.4755313Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4755527Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4755767Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4755772Z 
2025-01-07T17:55:37.4755862Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4755974Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4756046Z         """
2025-01-07T17:55:37.4756131Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4756203Z     
2025-01-07T17:55:37.4756275Z         Parameters
2025-01-07T17:55:37.4756351Z         ----------
2025-01-07T17:55:37.4756497Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4756582Z             Simulation object.
2025-01-07T17:55:37.4756648Z     
2025-01-07T17:55:37.4756722Z         Returns
2025-01-07T17:55:37.4756791Z         -------
2025-01-07T17:55:37.4756929Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4756996Z         """
2025-01-07T17:55:37.4757139Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4757255Z 
2025-01-07T17:55:37.4757409Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4757519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4757685Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4757829Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4758063Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4758200Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4758404Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4758479Z     return cls(
2025-01-07T17:55:37.4758590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4758595Z 
2025-01-07T17:55:37.4758884Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4763591Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4763843Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4764046Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4764256Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4764371Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4764741Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4764849Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4765023Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4765151Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4765264Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4765280Z 
2025-01-07T17:55:37.4765363Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4765542Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4765654Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4765857Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4765928Z        0.00025518])
2025-01-07T17:55:37.4766091Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4766295Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4766426Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4766563Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4766780Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4766896Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4767149Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4767303Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4767495Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4767619Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4767712Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4767832Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4767924Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4768096Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4768270Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4768520Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4768684Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4768857Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4768988Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4769152Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4769289Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4769405Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4769492Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4769496Z 
2025-01-07T17:55:37.4769569Z     def __init__(
2025-01-07T17:55:37.4769646Z         self,
2025-01-07T17:55:37.4769732Z         last_interaction_type,
2025-01-07T17:55:37.4769828Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4769926Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4770011Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4770102Z         last_interaction_in_r,
2025-01-07T17:55:37.4770174Z         lines_df,
2025-01-07T17:55:37.4770254Z         packet_nus,
2025-01-07T17:55:37.4770334Z         packet_energies,
2025-01-07T17:55:37.4770412Z         r_inner,
2025-01-07T17:55:37.4770498Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4770690Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4770870Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4770961Z         spectrum_wavelength,
2025-01-07T17:55:37.4771031Z         t_inner,
2025-01-07T17:55:37.4771117Z         time_of_simulation,
2025-01-07T17:55:37.4771194Z         time_explosion,
2025-01-07T17:55:37.4771269Z         v_inner,
2025-01-07T17:55:37.4771341Z         v_outer,
2025-01-07T17:55:37.4771415Z         velocity
2025-01-07T17:55:37.4771488Z     ):
2025-01-07T17:55:37.4771564Z         """
2025-01-07T17:55:37.4771803Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4771870Z     
2025-01-07T17:55:37.4772120Z         Parameters
2025-01-07T17:55:37.4772229Z         ----------
2025-01-07T17:55:37.4772334Z         last_interaction_type : np.array
2025-01-07T17:55:37.4772492Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4772619Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4772725Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4772883Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4772973Z             absorption (interaction in)
2025-01-07T17:55:37.4773081Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4773225Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4773319Z             emission (interaction out)
2025-01-07T17:55:37.4773420Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4773583Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4773685Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4773836Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4773927Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4774093Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4774195Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4774357Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4774437Z             unit of Hz
2025-01-07T17:55:37.4774535Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4774673Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4774761Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4775041Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4775152Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4775285Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4775403Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4775526Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4775631Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4775771Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4775865Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4775985Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4776087Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4776199Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4776276Z         """
2025-01-07T17:55:37.4776455Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4776571Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4776669Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4776738Z             {
2025-01-07T17:55:37.4776824Z                 "nus": packet_nus,
2025-01-07T17:55:37.4776950Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4777048Z                 "energies": packet_energies,
2025-01-07T17:55:37.4777167Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4777430Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4777575Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4777720Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4777835Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4777912Z             }
2025-01-07T17:55:37.4777984Z         )
2025-01-07T17:55:37.4778065Z     
2025-01-07T17:55:37.4778149Z         # Save other properties
2025-01-07T17:55:37.4778237Z         self.lines_df = lines_df
2025-01-07T17:55:37.4778324Z         self.r_inner = r_inner
2025-01-07T17:55:37.4778465Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4778609Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4778742Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4778855Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4778958Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4779035Z         )
2025-01-07T17:55:37.4779149Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4779238Z         self.t_inner = t_inner
2025-01-07T17:55:37.4779348Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4779450Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4779533Z         self.v_inner = v_inner
2025-01-07T17:55:37.4779617Z         self.v_outer = v_outer
2025-01-07T17:55:37.4779686Z     
2025-01-07T17:55:37.4779798Z         # First check if both options are provided
2025-01-07T17:55:37.4779980Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4780065Z >           raise ValueError(
2025-01-07T17:55:37.4780217Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4780383Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4780461Z             )
2025-01-07T17:55:37.4780817Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4780823Z 
2025-01-07T17:55:37.4781007Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4781287Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-07T17:55:37.4781394Z 
2025-01-07T17:55:37.4781677Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4781902Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4782248Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4782254Z 
2025-01-07T17:55:37.4782348Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4782465Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4782544Z         """
2025-01-07T17:55:37.4782636Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4782711Z     
2025-01-07T17:55:37.4782784Z         Parameters
2025-01-07T17:55:37.4782863Z         ----------
2025-01-07T17:55:37.4783009Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4783097Z             Simulation object.
2025-01-07T17:55:37.4783163Z     
2025-01-07T17:55:37.4783243Z         Returns
2025-01-07T17:55:37.4783319Z         -------
2025-01-07T17:55:37.4783452Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4783526Z         """
2025-01-07T17:55:37.4783661Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4783665Z 
2025-01-07T17:55:37.4783817Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4783930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4784096Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4784357Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4784584Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4784716Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4784921Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4784997Z     return cls(
2025-01-07T17:55:37.4785110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4785115Z 
2025-01-07T17:55:37.4785387Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4785532Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4785713Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4785890Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4786097Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4786198Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4786385Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4786483Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4786655Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4786769Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4786886Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4786891Z 
2025-01-07T17:55:37.4786973Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4787139Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4787251Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4787446Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4787519Z        0.00025518])
2025-01-07T17:55:37.4787676Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4787875Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4788113Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4788247Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4788450Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4788559Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4788809Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4788956Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4789154Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4789267Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4789358Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4789467Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4789563Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4789721Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4789899Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4790024Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4790178Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4790347Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4790546Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4790711Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4790836Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4790948Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4791025Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4791033Z 
2025-01-07T17:55:37.4791109Z     def __init__(
2025-01-07T17:55:37.4791178Z         self,
2025-01-07T17:55:37.4791268Z         last_interaction_type,
2025-01-07T17:55:37.4791357Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4791451Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4791540Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4791621Z         last_interaction_in_r,
2025-01-07T17:55:37.4791698Z         lines_df,
2025-01-07T17:55:37.4791773Z         packet_nus,
2025-01-07T17:55:37.4791861Z         packet_energies,
2025-01-07T17:55:37.4792031Z         r_inner,
2025-01-07T17:55:37.4792127Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4792309Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4792411Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4792498Z         spectrum_wavelength,
2025-01-07T17:55:37.4792572Z         t_inner,
2025-01-07T17:55:37.4792655Z         time_of_simulation,
2025-01-07T17:55:37.4792737Z         time_explosion,
2025-01-07T17:55:37.4792806Z         v_inner,
2025-01-07T17:55:37.4792880Z         v_outer,
2025-01-07T17:55:37.4792948Z         velocity
2025-01-07T17:55:37.4793021Z     ):
2025-01-07T17:55:37.4793095Z         """
2025-01-07T17:55:37.4793325Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4793396Z     
2025-01-07T17:55:37.4793468Z         Parameters
2025-01-07T17:55:37.4793545Z         ----------
2025-01-07T17:55:37.4793642Z         last_interaction_type : np.array
2025-01-07T17:55:37.4793804Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4793923Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4794028Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4794173Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4794408Z             absorption (interaction in)
2025-01-07T17:55:37.4794507Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4794651Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4794737Z             emission (interaction out)
2025-01-07T17:55:37.4794835Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4794990Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4795084Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4795236Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4795325Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4795487Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4795577Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4795741Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4795813Z             unit of Hz
2025-01-07T17:55:37.4795917Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4796049Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4796139Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4796252Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4796365Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4796493Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4796600Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4796837Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4796935Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4797077Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4797161Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4797289Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4797389Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4797505Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4797574Z         """
2025-01-07T17:55:37.4797750Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4797854Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4797950Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4798024Z             {
2025-01-07T17:55:37.4798103Z                 "nus": packet_nus,
2025-01-07T17:55:37.4798239Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4798334Z                 "energies": packet_energies,
2025-01-07T17:55:37.4798457Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4798604Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4798751Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4798890Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4799006Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4799074Z             }
2025-01-07T17:55:37.4799147Z         )
2025-01-07T17:55:37.4799213Z     
2025-01-07T17:55:37.4799301Z         # Save other properties
2025-01-07T17:55:37.4799388Z         self.lines_df = lines_df
2025-01-07T17:55:37.4799468Z         self.r_inner = r_inner
2025-01-07T17:55:37.4799611Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4799749Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4799888Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4799995Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4800094Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4800162Z         )
2025-01-07T17:55:37.4800286Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4800450Z         self.t_inner = t_inner
2025-01-07T17:55:37.4800565Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4800658Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4800742Z         self.v_inner = v_inner
2025-01-07T17:55:37.4800818Z         self.v_outer = v_outer
2025-01-07T17:55:37.4800888Z     
2025-01-07T17:55:37.4800995Z         # First check if both options are provided
2025-01-07T17:55:37.4801166Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4801255Z >           raise ValueError(
2025-01-07T17:55:37.4801390Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4801561Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4801629Z             )
2025-01-07T17:55:37.4802182Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4802194Z 
2025-01-07T17:55:37.4802376Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4802656Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-07T17:55:37.4802661Z 
2025-01-07T17:55:37.4802936Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4803149Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4803531Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4803537Z 
2025-01-07T17:55:37.4803625Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4803744Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4803811Z         """
2025-01-07T17:55:37.4803902Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4803969Z     
2025-01-07T17:55:37.4804050Z         Parameters
2025-01-07T17:55:37.4804122Z         ----------
2025-01-07T17:55:37.4804270Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4804349Z             Simulation object.
2025-01-07T17:55:37.4804419Z     
2025-01-07T17:55:37.4804493Z         Returns
2025-01-07T17:55:37.4804563Z         -------
2025-01-07T17:55:37.4804702Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4804770Z         """
2025-01-07T17:55:37.4804910Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4804919Z 
2025-01-07T17:55:37.4805064Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4805178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4805337Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4805487Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4805701Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4805841Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4806043Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4806122Z     return cls(
2025-01-07T17:55:37.4806230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4806234Z 
2025-01-07T17:55:37.4806519Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4806661Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4806842Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4807025Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4807225Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4807331Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4807627Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4807727Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4807889Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4808005Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4808118Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4808127Z 
2025-01-07T17:55:37.4808212Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4808380Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4808485Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4808680Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4808749Z        0.00025518])
2025-01-07T17:55:37.4808912Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4809106Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4809235Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4809362Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4809574Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4809675Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4809999Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4810147Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4810336Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4810454Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4810544Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4810658Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4810750Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4810908Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4811077Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4811207Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4811361Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4811530Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4811653Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4811818Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4812090Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4812229Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4812311Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4812316Z 
2025-01-07T17:55:37.4812388Z     def __init__(
2025-01-07T17:55:37.4812462Z         self,
2025-01-07T17:55:37.4812546Z         last_interaction_type,
2025-01-07T17:55:37.4812638Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4812722Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4812814Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4812899Z         last_interaction_in_r,
2025-01-07T17:55:37.4812970Z         lines_df,
2025-01-07T17:55:37.4813048Z         packet_nus,
2025-01-07T17:55:37.4813124Z         packet_energies,
2025-01-07T17:55:37.4813202Z         r_inner,
2025-01-07T17:55:37.4813288Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4813469Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4813696Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4813785Z         spectrum_wavelength,
2025-01-07T17:55:37.4813854Z         t_inner,
2025-01-07T17:55:37.4813938Z         time_of_simulation,
2025-01-07T17:55:37.4814013Z         time_explosion,
2025-01-07T17:55:37.4814086Z         v_inner,
2025-01-07T17:55:37.4814156Z         v_outer,
2025-01-07T17:55:37.4814229Z         velocity
2025-01-07T17:55:37.4814296Z     ):
2025-01-07T17:55:37.4814368Z         """
2025-01-07T17:55:37.4814598Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4814669Z     
2025-01-07T17:55:37.4814745Z         Parameters
2025-01-07T17:55:37.4814817Z         ----------
2025-01-07T17:55:37.4814912Z         last_interaction_type : np.array
2025-01-07T17:55:37.4815060Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4815183Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4815283Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4815435Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4815522Z             absorption (interaction in)
2025-01-07T17:55:37.4815626Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4815769Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4815862Z             emission (interaction out)
2025-01-07T17:55:37.4815955Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4816222Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4816320Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4816467Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4816555Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4816713Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4816810Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4816969Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4817045Z             unit of Hz
2025-01-07T17:55:37.4817141Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4817274Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4817357Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4817473Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4817585Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4817712Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4817823Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4817943Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4818045Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4818189Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4818277Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4818397Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4818503Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4818614Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4818686Z         """
2025-01-07T17:55:37.4818859Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4818970Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4819066Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4819139Z             {
2025-01-07T17:55:37.4819218Z                 "nus": packet_nus,
2025-01-07T17:55:37.4819349Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4819444Z                 "energies": packet_energies,
2025-01-07T17:55:37.4819563Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4819799Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4819942Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4820085Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4820195Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4820266Z             }
2025-01-07T17:55:37.4820333Z         )
2025-01-07T17:55:37.4820404Z     
2025-01-07T17:55:37.4820490Z         # Save other properties
2025-01-07T17:55:37.4820576Z         self.lines_df = lines_df
2025-01-07T17:55:37.4820657Z         self.r_inner = r_inner
2025-01-07T17:55:37.4820798Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4820937Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4821066Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4821181Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4821277Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4821353Z         )
2025-01-07T17:55:37.4821465Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4821550Z         self.t_inner = t_inner
2025-01-07T17:55:37.4821658Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4821756Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4821834Z         self.v_inner = v_inner
2025-01-07T17:55:37.4822102Z         self.v_outer = v_outer
2025-01-07T17:55:37.4822170Z     
2025-01-07T17:55:37.4822277Z         # First check if both options are provided
2025-01-07T17:55:37.4822450Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4822533Z >           raise ValueError(
2025-01-07T17:55:37.4822678Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4822841Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4822914Z             )
2025-01-07T17:55:37.4823263Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4823268Z 
2025-01-07T17:55:37.4823453Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4823728Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-07T17:55:37.4823737Z 
2025-01-07T17:55:37.4824014Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4824232Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4824465Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4824470Z 
2025-01-07T17:55:37.4824562Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4824676Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4824748Z         """
2025-01-07T17:55:37.4824834Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4824905Z     
2025-01-07T17:55:37.4824977Z         Parameters
2025-01-07T17:55:37.4825054Z         ----------
2025-01-07T17:55:37.4825198Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4825282Z             Simulation object.
2025-01-07T17:55:37.4825349Z     
2025-01-07T17:55:37.4825422Z         Returns
2025-01-07T17:55:37.4825496Z         -------
2025-01-07T17:55:37.4825629Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4825701Z         """
2025-01-07T17:55:37.4825833Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4825837Z 
2025-01-07T17:55:37.4825985Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4826095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4826394Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4826538Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4826758Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4826890Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4827095Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4827167Z     return cls(
2025-01-07T17:55:37.4827283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4827287Z 
2025-01-07T17:55:37.4827565Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4827703Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4827881Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4828059Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4828267Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4828366Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4828552Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4828649Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4828818Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4829062Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4829173Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4829178Z 
2025-01-07T17:55:37.4829260Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4829421Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4829534Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4829729Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4829804Z        0.00025518])
2025-01-07T17:55:37.4829958Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4830156Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4830277Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4830415Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4830623Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4830728Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4830975Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4831124Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4831317Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4831430Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4831520Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4831628Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4831724Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4831876Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4832155Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4832285Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4832434Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4832603Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4832839Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4833002Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4833128Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4833242Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4833317Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4833327Z 
2025-01-07T17:55:37.4833402Z     def __init__(
2025-01-07T17:55:37.4833480Z         self,
2025-01-07T17:55:37.4833562Z         last_interaction_type,
2025-01-07T17:55:37.4833652Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4833737Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4833828Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4833909Z         last_interaction_in_r,
2025-01-07T17:55:37.4833984Z         lines_df,
2025-01-07T17:55:37.4834060Z         packet_nus,
2025-01-07T17:55:37.4834140Z         packet_energies,
2025-01-07T17:55:37.4834209Z         r_inner,
2025-01-07T17:55:37.4834299Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4834481Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4834583Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4834667Z         spectrum_wavelength,
2025-01-07T17:55:37.4834742Z         t_inner,
2025-01-07T17:55:37.4834821Z         time_of_simulation,
2025-01-07T17:55:37.4835010Z         time_explosion,
2025-01-07T17:55:37.4835084Z         v_inner,
2025-01-07T17:55:37.4835152Z         v_outer,
2025-01-07T17:55:37.4835225Z         velocity
2025-01-07T17:55:37.4835292Z     ):
2025-01-07T17:55:37.4835364Z         """
2025-01-07T17:55:37.4835594Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4835665Z     
2025-01-07T17:55:37.4835737Z         Parameters
2025-01-07T17:55:37.4835817Z         ----------
2025-01-07T17:55:37.4835911Z         last_interaction_type : np.array
2025-01-07T17:55:37.4836069Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4836185Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4836289Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4836438Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4836531Z             absorption (interaction in)
2025-01-07T17:55:37.4836634Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4836781Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4836872Z             emission (interaction out)
2025-01-07T17:55:37.4836968Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4837124Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4837218Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4837379Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4837462Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4837627Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4837716Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4837882Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4837954Z             unit of Hz
2025-01-07T17:55:37.4838054Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4838188Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4838277Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4838394Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4838502Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4838633Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4838825Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4838951Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4839051Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4839190Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4839275Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4839403Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4839499Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4839623Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4839694Z         """
2025-01-07T17:55:37.4839869Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4839977Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4840069Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4840141Z             {
2025-01-07T17:55:37.4840219Z                 "nus": packet_nus,
2025-01-07T17:55:37.4840354Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4840445Z                 "energies": packet_energies,
2025-01-07T17:55:37.4840568Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4840716Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4840865Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4841004Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4841201Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4841274Z             }
2025-01-07T17:55:37.4841341Z         )
2025-01-07T17:55:37.4841412Z     
2025-01-07T17:55:37.4841494Z         # Save other properties
2025-01-07T17:55:37.4841580Z         self.lines_df = lines_df
2025-01-07T17:55:37.4841660Z         self.r_inner = r_inner
2025-01-07T17:55:37.4841811Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4842096Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4842269Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4842379Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4842481Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4842549Z         )
2025-01-07T17:55:37.4842670Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4842751Z         self.t_inner = t_inner
2025-01-07T17:55:37.4842868Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4842966Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4843043Z         self.v_inner = v_inner
2025-01-07T17:55:37.4843124Z         self.v_outer = v_outer
2025-01-07T17:55:37.4843190Z     
2025-01-07T17:55:37.4843294Z         # First check if both options are provided
2025-01-07T17:55:37.4843464Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4843552Z >           raise ValueError(
2025-01-07T17:55:37.4843693Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4843859Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4843926Z             )
2025-01-07T17:55:37.4844283Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4844291Z 
2025-01-07T17:55:37.4844465Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4844744Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-07T17:55:37.4844749Z 
2025-01-07T17:55:37.4845023Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4845237Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4845597Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4845602Z 
2025-01-07T17:55:37.4845689Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4845804Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4845871Z         """
2025-01-07T17:55:37.4845961Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4846028Z     
2025-01-07T17:55:37.4846105Z         Parameters
2025-01-07T17:55:37.4846181Z         ----------
2025-01-07T17:55:37.4846326Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4846411Z             Simulation object.
2025-01-07T17:55:37.4846477Z     
2025-01-07T17:55:37.4846552Z         Returns
2025-01-07T17:55:37.4846621Z         -------
2025-01-07T17:55:37.4846758Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4846826Z         """
2025-01-07T17:55:37.4846963Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4846972Z 
2025-01-07T17:55:37.4847115Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4847228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4847387Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4847539Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4847751Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4847997Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4848202Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4848273Z     return cls(
2025-01-07T17:55:37.4848388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4848393Z 
2025-01-07T17:55:37.4848668Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4848818Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4848995Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4849179Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4849379Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4849485Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4849675Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4849771Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4849939Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4850051Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4850167Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4850174Z 
2025-01-07T17:55:37.4850251Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4850421Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4850527Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4850728Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4850802Z        0.00025518])
2025-01-07T17:55:37.4850958Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4851161Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4851285Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4851420Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4851623Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4851830Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4852249Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4852404Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4852593Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4852710Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4852809Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4852923Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4853022Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4853174Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4853349Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4853478Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4853630Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4853796Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4853922Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4854081Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4854211Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4854442Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4854517Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4854522Z 
2025-01-07T17:55:37.4854599Z     def __init__(
2025-01-07T17:55:37.4854669Z         self,
2025-01-07T17:55:37.4854756Z         last_interaction_type,
2025-01-07T17:55:37.4854842Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4854938Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4855022Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4855107Z         last_interaction_in_r,
2025-01-07T17:55:37.4855178Z         lines_df,
2025-01-07T17:55:37.4855257Z         packet_nus,
2025-01-07T17:55:37.4855335Z         packet_energies,
2025-01-07T17:55:37.4855411Z         r_inner,
2025-01-07T17:55:37.4855495Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4855678Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4855782Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4855863Z         spectrum_wavelength,
2025-01-07T17:55:37.4855937Z         t_inner,
2025-01-07T17:55:37.4856016Z         time_of_simulation,
2025-01-07T17:55:37.4856097Z         time_explosion,
2025-01-07T17:55:37.4856166Z         v_inner,
2025-01-07T17:55:37.4856239Z         v_outer,
2025-01-07T17:55:37.4856307Z         velocity
2025-01-07T17:55:37.4856384Z     ):
2025-01-07T17:55:37.4856452Z         """
2025-01-07T17:55:37.4856684Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4856751Z     
2025-01-07T17:55:37.4856829Z         Parameters
2025-01-07T17:55:37.4856900Z         ----------
2025-01-07T17:55:37.4856996Z         last_interaction_type : np.array
2025-01-07T17:55:37.4857143Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4857263Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4857369Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4857515Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4857607Z             absorption (interaction in)
2025-01-07T17:55:37.4857706Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4857853Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4857937Z             emission (interaction out)
2025-01-07T17:55:37.4858173Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4858325Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4858423Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4858571Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4858659Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4858817Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4858917Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4859082Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4859154Z             unit of Hz
2025-01-07T17:55:37.4859257Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4859386Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4859475Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4859589Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4859702Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4859825Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4859937Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4860061Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4860165Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4860305Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4860465Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4860591Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4860685Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4860804Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4860875Z         """
2025-01-07T17:55:37.4861052Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4861158Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4861254Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4861322Z             {
2025-01-07T17:55:37.4861404Z                 "nus": packet_nus,
2025-01-07T17:55:37.4861527Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4861621Z                 "energies": packet_energies,
2025-01-07T17:55:37.4861738Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4861889Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4862153Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4862295Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4862412Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4862480Z             }
2025-01-07T17:55:37.4862557Z         )
2025-01-07T17:55:37.4862623Z     
2025-01-07T17:55:37.4862709Z         # Save other properties
2025-01-07T17:55:37.4862791Z         self.lines_df = lines_df
2025-01-07T17:55:37.4862874Z         self.r_inner = r_inner
2025-01-07T17:55:37.4863015Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4863151Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4863280Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4863393Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4863496Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4863563Z         )
2025-01-07T17:55:37.4863682Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4863763Z         self.t_inner = t_inner
2025-01-07T17:55:37.4863876Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4863970Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4864170Z         self.v_inner = v_inner
2025-01-07T17:55:37.4864248Z         self.v_outer = v_outer
2025-01-07T17:55:37.4864318Z     
2025-01-07T17:55:37.4864419Z         # First check if both options are provided
2025-01-07T17:55:37.4864597Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4864677Z >           raise ValueError(
2025-01-07T17:55:37.4864818Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4864979Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4865055Z             )
2025-01-07T17:55:37.4865413Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4865418Z 
2025-01-07T17:55:37.4865589Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4865869Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-07T17:55:37.4865877Z 
2025-01-07T17:55:37.4866147Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4866368Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4866600Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4866609Z 
2025-01-07T17:55:37.4866695Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4866811Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4866985Z         """
2025-01-07T17:55:37.4867077Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4867144Z     
2025-01-07T17:55:37.4867219Z         Parameters
2025-01-07T17:55:37.4867289Z         ----------
2025-01-07T17:55:37.4867436Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4867516Z             Simulation object.
2025-01-07T17:55:37.4867586Z     
2025-01-07T17:55:37.4867659Z         Returns
2025-01-07T17:55:37.4867733Z         -------
2025-01-07T17:55:37.4867864Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4867936Z         """
2025-01-07T17:55:37.4868070Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4868075Z 
2025-01-07T17:55:37.4868222Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4868336Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4868493Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4868648Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4868861Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4868998Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4869281Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4869401Z     return cls(
2025-01-07T17:55:37.4869583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4869590Z 
2025-01-07T17:55:37.4870069Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4870298Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4870528Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4870711Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4870916Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4871022Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4871204Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4871306Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4871566Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4871683Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4871792Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4871802Z 
2025-01-07T17:55:37.4871879Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4872202Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4872313Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4872523Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4872591Z        0.00025518])
2025-01-07T17:55:37.4872751Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4872942Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4873067Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4873199Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4873407Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4873509Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4873759Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4873910Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4874216Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4874334Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4874420Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4874534Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4874626Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4874789Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4874989Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4875117Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4875270Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4875435Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4875565Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4875725Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4875856Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4875967Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4876046Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4876054Z 
2025-01-07T17:55:37.4876125Z     def __init__(
2025-01-07T17:55:37.4876198Z         self,
2025-01-07T17:55:37.4876282Z         last_interaction_type,
2025-01-07T17:55:37.4876373Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4876458Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4876548Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4876633Z         last_interaction_in_r,
2025-01-07T17:55:37.4876703Z         lines_df,
2025-01-07T17:55:37.4876780Z         packet_nus,
2025-01-07T17:55:37.4876861Z         packet_energies,
2025-01-07T17:55:37.4876935Z         r_inner,
2025-01-07T17:55:37.4877018Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4877201Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4877294Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4877381Z         spectrum_wavelength,
2025-01-07T17:55:37.4877450Z         t_inner,
2025-01-07T17:55:37.4877672Z         time_of_simulation,
2025-01-07T17:55:37.4877748Z         time_explosion,
2025-01-07T17:55:37.4877824Z         v_inner,
2025-01-07T17:55:37.4877892Z         v_outer,
2025-01-07T17:55:37.4877966Z         velocity
2025-01-07T17:55:37.4878032Z     ):
2025-01-07T17:55:37.4878104Z         """
2025-01-07T17:55:37.4878329Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4878400Z     
2025-01-07T17:55:37.4878477Z         Parameters
2025-01-07T17:55:37.4878547Z         ----------
2025-01-07T17:55:37.4878648Z         last_interaction_type : np.array
2025-01-07T17:55:37.4878799Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4878920Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4879017Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4879168Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4879257Z             absorption (interaction in)
2025-01-07T17:55:37.4879363Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4879503Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4879595Z             emission (interaction out)
2025-01-07T17:55:37.4879691Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4879844Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4879941Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4880091Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4880260Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4880420Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4880517Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4880678Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4880754Z             unit of Hz
2025-01-07T17:55:37.4880855Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4880990Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4881074Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4881189Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4881297Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4881427Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4881539Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4881668Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4881771Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4881908Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4882188Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4882316Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4882417Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4882535Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4882610Z         """
2025-01-07T17:55:37.4882789Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4882901Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4882992Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4883065Z             {
2025-01-07T17:55:37.4883148Z                 "nus": packet_nus,
2025-01-07T17:55:37.4883274Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4883374Z                 "energies": packet_energies,
2025-01-07T17:55:37.4883492Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4883643Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4883785Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4884054Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4884166Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4884238Z             }
2025-01-07T17:55:37.4884305Z         )
2025-01-07T17:55:37.4884376Z     
2025-01-07T17:55:37.4884459Z         # Save other properties
2025-01-07T17:55:37.4884547Z         self.lines_df = lines_df
2025-01-07T17:55:37.4884631Z         self.r_inner = r_inner
2025-01-07T17:55:37.4884769Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4884912Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4885045Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4885156Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4885252Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4885326Z         )
2025-01-07T17:55:37.4885442Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4885529Z         self.t_inner = t_inner
2025-01-07T17:55:37.4885639Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4885740Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4885817Z         self.v_inner = v_inner
2025-01-07T17:55:37.4885899Z         self.v_outer = v_outer
2025-01-07T17:55:37.4885964Z     
2025-01-07T17:55:37.4886071Z         # First check if both options are provided
2025-01-07T17:55:37.4886250Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4886441Z >           raise ValueError(
2025-01-07T17:55:37.4886588Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4886750Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4886825Z             )
2025-01-07T17:55:37.4887179Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4887188Z 
2025-01-07T17:55:37.4887365Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4887639Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-07T17:55:37.4887644Z 
2025-01-07T17:55:37.4887919Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4888139Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4888372Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4888377Z 
2025-01-07T17:55:37.4888470Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4888582Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4888654Z         """
2025-01-07T17:55:37.4888740Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4888811Z     
2025-01-07T17:55:37.4888883Z         Parameters
2025-01-07T17:55:37.4888962Z         ----------
2025-01-07T17:55:37.4889104Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4889188Z             Simulation object.
2025-01-07T17:55:37.4889255Z     
2025-01-07T17:55:37.4889333Z         Returns
2025-01-07T17:55:37.4889409Z         -------
2025-01-07T17:55:37.4889541Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4889613Z         """
2025-01-07T17:55:37.4889747Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4889755Z 
2025-01-07T17:55:37.4889904Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4890012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4890177Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4890326Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4890543Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4890762Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4890966Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4891044Z     return cls(
2025-01-07T17:55:37.4891154Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4891159Z 
2025-01-07T17:55:37.4891437Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4891579Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4891759Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4892065Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4892314Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4892417Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4892609Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4892705Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4892872Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4892989Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4893099Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4893219Z 
2025-01-07T17:55:37.4893304Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4893471Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4893581Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4893778Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4893853Z        0.00025518])
2025-01-07T17:55:37.4894015Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4894212Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4894337Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4894462Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4894671Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4894774Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4895024Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4895168Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4895359Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4895471Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4895569Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4895678Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4895776Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4895934Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4896103Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4896231Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4896386Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4896556Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4896677Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4896840Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4897083Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4897196Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4897276Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4897280Z 
2025-01-07T17:55:37.4897351Z     def __init__(
2025-01-07T17:55:37.4897423Z         self,
2025-01-07T17:55:37.4897505Z         last_interaction_type,
2025-01-07T17:55:37.4897595Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4897685Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4897777Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4897856Z         last_interaction_in_r,
2025-01-07T17:55:37.4897931Z         lines_df,
2025-01-07T17:55:37.4898003Z         packet_nus,
2025-01-07T17:55:37.4898085Z         packet_energies,
2025-01-07T17:55:37.4898157Z         r_inner,
2025-01-07T17:55:37.4898247Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4898425Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4898528Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4898610Z         spectrum_wavelength,
2025-01-07T17:55:37.4898684Z         t_inner,
2025-01-07T17:55:37.4898767Z         time_of_simulation,
2025-01-07T17:55:37.4898841Z         time_explosion,
2025-01-07T17:55:37.4898914Z         v_inner,
2025-01-07T17:55:37.4898983Z         v_outer,
2025-01-07T17:55:37.4899056Z         velocity
2025-01-07T17:55:37.4899123Z     ):
2025-01-07T17:55:37.4899195Z         """
2025-01-07T17:55:37.4899529Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4899600Z     
2025-01-07T17:55:37.4899672Z         Parameters
2025-01-07T17:55:37.4899749Z         ----------
2025-01-07T17:55:37.4899840Z         last_interaction_type : np.array
2025-01-07T17:55:37.4899993Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4900109Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4900213Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4900360Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4900453Z             absorption (interaction in)
2025-01-07T17:55:37.4900555Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4900697Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4900791Z             emission (interaction out)
2025-01-07T17:55:37.4900889Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4901047Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4901141Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4901295Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4901378Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4901543Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4901636Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4901802Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4901873Z             unit of Hz
2025-01-07T17:55:37.4902076Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4902215Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4902299Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4902412Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4902524Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4902656Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4902761Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4902889Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4902986Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4903243Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4903328Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4903456Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4903550Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4903667Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4903739Z         """
2025-01-07T17:55:37.4903913Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4904020Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4904113Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4904185Z             {
2025-01-07T17:55:37.4904262Z                 "nus": packet_nus,
2025-01-07T17:55:37.4904393Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4904482Z                 "energies": packet_energies,
2025-01-07T17:55:37.4904607Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4904758Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4904904Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4905042Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4905160Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4905232Z             }
2025-01-07T17:55:37.4905298Z         )
2025-01-07T17:55:37.4905368Z     
2025-01-07T17:55:37.4905559Z         # Save other properties
2025-01-07T17:55:37.4905646Z         self.lines_df = lines_df
2025-01-07T17:55:37.4905724Z         self.r_inner = r_inner
2025-01-07T17:55:37.4905869Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4905999Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4906132Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4906243Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4906343Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4906409Z         )
2025-01-07T17:55:37.4906530Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4906608Z         self.t_inner = t_inner
2025-01-07T17:55:37.4906722Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4906824Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4906902Z         self.v_inner = v_inner
2025-01-07T17:55:37.4906984Z         self.v_outer = v_outer
2025-01-07T17:55:37.4907054Z     
2025-01-07T17:55:37.4907161Z         # First check if both options are provided
2025-01-07T17:55:37.4907328Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4907412Z >           raise ValueError(
2025-01-07T17:55:37.4907549Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4907717Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4907787Z             )
2025-01-07T17:55:37.4908145Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4908150Z 
2025-01-07T17:55:37.4908325Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4908594Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-07T17:55:37.4908598Z 
2025-01-07T17:55:37.4908881Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4909093Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4909328Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4909333Z 
2025-01-07T17:55:37.4909419Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4909619Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4909686Z         """
2025-01-07T17:55:37.4909778Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4909848Z     
2025-01-07T17:55:37.4909921Z         Parameters
2025-01-07T17:55:37.4909996Z         ----------
2025-01-07T17:55:37.4910136Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4910220Z             Simulation object.
2025-01-07T17:55:37.4910286Z     
2025-01-07T17:55:37.4910359Z         Returns
2025-01-07T17:55:37.4910429Z         -------
2025-01-07T17:55:37.4910567Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4910636Z         """
2025-01-07T17:55:37.4910774Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4910778Z 
2025-01-07T17:55:37.4910921Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4911039Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4911202Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4911356Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4911573Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4911707Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4911910Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4912084Z     return cls(
2025-01-07T17:55:37.4912205Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4912324Z 
2025-01-07T17:55:37.4912605Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4912755Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4912936Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4913119Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4913327Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4913428Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4913619Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4913715Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4913883Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4914002Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4914117Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4914122Z 
2025-01-07T17:55:37.4914202Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4914372Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4914486Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4914687Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4914763Z        0.00025518])
2025-01-07T17:55:37.4914919Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4915119Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4915242Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4915380Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4915581Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4915691Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4915935Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4916198Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4916393Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4916506Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4916597Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4916709Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4916805Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4916960Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4917140Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4917265Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4917421Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4917583Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4917711Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4917875Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4918003Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4918115Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4918190Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4918194Z 
2025-01-07T17:55:37.4918366Z     def __init__(
2025-01-07T17:55:37.4918434Z         self,
2025-01-07T17:55:37.4918523Z         last_interaction_type,
2025-01-07T17:55:37.4918609Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4918702Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4918785Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4918870Z         last_interaction_in_r,
2025-01-07T17:55:37.4918940Z         lines_df,
2025-01-07T17:55:37.4919021Z         packet_nus,
2025-01-07T17:55:37.4919100Z         packet_energies,
2025-01-07T17:55:37.4919174Z         r_inner,
2025-01-07T17:55:37.4919264Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4919444Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4919547Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4919628Z         spectrum_wavelength,
2025-01-07T17:55:37.4919704Z         t_inner,
2025-01-07T17:55:37.4919783Z         time_of_simulation,
2025-01-07T17:55:37.4919864Z         time_explosion,
2025-01-07T17:55:37.4919939Z         v_inner,
2025-01-07T17:55:37.4920012Z         v_outer,
2025-01-07T17:55:37.4920082Z         velocity
2025-01-07T17:55:37.4920154Z     ):
2025-01-07T17:55:37.4920221Z         """
2025-01-07T17:55:37.4920453Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4920519Z     
2025-01-07T17:55:37.4920596Z         Parameters
2025-01-07T17:55:37.4920672Z         ----------
2025-01-07T17:55:37.4920770Z         last_interaction_type : np.array
2025-01-07T17:55:37.4920925Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4921041Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4921145Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4921293Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4921388Z             absorption (interaction in)
2025-01-07T17:55:37.4921487Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4921639Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4921726Z             emission (interaction out)
2025-01-07T17:55:37.4921825Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4922161Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4922273Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4922548Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4922637Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4922806Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4922897Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4923061Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4923134Z             unit of Hz
2025-01-07T17:55:37.4923234Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4923368Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4923458Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4923570Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4923682Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4923806Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4923922Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4924044Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4924146Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4924285Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4924369Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4924495Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4924592Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4924839Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4924908Z         """
2025-01-07T17:55:37.4925097Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4925201Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4925298Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4925367Z             {
2025-01-07T17:55:37.4925451Z                 "nus": packet_nus,
2025-01-07T17:55:37.4925582Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4925678Z                 "energies": packet_energies,
2025-01-07T17:55:37.4925801Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4925951Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4926103Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4926244Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4926368Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4926436Z             }
2025-01-07T17:55:37.4926506Z         )
2025-01-07T17:55:37.4926572Z     
2025-01-07T17:55:37.4926661Z         # Save other properties
2025-01-07T17:55:37.4926743Z         self.lines_df = lines_df
2025-01-07T17:55:37.4926827Z         self.r_inner = r_inner
2025-01-07T17:55:37.4926967Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4927114Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4927247Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4927361Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4927461Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4927528Z         )
2025-01-07T17:55:37.4927649Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4927728Z         self.t_inner = t_inner
2025-01-07T17:55:37.4927845Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4927939Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4928022Z         self.v_inner = v_inner
2025-01-07T17:55:37.4928099Z         self.v_outer = v_outer
2025-01-07T17:55:37.4928172Z     
2025-01-07T17:55:37.4928274Z         # First check if both options are provided
2025-01-07T17:55:37.4928451Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4928615Z >           raise ValueError(
2025-01-07T17:55:37.4928759Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4928927Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4928995Z             )
2025-01-07T17:55:37.4929352Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4929359Z 
2025-01-07T17:55:37.4929536Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4929814Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-07T17:55:37.4929819Z 
2025-01-07T17:55:37.4930089Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4930309Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4930547Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4930557Z 
2025-01-07T17:55:37.4930642Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4930759Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4930827Z         """
2025-01-07T17:55:37.4930917Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4930984Z     
2025-01-07T17:55:37.4931061Z         Parameters
2025-01-07T17:55:37.4931131Z         ----------
2025-01-07T17:55:37.4931360Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4931441Z             Simulation object.
2025-01-07T17:55:37.4931512Z     
2025-01-07T17:55:37.4931581Z         Returns
2025-01-07T17:55:37.4931656Z         -------
2025-01-07T17:55:37.4931790Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4931862Z         """
2025-01-07T17:55:37.4932164Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4932180Z 
2025-01-07T17:55:37.4932330Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4932444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4932604Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4932754Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4932967Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4933107Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4937501Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4937609Z     return cls(
2025-01-07T17:55:37.4937739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4937745Z 
2025-01-07T17:55:37.4938038Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4938207Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4938402Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4938597Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4938810Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4938919Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4939114Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4939210Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4939385Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4939500Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4939620Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4939784Z 
2025-01-07T17:55:37.4939868Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4940045Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4940166Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4940368Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4940445Z        0.00025518])
2025-01-07T17:55:37.4940605Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4940810Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4940935Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4941074Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4941283Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4941400Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4941649Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4941801Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4942155Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4942274Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4942487Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4942603Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4942704Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4942864Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4943042Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4943173Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4943330Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4943501Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4943619Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4943787Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4943917Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4944037Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4944114Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4944119Z 
2025-01-07T17:55:37.4944196Z     def __init__(
2025-01-07T17:55:37.4944266Z         self,
2025-01-07T17:55:37.4944357Z         last_interaction_type,
2025-01-07T17:55:37.4944449Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4944548Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4944632Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4944718Z         last_interaction_in_r,
2025-01-07T17:55:37.4944796Z         lines_df,
2025-01-07T17:55:37.4944870Z         packet_nus,
2025-01-07T17:55:37.4944953Z         packet_energies,
2025-01-07T17:55:37.4945024Z         r_inner,
2025-01-07T17:55:37.4945116Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4945301Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4945413Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4945495Z         spectrum_wavelength,
2025-01-07T17:55:37.4945570Z         t_inner,
2025-01-07T17:55:37.4945649Z         time_of_simulation,
2025-01-07T17:55:37.4945732Z         time_explosion,
2025-01-07T17:55:37.4945802Z         v_inner,
2025-01-07T17:55:37.4945880Z         v_outer,
2025-01-07T17:55:37.4945950Z         velocity
2025-01-07T17:55:37.4946024Z     ):
2025-01-07T17:55:37.4946207Z         """
2025-01-07T17:55:37.4946448Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4946525Z     
2025-01-07T17:55:37.4946598Z         Parameters
2025-01-07T17:55:37.4946678Z         ----------
2025-01-07T17:55:37.4946772Z         last_interaction_type : np.array
2025-01-07T17:55:37.4946930Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4947050Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4947159Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4947308Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4947403Z             absorption (interaction in)
2025-01-07T17:55:37.4947503Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4947653Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4947741Z             emission (interaction out)
2025-01-07T17:55:37.4947846Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4947995Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4948097Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4948249Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4948332Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4948510Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4948599Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4948846Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4948920Z             unit of Hz
2025-01-07T17:55:37.4949023Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4949154Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4949244Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4949360Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4949474Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4949601Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4949712Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4949841Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4949940Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4950081Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4950169Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4950296Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4950392Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4950508Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4950577Z         """
2025-01-07T17:55:37.4950764Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4950872Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4950974Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4951043Z             {
2025-01-07T17:55:37.4951128Z                 "nus": packet_nus,
2025-01-07T17:55:37.4951260Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4951351Z                 "energies": packet_energies,
2025-01-07T17:55:37.4951475Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4951622Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4951774Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4951912Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4952138Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4952208Z             }
2025-01-07T17:55:37.4952281Z         )
2025-01-07T17:55:37.4952484Z     
2025-01-07T17:55:37.4952573Z         # Save other properties
2025-01-07T17:55:37.4952656Z         self.lines_df = lines_df
2025-01-07T17:55:37.4952743Z         self.r_inner = r_inner
2025-01-07T17:55:37.4952885Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4953024Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4953160Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4953269Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4953373Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4953441Z         )
2025-01-07T17:55:37.4953563Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4953645Z         self.t_inner = t_inner
2025-01-07T17:55:37.4953762Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4953858Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4953942Z         self.v_inner = v_inner
2025-01-07T17:55:37.4954023Z         self.v_outer = v_outer
2025-01-07T17:55:37.4954099Z     
2025-01-07T17:55:37.4954202Z         # First check if both options are provided
2025-01-07T17:55:37.4954381Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4954466Z >           raise ValueError(
2025-01-07T17:55:37.4954607Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4954776Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4954957Z             )
2025-01-07T17:55:37.4955317Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4955323Z 
2025-01-07T17:55:37.4955495Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4955778Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-07T17:55:37.4955787Z 
2025-01-07T17:55:37.4956058Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4956279Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4956516Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4956521Z 
2025-01-07T17:55:37.4956611Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4956729Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4956802Z         """
2025-01-07T17:55:37.4956895Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4956963Z     
2025-01-07T17:55:37.4957043Z         Parameters
2025-01-07T17:55:37.4957116Z         ----------
2025-01-07T17:55:37.4957265Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4957345Z             Simulation object.
2025-01-07T17:55:37.4957418Z     
2025-01-07T17:55:37.4957491Z         Returns
2025-01-07T17:55:37.4957568Z         -------
2025-01-07T17:55:37.4957699Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4957777Z         """
2025-01-07T17:55:37.4957917Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4957921Z 
2025-01-07T17:55:37.4958068Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4958184Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4958345Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4958501Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4958712Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4958849Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4959048Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4959216Z     return cls(
2025-01-07T17:55:37.4959322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4959327Z 
2025-01-07T17:55:37.4959605Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4959740Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4959918Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4960100Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4960306Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4960411Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4960593Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4960692Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4960858Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4960978Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4961089Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4961094Z 
2025-01-07T17:55:37.4961177Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4961345Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4961453Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4961728Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4961798Z        0.00025518])
2025-01-07T17:55:37.4962101Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4962339Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4962468Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4962604Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4962814Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4962918Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4963167Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4963319Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4963510Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4963629Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4963715Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4963831Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4963921Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4964087Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4964254Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4964382Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4964531Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4964698Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4964825Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4964984Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4965115Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4965223Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4965302Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4965426Z 
2025-01-07T17:55:37.4965500Z     def __init__(
2025-01-07T17:55:37.4965574Z         self,
2025-01-07T17:55:37.4965657Z         last_interaction_type,
2025-01-07T17:55:37.4965749Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4965834Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4965923Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4966007Z         last_interaction_in_r,
2025-01-07T17:55:37.4966077Z         lines_df,
2025-01-07T17:55:37.4966155Z         packet_nus,
2025-01-07T17:55:37.4966236Z         packet_energies,
2025-01-07T17:55:37.4966311Z         r_inner,
2025-01-07T17:55:37.4966395Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4966578Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4966672Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4966759Z         spectrum_wavelength,
2025-01-07T17:55:37.4966828Z         t_inner,
2025-01-07T17:55:37.4966917Z         time_of_simulation,
2025-01-07T17:55:37.4966992Z         time_explosion,
2025-01-07T17:55:37.4967066Z         v_inner,
2025-01-07T17:55:37.4967134Z         v_outer,
2025-01-07T17:55:37.4967208Z         velocity
2025-01-07T17:55:37.4967274Z     ):
2025-01-07T17:55:37.4967346Z         """
2025-01-07T17:55:37.4967576Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4967647Z     
2025-01-07T17:55:37.4967725Z         Parameters
2025-01-07T17:55:37.4967798Z         ----------
2025-01-07T17:55:37.4968009Z         last_interaction_type : np.array
2025-01-07T17:55:37.4968161Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4968285Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4968380Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4968538Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4968626Z             absorption (interaction in)
2025-01-07T17:55:37.4968732Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4968870Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4968961Z             emission (interaction out)
2025-01-07T17:55:37.4969055Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4969206Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4969304Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4969452Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4969545Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4969704Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4969799Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4969960Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4970037Z             unit of Hz
2025-01-07T17:55:37.4970134Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4970266Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4970349Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4970464Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4970572Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4970698Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4970808Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4970930Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4971033Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4971171Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4971259Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4971378Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4971478Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4971671Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4971744Z         """
2025-01-07T17:55:37.4971916Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4972196Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4972290Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4972363Z             {
2025-01-07T17:55:37.4972448Z                 "nus": packet_nus,
2025-01-07T17:55:37.4972575Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4972675Z                 "energies": packet_energies,
2025-01-07T17:55:37.4972793Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4972947Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4973090Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4973241Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4973353Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4973425Z             }
2025-01-07T17:55:37.4973492Z         )
2025-01-07T17:55:37.4973563Z     
2025-01-07T17:55:37.4973646Z         # Save other properties
2025-01-07T17:55:37.4973737Z         self.lines_df = lines_df
2025-01-07T17:55:37.4973816Z         self.r_inner = r_inner
2025-01-07T17:55:37.4973959Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4974217Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4974350Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4974463Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4974559Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4974631Z         )
2025-01-07T17:55:37.4974745Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4974834Z         self.t_inner = t_inner
2025-01-07T17:55:37.4974975Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4975075Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4975153Z         self.v_inner = v_inner
2025-01-07T17:55:37.4975235Z         self.v_outer = v_outer
2025-01-07T17:55:37.4975300Z     
2025-01-07T17:55:37.4975407Z         # First check if both options are provided
2025-01-07T17:55:37.4975586Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4975671Z >           raise ValueError(
2025-01-07T17:55:37.4975813Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4975975Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4976047Z             )
2025-01-07T17:55:37.4976401Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4976410Z 
2025-01-07T17:55:37.4976588Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4976862Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-07T17:55:37.4976868Z 
2025-01-07T17:55:37.4977143Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4977365Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4977602Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4977606Z 
2025-01-07T17:55:37.4977699Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4977814Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4977887Z         """
2025-01-07T17:55:37.4977973Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4978044Z     
2025-01-07T17:55:37.4978115Z         Parameters
2025-01-07T17:55:37.4978327Z         ----------
2025-01-07T17:55:37.4978478Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4978563Z             Simulation object.
2025-01-07T17:55:37.4978630Z     
2025-01-07T17:55:37.4978704Z         Returns
2025-01-07T17:55:37.4978774Z         -------
2025-01-07T17:55:37.4978910Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4978983Z         """
2025-01-07T17:55:37.4979115Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4979123Z 
2025-01-07T17:55:37.4979269Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4979380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4979546Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4979693Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4979909Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4980054Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4980256Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4980328Z     return cls(
2025-01-07T17:55:37.4980440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4980444Z 
2025-01-07T17:55:37.4980718Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4980940Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4981112Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4981293Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4981499Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4981600Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4981791Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4981888Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4982163Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4982277Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4982393Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4982397Z 
2025-01-07T17:55:37.4982478Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4982649Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4982752Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4982949Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4983022Z        0.00025518])
2025-01-07T17:55:37.4983181Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4983377Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4983501Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4983636Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4983838Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4983947Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4984194Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4984341Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4984533Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4984645Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4984853Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4984963Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4985058Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4985208Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4985380Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4985502Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4985657Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4985823Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4985945Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4986109Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4986239Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4986353Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4986428Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4986432Z 
2025-01-07T17:55:37.4986507Z     def __init__(
2025-01-07T17:55:37.4986576Z         self,
2025-01-07T17:55:37.4986664Z         last_interaction_type,
2025-01-07T17:55:37.4986751Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4986846Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4987060Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4987147Z         last_interaction_in_r,
2025-01-07T17:55:37.4987217Z         lines_df,
2025-01-07T17:55:37.4987294Z         packet_nus,
2025-01-07T17:55:37.4987379Z         packet_energies,
2025-01-07T17:55:37.4987450Z         r_inner,
2025-01-07T17:55:37.4987539Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4987715Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4987818Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4987899Z         spectrum_wavelength,
2025-01-07T17:55:37.4987974Z         t_inner,
2025-01-07T17:55:37.4988051Z         time_of_simulation,
2025-01-07T17:55:37.4988131Z         time_explosion,
2025-01-07T17:55:37.4988200Z         v_inner,
2025-01-07T17:55:37.4988273Z         v_outer,
2025-01-07T17:55:37.4988344Z         velocity
2025-01-07T17:55:37.4988415Z     ):
2025-01-07T17:55:37.4988482Z         """
2025-01-07T17:55:37.4988718Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4988784Z     
2025-01-07T17:55:37.4988861Z         Parameters
2025-01-07T17:55:37.4988933Z         ----------
2025-01-07T17:55:37.4989038Z         last_interaction_type : np.array
2025-01-07T17:55:37.4989194Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4989311Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4989416Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4989562Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4989654Z             absorption (interaction in)
2025-01-07T17:55:37.4989751Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4989895Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4989980Z             emission (interaction out)
2025-01-07T17:55:37.4990081Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4990230Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4990329Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4990479Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4990567Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4990731Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4990905Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4991078Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4991150Z             unit of Hz
2025-01-07T17:55:37.4991249Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4991377Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4991464Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4991574Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4991691Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4991815Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4992019Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4992148Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4992246Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4992386Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4992472Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4992596Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4992690Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4992804Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4992872Z         """
2025-01-07T17:55:37.4993051Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4993153Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4993361Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4993429Z             {
2025-01-07T17:55:37.4993513Z                 "nus": packet_nus,
2025-01-07T17:55:37.4993639Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4993733Z                 "energies": packet_energies,
2025-01-07T17:55:37.4993857Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4994009Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4994155Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4994294Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4994410Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4994477Z             }
2025-01-07T17:55:37.4994549Z         )
2025-01-07T17:55:37.4994618Z     
2025-01-07T17:55:37.4994705Z         # Save other properties
2025-01-07T17:55:37.4994791Z         self.lines_df = lines_df
2025-01-07T17:55:37.4994875Z         self.r_inner = r_inner
2025-01-07T17:55:37.4995017Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4995156Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4995293Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4995405Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4995505Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4995572Z         )
2025-01-07T17:55:37.4995693Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4995771Z         self.t_inner = t_inner
2025-01-07T17:55:37.4995882Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4995976Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4996059Z         self.v_inner = v_inner
2025-01-07T17:55:37.4996136Z         self.v_outer = v_outer
2025-01-07T17:55:37.4996210Z     
2025-01-07T17:55:37.4996312Z         # First check if both options are provided
2025-01-07T17:55:37.4996489Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4996568Z >           raise ValueError(
2025-01-07T17:55:37.4996713Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4996882Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4997063Z             )
2025-01-07T17:55:37.4997418Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4997424Z 
2025-01-07T17:55:37.4997592Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4997868Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-07T17:55:37.4997873Z 
2025-01-07T17:55:37.4998145Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4998373Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4998612Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4998617Z 
2025-01-07T17:55:37.4998704Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4998826Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4998894Z         """
2025-01-07T17:55:37.4998983Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4999048Z     
2025-01-07T17:55:37.4999125Z         Parameters
2025-01-07T17:55:37.4999196Z         ----------
2025-01-07T17:55:37.4999339Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4999418Z             Simulation object.
2025-01-07T17:55:37.4999488Z     
2025-01-07T17:55:37.4999556Z         Returns
2025-01-07T17:55:37.4999631Z         -------
2025-01-07T17:55:37.4999862Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4999935Z         """
2025-01-07T17:55:37.5000068Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5000078Z 
2025-01-07T17:55:37.5000221Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5000336Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5000501Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5000650Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5000862Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5000999Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5001196Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5001275Z     return cls(
2025-01-07T17:55:37.5001381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5001389Z 
2025-01-07T17:55:37.5001666Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5001810Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5002144Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5002341Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5002542Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5002646Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5002829Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5002930Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5003095Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5003217Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5003333Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5003337Z 
2025-01-07T17:55:37.5003416Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5003584Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5003689Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5004009Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5004078Z        0.00025518])
2025-01-07T17:55:37.5004240Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5004430Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5004556Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5004687Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5004895Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5005002Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5005243Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5005390Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5005579Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5005696Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5005782Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5005895Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5005984Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5006140Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5006416Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5006546Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5006700Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5006865Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5006992Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5007148Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5007278Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5007385Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5007463Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5007468Z 
2025-01-07T17:55:37.5007541Z     def __init__(
2025-01-07T17:55:37.5007615Z         self,
2025-01-07T17:55:37.5007703Z         last_interaction_type,
2025-01-07T17:55:37.5007789Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5007880Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5007963Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5008049Z         last_interaction_in_r,
2025-01-07T17:55:37.5008119Z         lines_df,
2025-01-07T17:55:37.5008200Z         packet_nus,
2025-01-07T17:55:37.5008279Z         packet_energies,
2025-01-07T17:55:37.5008353Z         r_inner,
2025-01-07T17:55:37.5008437Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5008627Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5008722Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5008807Z         spectrum_wavelength,
2025-01-07T17:55:37.5008877Z         t_inner,
2025-01-07T17:55:37.5008963Z         time_of_simulation,
2025-01-07T17:55:37.5009039Z         time_explosion,
2025-01-07T17:55:37.5009120Z         v_inner,
2025-01-07T17:55:37.5009193Z         v_outer,
2025-01-07T17:55:37.5009263Z         velocity
2025-01-07T17:55:37.5009335Z     ):
2025-01-07T17:55:37.5009403Z         """
2025-01-07T17:55:37.5009633Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5009699Z     
2025-01-07T17:55:37.5009776Z         Parameters
2025-01-07T17:55:37.5009930Z         ----------
2025-01-07T17:55:37.5010026Z         last_interaction_type : np.array
2025-01-07T17:55:37.5010176Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5010295Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5010392Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5010538Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5010625Z             absorption (interaction in)
2025-01-07T17:55:37.5010730Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5010873Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5010965Z             emission (interaction out)
2025-01-07T17:55:37.5011064Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5011214Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5011311Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5011464Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5011553Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5011712Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5011806Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5012119Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5012211Z             unit of Hz
2025-01-07T17:55:37.5012309Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5012564Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5012649Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5012763Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5012877Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5012999Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5013116Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5013238Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5013340Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5013474Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5013561Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5013680Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5013780Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5013891Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5013967Z         """
2025-01-07T17:55:37.5014141Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5014249Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5014346Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5014413Z             {
2025-01-07T17:55:37.5014496Z                 "nus": packet_nus,
2025-01-07T17:55:37.5014626Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5014722Z                 "energies": packet_energies,
2025-01-07T17:55:37.5014838Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5014990Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5015131Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5015275Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5015390Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5015462Z             }
2025-01-07T17:55:37.5015535Z         )
2025-01-07T17:55:37.5015600Z     
2025-01-07T17:55:37.5015691Z         # Save other properties
2025-01-07T17:55:37.5015773Z         self.lines_df = lines_df
2025-01-07T17:55:37.5015856Z         self.r_inner = r_inner
2025-01-07T17:55:37.5015995Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5016254Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5016386Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5016498Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5016593Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5016663Z         )
2025-01-07T17:55:37.5016780Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5016862Z         self.t_inner = t_inner
2025-01-07T17:55:37.5016976Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5017074Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5017151Z         self.v_inner = v_inner
2025-01-07T17:55:37.5017234Z         self.v_outer = v_outer
2025-01-07T17:55:37.5017305Z     
2025-01-07T17:55:37.5017405Z         # First check if both options are provided
2025-01-07T17:55:37.5017580Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5017667Z >           raise ValueError(
2025-01-07T17:55:37.5017809Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5017970Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5018044Z             )
2025-01-07T17:55:37.5018396Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5018401Z 
2025-01-07T17:55:37.5018659Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5018937Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-07T17:55:37.5018947Z 
2025-01-07T17:55:37.5019215Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5019433Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5019667Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5019672Z 
2025-01-07T17:55:37.5019764Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5019874Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5019948Z         """
2025-01-07T17:55:37.5020035Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5020106Z     
2025-01-07T17:55:37.5020178Z         Parameters
2025-01-07T17:55:37.5020254Z         ----------
2025-01-07T17:55:37.5020399Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5020482Z             Simulation object.
2025-01-07T17:55:37.5020553Z     
2025-01-07T17:55:37.5020622Z         Returns
2025-01-07T17:55:37.5020696Z         -------
2025-01-07T17:55:37.5020824Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5020896Z         """
2025-01-07T17:55:37.5021029Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5021037Z 
2025-01-07T17:55:37.5021185Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5021294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5021456Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5021601Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5021825Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5022067Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5022275Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5022351Z     return cls(
2025-01-07T17:55:37.5022456Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5022460Z 
2025-01-07T17:55:37.5022737Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5022989Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5023175Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5023348Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5023551Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5023649Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5023839Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5023942Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5024102Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5024219Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5024329Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5024337Z 
2025-01-07T17:55:37.5024418Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5024583Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5024692Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5024884Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5024958Z        0.00025518])
2025-01-07T17:55:37.5025113Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5025436Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5025564Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5025691Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5025896Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5026001Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5026252Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5026396Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5026587Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5026699Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5026792Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5026905Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5026993Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5027151Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5027321Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5027448Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5027600Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5027771Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5027889Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5028054Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5028181Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5028298Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5028376Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5028380Z 
2025-01-07T17:55:37.5028451Z     def __init__(
2025-01-07T17:55:37.5028524Z         self,
2025-01-07T17:55:37.5028609Z         last_interaction_type,
2025-01-07T17:55:37.5028700Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5028869Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5028957Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5029038Z         last_interaction_in_r,
2025-01-07T17:55:37.5029113Z         lines_df,
2025-01-07T17:55:37.5029185Z         packet_nus,
2025-01-07T17:55:37.5029268Z         packet_energies,
2025-01-07T17:55:37.5029338Z         r_inner,
2025-01-07T17:55:37.5029428Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5029605Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5029708Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5029798Z         spectrum_wavelength,
2025-01-07T17:55:37.5029867Z         t_inner,
2025-01-07T17:55:37.5029949Z         time_of_simulation,
2025-01-07T17:55:37.5030026Z         time_explosion,
2025-01-07T17:55:37.5030098Z         v_inner,
2025-01-07T17:55:37.5030171Z         v_outer,
2025-01-07T17:55:37.5030244Z         velocity
2025-01-07T17:55:37.5030310Z     ):
2025-01-07T17:55:37.5030389Z         """
2025-01-07T17:55:37.5030614Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5030685Z     
2025-01-07T17:55:37.5030760Z         Parameters
2025-01-07T17:55:37.5030836Z         ----------
2025-01-07T17:55:37.5030928Z         last_interaction_type : np.array
2025-01-07T17:55:37.5031084Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5031203Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5031305Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5031538Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5031625Z             absorption (interaction in)
2025-01-07T17:55:37.5031728Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5031867Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5032054Z             emission (interaction out)
2025-01-07T17:55:37.5032154Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5032310Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5032405Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5032557Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5032638Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5032806Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5032900Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5033070Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5033147Z             unit of Hz
2025-01-07T17:55:37.5033241Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5033374Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5033457Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5033573Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5033682Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5033811Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5033914Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5034038Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5034136Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5034278Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5034364Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5034489Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5034589Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5034699Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5034771Z         """
2025-01-07T17:55:37.5034943Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5035165Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5035257Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5035332Z             {
2025-01-07T17:55:37.5035410Z                 "nus": packet_nus,
2025-01-07T17:55:37.5035540Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5035631Z                 "energies": packet_energies,
2025-01-07T17:55:37.5035755Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5035902Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5036054Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5036199Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5036311Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5036386Z             }
2025-01-07T17:55:37.5036454Z         )
2025-01-07T17:55:37.5036528Z     
2025-01-07T17:55:37.5036610Z         # Save other properties
2025-01-07T17:55:37.5036701Z         self.lines_df = lines_df
2025-01-07T17:55:37.5036779Z         self.r_inner = r_inner
2025-01-07T17:55:37.5036923Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5037057Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5037192Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5037300Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5037513Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5037585Z         )
2025-01-07T17:55:37.5037701Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5037784Z         self.t_inner = t_inner
2025-01-07T17:55:37.5037894Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5037992Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5038071Z         self.v_inner = v_inner
2025-01-07T17:55:37.5038157Z         self.v_outer = v_outer
2025-01-07T17:55:37.5038224Z     
2025-01-07T17:55:37.5038330Z         # First check if both options are provided
2025-01-07T17:55:37.5038503Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5038587Z >           raise ValueError(
2025-01-07T17:55:37.5038726Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5038892Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5038963Z             )
2025-01-07T17:55:37.5039320Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5039325Z 
2025-01-07T17:55:37.5039503Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5039774Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-07T17:55:37.5039783Z 
2025-01-07T17:55:37.5040057Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5040271Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5040510Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5040515Z 
2025-01-07T17:55:37.5040601Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5040716Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5040795Z         """
2025-01-07T17:55:37.5040880Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5040950Z     
2025-01-07T17:55:37.5041024Z         Parameters
2025-01-07T17:55:37.5041100Z         ----------
2025-01-07T17:55:37.5041241Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5041323Z             Simulation object.
2025-01-07T17:55:37.5041389Z     
2025-01-07T17:55:37.5041547Z         Returns
2025-01-07T17:55:37.5041619Z         -------
2025-01-07T17:55:37.5041756Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5041824Z         """
2025-01-07T17:55:37.5042147Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5042156Z 
2025-01-07T17:55:37.5042313Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5042430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5042594Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5042744Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5042981Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5043115Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5043320Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5043397Z     return cls(
2025-01-07T17:55:37.5043508Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5043513Z 
2025-01-07T17:55:37.5043786Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5043932Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5044108Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5044294Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5044618Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5044718Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5044907Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5045004Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5045177Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5045290Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5045405Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5045410Z 
2025-01-07T17:55:37.5045486Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5045655Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5045765Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5045960Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5046039Z        0.00025518])
2025-01-07T17:55:37.5046193Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5046393Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5046514Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5046647Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5046853Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5046959Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5047202Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5047349Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5047544Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5047657Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5047747Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5047853Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5047948Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5048248Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5048421Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5048544Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5048696Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5048864Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5048988Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5049151Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5049277Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5049391Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5049465Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5049473Z 
2025-01-07T17:55:37.5049549Z     def __init__(
2025-01-07T17:55:37.5049617Z         self,
2025-01-07T17:55:37.5049705Z         last_interaction_type,
2025-01-07T17:55:37.5049791Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5049881Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5049963Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5050047Z         last_interaction_in_r,
2025-01-07T17:55:37.5050121Z         lines_df,
2025-01-07T17:55:37.5050194Z         packet_nus,
2025-01-07T17:55:37.5050275Z         packet_energies,
2025-01-07T17:55:37.5050425Z         r_inner,
2025-01-07T17:55:37.5050514Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5050693Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5050794Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5050875Z         spectrum_wavelength,
2025-01-07T17:55:37.5050949Z         t_inner,
2025-01-07T17:55:37.5051028Z         time_of_simulation,
2025-01-07T17:55:37.5051112Z         time_explosion,
2025-01-07T17:55:37.5051181Z         v_inner,
2025-01-07T17:55:37.5051254Z         v_outer,
2025-01-07T17:55:37.5051324Z         velocity
2025-01-07T17:55:37.5051399Z     ):
2025-01-07T17:55:37.5051466Z         """
2025-01-07T17:55:37.5051702Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5051777Z     
2025-01-07T17:55:37.5051849Z         Parameters
2025-01-07T17:55:37.5052047Z         ----------
2025-01-07T17:55:37.5052204Z         last_interaction_type : np.array
2025-01-07T17:55:37.5052377Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5052494Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5052596Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5052747Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5052844Z             absorption (interaction in)
2025-01-07T17:55:37.5052946Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5053089Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5053174Z             emission (interaction out)
2025-01-07T17:55:37.5053276Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5053428Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5053527Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5053678Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5053764Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5053928Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5054017Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5054183Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5054255Z             unit of Hz
2025-01-07T17:55:37.5054481Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5054611Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5054703Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5054813Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5054926Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5055051Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5055160Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5055289Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5055385Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5055526Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5055609Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5055731Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5055826Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5055946Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5056013Z         """
2025-01-07T17:55:37.5056193Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5056295Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5056390Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5056458Z             {
2025-01-07T17:55:37.5056541Z                 "nus": packet_nus,
2025-01-07T17:55:37.5056671Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5056871Z                 "energies": packet_energies,
2025-01-07T17:55:37.5056995Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5057145Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5057289Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5057430Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5057547Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5057615Z             }
2025-01-07T17:55:37.5057687Z         )
2025-01-07T17:55:37.5057753Z     
2025-01-07T17:55:37.5057839Z         # Save other properties
2025-01-07T17:55:37.5057923Z         self.lines_df = lines_df
2025-01-07T17:55:37.5058007Z         self.r_inner = r_inner
2025-01-07T17:55:37.5058146Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5058290Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5058427Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5058532Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5058632Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5058699Z         )
2025-01-07T17:55:37.5058818Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5058902Z         self.t_inner = t_inner
2025-01-07T17:55:37.5059016Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5059110Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5059193Z         self.v_inner = v_inner
2025-01-07T17:55:37.5059270Z         self.v_outer = v_outer
2025-01-07T17:55:37.5059340Z     
2025-01-07T17:55:37.5059443Z         # First check if both options are provided
2025-01-07T17:55:37.5059619Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5059707Z >           raise ValueError(
2025-01-07T17:55:37.5059851Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5060021Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5060089Z             )
2025-01-07T17:55:37.5060445Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5060533Z 
2025-01-07T17:55:37.5060710Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5060994Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-07T17:55:37.5060999Z 
2025-01-07T17:55:37.5061268Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5061487Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5061724Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5061733Z 
2025-01-07T17:55:37.5061822Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5062044Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5062114Z         """
2025-01-07T17:55:37.5062206Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5062272Z     
2025-01-07T17:55:37.5062349Z         Parameters
2025-01-07T17:55:37.5062424Z         ----------
2025-01-07T17:55:37.5062572Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5062650Z             Simulation object.
2025-01-07T17:55:37.5062720Z     
2025-01-07T17:55:37.5062790Z         Returns
2025-01-07T17:55:37.5062865Z         -------
2025-01-07T17:55:37.5062994Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5063067Z         """
2025-01-07T17:55:37.5063208Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5063212Z 
2025-01-07T17:55:37.5063469Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5063583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5063749Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5063910Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5064128Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5064268Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5064469Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5064548Z     return cls(
2025-01-07T17:55:37.5064655Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5064664Z 
2025-01-07T17:55:37.5064938Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5065080Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5065263Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5065441Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5065638Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5065745Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5065929Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5066034Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5066198Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5066316Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5066432Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5066437Z 
2025-01-07T17:55:37.5066517Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5066688Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5066793Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5066991Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5067061Z        0.00025518])
2025-01-07T17:55:37.5067222Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5067525Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5067650Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5067782Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5067985Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5068092Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5068340Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5068488Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5068675Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5068793Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5068881Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5068994Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5069086Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5069246Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5069420Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5069543Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5069777Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5069941Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5070066Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5070224Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5070360Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5070467Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5070547Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5070552Z 
2025-01-07T17:55:37.5070632Z     def __init__(
2025-01-07T17:55:37.5070700Z         self,
2025-01-07T17:55:37.5070789Z         last_interaction_type,
2025-01-07T17:55:37.5070875Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5070965Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5071053Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5071139Z         last_interaction_in_r,
2025-01-07T17:55:37.5071209Z         lines_df,
2025-01-07T17:55:37.5071286Z         packet_nus,
2025-01-07T17:55:37.5071364Z         packet_energies,
2025-01-07T17:55:37.5071439Z         r_inner,
2025-01-07T17:55:37.5071523Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5071705Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5071804Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5071895Z         spectrum_wavelength,
2025-01-07T17:55:37.5072062Z         t_inner,
2025-01-07T17:55:37.5072148Z         time_of_simulation,
2025-01-07T17:55:37.5072230Z         time_explosion,
2025-01-07T17:55:37.5072299Z         v_inner,
2025-01-07T17:55:37.5072372Z         v_outer,
2025-01-07T17:55:37.5072440Z         velocity
2025-01-07T17:55:37.5072511Z     ):
2025-01-07T17:55:37.5072578Z         """
2025-01-07T17:55:37.5072816Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5072882Z     
2025-01-07T17:55:37.5072959Z         Parameters
2025-01-07T17:55:37.5073029Z         ----------
2025-01-07T17:55:37.5073125Z         last_interaction_type : np.array
2025-01-07T17:55:37.5073276Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5073396Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5073627Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5073780Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5073871Z             absorption (interaction in)
2025-01-07T17:55:37.5073974Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5074118Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5074204Z             emission (interaction out)
2025-01-07T17:55:37.5074301Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5074455Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5074554Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5074704Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5074794Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5074983Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5075083Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5075241Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5075319Z             unit of Hz
2025-01-07T17:55:37.5075416Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5075554Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5075646Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5075756Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5075981Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5076106Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5076217Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5076338Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5076439Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5076574Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5076666Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5076783Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5076884Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5076995Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5077067Z         """
2025-01-07T17:55:37.5077244Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5077347Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5077446Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5077514Z             {
2025-01-07T17:55:37.5077596Z                 "nus": packet_nus,
2025-01-07T17:55:37.5077720Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5077814Z                 "energies": packet_energies,
2025-01-07T17:55:37.5077930Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5078085Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5078227Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5078374Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5078485Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5078557Z             }
2025-01-07T17:55:37.5078629Z         )
2025-01-07T17:55:37.5078694Z     
2025-01-07T17:55:37.5078782Z         # Save other properties
2025-01-07T17:55:37.5078868Z         self.lines_df = lines_df
2025-01-07T17:55:37.5078951Z         self.r_inner = r_inner
2025-01-07T17:55:37.5079090Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5079229Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5079362Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5079555Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5079649Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5079722Z         )
2025-01-07T17:55:37.5079837Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5079924Z         self.t_inner = t_inner
2025-01-07T17:55:37.5080032Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5080131Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5080215Z         self.v_inner = v_inner
2025-01-07T17:55:37.5080292Z         self.v_outer = v_outer
2025-01-07T17:55:37.5080367Z     
2025-01-07T17:55:37.5080468Z         # First check if both options are provided
2025-01-07T17:55:37.5080646Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5080727Z >           raise ValueError(
2025-01-07T17:55:37.5080872Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5081031Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5081107Z             )
2025-01-07T17:55:37.5081457Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5081463Z 
2025-01-07T17:55:37.5081647Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5081881Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-07T17:55:37.5081886Z 
2025-01-07T17:55:37.5082439Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5082669Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5082902Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5082907Z 
2025-01-07T17:55:37.5083001Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5083119Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5083192Z         """
2025-01-07T17:55:37.5083278Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5083349Z     
2025-01-07T17:55:37.5083423Z         Parameters
2025-01-07T17:55:37.5083500Z         ----------
2025-01-07T17:55:37.5083648Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5083728Z             Simulation object.
2025-01-07T17:55:37.5083799Z     
2025-01-07T17:55:37.5083869Z         Returns
2025-01-07T17:55:37.5083944Z         -------
2025-01-07T17:55:37.5084083Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5084156Z         """
2025-01-07T17:55:37.5084289Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5084294Z 
2025-01-07T17:55:37.5084443Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5084557Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5084730Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5084877Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5085095Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5085233Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5085435Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5085511Z     return cls(
2025-01-07T17:55:37.5085617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5085625Z 
2025-01-07T17:55:37.5085902Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5086041Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5086220Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5086399Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5086719Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5086830Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5087012Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5087114Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5087280Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5087402Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5087514Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5087518Z 
2025-01-07T17:55:37.5087601Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5087767Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5087880Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5088078Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5088155Z        0.00025518])
2025-01-07T17:55:37.5088314Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5088505Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5088632Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5088921Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5089132Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5089236Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5089486Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5089630Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5089826Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5089945Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5090033Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5090146Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5090236Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5090395Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5090574Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5090702Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5090853Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5091021Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5091144Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5091311Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5091444Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5091553Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5091632Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5091636Z 
2025-01-07T17:55:37.5091708Z     def __init__(
2025-01-07T17:55:37.5091785Z         self,
2025-01-07T17:55:37.5091866Z         last_interaction_type,
2025-01-07T17:55:37.5092116Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5092232Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5092323Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5092404Z         last_interaction_in_r,
2025-01-07T17:55:37.5092480Z         lines_df,
2025-01-07T17:55:37.5092553Z         packet_nus,
2025-01-07T17:55:37.5092762Z         packet_energies,
2025-01-07T17:55:37.5092832Z         r_inner,
2025-01-07T17:55:37.5092922Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5093108Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5093203Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5093291Z         spectrum_wavelength,
2025-01-07T17:55:37.5093361Z         t_inner,
2025-01-07T17:55:37.5093444Z         time_of_simulation,
2025-01-07T17:55:37.5093519Z         time_explosion,
2025-01-07T17:55:37.5093596Z         v_inner,
2025-01-07T17:55:37.5093665Z         v_outer,
2025-01-07T17:55:37.5093737Z         velocity
2025-01-07T17:55:37.5093804Z     ):
2025-01-07T17:55:37.5093875Z         """
2025-01-07T17:55:37.5094106Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5094177Z     
2025-01-07T17:55:37.5094248Z         Parameters
2025-01-07T17:55:37.5094326Z         ----------
2025-01-07T17:55:37.5094423Z         last_interaction_type : np.array
2025-01-07T17:55:37.5094580Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5094703Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5094801Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5094952Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5095040Z             absorption (interaction in)
2025-01-07T17:55:37.5095145Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5095416Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5095507Z             emission (interaction out)
2025-01-07T17:55:37.5095602Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5095757Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5095850Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5096004Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5096087Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5096253Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5096350Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5096508Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5096584Z             unit of Hz
2025-01-07T17:55:37.5096679Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5096817Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5096901Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5097016Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5097124Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5097252Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5097357Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5097487Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5097584Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5097724Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5097811Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5097932Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5098031Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5098146Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5098221Z         """
2025-01-07T17:55:37.5098395Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5098505Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5098595Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5098668Z             {
2025-01-07T17:55:37.5098747Z                 "nus": packet_nus,
2025-01-07T17:55:37.5098960Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5099050Z                 "energies": packet_energies,
2025-01-07T17:55:37.5099173Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5099327Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5099471Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5099614Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5099731Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5099807Z             }
2025-01-07T17:55:37.5099873Z         )
2025-01-07T17:55:37.5099944Z     
2025-01-07T17:55:37.5100028Z         # Save other properties
2025-01-07T17:55:37.5100114Z         self.lines_df = lines_df
2025-01-07T17:55:37.5100192Z         self.r_inner = r_inner
2025-01-07T17:55:37.5100338Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5100476Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5100613Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5100721Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5100820Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5100894Z         )
2025-01-07T17:55:37.5101009Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5101096Z         self.t_inner = t_inner
2025-01-07T17:55:37.5101285Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5101384Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5101462Z         self.v_inner = v_inner
2025-01-07T17:55:37.5101544Z         self.v_outer = v_outer
2025-01-07T17:55:37.5101610Z     
2025-01-07T17:55:37.5101715Z         # First check if both options are provided
2025-01-07T17:55:37.5101886Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5102083Z >           raise ValueError(
2025-01-07T17:55:37.5102226Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5102392Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5102465Z             )
2025-01-07T17:55:37.5102817Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5102822Z 
2025-01-07T17:55:37.5103003Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5103233Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-07T17:55:37.5103238Z 
2025-01-07T17:55:37.5103516Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5103731Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5103972Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5103977Z 
2025-01-07T17:55:37.5104070Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5104183Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5104257Z         """
2025-01-07T17:55:37.5104343Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5104416Z     
2025-01-07T17:55:37.5104489Z         Parameters
2025-01-07T17:55:37.5104564Z         ----------
2025-01-07T17:55:37.5104706Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5104793Z             Simulation object.
2025-01-07T17:55:37.5104858Z     
2025-01-07T17:55:37.5104930Z         Returns
2025-01-07T17:55:37.5105000Z         -------
2025-01-07T17:55:37.5105135Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5105202Z         """
2025-01-07T17:55:37.5105343Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5105466Z 
2025-01-07T17:55:37.5105612Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5105731Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5105901Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5110221Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5110496Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5110649Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5110867Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5110949Z     return cls(
2025-01-07T17:55:37.5111065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5111070Z 
2025-01-07T17:55:37.5111359Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5111511Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5111702Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5111884Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5112248Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5112367Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5112555Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5112821Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5112994Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5113119Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5113232Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5113241Z 
2025-01-07T17:55:37.5113329Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5113500Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5113616Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5113825Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5113896Z        0.00025518])
2025-01-07T17:55:37.5114064Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5114261Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5114389Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5114519Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5114731Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5114842Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5115097Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5115245Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5115442Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5115564Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5115652Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5115772Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5115864Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5116026Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5116201Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5116333Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5116623Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5116796Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5116922Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5117083Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5117216Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5117333Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5117416Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5117421Z 
2025-01-07T17:55:37.5117492Z     def __init__(
2025-01-07T17:55:37.5117570Z         self,
2025-01-07T17:55:37.5117655Z         last_interaction_type,
2025-01-07T17:55:37.5117753Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5117846Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5117938Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5118024Z         last_interaction_in_r,
2025-01-07T17:55:37.5118101Z         lines_df,
2025-01-07T17:55:37.5118181Z         packet_nus,
2025-01-07T17:55:37.5118260Z         packet_energies,
2025-01-07T17:55:37.5118338Z         r_inner,
2025-01-07T17:55:37.5118423Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5118609Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5118711Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5118889Z         spectrum_wavelength,
2025-01-07T17:55:37.5118960Z         t_inner,
2025-01-07T17:55:37.5119044Z         time_of_simulation,
2025-01-07T17:55:37.5119122Z         time_explosion,
2025-01-07T17:55:37.5119199Z         v_inner,
2025-01-07T17:55:37.5119270Z         v_outer,
2025-01-07T17:55:37.5119345Z         velocity
2025-01-07T17:55:37.5119413Z     ):
2025-01-07T17:55:37.5119490Z         """
2025-01-07T17:55:37.5119725Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5119802Z     
2025-01-07T17:55:37.5119875Z         Parameters
2025-01-07T17:55:37.5119954Z         ----------
2025-01-07T17:55:37.5120052Z         last_interaction_type : np.array
2025-01-07T17:55:37.5120204Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5120330Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5120436Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5120595Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5120683Z             absorption (interaction in)
2025-01-07T17:55:37.5120788Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5120934Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5121030Z             emission (interaction out)
2025-01-07T17:55:37.5121129Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5121284Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5121378Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5121533Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5121624Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5121785Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5121883Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5122261Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5122345Z             unit of Hz
2025-01-07T17:55:37.5122444Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5122582Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5122669Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5122787Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5123023Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5123156Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5123262Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5123392Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5123495Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5123633Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5123724Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5123851Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5123954Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5124066Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5124140Z         """
2025-01-07T17:55:37.5124313Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5124425Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5124517Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5124596Z             {
2025-01-07T17:55:37.5124675Z                 "nus": packet_nus,
2025-01-07T17:55:37.5124807Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5124906Z                 "energies": packet_energies,
2025-01-07T17:55:37.5125028Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5125180Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5125455Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5125601Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5125715Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5125791Z             }
2025-01-07T17:55:37.5125859Z         )
2025-01-07T17:55:37.5125932Z     
2025-01-07T17:55:37.5126020Z         # Save other properties
2025-01-07T17:55:37.5126114Z         self.lines_df = lines_df
2025-01-07T17:55:37.5126196Z         self.r_inner = r_inner
2025-01-07T17:55:37.5126347Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5126480Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5126622Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5126737Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5126831Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5126910Z         )
2025-01-07T17:55:37.5127027Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5127112Z         self.t_inner = t_inner
2025-01-07T17:55:37.5127223Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5127327Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5127406Z         self.v_inner = v_inner
2025-01-07T17:55:37.5127492Z         self.v_outer = v_outer
2025-01-07T17:55:37.5127559Z     
2025-01-07T17:55:37.5127667Z         # First check if both options are provided
2025-01-07T17:55:37.5127843Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5127931Z >           raise ValueError(
2025-01-07T17:55:37.5128074Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5128239Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5128319Z             )
2025-01-07T17:55:37.5128674Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5128679Z 
2025-01-07T17:55:37.5128865Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5129098Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-07T17:55:37.5129185Z 
2025-01-07T17:55:37.5129464Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5129680Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5129925Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5129930Z 
2025-01-07T17:55:37.5130026Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5130140Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5130214Z         """
2025-01-07T17:55:37.5130304Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5130377Z     
2025-01-07T17:55:37.5130450Z         Parameters
2025-01-07T17:55:37.5130530Z         ----------
2025-01-07T17:55:37.5130674Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5130760Z             Simulation object.
2025-01-07T17:55:37.5130827Z     
2025-01-07T17:55:37.5130902Z         Returns
2025-01-07T17:55:37.5130976Z         -------
2025-01-07T17:55:37.5131118Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5131185Z         """
2025-01-07T17:55:37.5131323Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5131327Z 
2025-01-07T17:55:37.5131476Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5131593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5131760Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5132160Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5132391Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5132531Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5132737Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5132810Z     return cls(
2025-01-07T17:55:37.5132928Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5132933Z 
2025-01-07T17:55:37.5133211Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5133361Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5133536Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5133718Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5133926Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5134028Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5134213Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5134309Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5134476Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5134592Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5134710Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5134714Z 
2025-01-07T17:55:37.5134791Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5134963Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5135075Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5135271Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5135350Z        0.00025518])
2025-01-07T17:55:37.5135506Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5135707Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5135831Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5136086Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5136294Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5136402Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5136645Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5136796Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5136991Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5137107Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5137200Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5137310Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5137405Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5137558Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5137737Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5137859Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5138012Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5138177Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5138302Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5138575Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5138705Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5138817Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5138891Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5138895Z 
2025-01-07T17:55:37.5138974Z     def __init__(
2025-01-07T17:55:37.5139043Z         self,
2025-01-07T17:55:37.5139131Z         last_interaction_type,
2025-01-07T17:55:37.5139217Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5139310Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5139394Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5139480Z         last_interaction_in_r,
2025-01-07T17:55:37.5139555Z         lines_df,
2025-01-07T17:55:37.5139628Z         packet_nus,
2025-01-07T17:55:37.5139711Z         packet_energies,
2025-01-07T17:55:37.5139784Z         r_inner,
2025-01-07T17:55:37.5139873Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5140053Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5140154Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5140237Z         spectrum_wavelength,
2025-01-07T17:55:37.5140311Z         t_inner,
2025-01-07T17:55:37.5140391Z         time_of_simulation,
2025-01-07T17:55:37.5140474Z         time_explosion,
2025-01-07T17:55:37.5140544Z         v_inner,
2025-01-07T17:55:37.5140618Z         v_outer,
2025-01-07T17:55:37.5140686Z         velocity
2025-01-07T17:55:37.5140758Z     ):
2025-01-07T17:55:37.5140826Z         """
2025-01-07T17:55:37.5141063Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5141131Z     
2025-01-07T17:55:37.5141209Z         Parameters
2025-01-07T17:55:37.5141285Z         ----------
2025-01-07T17:55:37.5141378Z         last_interaction_type : np.array
2025-01-07T17:55:37.5141537Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5141655Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5141758Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5141903Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5142099Z             absorption (interaction in)
2025-01-07T17:55:37.5142314Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5142461Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5142547Z             emission (interaction out)
2025-01-07T17:55:37.5142647Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5142802Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5142901Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5143055Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5143144Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5143310Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5143400Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5143565Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5143636Z             unit of Hz
2025-01-07T17:55:37.5143737Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5143871Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5143961Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5144071Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5144187Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5144309Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5144423Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5144551Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5144758Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5144900Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5144982Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5145108Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5145205Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5145324Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5145392Z         """
2025-01-07T17:55:37.5145571Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5145674Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5145772Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5145843Z             {
2025-01-07T17:55:37.5145927Z                 "nus": packet_nus,
2025-01-07T17:55:37.5146053Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5146154Z                 "energies": packet_energies,
2025-01-07T17:55:37.5146279Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5146427Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5146574Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5146714Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5146835Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5146903Z             }
2025-01-07T17:55:37.5146974Z         )
2025-01-07T17:55:37.5147040Z     
2025-01-07T17:55:37.5147130Z         # Save other properties
2025-01-07T17:55:37.5147213Z         self.lines_df = lines_df
2025-01-07T17:55:37.5147298Z         self.r_inner = r_inner
2025-01-07T17:55:37.5147438Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5147575Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5147717Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5147824Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5147927Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5147995Z         )
2025-01-07T17:55:37.5148116Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5148195Z         self.t_inner = t_inner
2025-01-07T17:55:37.5148414Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5148509Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5148593Z         self.v_inner = v_inner
2025-01-07T17:55:37.5148669Z         self.v_outer = v_outer
2025-01-07T17:55:37.5148740Z     
2025-01-07T17:55:37.5148841Z         # First check if both options are provided
2025-01-07T17:55:37.5149022Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5149104Z >           raise ValueError(
2025-01-07T17:55:37.5149251Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5149416Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5149482Z             )
2025-01-07T17:55:37.5149841Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5149850Z 
2025-01-07T17:55:37.5150023Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5150257Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-07T17:55:37.5150263Z 
2025-01-07T17:55:37.5150530Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5150748Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5150984Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5151066Z 
2025-01-07T17:55:37.5151156Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5151273Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5151341Z         """
2025-01-07T17:55:37.5151431Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5151498Z     
2025-01-07T17:55:37.5151575Z         Parameters
2025-01-07T17:55:37.5151647Z         ----------
2025-01-07T17:55:37.5151799Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5151880Z             Simulation object.
2025-01-07T17:55:37.5152047Z     
2025-01-07T17:55:37.5152118Z         Returns
2025-01-07T17:55:37.5152192Z         -------
2025-01-07T17:55:37.5152322Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5152394Z         """
2025-01-07T17:55:37.5152527Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5152537Z 
2025-01-07T17:55:37.5152680Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5152794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5152964Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5153109Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5153325Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5153464Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5153664Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5153740Z     return cls(
2025-01-07T17:55:37.5153847Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5153851Z 
2025-01-07T17:55:37.5154131Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5154268Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5154451Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5154626Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5154832Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5154936Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5155234Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5155335Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5155496Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5155613Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5155723Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5155727Z 
2025-01-07T17:55:37.5155812Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5155982Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5156093Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5156285Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5156358Z        0.00025518])
2025-01-07T17:55:37.5156522Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5156722Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5156845Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5156972Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5157180Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5157281Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5157637Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5157782Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5157974Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5158092Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5158181Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5158297Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5158387Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5158542Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5158712Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5158838Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5158986Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5159159Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5159277Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5159439Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5159571Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5159682Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5159760Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5159764Z 
2025-01-07T17:55:37.5159835Z     def __init__(
2025-01-07T17:55:37.5159908Z         self,
2025-01-07T17:55:37.5159991Z         last_interaction_type,
2025-01-07T17:55:37.5160083Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5160170Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5160262Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5160346Z         last_interaction_in_r,
2025-01-07T17:55:37.5160421Z         lines_df,
2025-01-07T17:55:37.5160494Z         packet_nus,
2025-01-07T17:55:37.5160577Z         packet_energies,
2025-01-07T17:55:37.5160648Z         r_inner,
2025-01-07T17:55:37.5160737Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5160922Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5161101Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5161189Z         spectrum_wavelength,
2025-01-07T17:55:37.5161259Z         t_inner,
2025-01-07T17:55:37.5161342Z         time_of_simulation,
2025-01-07T17:55:37.5161417Z         time_explosion,
2025-01-07T17:55:37.5161490Z         v_inner,
2025-01-07T17:55:37.5161559Z         v_outer,
2025-01-07T17:55:37.5161632Z         velocity
2025-01-07T17:55:37.5161698Z     ):
2025-01-07T17:55:37.5161770Z         """
2025-01-07T17:55:37.5162203Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5162286Z     
2025-01-07T17:55:37.5162359Z         Parameters
2025-01-07T17:55:37.5162437Z         ----------
2025-01-07T17:55:37.5162529Z         last_interaction_type : np.array
2025-01-07T17:55:37.5162688Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5162810Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5162912Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5163064Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5163151Z             absorption (interaction in)
2025-01-07T17:55:37.5163254Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5163395Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5163489Z             emission (interaction out)
2025-01-07T17:55:37.5163585Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5163742Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5163961Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5164119Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5164203Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5164369Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5164463Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5164630Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5164710Z             unit of Hz
2025-01-07T17:55:37.5164809Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5164942Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5165026Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5165145Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5165253Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5165389Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5165496Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5165623Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5165722Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5165862Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5165959Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5166079Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5166179Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5166289Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5166360Z         """
2025-01-07T17:55:37.5166535Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5166643Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5166733Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5166809Z             {
2025-01-07T17:55:37.5166888Z                 "nus": packet_nus,
2025-01-07T17:55:37.5167016Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5167106Z                 "energies": packet_energies,
2025-01-07T17:55:37.5167230Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5167384Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5167655Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5167802Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5167915Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5167987Z             }
2025-01-07T17:55:37.5168053Z         )
2025-01-07T17:55:37.5168124Z     
2025-01-07T17:55:37.5168206Z         # Save other properties
2025-01-07T17:55:37.5168293Z         self.lines_df = lines_df
2025-01-07T17:55:37.5168378Z         self.r_inner = r_inner
2025-01-07T17:55:37.5168524Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5168658Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5168793Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5168907Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5169007Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5169082Z         )
2025-01-07T17:55:37.5169198Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5169285Z         self.t_inner = t_inner
2025-01-07T17:55:37.5169393Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5169491Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5169569Z         self.v_inner = v_inner
2025-01-07T17:55:37.5169651Z         self.v_outer = v_outer
2025-01-07T17:55:37.5169717Z     
2025-01-07T17:55:37.5169905Z         # First check if both options are provided
2025-01-07T17:55:37.5170078Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5170166Z >           raise ValueError(
2025-01-07T17:55:37.5170304Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5170470Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5170545Z             )
2025-01-07T17:55:37.5170896Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5170902Z 
2025-01-07T17:55:37.5171083Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5171313Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-07T17:55:37.5171319Z 
2025-01-07T17:55:37.5171596Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5171817Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5172231Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5172238Z 
2025-01-07T17:55:37.5172331Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5172444Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5172523Z         """
2025-01-07T17:55:37.5172610Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5172682Z     
2025-01-07T17:55:37.5172755Z         Parameters
2025-01-07T17:55:37.5172831Z         ----------
2025-01-07T17:55:37.5172974Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5173058Z             Simulation object.
2025-01-07T17:55:37.5173127Z     
2025-01-07T17:55:37.5173200Z         Returns
2025-01-07T17:55:37.5173270Z         -------
2025-01-07T17:55:37.5173404Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5173477Z         """
2025-01-07T17:55:37.5173617Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5173622Z 
2025-01-07T17:55:37.5173764Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5173880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5174041Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5174330Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5174550Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5174684Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5174892Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5174996Z     return cls(
2025-01-07T17:55:37.5175107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5175116Z 
2025-01-07T17:55:37.5175389Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5175531Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5175714Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5175888Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5176098Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5176198Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5176383Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5176479Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5176648Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5176761Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5177014Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5177020Z 
2025-01-07T17:55:37.5177103Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5177267Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5177377Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5177576Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5177651Z        0.00025518])
2025-01-07T17:55:37.5177806Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5178003Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5178124Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5178260Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5178471Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5178580Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5178828Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5178972Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5179166Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5179277Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5179368Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5179478Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5179572Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5179724Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5179903Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5180030Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5180184Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5180353Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5180559Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5180722Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5180847Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5180963Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5181037Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5181042Z 
2025-01-07T17:55:37.5181119Z     def __init__(
2025-01-07T17:55:37.5181187Z         self,
2025-01-07T17:55:37.5181281Z         last_interaction_type,
2025-01-07T17:55:37.5181366Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5181457Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5181545Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5181626Z         last_interaction_in_r,
2025-01-07T17:55:37.5181701Z         lines_df,
2025-01-07T17:55:37.5181773Z         packet_nus,
2025-01-07T17:55:37.5181855Z         packet_energies,
2025-01-07T17:55:37.5182037Z         r_inner,
2025-01-07T17:55:37.5182130Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5182308Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5182409Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5182492Z         spectrum_wavelength,
2025-01-07T17:55:37.5182567Z         t_inner,
2025-01-07T17:55:37.5182645Z         time_of_simulation,
2025-01-07T17:55:37.5182724Z         time_explosion,
2025-01-07T17:55:37.5182794Z         v_inner,
2025-01-07T17:55:37.5182986Z         v_outer,
2025-01-07T17:55:37.5183055Z         velocity
2025-01-07T17:55:37.5183127Z     ):
2025-01-07T17:55:37.5183195Z         """
2025-01-07T17:55:37.5183434Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5183506Z     
2025-01-07T17:55:37.5183581Z         Parameters
2025-01-07T17:55:37.5183657Z         ----------
2025-01-07T17:55:37.5183749Z         last_interaction_type : np.array
2025-01-07T17:55:37.5183911Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5184030Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5184133Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5184281Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5184373Z             absorption (interaction in)
2025-01-07T17:55:37.5184472Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5184619Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5184709Z             emission (interaction out)
2025-01-07T17:55:37.5184811Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5184963Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5185058Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5185212Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5185299Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5185470Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5185558Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5185723Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5185795Z             unit of Hz
2025-01-07T17:55:37.5185897Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5186026Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5186118Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5186228Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5186343Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5186473Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5186578Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5186822Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5186922Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5187064Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5187147Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5187273Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5187371Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5187485Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5187556Z         """
2025-01-07T17:55:37.5187741Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5187844Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5187940Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5188013Z             {
2025-01-07T17:55:37.5188092Z                 "nus": packet_nus,
2025-01-07T17:55:37.5188226Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5188321Z                 "energies": packet_energies,
2025-01-07T17:55:37.5188446Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5188595Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5188741Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5188889Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5189006Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5189152Z             }
2025-01-07T17:55:37.5189224Z         )
2025-01-07T17:55:37.5189290Z     
2025-01-07T17:55:37.5189377Z         # Save other properties
2025-01-07T17:55:37.5189460Z         self.lines_df = lines_df
2025-01-07T17:55:37.5189546Z         self.r_inner = r_inner
2025-01-07T17:55:37.5189691Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5189828Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5189966Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5190074Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5190176Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5190243Z         )
2025-01-07T17:55:37.5190363Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5190445Z         self.t_inner = t_inner
2025-01-07T17:55:37.5190561Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5190658Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5190744Z         self.v_inner = v_inner
2025-01-07T17:55:37.5190821Z         self.v_outer = v_outer
2025-01-07T17:55:37.5190892Z     
2025-01-07T17:55:37.5190992Z         # First check if both options are provided
2025-01-07T17:55:37.5191167Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5191256Z >           raise ValueError(
2025-01-07T17:55:37.5191394Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5191559Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5191627Z             )
2025-01-07T17:55:37.5192086Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5192093Z 
2025-01-07T17:55:37.5192266Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5192503Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-07T17:55:37.5192509Z 
2025-01-07T17:55:37.5192774Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5192990Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5193226Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5193343Z 
2025-01-07T17:55:37.5193435Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5193553Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5193620Z         """
2025-01-07T17:55:37.5193710Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5193778Z     
2025-01-07T17:55:37.5193855Z         Parameters
2025-01-07T17:55:37.5193927Z         ----------
2025-01-07T17:55:37.5194072Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5194156Z             Simulation object.
2025-01-07T17:55:37.5194228Z     
2025-01-07T17:55:37.5194296Z         Returns
2025-01-07T17:55:37.5194371Z         -------
2025-01-07T17:55:37.5194506Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5194573Z         """
2025-01-07T17:55:37.5194710Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5194715Z 
2025-01-07T17:55:37.5194860Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5194979Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5195140Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5195293Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5195506Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5195642Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5195974Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5196054Z     return cls(
2025-01-07T17:55:37.5196164Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5196168Z 
2025-01-07T17:55:37.5196446Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5196589Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5196768Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5196945Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5197140Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5197248Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5197432Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5197537Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5197707Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5197820Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5197935Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5197940Z 
2025-01-07T17:55:37.5198019Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5198188Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5198292Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5198492Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5198561Z        0.00025518])
2025-01-07T17:55:37.5198725Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5198926Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5199055Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5199193Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5199413Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5199534Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5199860Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5200008Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5200195Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5200312Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5200397Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5200510Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5200608Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5200760Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5200933Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5201056Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5201212Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5201380Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5201504Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5201660Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5201792Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5201899Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5202272Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5202280Z 
2025-01-07T17:55:37.5202356Z     def __init__(
2025-01-07T17:55:37.5202424Z         self,
2025-01-07T17:55:37.5202511Z         last_interaction_type,
2025-01-07T17:55:37.5202597Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5202689Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5202775Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5202859Z         last_interaction_in_r,
2025-01-07T17:55:37.5202927Z         lines_df,
2025-01-07T17:55:37.5203004Z         packet_nus,
2025-01-07T17:55:37.5203082Z         packet_energies,
2025-01-07T17:55:37.5203155Z         r_inner,
2025-01-07T17:55:37.5203236Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5203424Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5203521Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5203612Z         spectrum_wavelength,
2025-01-07T17:55:37.5203685Z         t_inner,
2025-01-07T17:55:37.5203763Z         time_of_simulation,
2025-01-07T17:55:37.5203842Z         time_explosion,
2025-01-07T17:55:37.5203909Z         v_inner,
2025-01-07T17:55:37.5203980Z         v_outer,
2025-01-07T17:55:37.5204047Z         velocity
2025-01-07T17:55:37.5204118Z     ):
2025-01-07T17:55:37.5204184Z         """
2025-01-07T17:55:37.5204418Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5204488Z     
2025-01-07T17:55:37.5204565Z         Parameters
2025-01-07T17:55:37.5204634Z         ----------
2025-01-07T17:55:37.5204728Z         last_interaction_type : np.array
2025-01-07T17:55:37.5204878Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5204998Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5205095Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5205245Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5205340Z             absorption (interaction in)
2025-01-07T17:55:37.5205437Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5205580Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5205669Z             emission (interaction out)
2025-01-07T17:55:37.5205766Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5206028Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5206127Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5206274Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5206362Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5206518Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5206611Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5206772Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5206853Z             unit of Hz
2025-01-07T17:55:37.5206951Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5207077Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5207164Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5207273Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5207385Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5207511Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5207620Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5207739Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5207841Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5207972Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5208061Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5208276Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5208375Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5208488Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5208553Z         """
2025-01-07T17:55:37.5208729Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5208833Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5208930Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5208996Z             {
2025-01-07T17:55:37.5209077Z                 "nus": packet_nus,
2025-01-07T17:55:37.5209207Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5209305Z                 "energies": packet_energies,
2025-01-07T17:55:37.5209421Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5209572Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5209714Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5209856Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5209972Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5210038Z             }
2025-01-07T17:55:37.5210108Z         )
2025-01-07T17:55:37.5210173Z     
2025-01-07T17:55:37.5210258Z         # Save other properties
2025-01-07T17:55:37.5210343Z         self.lines_df = lines_df
2025-01-07T17:55:37.5210428Z         self.r_inner = r_inner
2025-01-07T17:55:37.5210567Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5210704Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5210836Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5210947Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5211043Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5211116Z         )
2025-01-07T17:55:37.5211230Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5211313Z         self.t_inner = t_inner
2025-01-07T17:55:37.5211426Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5211521Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5211603Z         self.v_inner = v_inner
2025-01-07T17:55:37.5211679Z         self.v_outer = v_outer
2025-01-07T17:55:37.5211834Z     
2025-01-07T17:55:37.5212067Z         # First check if both options are provided
2025-01-07T17:55:37.5212283Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5212366Z >           raise ValueError(
2025-01-07T17:55:37.5212507Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5212672Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5212747Z             )
2025-01-07T17:55:37.5213097Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5213113Z 
2025-01-07T17:55:37.5213284Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5213519Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-07T17:55:37.5213524Z 
2025-01-07T17:55:37.5213791Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5214008Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5214235Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5214240Z 
2025-01-07T17:55:37.5214330Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5214443Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5214513Z         """
2025-01-07T17:55:37.5214600Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5214788Z     
2025-01-07T17:55:37.5214865Z         Parameters
2025-01-07T17:55:37.5214935Z         ----------
2025-01-07T17:55:37.5215083Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5215161Z             Simulation object.
2025-01-07T17:55:37.5215234Z     
2025-01-07T17:55:37.5215301Z         Returns
2025-01-07T17:55:37.5215373Z         -------
2025-01-07T17:55:37.5215507Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5215578Z         """
2025-01-07T17:55:37.5215710Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5215715Z 
2025-01-07T17:55:37.5215863Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5215971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5216135Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5216279Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5216498Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5216635Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5216834Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5216909Z     return cls(
2025-01-07T17:55:37.5217017Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5217024Z 
2025-01-07T17:55:37.5217300Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5217440Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5217620Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5217796Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5217997Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5218106Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5218290Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5218390Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5218550Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5218793Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5218904Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5218909Z 
2025-01-07T17:55:37.5218990Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5219155Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5219264Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5219461Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5219535Z        0.00025518])
2025-01-07T17:55:37.5219703Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5219894Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5220022Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5220153Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5220367Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5220475Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5220724Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5220871Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5221065Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5221284Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5221371Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5221492Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5221581Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5221744Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5222023Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5222157Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5222308Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5222476Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5222591Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5222759Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5222890Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5222998Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5223077Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5223082Z 
2025-01-07T17:55:37.5223151Z     def __init__(
2025-01-07T17:55:37.5223227Z         self,
2025-01-07T17:55:37.5223311Z         last_interaction_type,
2025-01-07T17:55:37.5223402Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5223489Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5223577Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5223657Z         last_interaction_in_r,
2025-01-07T17:55:37.5223730Z         lines_df,
2025-01-07T17:55:37.5223802Z         packet_nus,
2025-01-07T17:55:37.5223884Z         packet_energies,
2025-01-07T17:55:37.5223957Z         r_inner,
2025-01-07T17:55:37.5224043Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5224240Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5224338Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5224425Z         spectrum_wavelength,
2025-01-07T17:55:37.5224494Z         t_inner,
2025-01-07T17:55:37.5224577Z         time_of_simulation,
2025-01-07T17:55:37.5224651Z         time_explosion,
2025-01-07T17:55:37.5224846Z         v_inner,
2025-01-07T17:55:37.5224915Z         v_outer,
2025-01-07T17:55:37.5224986Z         velocity
2025-01-07T17:55:37.5225052Z     ):
2025-01-07T17:55:37.5225127Z         """
2025-01-07T17:55:37.5225361Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5225432Z     
2025-01-07T17:55:37.5225503Z         Parameters
2025-01-07T17:55:37.5225579Z         ----------
2025-01-07T17:55:37.5225669Z         last_interaction_type : np.array
2025-01-07T17:55:37.5225828Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5225954Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5226052Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5226202Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5226289Z             absorption (interaction in)
2025-01-07T17:55:37.5226392Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5226536Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5226632Z             emission (interaction out)
2025-01-07T17:55:37.5226730Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5226883Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5226977Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5227133Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5227221Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5227489Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5227584Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5227747Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5227823Z             unit of Hz
2025-01-07T17:55:37.5227918Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5228052Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5228141Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5228257Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5228366Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5228494Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5228598Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5228725Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5228831Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5228966Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5229055Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5229175Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5229274Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5229383Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5229458Z         """
2025-01-07T17:55:37.5229634Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5229743Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5229833Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5229904Z             {
2025-01-07T17:55:37.5229983Z                 "nus": packet_nus,
2025-01-07T17:55:37.5230113Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5230202Z                 "energies": packet_energies,
2025-01-07T17:55:37.5230328Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5230481Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5230624Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5230770Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5230966Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5231037Z             }
2025-01-07T17:55:37.5231103Z         )
2025-01-07T17:55:37.5231172Z     
2025-01-07T17:55:37.5231254Z         # Save other properties
2025-01-07T17:55:37.5231341Z         self.lines_df = lines_df
2025-01-07T17:55:37.5231421Z         self.r_inner = r_inner
2025-01-07T17:55:37.5231565Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5231698Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5231837Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5232052Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5232150Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5232220Z         )
2025-01-07T17:55:37.5232333Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5232418Z         self.t_inner = t_inner
2025-01-07T17:55:37.5232525Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5232627Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5232705Z         self.v_inner = v_inner
2025-01-07T17:55:37.5232784Z         self.v_outer = v_outer
2025-01-07T17:55:37.5232849Z     
2025-01-07T17:55:37.5232952Z         # First check if both options are provided
2025-01-07T17:55:37.5233124Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5233208Z >           raise ValueError(
2025-01-07T17:55:37.5233347Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5233628Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5233703Z             )
2025-01-07T17:55:37.5234058Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5234064Z 
2025-01-07T17:55:37.5234243Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5234475Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-07T17:55:37.5234480Z 
2025-01-07T17:55:37.5234756Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5234972Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5235206Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5235214Z 
2025-01-07T17:55:37.5235306Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5235419Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5235495Z         """
2025-01-07T17:55:37.5235581Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5235653Z     
2025-01-07T17:55:37.5235725Z         Parameters
2025-01-07T17:55:37.5235800Z         ----------
2025-01-07T17:55:37.5235945Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5236032Z             Simulation object.
2025-01-07T17:55:37.5236098Z     
2025-01-07T17:55:37.5236171Z         Returns
2025-01-07T17:55:37.5236240Z         -------
2025-01-07T17:55:37.5236376Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5236443Z         """
2025-01-07T17:55:37.5236581Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5236586Z 
2025-01-07T17:55:37.5236738Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5236850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5237013Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5237159Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5237379Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5237514Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5237831Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5237904Z     return cls(
2025-01-07T17:55:37.5238014Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5238019Z 
2025-01-07T17:55:37.5238293Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5238438Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5238618Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5238796Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5238997Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5239097Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5239282Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5239380Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5239545Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5239657Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5239775Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5239779Z 
2025-01-07T17:55:37.5239860Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5240027Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5240239Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5240432Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5240506Z        0.00025518])
2025-01-07T17:55:37.5240661Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5240860Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5240983Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5241116Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5241316Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5241425Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5241670Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5241817Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5242190Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5242311Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5242402Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5242515Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5242614Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5242769Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5242945Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5243071Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5243220Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5243393Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5243513Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5243674Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5243800Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5244074Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5244149Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5244154Z 
2025-01-07T17:55:37.5244228Z     def __init__(
2025-01-07T17:55:37.5244296Z         self,
2025-01-07T17:55:37.5244384Z         last_interaction_type,
2025-01-07T17:55:37.5244477Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5244563Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5244651Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5244732Z         last_interaction_in_r,
2025-01-07T17:55:37.5244814Z         lines_df,
2025-01-07T17:55:37.5244886Z         packet_nus,
2025-01-07T17:55:37.5244971Z         packet_energies,
2025-01-07T17:55:37.5245039Z         r_inner,
2025-01-07T17:55:37.5245130Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5245308Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5245411Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5245495Z         spectrum_wavelength,
2025-01-07T17:55:37.5245569Z         t_inner,
2025-01-07T17:55:37.5245646Z         time_of_simulation,
2025-01-07T17:55:37.5245726Z         time_explosion,
2025-01-07T17:55:37.5245794Z         v_inner,
2025-01-07T17:55:37.5245867Z         v_outer,
2025-01-07T17:55:37.5245937Z         velocity
2025-01-07T17:55:37.5246008Z     ):
2025-01-07T17:55:37.5246078Z         """
2025-01-07T17:55:37.5246310Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5246493Z     
2025-01-07T17:55:37.5246564Z         Parameters
2025-01-07T17:55:37.5246640Z         ----------
2025-01-07T17:55:37.5246731Z         last_interaction_type : np.array
2025-01-07T17:55:37.5246887Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5247001Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5247102Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5247249Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5247342Z             absorption (interaction in)
2025-01-07T17:55:37.5247440Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5247588Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5247676Z             emission (interaction out)
2025-01-07T17:55:37.5247776Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5247930Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5248026Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5248182Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5248263Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5248423Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5248512Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5248680Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5248752Z             unit of Hz
2025-01-07T17:55:37.5248851Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5248978Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5249069Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5249181Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5249293Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5249421Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5249529Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5249654Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5249752Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5249893Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5249976Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5250193Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5250287Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5250401Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5250468Z         """
2025-01-07T17:55:37.5250644Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5250747Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5250842Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5250918Z             {
2025-01-07T17:55:37.5250996Z                 "nus": packet_nus,
2025-01-07T17:55:37.5251125Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5251215Z                 "energies": packet_energies,
2025-01-07T17:55:37.5251337Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5251482Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5251629Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5251768Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5251885Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5252102Z             }
2025-01-07T17:55:37.5252205Z         )
2025-01-07T17:55:37.5252272Z     
2025-01-07T17:55:37.5252364Z         # Save other properties
2025-01-07T17:55:37.5252453Z         self.lines_df = lines_df
2025-01-07T17:55:37.5252653Z         self.r_inner = r_inner
2025-01-07T17:55:37.5252804Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5252939Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5253075Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5253181Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5253282Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5253352Z         )
2025-01-07T17:55:37.5253472Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5253551Z         self.t_inner = t_inner
2025-01-07T17:55:37.5253666Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5253761Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5253842Z         self.v_inner = v_inner
2025-01-07T17:55:37.5253918Z         self.v_outer = v_outer
2025-01-07T17:55:37.5253990Z     
2025-01-07T17:55:37.5254096Z         # First check if both options are provided
2025-01-07T17:55:37.5254274Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5254358Z >           raise ValueError(
2025-01-07T17:55:37.5254494Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5254660Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5254727Z             )
2025-01-07T17:55:37.5255086Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5255091Z 
2025-01-07T17:55:37.5255264Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5255502Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-07T17:55:37.5255506Z 
2025-01-07T17:55:37.5255784Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5256002Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5256238Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5256243Z 
2025-01-07T17:55:37.5256330Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5256450Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5256518Z         """
2025-01-07T17:55:37.5256721Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5256786Z     
2025-01-07T17:55:37.5256863Z         Parameters
2025-01-07T17:55:37.5256933Z         ----------
2025-01-07T17:55:37.5257080Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5257158Z             Simulation object.
2025-01-07T17:55:37.5257227Z     
2025-01-07T17:55:37.5257300Z         Returns
2025-01-07T17:55:37.5257370Z         -------
2025-01-07T17:55:37.5257506Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5257573Z         """
2025-01-07T17:55:37.5257717Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5257721Z 
2025-01-07T17:55:37.5257864Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5257977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5258136Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5258287Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5258502Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5258642Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5258842Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5258918Z     return cls(
2025-01-07T17:55:37.5259028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5259033Z 
2025-01-07T17:55:37.5259390Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5259533Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5259708Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5259889Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5260089Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5260197Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5260381Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5260481Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5260650Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5260762Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5260879Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5260885Z 
2025-01-07T17:55:37.5260961Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5261127Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5261233Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5261430Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5261501Z        0.00025518])
2025-01-07T17:55:37.5261658Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5261850Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5262084Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5262219Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5262422Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5262534Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5262773Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5262924Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5263107Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5263342Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5263432Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5263544Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5263638Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5263789Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5263964Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5264089Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5264241Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5264402Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5264527Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5264688Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5264818Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5264924Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5265002Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5265007Z 
2025-01-07T17:55:37.5265081Z     def __init__(
2025-01-07T17:55:37.5265151Z         self,
2025-01-07T17:55:37.5265240Z         last_interaction_type,
2025-01-07T17:55:37.5265433Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5265526Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5265608Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5265693Z         last_interaction_in_r,
2025-01-07T17:55:37.5265762Z         lines_df,
2025-01-07T17:55:37.5265839Z         packet_nus,
2025-01-07T17:55:37.5265916Z         packet_energies,
2025-01-07T17:55:37.5265990Z         r_inner,
2025-01-07T17:55:37.5266078Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5266259Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5266353Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5266441Z         spectrum_wavelength,
2025-01-07T17:55:37.5266515Z         t_inner,
2025-01-07T17:55:37.5266593Z         time_of_simulation,
2025-01-07T17:55:37.5266673Z         time_explosion,
2025-01-07T17:55:37.5266744Z         v_inner,
2025-01-07T17:55:37.5266816Z         v_outer,
2025-01-07T17:55:37.5266890Z         velocity
2025-01-07T17:55:37.5266961Z     ):
2025-01-07T17:55:37.5267030Z         """
2025-01-07T17:55:37.5267261Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5267328Z     
2025-01-07T17:55:37.5267407Z         Parameters
2025-01-07T17:55:37.5267478Z         ----------
2025-01-07T17:55:37.5267575Z         last_interaction_type : np.array
2025-01-07T17:55:37.5267727Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5267849Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5267946Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5268095Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5268189Z             absorption (interaction in)
2025-01-07T17:55:37.5268287Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5268437Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5268527Z             emission (interaction out)
2025-01-07T17:55:37.5268625Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5268774Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5268874Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5269022Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5269214Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5269374Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5269467Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5269624Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5269700Z             unit of Hz
2025-01-07T17:55:37.5269803Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5269931Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5270019Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5270132Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5270243Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5270364Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5270475Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5270595Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5270700Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5270832Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5270918Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5271038Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5271138Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5271253Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5271321Z         """
2025-01-07T17:55:37.5271500Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5271682Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5271776Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5271844Z             {
2025-01-07T17:55:37.5272023Z                 "nus": packet_nus,
2025-01-07T17:55:37.5272148Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5272250Z                 "energies": packet_energies,
2025-01-07T17:55:37.5272368Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5272521Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5272661Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5272802Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5272919Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5272988Z             }
2025-01-07T17:55:37.5273060Z         )
2025-01-07T17:55:37.5273125Z     
2025-01-07T17:55:37.5273213Z         # Save other properties
2025-01-07T17:55:37.5273294Z         self.lines_df = lines_df
2025-01-07T17:55:37.5273375Z         self.r_inner = r_inner
2025-01-07T17:55:37.5273514Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5273656Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5273790Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5273900Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5273996Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5274067Z         )
2025-01-07T17:55:37.5274183Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5274266Z         self.t_inner = t_inner
2025-01-07T17:55:37.5274379Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5274471Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5274556Z         self.v_inner = v_inner
2025-01-07T17:55:37.5274631Z         self.v_outer = v_outer
2025-01-07T17:55:37.5274701Z     
2025-01-07T17:55:37.5274801Z         # First check if both options are provided
2025-01-07T17:55:37.5275007Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5275088Z >           raise ValueError(
2025-01-07T17:55:37.5275347Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5275507Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5275579Z             )
2025-01-07T17:55:37.5275928Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5275939Z 
2025-01-07T17:55:37.5276113Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5276351Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-07T17:55:37.5276359Z 
2025-01-07T17:55:37.5276630Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5276847Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5277076Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5277084Z 
2025-01-07T17:55:37.5277176Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5277287Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5277359Z         """
2025-01-07T17:55:37.5277450Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5277516Z     
2025-01-07T17:55:37.5277592Z         Parameters
2025-01-07T17:55:37.5277663Z         ----------
2025-01-07T17:55:37.5277814Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5277892Z             Simulation object.
2025-01-07T17:55:37.5278071Z     
2025-01-07T17:55:37.5278139Z         Returns
2025-01-07T17:55:37.5278213Z         -------
2025-01-07T17:55:37.5278343Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5278414Z         """
2025-01-07T17:55:37.5282996Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5283025Z 
2025-01-07T17:55:37.5283226Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5283365Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5283549Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5283713Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5283941Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5284089Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5284303Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5284383Z     return cls(
2025-01-07T17:55:37.5284503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5284509Z 
2025-01-07T17:55:37.5284796Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5284949Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5285133Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5285317Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5285520Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5285632Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5285822Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5285917Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5286100Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5286218Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5286338Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5286343Z 
2025-01-07T17:55:37.5286425Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5286771Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5286883Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5287090Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5287161Z        0.00025518])
2025-01-07T17:55:37.5287325Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5287530Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5287659Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5287798Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5288008Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5288125Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5288372Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5288535Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5288725Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5288851Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5288947Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5289060Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5289268Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5289428Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5289610Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5289736Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5289897Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5290069Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5290196Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5290359Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5290492Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5290610Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5290691Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5290696Z 
2025-01-07T17:55:37.5290774Z     def __init__(
2025-01-07T17:55:37.5290845Z         self,
2025-01-07T17:55:37.5290935Z         last_interaction_type,
2025-01-07T17:55:37.5291023Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5291117Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5291206Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5291296Z         last_interaction_in_r,
2025-01-07T17:55:37.5291367Z         lines_df,
2025-01-07T17:55:37.5291448Z         packet_nus,
2025-01-07T17:55:37.5291527Z         packet_energies,
2025-01-07T17:55:37.5291604Z         r_inner,
2025-01-07T17:55:37.5291689Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5291880Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5292168Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5292263Z         spectrum_wavelength,
2025-01-07T17:55:37.5292351Z         t_inner,
2025-01-07T17:55:37.5292433Z         time_of_simulation,
2025-01-07T17:55:37.5292517Z         time_explosion,
2025-01-07T17:55:37.5292588Z         v_inner,
2025-01-07T17:55:37.5292666Z         v_outer,
2025-01-07T17:55:37.5292735Z         velocity
2025-01-07T17:55:37.5292810Z     ):
2025-01-07T17:55:37.5292880Z         """
2025-01-07T17:55:37.5293126Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5293317Z     
2025-01-07T17:55:37.5293400Z         Parameters
2025-01-07T17:55:37.5293474Z         ----------
2025-01-07T17:55:37.5293576Z         last_interaction_type : np.array
2025-01-07T17:55:37.5293733Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5293859Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5293966Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5294116Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5294216Z             absorption (interaction in)
2025-01-07T17:55:37.5294317Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5294463Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5294551Z             emission (interaction out)
2025-01-07T17:55:37.5294652Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5294804Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5294910Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5295060Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5295151Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5295310Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5295406Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5295574Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5295777Z             unit of Hz
2025-01-07T17:55:37.5295880Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5296011Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5296103Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5296216Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5296332Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5296464Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5296579Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5296701Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5296808Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5296947Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5297038Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5297167Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5297266Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5297384Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5297454Z         """
2025-01-07T17:55:37.5297637Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5297741Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5297839Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5297912Z             {
2025-01-07T17:55:37.5297998Z                 "nus": packet_nus,
2025-01-07T17:55:37.5298121Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5298219Z                 "energies": packet_energies,
2025-01-07T17:55:37.5298341Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5298498Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5298648Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5298792Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5298910Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5298985Z             }
2025-01-07T17:55:37.5299059Z         )
2025-01-07T17:55:37.5299126Z     
2025-01-07T17:55:37.5299215Z         # Save other properties
2025-01-07T17:55:37.5299299Z         self.lines_df = lines_df
2025-01-07T17:55:37.5299523Z         self.r_inner = r_inner
2025-01-07T17:55:37.5299668Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5299811Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5299945Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5300063Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5300166Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5300238Z         )
2025-01-07T17:55:37.5300361Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5300445Z         self.t_inner = t_inner
2025-01-07T17:55:37.5300561Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5300655Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5300740Z         self.v_inner = v_inner
2025-01-07T17:55:37.5300817Z         self.v_outer = v_outer
2025-01-07T17:55:37.5300888Z     
2025-01-07T17:55:37.5300994Z         # First check if both options are provided
2025-01-07T17:55:37.5301172Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5301253Z >           raise ValueError(
2025-01-07T17:55:37.5301400Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5301563Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5301638Z             )
2025-01-07T17:55:37.5302105Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5302223Z 
2025-01-07T17:55:37.5302403Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5302652Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-07T17:55:37.5302657Z 
2025-01-07T17:55:37.5302930Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5303158Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5303392Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5303396Z 
2025-01-07T17:55:37.5303491Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5303610Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5303680Z         """
2025-01-07T17:55:37.5303775Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5303843Z     
2025-01-07T17:55:37.5303926Z         Parameters
2025-01-07T17:55:37.5303999Z         ----------
2025-01-07T17:55:37.5304147Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5304231Z             Simulation object.
2025-01-07T17:55:37.5304301Z     
2025-01-07T17:55:37.5304370Z         Returns
2025-01-07T17:55:37.5304446Z         -------
2025-01-07T17:55:37.5304578Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5304655Z         """
2025-01-07T17:55:37.5304790Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5304794Z 
2025-01-07T17:55:37.5304944Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5305500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5305668Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5305815Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5306040Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5306178Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5306377Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5306454Z     return cls(
2025-01-07T17:55:37.5306560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5306698Z 
2025-01-07T17:55:37.5306980Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5307121Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5307300Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5307479Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5307687Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5307798Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5307983Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5308086Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5308252Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5308371Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5308484Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5308488Z 
2025-01-07T17:55:37.5308572Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5308738Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5308852Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5309053Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5309122Z        0.00025518])
2025-01-07T17:55:37.5309369Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5309565Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5309692Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5309820Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5310034Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5310138Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5310383Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5310524Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5310724Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5310844Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5310931Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5311048Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5311139Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5311296Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5311466Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5311599Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5311747Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5312077Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5312237Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5312406Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5312543Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5312650Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5312732Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5312737Z 
2025-01-07T17:55:37.5312809Z     def __init__(
2025-01-07T17:55:37.5312882Z         self,
2025-01-07T17:55:37.5313088Z         last_interaction_type,
2025-01-07T17:55:37.5313183Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5313270Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5313361Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5313441Z         last_interaction_in_r,
2025-01-07T17:55:37.5313516Z         lines_df,
2025-01-07T17:55:37.5313589Z         packet_nus,
2025-01-07T17:55:37.5313671Z         packet_energies,
2025-01-07T17:55:37.5313745Z         r_inner,
2025-01-07T17:55:37.5313831Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5314019Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5314116Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5314204Z         spectrum_wavelength,
2025-01-07T17:55:37.5314274Z         t_inner,
2025-01-07T17:55:37.5314358Z         time_of_simulation,
2025-01-07T17:55:37.5314433Z         time_explosion,
2025-01-07T17:55:37.5314507Z         v_inner,
2025-01-07T17:55:37.5314578Z         v_outer,
2025-01-07T17:55:37.5314652Z         velocity
2025-01-07T17:55:37.5314720Z     ):
2025-01-07T17:55:37.5314792Z         """
2025-01-07T17:55:37.5315021Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5315093Z     
2025-01-07T17:55:37.5315165Z         Parameters
2025-01-07T17:55:37.5315243Z         ----------
2025-01-07T17:55:37.5315338Z         last_interaction_type : np.array
2025-01-07T17:55:37.5315494Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5315724Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5315822Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5315972Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5316060Z             absorption (interaction in)
2025-01-07T17:55:37.5316164Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5316304Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5316398Z             emission (interaction out)
2025-01-07T17:55:37.5316493Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5316647Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5316740Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5316893Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5316981Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5317141Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5317243Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5317402Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5317479Z             unit of Hz
2025-01-07T17:55:37.5317576Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5317709Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5317797Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5317913Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5318022Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5318151Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5318259Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5318389Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5318494Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5318633Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5318721Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5318842Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5318943Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5319057Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5319129Z         """
2025-01-07T17:55:37.5319389Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5319500Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5319591Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5319664Z             {
2025-01-07T17:55:37.5319743Z                 "nus": packet_nus,
2025-01-07T17:55:37.5319874Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5319965Z                 "energies": packet_energies,
2025-01-07T17:55:37.5320087Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5320244Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5320386Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5320533Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5320645Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5320727Z             }
2025-01-07T17:55:37.5320794Z         )
2025-01-07T17:55:37.5320864Z     
2025-01-07T17:55:37.5320948Z         # Save other properties
2025-01-07T17:55:37.5321034Z         self.lines_df = lines_df
2025-01-07T17:55:37.5321113Z         self.r_inner = r_inner
2025-01-07T17:55:37.5321259Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5321393Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5321533Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5321747Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5321842Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5321914Z         )
2025-01-07T17:55:37.5322218Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5322306Z         self.t_inner = t_inner
2025-01-07T17:55:37.5322416Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5322521Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5322599Z         self.v_inner = v_inner
2025-01-07T17:55:37.5322681Z         self.v_outer = v_outer
2025-01-07T17:55:37.5322746Z     
2025-01-07T17:55:37.5322851Z         # First check if both options are provided
2025-01-07T17:55:37.5323024Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5323109Z >           raise ValueError(
2025-01-07T17:55:37.5323246Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5323417Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5323492Z             )
2025-01-07T17:55:37.5323841Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5323847Z 
2025-01-07T17:55:37.5324026Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5324265Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-07T17:55:37.5324270Z 
2025-01-07T17:55:37.5324549Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5324766Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5325007Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5325012Z 
2025-01-07T17:55:37.5325106Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5325222Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5325295Z         """
2025-01-07T17:55:37.5325380Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5325451Z     
2025-01-07T17:55:37.5325523Z         Parameters
2025-01-07T17:55:37.5325600Z         ----------
2025-01-07T17:55:37.5325745Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5325961Z             Simulation object.
2025-01-07T17:55:37.5326030Z     
2025-01-07T17:55:37.5326104Z         Returns
2025-01-07T17:55:37.5326175Z         -------
2025-01-07T17:55:37.5326310Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5326376Z         """
2025-01-07T17:55:37.5326515Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5326519Z 
2025-01-07T17:55:37.5326664Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5326778Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5326940Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5327090Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5327304Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5327441Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5327643Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5327719Z     return cls(
2025-01-07T17:55:37.5327830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5327835Z 
2025-01-07T17:55:37.5328111Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5328255Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5328429Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5328719Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5328920Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5329024Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5329210Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5329313Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5329482Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5329591Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5329707Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5329712Z 
2025-01-07T17:55:37.5329789Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5329957Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5330066Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5330265Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5330334Z        0.00025518])
2025-01-07T17:55:37.5330494Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5330692Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5330817Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5330950Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5331153Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5331260Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5331503Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5331653Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5331839Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5332092Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5332219Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5332330Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5332545Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5332699Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5332875Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5332998Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5333151Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5333316Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5333450Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5333608Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5333739Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5333852Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5333931Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5333936Z 
2025-01-07T17:55:37.5334011Z     def __init__(
2025-01-07T17:55:37.5334082Z         self,
2025-01-07T17:55:37.5334169Z         last_interaction_type,
2025-01-07T17:55:37.5334256Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5334347Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5334431Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5334517Z         last_interaction_in_r,
2025-01-07T17:55:37.5334587Z         lines_df,
2025-01-07T17:55:37.5334779Z         packet_nus,
2025-01-07T17:55:37.5334857Z         packet_energies,
2025-01-07T17:55:37.5334935Z         r_inner,
2025-01-07T17:55:37.5335019Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5335204Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5335304Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5335387Z         spectrum_wavelength,
2025-01-07T17:55:37.5335468Z         t_inner,
2025-01-07T17:55:37.5335546Z         time_of_simulation,
2025-01-07T17:55:37.5335629Z         time_explosion,
2025-01-07T17:55:37.5335698Z         v_inner,
2025-01-07T17:55:37.5335770Z         v_outer,
2025-01-07T17:55:37.5335839Z         velocity
2025-01-07T17:55:37.5335910Z     ):
2025-01-07T17:55:37.5335976Z         """
2025-01-07T17:55:37.5336205Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5336272Z     
2025-01-07T17:55:37.5336348Z         Parameters
2025-01-07T17:55:37.5336424Z         ----------
2025-01-07T17:55:37.5336521Z         last_interaction_type : np.array
2025-01-07T17:55:37.5336671Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5336791Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5336893Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5337039Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5337135Z             absorption (interaction in)
2025-01-07T17:55:37.5337234Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5337375Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5337465Z             emission (interaction out)
2025-01-07T17:55:37.5337564Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5337715Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5337813Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5337966Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5338059Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5338220Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5338320Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5338483Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5338639Z             unit of Hz
2025-01-07T17:55:37.5338753Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5338881Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5338972Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5339082Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5339195Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5339317Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5339432Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5339553Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5339656Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5339793Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5339881Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5340006Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5340105Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5340219Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5340287Z         """
2025-01-07T17:55:37.5340466Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5340570Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5340666Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5340734Z             {
2025-01-07T17:55:37.5340818Z                 "nus": packet_nus,
2025-01-07T17:55:37.5341191Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5341286Z                 "energies": packet_energies,
2025-01-07T17:55:37.5341404Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5341559Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5341706Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5341849Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5342075Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5342144Z             }
2025-01-07T17:55:37.5342216Z         )
2025-01-07T17:55:37.5342281Z     
2025-01-07T17:55:37.5342372Z         # Save other properties
2025-01-07T17:55:37.5342453Z         self.lines_df = lines_df
2025-01-07T17:55:37.5342538Z         self.r_inner = r_inner
2025-01-07T17:55:37.5342682Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5342821Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5342953Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5343064Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5343160Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5343233Z         )
2025-01-07T17:55:37.5343357Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5343435Z         self.t_inner = t_inner
2025-01-07T17:55:37.5343549Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5343642Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5343725Z         self.v_inner = v_inner
2025-01-07T17:55:37.5343801Z         self.v_outer = v_outer
2025-01-07T17:55:37.5343872Z     
2025-01-07T17:55:37.5343973Z         # First check if both options are provided
2025-01-07T17:55:37.5344150Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5344234Z >           raise ValueError(
2025-01-07T17:55:37.5344377Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5344538Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5344610Z             )
2025-01-07T17:55:37.5344962Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5345111Z 
2025-01-07T17:55:37.5345288Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5345525Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-07T17:55:37.5345530Z 
2025-01-07T17:55:37.5345798Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5346017Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5346256Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5346261Z 
2025-01-07T17:55:37.5346358Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5346473Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5346541Z         """
2025-01-07T17:55:37.5346632Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5346702Z     
2025-01-07T17:55:37.5346779Z         Parameters
2025-01-07T17:55:37.5346850Z         ----------
2025-01-07T17:55:37.5346998Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5347075Z             Simulation object.
2025-01-07T17:55:37.5347147Z     
2025-01-07T17:55:37.5347216Z         Returns
2025-01-07T17:55:37.5347293Z         -------
2025-01-07T17:55:37.5347423Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5347496Z         """
2025-01-07T17:55:37.5347627Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5347740Z 
2025-01-07T17:55:37.5347889Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5348000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5348164Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5348313Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5348529Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5348668Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5348864Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5348942Z     return cls(
2025-01-07T17:55:37.5349049Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5349054Z 
2025-01-07T17:55:37.5349332Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5349475Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5349655Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5349837Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5350034Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5350143Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5350323Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5350424Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5350587Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5350702Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5350812Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5350820Z 
2025-01-07T17:55:37.5350901Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5351066Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5351176Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5351373Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5351524Z        0.00025518])
2025-01-07T17:55:37.5351686Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5351881Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5352114Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5352244Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5352450Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5352557Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5352802Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5352948Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5353135Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5353261Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5353346Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5353458Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5353548Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5353704Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5353876Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5354116Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5354265Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5354435Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5354558Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5354720Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5354853Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5354960Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5355039Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5355044Z 
2025-01-07T17:55:37.5355114Z     def __init__(
2025-01-07T17:55:37.5355186Z         self,
2025-01-07T17:55:37.5355270Z         last_interaction_type,
2025-01-07T17:55:37.5355361Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5355452Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5355540Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5355625Z         last_interaction_in_r,
2025-01-07T17:55:37.5355695Z         lines_df,
2025-01-07T17:55:37.5355772Z         packet_nus,
2025-01-07T17:55:37.5355850Z         packet_energies,
2025-01-07T17:55:37.5355923Z         r_inner,
2025-01-07T17:55:37.5356008Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5356198Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5356294Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5356383Z         spectrum_wavelength,
2025-01-07T17:55:37.5356452Z         t_inner,
2025-01-07T17:55:37.5356535Z         time_of_simulation,
2025-01-07T17:55:37.5356611Z         time_explosion,
2025-01-07T17:55:37.5356684Z         v_inner,
2025-01-07T17:55:37.5356754Z         v_outer,
2025-01-07T17:55:37.5356829Z         velocity
2025-01-07T17:55:37.5356898Z     ):
2025-01-07T17:55:37.5356973Z         """
2025-01-07T17:55:37.5357199Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5357270Z     
2025-01-07T17:55:37.5357350Z         Parameters
2025-01-07T17:55:37.5357421Z         ----------
2025-01-07T17:55:37.5357519Z         last_interaction_type : np.array
2025-01-07T17:55:37.5357669Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5357903Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5358000Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5358150Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5358238Z             absorption (interaction in)
2025-01-07T17:55:37.5358341Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5358481Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5358572Z             emission (interaction out)
2025-01-07T17:55:37.5358670Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5358826Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5358924Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5359071Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5359158Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5359318Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5359412Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5359572Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5359651Z             unit of Hz
2025-01-07T17:55:37.5359746Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5359886Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5359972Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5360165Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5360272Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5360401Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5360511Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5360633Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5360738Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5360877Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5360964Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5361084Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5361183Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5361293Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5361366Z         """
2025-01-07T17:55:37.5361540Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5361653Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5361743Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5361816Z             {
2025-01-07T17:55:37.5361895Z                 "nus": packet_nus,
2025-01-07T17:55:37.5362218Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5362318Z                 "energies": packet_energies,
2025-01-07T17:55:37.5362442Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5362597Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5362739Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5362881Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5362993Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5363066Z             }
2025-01-07T17:55:37.5363132Z         )
2025-01-07T17:55:37.5363207Z     
2025-01-07T17:55:37.5363290Z         # Save other properties
2025-01-07T17:55:37.5363379Z         self.lines_df = lines_df
2025-01-07T17:55:37.5363458Z         self.r_inner = r_inner
2025-01-07T17:55:37.5363605Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5363746Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5363878Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5364113Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5364209Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5364281Z         )
2025-01-07T17:55:37.5364397Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5364482Z         self.t_inner = t_inner
2025-01-07T17:55:37.5364590Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5364689Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5364771Z         self.v_inner = v_inner
2025-01-07T17:55:37.5364854Z         self.v_outer = v_outer
2025-01-07T17:55:37.5364920Z     
2025-01-07T17:55:37.5365027Z         # First check if both options are provided
2025-01-07T17:55:37.5365196Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5365281Z >           raise ValueError(
2025-01-07T17:55:37.5365427Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5365590Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5365663Z             )
2025-01-07T17:55:37.5366014Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5366020Z 
2025-01-07T17:55:37.5366197Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5366429Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-07T17:55:37.5366539Z 
2025-01-07T17:55:37.5366817Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5367036Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5367272Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5367276Z 
2025-01-07T17:55:37.5367374Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5367485Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5367558Z         """
2025-01-07T17:55:37.5367644Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5367714Z     
2025-01-07T17:55:37.5367787Z         Parameters
2025-01-07T17:55:37.5367863Z         ----------
2025-01-07T17:55:37.5368010Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5368094Z             Simulation object.
2025-01-07T17:55:37.5368159Z     
2025-01-07T17:55:37.5368237Z         Returns
2025-01-07T17:55:37.5368307Z         -------
2025-01-07T17:55:37.5368445Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5368517Z         """
2025-01-07T17:55:37.5368649Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5368654Z 
2025-01-07T17:55:37.5368800Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5368908Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5369075Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5369223Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5369441Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5369572Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5369775Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5369849Z     return cls(
2025-01-07T17:55:37.5369959Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5369964Z 
2025-01-07T17:55:37.5370241Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5370380Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5370560Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5370856Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5371059Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5371160Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5371349Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5371445Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5371618Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5371732Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5371846Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5371851Z 
2025-01-07T17:55:37.5372062Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5372276Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5372393Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5372585Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5372659Z        0.00025518])
2025-01-07T17:55:37.5372813Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5373014Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5373135Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5373389Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5373598Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5373701Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5373951Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5374097Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5374289Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5374403Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5374496Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5374603Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5374697Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5374853Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5375064Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5375193Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5375340Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5375514Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5375633Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5375800Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5375927Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5376039Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5376113Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5376127Z 
2025-01-07T17:55:37.5376198Z     def __init__(
2025-01-07T17:55:37.5376271Z         self,
2025-01-07T17:55:37.5376354Z         last_interaction_type,
2025-01-07T17:55:37.5376444Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5376530Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5376618Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5376697Z         last_interaction_in_r,
2025-01-07T17:55:37.5376886Z         lines_df,
2025-01-07T17:55:37.5376960Z         packet_nus,
2025-01-07T17:55:37.5377041Z         packet_energies,
2025-01-07T17:55:37.5377110Z         r_inner,
2025-01-07T17:55:37.5377198Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5377374Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5377473Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5377555Z         spectrum_wavelength,
2025-01-07T17:55:37.5377630Z         t_inner,
2025-01-07T17:55:37.5377707Z         time_of_simulation,
2025-01-07T17:55:37.5377792Z         time_explosion,
2025-01-07T17:55:37.5377865Z         v_inner,
2025-01-07T17:55:37.5377934Z         v_outer,
2025-01-07T17:55:37.5378008Z         velocity
2025-01-07T17:55:37.5378075Z     ):
2025-01-07T17:55:37.5378146Z         """
2025-01-07T17:55:37.5378375Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5378445Z     
2025-01-07T17:55:37.5378521Z         Parameters
2025-01-07T17:55:37.5378597Z         ----------
2025-01-07T17:55:37.5378688Z         last_interaction_type : np.array
2025-01-07T17:55:37.5378840Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5378956Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5379060Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5379204Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5379295Z             absorption (interaction in)
2025-01-07T17:55:37.5379480Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5379629Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5379720Z             emission (interaction out)
2025-01-07T17:55:37.5379815Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5379968Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5380064Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5380218Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5380300Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5380464Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5380554Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5380719Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5380790Z             unit of Hz
2025-01-07T17:55:37.5380894Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5381023Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5381115Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5381229Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5381337Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5381464Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5381574Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5381701Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5381797Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5382040Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5382127Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5382255Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5382349Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5382467Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5382539Z         """
2025-01-07T17:55:37.5382711Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5382822Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5382911Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5382986Z             {
2025-01-07T17:55:37.5383181Z                 "nus": packet_nus,
2025-01-07T17:55:37.5383312Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5383402Z                 "energies": packet_energies,
2025-01-07T17:55:37.5383523Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5383670Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5383818Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5383960Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5384076Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5384149Z             }
2025-01-07T17:55:37.5384216Z         )
2025-01-07T17:55:37.5384287Z     
2025-01-07T17:55:37.5384369Z         # Save other properties
2025-01-07T17:55:37.5384456Z         self.lines_df = lines_df
2025-01-07T17:55:37.5384534Z         self.r_inner = r_inner
2025-01-07T17:55:37.5384682Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5384816Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5384952Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5385061Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5385160Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5385227Z         )
2025-01-07T17:55:37.5385345Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5385532Z         self.t_inner = t_inner
2025-01-07T17:55:37.5385646Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5385741Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5385825Z         self.v_inner = v_inner
2025-01-07T17:55:37.5385906Z         self.v_outer = v_outer
2025-01-07T17:55:37.5385974Z     
2025-01-07T17:55:37.5386080Z         # First check if both options are provided
2025-01-07T17:55:37.5386253Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5386339Z >           raise ValueError(
2025-01-07T17:55:37.5386475Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5386643Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5386710Z             )
2025-01-07T17:55:37.5387069Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5387078Z 
2025-01-07T17:55:37.5387250Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5387486Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-07T17:55:37.5387491Z 
2025-01-07T17:55:37.5387766Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5387984Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5388220Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5388225Z 
2025-01-07T17:55:37.5388312Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5388429Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5388497Z         """
2025-01-07T17:55:37.5388589Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5388655Z     
2025-01-07T17:55:37.5388732Z         Parameters
2025-01-07T17:55:37.5388806Z         ----------
2025-01-07T17:55:37.5388956Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5389043Z             Simulation object.
2025-01-07T17:55:37.5389109Z     
2025-01-07T17:55:37.5389184Z         Returns
2025-01-07T17:55:37.5389257Z         -------
2025-01-07T17:55:37.5389398Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5389465Z         """
2025-01-07T17:55:37.5389685Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5389690Z 
2025-01-07T17:55:37.5389833Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5389950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5390108Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5390264Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5390475Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5390618Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5390819Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5390896Z     return cls(
2025-01-07T17:55:37.5391005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5391010Z 
2025-01-07T17:55:37.5391281Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5391425Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5391600Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5391783Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5392078Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5392185Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5392502Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5392600Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5392766Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5392877Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5392995Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5393000Z 
2025-01-07T17:55:37.5393076Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5393245Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5393351Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5393551Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5393624Z        0.00025518])
2025-01-07T17:55:37.5393779Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5393979Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5394099Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5394233Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5394438Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5394549Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5394792Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5394942Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5395129Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5395246Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5395338Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5395447Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5395542Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5395693Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5395867Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5396100Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5396254Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5396418Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5396542Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5396700Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5396835Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5396948Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5397021Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5397025Z 
2025-01-07T17:55:37.5397100Z     def __init__(
2025-01-07T17:55:37.5397168Z         self,
2025-01-07T17:55:37.5397256Z         last_interaction_type,
2025-01-07T17:55:37.5397347Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5397441Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5397523Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5397610Z         last_interaction_in_r,
2025-01-07T17:55:37.5397680Z         lines_df,
2025-01-07T17:55:37.5397756Z         packet_nus,
2025-01-07T17:55:37.5397833Z         packet_energies,
2025-01-07T17:55:37.5397907Z         r_inner,
2025-01-07T17:55:37.5397991Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5398171Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5398349Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5398432Z         spectrum_wavelength,
2025-01-07T17:55:37.5398506Z         t_inner,
2025-01-07T17:55:37.5398584Z         time_of_simulation,
2025-01-07T17:55:37.5398663Z         time_explosion,
2025-01-07T17:55:37.5398731Z         v_inner,
2025-01-07T17:55:37.5398804Z         v_outer,
2025-01-07T17:55:37.5398873Z         velocity
2025-01-07T17:55:37.5398949Z     ):
2025-01-07T17:55:37.5399016Z         """
2025-01-07T17:55:37.5399249Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5399316Z     
2025-01-07T17:55:37.5399392Z         Parameters
2025-01-07T17:55:37.5399464Z         ----------
2025-01-07T17:55:37.5399560Z         last_interaction_type : np.array
2025-01-07T17:55:37.5399714Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5399834Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5399941Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5400086Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5400180Z             absorption (interaction in)
2025-01-07T17:55:37.5400277Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5400425Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5400515Z             emission (interaction out)
2025-01-07T17:55:37.5400617Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5400766Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5400863Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5401014Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5401102Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5401262Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5401360Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5401527Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5401599Z             unit of Hz
2025-01-07T17:55:37.5401698Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5401826Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5401915Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5402324Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5402444Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5402573Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5402686Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5402811Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5402916Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5403052Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5403150Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5403276Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5403374Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5403489Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5403558Z         """
2025-01-07T17:55:37.5403742Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5403850Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5403946Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5404014Z             {
2025-01-07T17:55:37.5404099Z                 "nus": packet_nus,
2025-01-07T17:55:37.5404227Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5404324Z                 "energies": packet_energies,
2025-01-07T17:55:37.5404443Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5404708Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5404858Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5404996Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5405116Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5405184Z             }
2025-01-07T17:55:37.5405260Z         )
2025-01-07T17:55:37.5405326Z     
2025-01-07T17:55:37.5405415Z         # Save other properties
2025-01-07T17:55:37.5405499Z         self.lines_df = lines_df
2025-01-07T17:55:37.5405583Z         self.r_inner = r_inner
2025-01-07T17:55:37.5405723Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5405864Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5405997Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5406113Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5406220Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5406287Z         )
2025-01-07T17:55:37.5406408Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5406487Z         self.t_inner = t_inner
2025-01-07T17:55:37.5406600Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5406694Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5406781Z         self.v_inner = v_inner
2025-01-07T17:55:37.5406858Z         self.v_outer = v_outer
2025-01-07T17:55:37.5406927Z     
2025-01-07T17:55:37.5407029Z         # First check if both options are provided
2025-01-07T17:55:37.5407207Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5407289Z >           raise ValueError(
2025-01-07T17:55:37.5407432Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5407596Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5407672Z             )
2025-01-07T17:55:37.5408030Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5408036Z 
2025-01-07T17:55:37.5408209Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5408448Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-07T17:55:37.5408535Z 
2025-01-07T17:55:37.5408809Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5409027Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5409261Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5409266Z 
2025-01-07T17:55:37.5409360Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5409477Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5409549Z         """
2025-01-07T17:55:37.5409641Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5409708Z     
2025-01-07T17:55:37.5409785Z         Parameters
2025-01-07T17:55:37.5409860Z         ----------
2025-01-07T17:55:37.5410010Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5410089Z             Simulation object.
2025-01-07T17:55:37.5410166Z     
2025-01-07T17:55:37.5410236Z         Returns
2025-01-07T17:55:37.5410311Z         -------
2025-01-07T17:55:37.5410443Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5410515Z         """
2025-01-07T17:55:37.5410649Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5410653Z 
2025-01-07T17:55:37.5410806Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5410923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5411164Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5411317Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5411529Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5411667Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5411865Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5412085Z     return cls(
2025-01-07T17:55:37.5412230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5412236Z 
2025-01-07T17:55:37.5412526Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5412668Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5412851Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5413033Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5413239Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5413345Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5413525Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5413627Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5413793Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5413911Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5414023Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5414028Z 
2025-01-07T17:55:37.5414110Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5414281Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5414390Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5414595Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5414664Z        0.00025518])
2025-01-07T17:55:37.5414826Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5415018Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5415266Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5415395Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5415606Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5415712Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5415960Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5416110Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5416303Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5416423Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5416510Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5416626Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5416717Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5416878Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5417049Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5417176Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5417328Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5417500Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5417752Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5417913Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5418043Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5418151Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5418232Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5418238Z 
2025-01-07T17:55:37.5418308Z     def __init__(
2025-01-07T17:55:37.5418382Z         self,
2025-01-07T17:55:37.5418467Z         last_interaction_type,
2025-01-07T17:55:37.5418563Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5418649Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5418739Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5418823Z         last_interaction_in_r,
2025-01-07T17:55:37.5418895Z         lines_df,
2025-01-07T17:55:37.5418971Z         packet_nus,
2025-01-07T17:55:37.5419053Z         packet_energies,
2025-01-07T17:55:37.5419127Z         r_inner,
2025-01-07T17:55:37.5419211Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5419393Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5419489Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5419576Z         spectrum_wavelength,
2025-01-07T17:55:37.5419646Z         t_inner,
2025-01-07T17:55:37.5419733Z         time_of_simulation,
2025-01-07T17:55:37.5419809Z         time_explosion,
2025-01-07T17:55:37.5419883Z         v_inner,
2025-01-07T17:55:37.5419952Z         v_outer,
2025-01-07T17:55:37.5420028Z         velocity
2025-01-07T17:55:37.5420095Z     ):
2025-01-07T17:55:37.5420168Z         """
2025-01-07T17:55:37.5420394Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5420467Z     
2025-01-07T17:55:37.5420544Z         Parameters
2025-01-07T17:55:37.5420615Z         ----------
2025-01-07T17:55:37.5420714Z         last_interaction_type : np.array
2025-01-07T17:55:37.5420864Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5420987Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5421086Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5421237Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5421414Z             absorption (interaction in)
2025-01-07T17:55:37.5421522Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5421663Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5421753Z             emission (interaction out)
2025-01-07T17:55:37.5421848Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5422106Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5422208Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5422363Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5422455Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5422611Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5422706Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5422870Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5422950Z             unit of Hz
2025-01-07T17:55:37.5423046Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5423183Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5423267Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5423381Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5423491Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5423619Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5423730Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5423968Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5424068Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5424206Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5424297Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5424418Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5424523Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5424633Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5424706Z         """
2025-01-07T17:55:37.5424881Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5424993Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5425084Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5425159Z             {
2025-01-07T17:55:37.5425241Z                 "nus": packet_nus,
2025-01-07T17:55:37.5425372Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5425468Z                 "energies": packet_energies,
2025-01-07T17:55:37.5425585Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5425741Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5425885Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5426033Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5426144Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5426218Z             }
2025-01-07T17:55:37.5426284Z         )
2025-01-07T17:55:37.5426356Z     
2025-01-07T17:55:37.5426438Z         # Save other properties
2025-01-07T17:55:37.5426528Z         self.lines_df = lines_df
2025-01-07T17:55:37.5426607Z         self.r_inner = r_inner
2025-01-07T17:55:37.5426752Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5426896Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5427028Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5427144Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5427243Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5427315Z         )
2025-01-07T17:55:37.5427431Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5427632Z         self.t_inner = t_inner
2025-01-07T17:55:37.5427740Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5427839Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5427917Z         self.v_inner = v_inner
2025-01-07T17:55:37.5427999Z         self.v_outer = v_outer
2025-01-07T17:55:37.5428065Z     
2025-01-07T17:55:37.5428175Z         # First check if both options are provided
2025-01-07T17:55:37.5428353Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5428437Z >           raise ValueError(
2025-01-07T17:55:37.5428580Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5428744Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5428817Z             )
2025-01-07T17:55:37.5429168Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5429176Z 
2025-01-07T17:55:37.5429356Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5429559Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-07T17:55:37.5429564Z 
2025-01-07T17:55:37.5429843Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5430063Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5430387Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5430392Z 
2025-01-07T17:55:37.5430483Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5430594Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5430666Z         """
2025-01-07T17:55:37.5430752Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5430823Z     
2025-01-07T17:55:37.5430899Z         Parameters
2025-01-07T17:55:37.5430974Z         ----------
2025-01-07T17:55:37.5431115Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5431199Z             Simulation object.
2025-01-07T17:55:37.5431267Z     
2025-01-07T17:55:37.5431341Z         Returns
2025-01-07T17:55:37.5431413Z         -------
2025-01-07T17:55:37.5431548Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5431621Z         """
2025-01-07T17:55:37.5431753Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5431761Z 
2025-01-07T17:55:37.5431907Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5432113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5432277Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5432426Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5432643Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5432783Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5432985Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5433057Z     return cls(
2025-01-07T17:55:37.5433168Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5433172Z 
2025-01-07T17:55:37.5433450Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5433593Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5433772Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5433945Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5434147Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5434247Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5434548Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5434647Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5434814Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5434928Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5435037Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5435047Z 
2025-01-07T17:55:37.5435129Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5435292Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5435402Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5435595Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5435668Z        0.00025518])
2025-01-07T17:55:37.5435826Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5436026Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5436148Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5436281Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5436494Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5436597Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5436954Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5437100Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5437290Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5437402Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5437496Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5437608Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5437704Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5437864Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5438035Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5438166Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5438320Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5438490Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5438612Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5438778Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5438907Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5439020Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5439095Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5439104Z 
2025-01-07T17:55:37.5439176Z     def __init__(
2025-01-07T17:55:37.5439249Z         self,
2025-01-07T17:55:37.5439334Z         last_interaction_type,
2025-01-07T17:55:37.5439425Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5439514Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5439605Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5439688Z         last_interaction_in_r,
2025-01-07T17:55:37.5439763Z         lines_df,
2025-01-07T17:55:37.5439836Z         packet_nus,
2025-01-07T17:55:37.5439919Z         packet_energies,
2025-01-07T17:55:37.5439989Z         r_inner,
2025-01-07T17:55:37.5440077Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5440256Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5440459Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5440541Z         spectrum_wavelength,
2025-01-07T17:55:37.5440617Z         t_inner,
2025-01-07T17:55:37.5440694Z         time_of_simulation,
2025-01-07T17:55:37.5440776Z         time_explosion,
2025-01-07T17:55:37.5440849Z         v_inner,
2025-01-07T17:55:37.5440918Z         v_outer,
2025-01-07T17:55:37.5440995Z         velocity
2025-01-07T17:55:37.5441063Z     ):
2025-01-07T17:55:37.5441135Z         """
2025-01-07T17:55:37.5441372Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5441446Z     
2025-01-07T17:55:37.5441518Z         Parameters
2025-01-07T17:55:37.5441595Z         ----------
2025-01-07T17:55:37.5441688Z         last_interaction_type : np.array
2025-01-07T17:55:37.5441843Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5442096Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5442234Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5442383Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5442477Z             absorption (interaction in)
2025-01-07T17:55:37.5442580Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5442723Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5442814Z             emission (interaction out)
2025-01-07T17:55:37.5442909Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5443181Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5443274Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5443426Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5443509Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5443671Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5443764Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5443931Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5444004Z             unit of Hz
2025-01-07T17:55:37.5444104Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5444236Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5444319Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5444431Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5444543Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5444671Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5444775Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5444901Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5444998Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5445141Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5445224Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5445350Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5445445Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5445562Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5445635Z         """
2025-01-07T17:55:37.5445808Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5445916Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5446011Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5446083Z             {
2025-01-07T17:55:37.5446160Z                 "nus": packet_nus,
2025-01-07T17:55:37.5446292Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5446383Z                 "energies": packet_energies,
2025-01-07T17:55:37.5446506Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5446765Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5446915Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5447054Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5447171Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5447243Z             }
2025-01-07T17:55:37.5447311Z         )
2025-01-07T17:55:37.5447384Z     
2025-01-07T17:55:37.5447470Z         # Save other properties
2025-01-07T17:55:37.5447557Z         self.lines_df = lines_df
2025-01-07T17:55:37.5447639Z         self.r_inner = r_inner
2025-01-07T17:55:37.5447786Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5447918Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5448053Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5448165Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5448268Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5448336Z         )
2025-01-07T17:55:37.5448455Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5448533Z         self.t_inner = t_inner
2025-01-07T17:55:37.5448650Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5448753Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5448831Z         self.v_inner = v_inner
2025-01-07T17:55:37.5448993Z         self.v_outer = v_outer
2025-01-07T17:55:37.5449061Z     
2025-01-07T17:55:37.5449165Z         # First check if both options are provided
2025-01-07T17:55:37.5449334Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5449420Z >           raise ValueError(
2025-01-07T17:55:37.5449559Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5449738Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5449805Z             )
2025-01-07T17:55:37.5450164Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5450169Z 
2025-01-07T17:55:37.5450351Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5450552Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-07T17:55:37.5450557Z 
2025-01-07T17:55:37.5450839Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5451051Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5451288Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5451293Z 
2025-01-07T17:55:37.5451381Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5451498Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5451566Z         """
2025-01-07T17:55:37.5451659Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5451726Z     
2025-01-07T17:55:37.5451808Z         Parameters
2025-01-07T17:55:37.5456409Z         ----------
2025-01-07T17:55:37.5456596Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5456691Z             Simulation object.
2025-01-07T17:55:37.5456763Z     
2025-01-07T17:55:37.5456833Z         Returns
2025-01-07T17:55:37.5456909Z         -------
2025-01-07T17:55:37.5457057Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5457133Z         """
2025-01-07T17:55:37.5457272Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5457278Z 
2025-01-07T17:55:37.5457432Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5457551Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5457891Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5458045Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5458269Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5458405Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5458618Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5458696Z     return cls(
2025-01-07T17:55:37.5458805Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5458814Z 
2025-01-07T17:55:37.5459099Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5459243Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5459426Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5459602Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5459809Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5459912Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5460101Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5460203Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5460370Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5460601Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5460713Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5460718Z 
2025-01-07T17:55:37.5460803Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5460974Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5461093Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5461300Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5461376Z        0.00025518])
2025-01-07T17:55:37.5461538Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5461742Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5461871Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5462164Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5462384Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5462490Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5462739Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5462890Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5463090Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5463205Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5463297Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5463414Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5463506Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5463670Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5463848Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5463980Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5464130Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5464298Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5464534Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5464703Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5464831Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5464945Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5465027Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5465032Z 
2025-01-07T17:55:37.5465102Z     def __init__(
2025-01-07T17:55:37.5465182Z         self,
2025-01-07T17:55:37.5465267Z         last_interaction_type,
2025-01-07T17:55:37.5465359Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5465445Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5465539Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5465620Z         last_interaction_in_r,
2025-01-07T17:55:37.5465698Z         lines_df,
2025-01-07T17:55:37.5465775Z         packet_nus,
2025-01-07T17:55:37.5465858Z         packet_energies,
2025-01-07T17:55:37.5465927Z         r_inner,
2025-01-07T17:55:37.5466017Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5466198Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5466301Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5466392Z         spectrum_wavelength,
2025-01-07T17:55:37.5466461Z         t_inner,
2025-01-07T17:55:37.5466547Z         time_of_simulation,
2025-01-07T17:55:37.5466622Z         time_explosion,
2025-01-07T17:55:37.5466805Z         v_inner,
2025-01-07T17:55:37.5466873Z         v_outer,
2025-01-07T17:55:37.5466947Z         velocity
2025-01-07T17:55:37.5467013Z     ):
2025-01-07T17:55:37.5467086Z         """
2025-01-07T17:55:37.5467313Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5467385Z     
2025-01-07T17:55:37.5467456Z         Parameters
2025-01-07T17:55:37.5467536Z         ----------
2025-01-07T17:55:37.5467628Z         last_interaction_type : np.array
2025-01-07T17:55:37.5467789Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5467905Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5468010Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5468157Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5468254Z             absorption (interaction in)
2025-01-07T17:55:37.5468358Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5468506Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5468599Z             emission (interaction out)
2025-01-07T17:55:37.5468692Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5468852Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5468946Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5469102Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5469187Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5469353Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5469441Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5469608Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5469686Z             unit of Hz
2025-01-07T17:55:37.5469781Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5469920Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5470004Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5470121Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5470229Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5470364Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5470470Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5470704Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5470801Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5470941Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5471023Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5471148Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5471249Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5471360Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5471436Z         """
2025-01-07T17:55:37.5471612Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5471724Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5471816Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5471888Z             {
2025-01-07T17:55:37.5472067Z                 "nus": packet_nus,
2025-01-07T17:55:37.5472205Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5472294Z                 "energies": packet_energies,
2025-01-07T17:55:37.5472416Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5472563Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5472712Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5472860Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5473087Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5473161Z             }
2025-01-07T17:55:37.5473228Z         )
2025-01-07T17:55:37.5473298Z     
2025-01-07T17:55:37.5473379Z         # Save other properties
2025-01-07T17:55:37.5473466Z         self.lines_df = lines_df
2025-01-07T17:55:37.5473544Z         self.r_inner = r_inner
2025-01-07T17:55:37.5473690Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5473828Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5473966Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5474072Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5474173Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5474239Z         )
2025-01-07T17:55:37.5474362Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5474445Z         self.t_inner = t_inner
2025-01-07T17:55:37.5474558Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5474659Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5474736Z         self.v_inner = v_inner
2025-01-07T17:55:37.5474819Z         self.v_outer = v_outer
2025-01-07T17:55:37.5474883Z     
2025-01-07T17:55:37.5475025Z         # First check if both options are provided
2025-01-07T17:55:37.5475204Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5475292Z >           raise ValueError(
2025-01-07T17:55:37.5475430Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5475602Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5475669Z             )
2025-01-07T17:55:37.5476032Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5476038Z 
2025-01-07T17:55:37.5476223Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5476426Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-07T17:55:37.5476431Z 
2025-01-07T17:55:37.5476706Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5476918Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5477271Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5477276Z 
2025-01-07T17:55:37.5477361Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5477478Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5477544Z         """
2025-01-07T17:55:37.5477638Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5477702Z     
2025-01-07T17:55:37.5477776Z         Parameters
2025-01-07T17:55:37.5477847Z         ----------
2025-01-07T17:55:37.5477995Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5478077Z             Simulation object.
2025-01-07T17:55:37.5478146Z     
2025-01-07T17:55:37.5478214Z         Returns
2025-01-07T17:55:37.5478281Z         -------
2025-01-07T17:55:37.5478416Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5478482Z         """
2025-01-07T17:55:37.5478618Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5478626Z 
2025-01-07T17:55:37.5478767Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5478880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5479038Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5479191Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5479404Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5479542Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5479822Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5479893Z     return cls(
2025-01-07T17:55:37.5480001Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5480006Z 
2025-01-07T17:55:37.5480275Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5480420Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5480594Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5480775Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5480973Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5481081Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5481262Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5481364Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5481535Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5481647Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5481761Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5481769Z 
2025-01-07T17:55:37.5481845Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5482194Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5482305Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5482504Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5482573Z        0.00025518])
2025-01-07T17:55:37.5482731Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5482933Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5483055Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5483187Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5483391Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5483619Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5483858Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5484007Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5484193Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5484307Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5484393Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5484510Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5484602Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5484757Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5484928Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5485047Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5485202Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5485364Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5485485Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5485645Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5485783Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5486003Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5486082Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5486087Z 
2025-01-07T17:55:37.5486162Z     def __init__(
2025-01-07T17:55:37.5486228Z         self,
2025-01-07T17:55:37.5486315Z         last_interaction_type,
2025-01-07T17:55:37.5486402Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5486497Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5486580Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5486664Z         last_interaction_in_r,
2025-01-07T17:55:37.5486733Z         lines_df,
2025-01-07T17:55:37.5486809Z         packet_nus,
2025-01-07T17:55:37.5486885Z         packet_energies,
2025-01-07T17:55:37.5486958Z         r_inner,
2025-01-07T17:55:37.5487043Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5487230Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5487331Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5487415Z         spectrum_wavelength,
2025-01-07T17:55:37.5487489Z         t_inner,
2025-01-07T17:55:37.5487569Z         time_of_simulation,
2025-01-07T17:55:37.5487648Z         time_explosion,
2025-01-07T17:55:37.5487716Z         v_inner,
2025-01-07T17:55:37.5487790Z         v_outer,
2025-01-07T17:55:37.5487857Z         velocity
2025-01-07T17:55:37.5487928Z     ):
2025-01-07T17:55:37.5487995Z         """
2025-01-07T17:55:37.5488237Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5488303Z     
2025-01-07T17:55:37.5488378Z         Parameters
2025-01-07T17:55:37.5488450Z         ----------
2025-01-07T17:55:37.5488545Z         last_interaction_type : np.array
2025-01-07T17:55:37.5488700Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5488822Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5488919Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5489074Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5489169Z             absorption (interaction in)
2025-01-07T17:55:37.5489268Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5489417Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5489502Z             emission (interaction out)
2025-01-07T17:55:37.5489688Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5489840Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5489938Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5490085Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5490173Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5490331Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5490426Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5490588Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5490663Z             unit of Hz
2025-01-07T17:55:37.5490762Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5490889Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5490978Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5491086Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5491201Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5491325Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5491437Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5491558Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5491659Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5491795Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5491886Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5492318Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5492422Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5492542Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5492610Z         """
2025-01-07T17:55:37.5492796Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5492906Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5493006Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5493072Z             {
2025-01-07T17:55:37.5493156Z                 "nus": packet_nus,
2025-01-07T17:55:37.5493283Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5493379Z                 "energies": packet_energies,
2025-01-07T17:55:37.5493501Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5493654Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5493801Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5493947Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5494063Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5494129Z             }
2025-01-07T17:55:37.5494199Z         )
2025-01-07T17:55:37.5494264Z     
2025-01-07T17:55:37.5494355Z         # Save other properties
2025-01-07T17:55:37.5494437Z         self.lines_df = lines_df
2025-01-07T17:55:37.5494524Z         self.r_inner = r_inner
2025-01-07T17:55:37.5494665Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5494801Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5494931Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5495044Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5495139Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5495218Z         )
2025-01-07T17:55:37.5495336Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5495415Z         self.t_inner = t_inner
2025-01-07T17:55:37.5495526Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5495618Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5495697Z         self.v_inner = v_inner
2025-01-07T17:55:37.5495887Z         self.v_outer = v_outer
2025-01-07T17:55:37.5495957Z     
2025-01-07T17:55:37.5496058Z         # First check if both options are provided
2025-01-07T17:55:37.5496236Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5496315Z >           raise ValueError(
2025-01-07T17:55:37.5496458Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5496621Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5496698Z             )
2025-01-07T17:55:37.5497055Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5497065Z 
2025-01-07T17:55:37.5497242Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5497453Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-07T17:55:37.5497461Z 
2025-01-07T17:55:37.5497733Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5497948Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5498179Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5498184Z 
2025-01-07T17:55:37.5498277Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5498391Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5498462Z         """
2025-01-07T17:55:37.5498669Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5498741Z     
2025-01-07T17:55:37.5498813Z         Parameters
2025-01-07T17:55:37.5498888Z         ----------
2025-01-07T17:55:37.5499032Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5499115Z             Simulation object.
2025-01-07T17:55:37.5499178Z     
2025-01-07T17:55:37.5499251Z         Returns
2025-01-07T17:55:37.5499324Z         -------
2025-01-07T17:55:37.5499461Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5499532Z         """
2025-01-07T17:55:37.5499663Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5499668Z 
2025-01-07T17:55:37.5499814Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5499923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5500086Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5500236Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5500451Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5500581Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5500784Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5500854Z     return cls(
2025-01-07T17:55:37.5500968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5500972Z 
2025-01-07T17:55:37.5501250Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5501387Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5501566Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5501744Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5502094Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5502206Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5502389Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5502485Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5502652Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5502888Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5502999Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5503004Z 
2025-01-07T17:55:37.5503084Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5503247Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5503356Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5503550Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5503627Z        0.00025518])
2025-01-07T17:55:37.5503782Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5503980Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5504101Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5504236Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5504443Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5504545Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5504797Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5504941Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5505134Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5505353Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5505443Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5505552Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5505648Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5505805Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5505977Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5506105Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5506251Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5506421Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5506539Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5506703Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5506831Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5506943Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5507017Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5507027Z 
2025-01-07T17:55:37.5507099Z     def __init__(
2025-01-07T17:55:37.5507171Z         self,
2025-01-07T17:55:37.5507252Z         last_interaction_type,
2025-01-07T17:55:37.5507346Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5507431Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5507516Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5507594Z         last_interaction_in_r,
2025-01-07T17:55:37.5507668Z         lines_df,
2025-01-07T17:55:37.5507739Z         packet_nus,
2025-01-07T17:55:37.5507822Z         packet_energies,
2025-01-07T17:55:37.5507893Z         r_inner,
2025-01-07T17:55:37.5507982Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5508159Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5508259Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5508342Z         spectrum_wavelength,
2025-01-07T17:55:37.5508415Z         t_inner,
2025-01-07T17:55:37.5508492Z         time_of_simulation,
2025-01-07T17:55:37.5508658Z         time_explosion,
2025-01-07T17:55:37.5508730Z         v_inner,
2025-01-07T17:55:37.5508797Z         v_outer,
2025-01-07T17:55:37.5508869Z         velocity
2025-01-07T17:55:37.5508933Z     ):
2025-01-07T17:55:37.5509004Z         """
2025-01-07T17:55:37.5509231Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5509300Z     
2025-01-07T17:55:37.5509370Z         Parameters
2025-01-07T17:55:37.5509443Z         ----------
2025-01-07T17:55:37.5509538Z         last_interaction_type : np.array
2025-01-07T17:55:37.5509696Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5509812Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5509918Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5510063Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5510157Z             absorption (interaction in)
2025-01-07T17:55:37.5510263Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5510402Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5510495Z             emission (interaction out)
2025-01-07T17:55:37.5510590Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5510746Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5510840Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5510990Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5511172Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5511339Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5511427Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5511593Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5511664Z             unit of Hz
2025-01-07T17:55:37.5511764Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5511901Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5512100Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5512217Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5512322Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5512448Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5512552Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5512676Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5512778Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5512919Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5513001Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5513123Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5513218Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5513338Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5513409Z         """
2025-01-07T17:55:37.5513585Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5513692Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5513783Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5513854Z             {
2025-01-07T17:55:37.5513931Z                 "nus": packet_nus,
2025-01-07T17:55:37.5514062Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5514153Z                 "energies": packet_energies,
2025-01-07T17:55:37.5514275Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5514422Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5514568Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5514705Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5514941Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5515012Z             }
2025-01-07T17:55:37.5515079Z         )
2025-01-07T17:55:37.5515147Z     
2025-01-07T17:55:37.5515228Z         # Save other properties
2025-01-07T17:55:37.5515314Z         self.lines_df = lines_df
2025-01-07T17:55:37.5515396Z         self.r_inner = r_inner
2025-01-07T17:55:37.5515538Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5515671Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5515810Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5515916Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5516015Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5516081Z         )
2025-01-07T17:55:37.5516200Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5516278Z         self.t_inner = t_inner
2025-01-07T17:55:37.5516392Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5516491Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5516568Z         self.v_inner = v_inner
2025-01-07T17:55:37.5516649Z         self.v_outer = v_outer
2025-01-07T17:55:37.5516715Z     
2025-01-07T17:55:37.5516819Z         # First check if both options are provided
2025-01-07T17:55:37.5516988Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5517071Z >           raise ValueError(
2025-01-07T17:55:37.5517339Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5517503Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5517568Z             )
2025-01-07T17:55:37.5517927Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5517935Z 
2025-01-07T17:55:37.5518111Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5518312Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-07T17:55:37.5518317Z 
2025-01-07T17:55:37.5518590Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5518802Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5519037Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5519046Z 
2025-01-07T17:55:37.5519131Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5519244Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5519312Z         """
2025-01-07T17:55:37.5519403Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5519468Z     
2025-01-07T17:55:37.5519544Z         Parameters
2025-01-07T17:55:37.5519619Z         ----------
2025-01-07T17:55:37.5519763Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5519848Z             Simulation object.
2025-01-07T17:55:37.5519913Z     
2025-01-07T17:55:37.5519985Z         Returns
2025-01-07T17:55:37.5520053Z         -------
2025-01-07T17:55:37.5520189Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5520255Z         """
2025-01-07T17:55:37.5520391Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5520397Z 
2025-01-07T17:55:37.5520537Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5520651Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5520808Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5520958Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5521169Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5521389Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5521590Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5521663Z     return cls(
2025-01-07T17:55:37.5521777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5521782Z 
2025-01-07T17:55:37.5522260Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5522406Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5522586Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5522766Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5522962Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5523069Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5523254Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5523353Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5523516Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5523627Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5523740Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5523745Z 
2025-01-07T17:55:37.5523821Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5524118Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5524222Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5524419Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5524490Z        0.00025518])
2025-01-07T17:55:37.5524642Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5524844Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5524964Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5525094Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5525295Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5525401Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5525643Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5525793Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5525983Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5526100Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5526189Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5526304Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5526396Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5526550Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5526723Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5526844Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5526997Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5527163Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5527286Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5527444Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5527574Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5527796Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5527870Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5527875Z 
2025-01-07T17:55:37.5527948Z     def __init__(
2025-01-07T17:55:37.5528017Z         self,
2025-01-07T17:55:37.5528104Z         last_interaction_type,
2025-01-07T17:55:37.5528188Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5528278Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5528361Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5528448Z         last_interaction_in_r,
2025-01-07T17:55:37.5528517Z         lines_df,
2025-01-07T17:55:37.5528594Z         packet_nus,
2025-01-07T17:55:37.5528671Z         packet_energies,
2025-01-07T17:55:37.5528745Z         r_inner,
2025-01-07T17:55:37.5528834Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5529011Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5529113Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5529193Z         spectrum_wavelength,
2025-01-07T17:55:37.5529268Z         t_inner,
2025-01-07T17:55:37.5529344Z         time_of_simulation,
2025-01-07T17:55:37.5529425Z         time_explosion,
2025-01-07T17:55:37.5529494Z         v_inner,
2025-01-07T17:55:37.5529569Z         v_outer,
2025-01-07T17:55:37.5529637Z         velocity
2025-01-07T17:55:37.5529707Z     ):
2025-01-07T17:55:37.5529772Z         """
2025-01-07T17:55:37.5530004Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5530152Z     
2025-01-07T17:55:37.5530228Z         Parameters
2025-01-07T17:55:37.5530297Z         ----------
2025-01-07T17:55:37.5530394Z         last_interaction_type : np.array
2025-01-07T17:55:37.5530545Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5530662Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5530763Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5530910Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5530998Z             absorption (interaction in)
2025-01-07T17:55:37.5531097Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5531243Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5531327Z             emission (interaction out)
2025-01-07T17:55:37.5531425Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5531570Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5531670Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5531817Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5531905Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5532235Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5532332Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5532505Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5532577Z             unit of Hz
2025-01-07T17:55:37.5532674Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5532798Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5532886Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5532994Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5533103Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5533231Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5533338Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5533459Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5533560Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5533699Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5533903Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5534029Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5534125Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5534236Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5534306Z         """
2025-01-07T17:55:37.5534480Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5534583Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5534676Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5534745Z             {
2025-01-07T17:55:37.5534829Z                 "nus": packet_nus,
2025-01-07T17:55:37.5534951Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5535046Z                 "energies": packet_energies,
2025-01-07T17:55:37.5535163Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5535312Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5535461Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5535601Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5535715Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5535782Z             }
2025-01-07T17:55:37.5535854Z         )
2025-01-07T17:55:37.5535919Z     
2025-01-07T17:55:37.5536004Z         # Save other properties
2025-01-07T17:55:37.5536084Z         self.lines_df = lines_df
2025-01-07T17:55:37.5536275Z         self.r_inner = r_inner
2025-01-07T17:55:37.5536415Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5536554Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5536685Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5536795Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5536898Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5536964Z         )
2025-01-07T17:55:37.5537084Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5537162Z         self.t_inner = t_inner
2025-01-07T17:55:37.5537274Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5537367Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5537447Z         self.v_inner = v_inner
2025-01-07T17:55:37.5537522Z         self.v_outer = v_outer
2025-01-07T17:55:37.5537591Z     
2025-01-07T17:55:37.5537694Z         # First check if both options are provided
2025-01-07T17:55:37.5537868Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5537947Z >           raise ValueError(
2025-01-07T17:55:37.5538090Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5538249Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5538323Z             )
2025-01-07T17:55:37.5538679Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5538684Z 
2025-01-07T17:55:37.5538857Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5539064Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-07T17:55:37.5539069Z 
2025-01-07T17:55:37.5539339Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5539560Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5539795Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5539805Z 
2025-01-07T17:55:37.5539892Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5540008Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5540175Z         """
2025-01-07T17:55:37.5540272Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5540341Z     
2025-01-07T17:55:37.5540416Z         Parameters
2025-01-07T17:55:37.5540487Z         ----------
2025-01-07T17:55:37.5540633Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5540711Z             Simulation object.
2025-01-07T17:55:37.5540779Z     
2025-01-07T17:55:37.5540847Z         Returns
2025-01-07T17:55:37.5540920Z         -------
2025-01-07T17:55:37.5541049Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5541123Z         """
2025-01-07T17:55:37.5541256Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5541261Z 
2025-01-07T17:55:37.5541408Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5541519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5541679Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5541831Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5542154Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5542293Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5542490Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5542564Z     return cls(
2025-01-07T17:55:37.5542667Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5542785Z 
2025-01-07T17:55:37.5543067Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5543207Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5543388Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5543566Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5543768Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5543874Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5544053Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5544153Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5544313Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5544429Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5544541Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5544551Z 
2025-01-07T17:55:37.5544625Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5544795Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5544897Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5545097Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5545168Z        0.00025518])
2025-01-07T17:55:37.5545327Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5545518Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5545642Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5545768Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5545979Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5546080Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5546326Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5546472Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5546769Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5546887Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5546974Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5547085Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5547175Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5547331Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5547501Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5547632Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5547784Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5547945Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5548070Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5548231Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5548362Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5548468Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5548546Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5548550Z 
2025-01-07T17:55:37.5548618Z     def __init__(
2025-01-07T17:55:37.5548690Z         self,
2025-01-07T17:55:37.5548770Z         last_interaction_type,
2025-01-07T17:55:37.5548941Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5549025Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5549114Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5549198Z         last_interaction_in_r,
2025-01-07T17:55:37.5549266Z         lines_df,
2025-01-07T17:55:37.5549342Z         packet_nus,
2025-01-07T17:55:37.5549417Z         packet_energies,
2025-01-07T17:55:37.5549493Z         r_inner,
2025-01-07T17:55:37.5549576Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5549758Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5549854Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5549939Z         spectrum_wavelength,
2025-01-07T17:55:37.5550006Z         t_inner,
2025-01-07T17:55:37.5550088Z         time_of_simulation,
2025-01-07T17:55:37.5550163Z         time_explosion,
2025-01-07T17:55:37.5550236Z         v_inner,
2025-01-07T17:55:37.5550303Z         v_outer,
2025-01-07T17:55:37.5550379Z         velocity
2025-01-07T17:55:37.5550444Z     ):
2025-01-07T17:55:37.5550516Z         """
2025-01-07T17:55:37.5550739Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5550809Z     
2025-01-07T17:55:37.5550885Z         Parameters
2025-01-07T17:55:37.5550956Z         ----------
2025-01-07T17:55:37.5551053Z         last_interaction_type : np.array
2025-01-07T17:55:37.5551208Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5551330Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5551427Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5551576Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5551663Z             absorption (interaction in)
2025-01-07T17:55:37.5551766Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5551906Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5552197Z             emission (interaction out)
2025-01-07T17:55:37.5552344Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5552575Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5552731Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5552975Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5553215Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5553388Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5553482Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5553640Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5553715Z             unit of Hz
2025-01-07T17:55:37.5553810Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5553941Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5554029Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5554144Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5554252Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5554379Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5554492Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5554614Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5554718Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5554852Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5554939Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5555059Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5555160Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5555270Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5555342Z         """
2025-01-07T17:55:37.5555629Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5555736Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5555824Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5555895Z             {
2025-01-07T17:55:37.5555978Z                 "nus": packet_nus,
2025-01-07T17:55:37.5556103Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5556200Z                 "energies": packet_energies,
2025-01-07T17:55:37.5556318Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5556470Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5556610Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5556751Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5556860Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5556935Z             }
2025-01-07T17:55:37.5557000Z         )
2025-01-07T17:55:37.5557070Z     
2025-01-07T17:55:37.5557152Z         # Save other properties
2025-01-07T17:55:37.5557239Z         self.lines_df = lines_df
2025-01-07T17:55:37.5557322Z         self.r_inner = r_inner
2025-01-07T17:55:37.5557461Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5557599Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5557734Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5557848Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5557945Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5558015Z         )
2025-01-07T17:55:37.5558129Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5558212Z         self.t_inner = t_inner
2025-01-07T17:55:37.5558322Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5558423Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5558499Z         self.v_inner = v_inner
2025-01-07T17:55:37.5558582Z         self.v_outer = v_outer
2025-01-07T17:55:37.5558646Z     
2025-01-07T17:55:37.5558753Z         # First check if both options are provided
2025-01-07T17:55:37.5558931Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5559009Z >           raise ValueError(
2025-01-07T17:55:37.5559256Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5559418Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5559490Z             )
2025-01-07T17:55:37.5559841Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5559847Z 
2025-01-07T17:55:37.5560022Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5560230Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-07T17:55:37.5560235Z 
2025-01-07T17:55:37.5560509Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5560726Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5560961Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5560969Z 
2025-01-07T17:55:37.5561060Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5561172Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5561244Z         """
2025-01-07T17:55:37.5561330Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5561399Z     
2025-01-07T17:55:37.5561470Z         Parameters
2025-01-07T17:55:37.5561546Z         ----------
2025-01-07T17:55:37.5561689Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5561772Z             Simulation object.
2025-01-07T17:55:37.5561918Z     
2025-01-07T17:55:37.5562183Z         Returns
2025-01-07T17:55:37.5562256Z         -------
2025-01-07T17:55:37.5562399Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5562470Z         """
2025-01-07T17:55:37.5562603Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5562608Z 
2025-01-07T17:55:37.5562754Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5562865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5563028Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5563173Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5563385Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5563517Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5563715Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5563790Z     return cls(
2025-01-07T17:55:37.5563899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5563904Z 
2025-01-07T17:55:37.5564182Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5564320Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5564501Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5564674Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5564878Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5564977Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5565163Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5565255Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5565424Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5565540Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5565650Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5565654Z 
2025-01-07T17:55:37.5565734Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5566048Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5566155Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5566346Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5566419Z        0.00025518])
2025-01-07T17:55:37.5566574Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5566768Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5566897Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5567024Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5567232Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5567334Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5567584Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5567727Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5567919Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5568030Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5568121Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5568229Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5568429Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5568586Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5568755Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5568881Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5569026Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5569198Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5569317Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5569480Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5569603Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5569712Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5569789Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5569798Z 
2025-01-07T17:55:37.5569867Z     def __init__(
2025-01-07T17:55:37.5569938Z         self,
2025-01-07T17:55:37.5570022Z         last_interaction_type,
2025-01-07T17:55:37.5570111Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5570197Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5570284Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5570365Z         last_interaction_in_r,
2025-01-07T17:55:37.5570439Z         lines_df,
2025-01-07T17:55:37.5570510Z         packet_nus,
2025-01-07T17:55:37.5570591Z         packet_energies,
2025-01-07T17:55:37.5570659Z         r_inner,
2025-01-07T17:55:37.5570748Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5570925Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5571026Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5571107Z         spectrum_wavelength,
2025-01-07T17:55:37.5571184Z         t_inner,
2025-01-07T17:55:37.5571265Z         time_of_simulation,
2025-01-07T17:55:37.5571340Z         time_explosion,
2025-01-07T17:55:37.5571411Z         v_inner,
2025-01-07T17:55:37.5571478Z         v_outer,
2025-01-07T17:55:37.5571549Z         velocity
2025-01-07T17:55:37.5571614Z     ):
2025-01-07T17:55:37.5571685Z         """
2025-01-07T17:55:37.5571910Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5572255Z     
2025-01-07T17:55:37.5572330Z         Parameters
2025-01-07T17:55:37.5572409Z         ----------
2025-01-07T17:55:37.5572505Z         last_interaction_type : np.array
2025-01-07T17:55:37.5572668Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5572788Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5572891Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5573038Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5573137Z             absorption (interaction in)
2025-01-07T17:55:37.5573242Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5573379Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5573470Z             emission (interaction out)
2025-01-07T17:55:37.5573565Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5573723Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5573814Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5573966Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5574047Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5574209Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5574298Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5574464Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5574644Z             unit of Hz
2025-01-07T17:55:37.5574743Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5574874Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5574962Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5575107Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5575215Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5575344Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5575449Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5575573Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5575670Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5575807Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5575888Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5576009Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5576107Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5576225Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5576295Z         """
2025-01-07T17:55:37.5576470Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5576576Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5576669Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5576741Z             {
2025-01-07T17:55:37.5576818Z                 "nus": packet_nus,
2025-01-07T17:55:37.5576947Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5577035Z                 "energies": packet_energies,
2025-01-07T17:55:37.5577157Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5577303Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5577448Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5577590Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5577708Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5577778Z             }
2025-01-07T17:55:37.5577844Z         )
2025-01-07T17:55:37.5577917Z     
2025-01-07T17:55:37.5577999Z         # Save other properties
2025-01-07T17:55:37.5578186Z         self.lines_df = lines_df
2025-01-07T17:55:37.5578263Z         self.r_inner = r_inner
2025-01-07T17:55:37.5578407Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5578539Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5578674Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5578779Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5578879Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5578945Z         )
2025-01-07T17:55:37.5579068Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5579144Z         self.t_inner = t_inner
2025-01-07T17:55:37.5579255Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5579354Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5579431Z         self.v_inner = v_inner
2025-01-07T17:55:37.5579511Z         self.v_outer = v_outer
2025-01-07T17:55:37.5579575Z     
2025-01-07T17:55:37.5579683Z         # First check if both options are provided
2025-01-07T17:55:37.5579853Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5579936Z >           raise ValueError(
2025-01-07T17:55:37.5580073Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5580238Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5580304Z             )
2025-01-07T17:55:37.5580665Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5580749Z 
2025-01-07T17:55:37.5580928Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5581127Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-07T17:55:37.5581132Z 
2025-01-07T17:55:37.5581409Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5581622Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5581860Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5581866Z 
2025-01-07T17:55:37.5582057Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5582174Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5582242Z         """
2025-01-07T17:55:37.5582339Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5582408Z     
2025-01-07T17:55:37.5582486Z         Parameters
2025-01-07T17:55:37.5582560Z         ----------
2025-01-07T17:55:37.5582703Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5582785Z             Simulation object.
2025-01-07T17:55:37.5582850Z     
2025-01-07T17:55:37.5582921Z         Returns
2025-01-07T17:55:37.5582993Z         -------
2025-01-07T17:55:37.5583125Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5583196Z         """
2025-01-07T17:55:37.5583331Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5583336Z 
2025-01-07T17:55:37.5583477Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5583590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5583746Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5583897Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5584122Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5584255Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5584455Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5584525Z     return cls(
2025-01-07T17:55:37.5584633Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5584751Z 
2025-01-07T17:55:37.5585029Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5585173Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5585348Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5585526Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5585720Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5585827Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5586013Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5586107Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5586272Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5586385Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5586501Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5586508Z 
2025-01-07T17:55:37.5586582Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5586750Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5586854Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5587048Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5587245Z        0.00025518])
2025-01-07T17:55:37.5587401Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5587597Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5587716Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5587846Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5588050Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5588155Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5588396Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5588546Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5588729Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5588850Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5588939Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5589049Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5589142Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5589295Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5589469Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5589596Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5589748Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5589911Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5590037Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5590200Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5590327Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5590438Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5590511Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5590515Z 
2025-01-07T17:55:37.5590589Z     def __init__(
2025-01-07T17:55:37.5590658Z         self,
2025-01-07T17:55:37.5590828Z         last_interaction_type,
2025-01-07T17:55:37.5590912Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5591003Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5591086Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5591169Z         last_interaction_in_r,
2025-01-07T17:55:37.5591237Z         lines_df,
2025-01-07T17:55:37.5591314Z         packet_nus,
2025-01-07T17:55:37.5591390Z         packet_energies,
2025-01-07T17:55:37.5591464Z         r_inner,
2025-01-07T17:55:37.5591553Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5591733Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5591832Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5591912Z         spectrum_wavelength,
2025-01-07T17:55:37.5592085Z         t_inner,
2025-01-07T17:55:37.5592163Z         time_of_simulation,
2025-01-07T17:55:37.5592242Z         time_explosion,
2025-01-07T17:55:37.5592311Z         v_inner,
2025-01-07T17:55:37.5592387Z         v_outer,
2025-01-07T17:55:37.5592457Z         velocity
2025-01-07T17:55:37.5592526Z     ):
2025-01-07T17:55:37.5592593Z         """
2025-01-07T17:55:37.5592823Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5592887Z     
2025-01-07T17:55:37.5592963Z         Parameters
2025-01-07T17:55:37.5593032Z         ----------
2025-01-07T17:55:37.5593128Z         last_interaction_type : np.array
2025-01-07T17:55:37.5593277Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5593509Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5593611Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5593756Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5593847Z             absorption (interaction in)
2025-01-07T17:55:37.5593944Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5594088Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5594175Z             emission (interaction out)
2025-01-07T17:55:37.5594274Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5594421Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5594517Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5594661Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5594747Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5594907Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5594998Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5595163Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5595234Z             unit of Hz
2025-01-07T17:55:37.5595333Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5595458Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5595549Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5595658Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5595770Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5595894Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5596005Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5596125Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5596225Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5596367Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5596449Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5596573Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5596667Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5596781Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5596959Z         """
2025-01-07T17:55:37.5597136Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5597237Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5597333Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5597402Z             {
2025-01-07T17:55:37.5597484Z                 "nus": packet_nus,
2025-01-07T17:55:37.5597607Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5597702Z                 "energies": packet_energies,
2025-01-07T17:55:37.5597821Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5597972Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5598116Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5598255Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5598371Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5598440Z             }
2025-01-07T17:55:37.5598512Z         )
2025-01-07T17:55:37.5598578Z     
2025-01-07T17:55:37.5598664Z         # Save other properties
2025-01-07T17:55:37.5598745Z         self.lines_df = lines_df
2025-01-07T17:55:37.5598827Z         self.r_inner = r_inner
2025-01-07T17:55:37.5598964Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5599102Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5599234Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5599425Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5599527Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5599593Z         )
2025-01-07T17:55:37.5599713Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5599789Z         self.t_inner = t_inner
2025-01-07T17:55:37.5599904Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5600000Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5600082Z         self.v_inner = v_inner
2025-01-07T17:55:37.5600157Z         self.v_outer = v_outer
2025-01-07T17:55:37.5600227Z     
2025-01-07T17:55:37.5600327Z         # First check if both options are provided
2025-01-07T17:55:37.5600501Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5600580Z >           raise ValueError(
2025-01-07T17:55:37.5600721Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5600887Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5600958Z             )
2025-01-07T17:55:37.5601312Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5601318Z 
2025-01-07T17:55:37.5601487Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5601697Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-07T17:55:37.5601703Z 
2025-01-07T17:55:37.5602156Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5602389Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5602622Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5602632Z 
2025-01-07T17:55:37.5602719Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5602837Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5602905Z         """
2025-01-07T17:55:37.5602995Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5603059Z     
2025-01-07T17:55:37.5603134Z         Parameters
2025-01-07T17:55:37.5603203Z         ----------
2025-01-07T17:55:37.5603348Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5603555Z             Simulation object.
2025-01-07T17:55:37.5603624Z     
2025-01-07T17:55:37.5603692Z         Returns
2025-01-07T17:55:37.5603766Z         -------
2025-01-07T17:55:37.5603895Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5603965Z         """
2025-01-07T17:55:37.5604095Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5604099Z 
2025-01-07T17:55:37.5604249Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5604360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5604524Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5604675Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5604886Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5605024Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5605223Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5605301Z     return cls(
2025-01-07T17:55:37.5605404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5605409Z 
2025-01-07T17:55:37.5605683Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5605824Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5605997Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5606292Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5606494Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5606596Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5606775Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5606880Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5607043Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5607157Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5607265Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5607275Z 
2025-01-07T17:55:37.5607350Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5607520Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5607631Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5607830Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5607897Z        0.00025518])
2025-01-07T17:55:37.5608055Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5608244Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5608371Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5608498Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5608704Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5608804Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5609053Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5609203Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5609390Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5609505Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5609589Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5609700Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5609873Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5610031Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5610198Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5610324Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5610475Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5610637Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5610764Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5610919Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5611047Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5611153Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5611234Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5611239Z 
2025-01-07T17:55:37.5611308Z     def __init__(
2025-01-07T17:55:37.5611381Z         self,
2025-01-07T17:55:37.5611462Z         last_interaction_type,
2025-01-07T17:55:37.5611553Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5611642Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5611724Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5611807Z         last_interaction_in_r,
2025-01-07T17:55:37.5611876Z         lines_df,
2025-01-07T17:55:37.5612238Z         packet_nus,
2025-01-07T17:55:37.5612317Z         packet_energies,
2025-01-07T17:55:37.5612392Z         r_inner,
2025-01-07T17:55:37.5612477Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5612666Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5612760Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5612845Z         spectrum_wavelength,
2025-01-07T17:55:37.5612918Z         t_inner,
2025-01-07T17:55:37.5612999Z         time_of_simulation,
2025-01-07T17:55:37.5613075Z         time_explosion,
2025-01-07T17:55:37.5613148Z         v_inner,
2025-01-07T17:55:37.5613215Z         v_outer,
2025-01-07T17:55:37.5613287Z         velocity
2025-01-07T17:55:37.5613351Z     ):
2025-01-07T17:55:37.5613422Z         """
2025-01-07T17:55:37.5613657Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5613725Z     
2025-01-07T17:55:37.5613802Z         Parameters
2025-01-07T17:55:37.5613877Z         ----------
2025-01-07T17:55:37.5613976Z         last_interaction_type : np.array
2025-01-07T17:55:37.5614127Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5614251Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5614349Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5614499Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5614589Z             absorption (interaction in)
2025-01-07T17:55:37.5614693Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5614837Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5614927Z             emission (interaction out)
2025-01-07T17:55:37.5615022Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5615172Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5615272Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5615421Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5615510Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5615671Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5615764Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5615925Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5616115Z             unit of Hz
2025-01-07T17:55:37.5616211Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5616344Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5616428Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5616543Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5616649Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5616777Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5616891Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5617013Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5617116Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5617251Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5617338Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5617456Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5617558Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5617668Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5617739Z         """
2025-01-07T17:55:37.5617911Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5618023Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5618117Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5618184Z             {
2025-01-07T17:55:37.5618362Z                 "nus": packet_nus,
2025-01-07T17:55:37.5618484Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5618577Z                 "energies": packet_energies,
2025-01-07T17:55:37.5618694Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5618845Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5618987Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5619130Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5619239Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5619311Z             }
2025-01-07T17:55:37.5619377Z         )
2025-01-07T17:55:37.5619445Z     
2025-01-07T17:55:37.5619526Z         # Save other properties
2025-01-07T17:55:37.5619612Z         self.lines_df = lines_df
2025-01-07T17:55:37.5619695Z         self.r_inner = r_inner
2025-01-07T17:55:37.5619836Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5619974Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5620104Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5620214Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5620310Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5620383Z         )
2025-01-07T17:55:37.5620497Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5620579Z         self.t_inner = t_inner
2025-01-07T17:55:37.5620687Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5620785Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5620862Z         self.v_inner = v_inner
2025-01-07T17:55:37.5620943Z         self.v_outer = v_outer
2025-01-07T17:55:37.5621008Z     
2025-01-07T17:55:37.5621112Z         # First check if both options are provided
2025-01-07T17:55:37.5621293Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5621373Z >           raise ValueError(
2025-01-07T17:55:37.5621514Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5621675Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5621747Z             )
2025-01-07T17:55:37.5622204Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5622350Z 
2025-01-07T17:55:37.5622534Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5622738Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-07T17:55:37.5622743Z 
2025-01-07T17:55:37.5623020Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5623235Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5623469Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5623474Z 
2025-01-07T17:55:37.5623565Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5623674Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5627910Z         """
2025-01-07T17:55:37.5628046Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5628124Z     
2025-01-07T17:55:37.5628211Z         Parameters
2025-01-07T17:55:37.5628286Z         ----------
2025-01-07T17:55:37.5628450Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5628535Z             Simulation object.
2025-01-07T17:55:37.5628611Z     
2025-01-07T17:55:37.5628682Z         Returns
2025-01-07T17:55:37.5628760Z         -------
2025-01-07T17:55:37.5628906Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5628983Z         """
2025-01-07T17:55:37.5629129Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5629288Z 
2025-01-07T17:55:37.5629445Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5629568Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5629734Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5629894Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5630112Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5630257Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5630458Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5630538Z     return cls(
2025-01-07T17:55:37.5630647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5630657Z 
2025-01-07T17:55:37.5630933Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5631087Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5631272Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5631461Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5631664Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5631778Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5632113Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5632223Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5632389Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5632511Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5632629Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5632637Z 
2025-01-07T17:55:37.5632720Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5632895Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5633004Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5633206Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5633396Z        0.00025518])
2025-01-07T17:55:37.5633562Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5633756Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5633888Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5634019Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5634233Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5634347Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5634591Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5634741Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5634932Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5635056Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5635146Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5635262Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5635354Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5635516Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5635687Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5635923Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5636081Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5636244Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5636372Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5636535Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5636669Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5636777Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5636860Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5636865Z 
2025-01-07T17:55:37.5636936Z     def __init__(
2025-01-07T17:55:37.5637015Z         self,
2025-01-07T17:55:37.5637106Z         last_interaction_type,
2025-01-07T17:55:37.5637195Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5637294Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5637379Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5637469Z         last_interaction_in_r,
2025-01-07T17:55:37.5637540Z         lines_df,
2025-01-07T17:55:37.5637621Z         packet_nus,
2025-01-07T17:55:37.5637700Z         packet_energies,
2025-01-07T17:55:37.5637776Z         r_inner,
2025-01-07T17:55:37.5637861Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5638051Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5638149Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5638240Z         spectrum_wavelength,
2025-01-07T17:55:37.5638310Z         t_inner,
2025-01-07T17:55:37.5638397Z         time_of_simulation,
2025-01-07T17:55:37.5638473Z         time_explosion,
2025-01-07T17:55:37.5638551Z         v_inner,
2025-01-07T17:55:37.5638625Z         v_outer,
2025-01-07T17:55:37.5638695Z         velocity
2025-01-07T17:55:37.5638768Z     ):
2025-01-07T17:55:37.5638839Z         """
2025-01-07T17:55:37.5639079Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5639149Z     
2025-01-07T17:55:37.5639228Z         Parameters
2025-01-07T17:55:37.5639301Z         ----------
2025-01-07T17:55:37.5639400Z         last_interaction_type : np.array
2025-01-07T17:55:37.5639554Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5639788Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5639889Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5640046Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5640136Z             absorption (interaction in)
2025-01-07T17:55:37.5640243Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5640386Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5640481Z             emission (interaction out)
2025-01-07T17:55:37.5640587Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5640738Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5640839Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5640990Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5641083Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5641246Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5641343Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5641505Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5641583Z             unit of Hz
2025-01-07T17:55:37.5641679Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5641815Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5641900Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5642298Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5642420Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5642550Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5642664Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5642789Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5642893Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5643034Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5643128Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5643251Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5643354Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5643465Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5643540Z         """
2025-01-07T17:55:37.5643718Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5643833Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5643935Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5644004Z             {
2025-01-07T17:55:37.5644093Z                 "nus": packet_nus,
2025-01-07T17:55:37.5644221Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5644317Z                 "energies": packet_energies,
2025-01-07T17:55:37.5644440Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5644599Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5644746Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5644890Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5645003Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5645078Z             }
2025-01-07T17:55:37.5645151Z         )
2025-01-07T17:55:37.5645222Z     
2025-01-07T17:55:37.5645314Z         # Save other properties
2025-01-07T17:55:37.5645397Z         self.lines_df = lines_df
2025-01-07T17:55:37.5645482Z         self.r_inner = r_inner
2025-01-07T17:55:37.5645622Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5645763Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5645898Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5646130Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5646230Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5646305Z         )
2025-01-07T17:55:37.5646420Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5646505Z         self.t_inner = t_inner
2025-01-07T17:55:37.5646613Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5646714Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5646798Z         self.v_inner = v_inner
2025-01-07T17:55:37.5646884Z         self.v_outer = v_outer
2025-01-07T17:55:37.5646957Z     
2025-01-07T17:55:37.5647061Z         # First check if both options are provided
2025-01-07T17:55:37.5647238Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5647319Z >           raise ValueError(
2025-01-07T17:55:37.5647463Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5647630Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5647704Z             )
2025-01-07T17:55:37.5648056Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5648063Z 
2025-01-07T17:55:37.5648244Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5648459Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-07T17:55:37.5648558Z 
2025-01-07T17:55:37.5648836Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5649053Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5649292Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5649298Z 
2025-01-07T17:55:37.5649394Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5649506Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5649579Z         """
2025-01-07T17:55:37.5649667Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5649738Z     
2025-01-07T17:55:37.5649811Z         Parameters
2025-01-07T17:55:37.5649888Z         ----------
2025-01-07T17:55:37.5650030Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5650117Z             Simulation object.
2025-01-07T17:55:37.5650184Z     
2025-01-07T17:55:37.5650259Z         Returns
2025-01-07T17:55:37.5650333Z         -------
2025-01-07T17:55:37.5650469Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5650537Z         """
2025-01-07T17:55:37.5650676Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5650681Z 
2025-01-07T17:55:37.5650829Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5650939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5651105Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5651251Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5651469Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5651602Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5651806Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5651877Z     return cls(
2025-01-07T17:55:37.5652168Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5652176Z 
2025-01-07T17:55:37.5652463Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5652604Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5652785Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5653086Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5653296Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5653398Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5653586Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5653682Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5653852Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5653970Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5654083Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5654089Z 
2025-01-07T17:55:37.5654174Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5654351Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5654466Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5654666Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5654739Z        0.00025518])
2025-01-07T17:55:37.5654900Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5655099Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5655226Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5655469Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5655678Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5655780Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5656029Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5656177Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5656370Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5656481Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5656575Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5656685Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5656781Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5656939Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5657111Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5657238Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5657388Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5657559Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5657678Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5657844Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5657970Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5658084Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5658158Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5658167Z 
2025-01-07T17:55:37.5658242Z     def __init__(
2025-01-07T17:55:37.5658315Z         self,
2025-01-07T17:55:37.5658399Z         last_interaction_type,
2025-01-07T17:55:37.5658490Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5658577Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5658669Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5658749Z         last_interaction_in_r,
2025-01-07T17:55:37.5658910Z         lines_df,
2025-01-07T17:55:37.5658984Z         packet_nus,
2025-01-07T17:55:37.5659069Z         packet_energies,
2025-01-07T17:55:37.5659138Z         r_inner,
2025-01-07T17:55:37.5659228Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5659406Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5659506Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5659592Z         spectrum_wavelength,
2025-01-07T17:55:37.5659667Z         t_inner,
2025-01-07T17:55:37.5659745Z         time_of_simulation,
2025-01-07T17:55:37.5659831Z         time_explosion,
2025-01-07T17:55:37.5659905Z         v_inner,
2025-01-07T17:55:37.5659975Z         v_outer,
2025-01-07T17:55:37.5660050Z         velocity
2025-01-07T17:55:37.5660116Z     ):
2025-01-07T17:55:37.5660187Z         """
2025-01-07T17:55:37.5660417Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5660489Z     
2025-01-07T17:55:37.5660565Z         Parameters
2025-01-07T17:55:37.5660645Z         ----------
2025-01-07T17:55:37.5660740Z         last_interaction_type : np.array
2025-01-07T17:55:37.5660896Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5661013Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5661114Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5661259Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5661353Z             absorption (interaction in)
2025-01-07T17:55:37.5661533Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5661680Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5661772Z             emission (interaction out)
2025-01-07T17:55:37.5661868Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5662141Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5662243Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5662395Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5662479Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5662642Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5662730Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5662897Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5662972Z             unit of Hz
2025-01-07T17:55:37.5663077Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5663207Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5663295Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5663412Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5663519Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5663652Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5663763Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5663890Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5663987Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5664130Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5664214Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5664338Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5664434Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5664554Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5664621Z         """
2025-01-07T17:55:37.5664797Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5664907Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5664998Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5665070Z             {
2025-01-07T17:55:37.5665298Z                 "nus": packet_nus,
2025-01-07T17:55:37.5665429Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5665519Z                 "energies": packet_energies,
2025-01-07T17:55:37.5665642Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5665789Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5665937Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5666077Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5666198Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5666270Z             }
2025-01-07T17:55:37.5666338Z         )
2025-01-07T17:55:37.5666409Z     
2025-01-07T17:55:37.5666492Z         # Save other properties
2025-01-07T17:55:37.5666581Z         self.lines_df = lines_df
2025-01-07T17:55:37.5666660Z         self.r_inner = r_inner
2025-01-07T17:55:37.5666808Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5666941Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5667077Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5667184Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5667284Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5667350Z         )
2025-01-07T17:55:37.5667470Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5667664Z         self.t_inner = t_inner
2025-01-07T17:55:37.5667779Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5667872Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5667955Z         self.v_inner = v_inner
2025-01-07T17:55:37.5668036Z         self.v_outer = v_outer
2025-01-07T17:55:37.5668102Z     
2025-01-07T17:55:37.5668207Z         # First check if both options are provided
2025-01-07T17:55:37.5668379Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5668464Z >           raise ValueError(
2025-01-07T17:55:37.5668604Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5668769Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5668835Z             )
2025-01-07T17:55:37.5669193Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5669202Z 
2025-01-07T17:55:37.5669378Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5669591Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-07T17:55:37.5669596Z 
2025-01-07T17:55:37.5669875Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5670091Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5670333Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5670338Z 
2025-01-07T17:55:37.5670425Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5670551Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5670618Z         """
2025-01-07T17:55:37.5670709Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5670775Z     
2025-01-07T17:55:37.5670851Z         Parameters
2025-01-07T17:55:37.5670925Z         ----------
2025-01-07T17:55:37.5671070Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5671147Z             Simulation object.
2025-01-07T17:55:37.5671218Z     
2025-01-07T17:55:37.5671287Z         Returns
2025-01-07T17:55:37.5671362Z         -------
2025-01-07T17:55:37.5671495Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5671568Z         """
2025-01-07T17:55:37.5671783Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5671788Z 
2025-01-07T17:55:37.5672031Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5672148Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5672307Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5672456Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5672666Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5672809Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5673009Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5673084Z     return cls(
2025-01-07T17:55:37.5673194Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5673199Z 
2025-01-07T17:55:37.5673477Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5673628Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5673805Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5673984Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5674182Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5674288Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5674587Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5674687Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5674850Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5674965Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5675108Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5675121Z 
2025-01-07T17:55:37.5675198Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5675369Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5675473Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5675672Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5675740Z        0.00025518])
2025-01-07T17:55:37.5675899Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5676095Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5676222Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5676349Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5676557Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5676667Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5676909Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5677057Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5677244Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5677362Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5677451Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5677563Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5677652Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5677809Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5677975Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5678214Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5678365Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5678527Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5678650Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5678810Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5678939Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5679054Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5679132Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5679136Z 
2025-01-07T17:55:37.5679209Z     def __init__(
2025-01-07T17:55:37.5679282Z         self,
2025-01-07T17:55:37.5679366Z         last_interaction_type,
2025-01-07T17:55:37.5679458Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5679550Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5679633Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5679717Z         last_interaction_in_r,
2025-01-07T17:55:37.5679788Z         lines_df,
2025-01-07T17:55:37.5679866Z         packet_nus,
2025-01-07T17:55:37.5679944Z         packet_energies,
2025-01-07T17:55:37.5680018Z         r_inner,
2025-01-07T17:55:37.5680103Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5680286Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5680459Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5680547Z         spectrum_wavelength,
2025-01-07T17:55:37.5680617Z         t_inner,
2025-01-07T17:55:37.5680700Z         time_of_simulation,
2025-01-07T17:55:37.5680775Z         time_explosion,
2025-01-07T17:55:37.5680848Z         v_inner,
2025-01-07T17:55:37.5680918Z         v_outer,
2025-01-07T17:55:37.5680992Z         velocity
2025-01-07T17:55:37.5681061Z     ):
2025-01-07T17:55:37.5681133Z         """
2025-01-07T17:55:37.5681362Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5681429Z     
2025-01-07T17:55:37.5681507Z         Parameters
2025-01-07T17:55:37.5681576Z         ----------
2025-01-07T17:55:37.5681673Z         last_interaction_type : np.array
2025-01-07T17:55:37.5681822Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5682077Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5682217Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5682368Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5682456Z             absorption (interaction in)
2025-01-07T17:55:37.5682558Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5682700Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5682795Z             emission (interaction out)
2025-01-07T17:55:37.5682890Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5683040Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5683137Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5683286Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5683373Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5683532Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5683628Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5683789Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5683865Z             unit of Hz
2025-01-07T17:55:37.5683960Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5684097Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5684182Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5684417Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5684529Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5684652Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5684762Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5684884Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5684987Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5685122Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5685213Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5685332Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5685431Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5685540Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5685612Z         """
2025-01-07T17:55:37.5685786Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5685898Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5685996Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5686064Z             {
2025-01-07T17:55:37.5686147Z                 "nus": packet_nus,
2025-01-07T17:55:37.5686269Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5686364Z                 "energies": packet_energies,
2025-01-07T17:55:37.5686481Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5686787Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5686927Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5687071Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5687186Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5687262Z             }
2025-01-07T17:55:37.5687333Z         )
2025-01-07T17:55:37.5687403Z     
2025-01-07T17:55:37.5687486Z         # Save other properties
2025-01-07T17:55:37.5687573Z         self.lines_df = lines_df
2025-01-07T17:55:37.5687657Z         self.r_inner = r_inner
2025-01-07T17:55:37.5687796Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5687933Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5688063Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5688177Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5688277Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5688351Z         )
2025-01-07T17:55:37.5688468Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5688551Z         self.t_inner = t_inner
2025-01-07T17:55:37.5688657Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5688757Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5688837Z         self.v_inner = v_inner
2025-01-07T17:55:37.5688920Z         self.v_outer = v_outer
2025-01-07T17:55:37.5688986Z     
2025-01-07T17:55:37.5689094Z         # First check if both options are provided
2025-01-07T17:55:37.5689270Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5689349Z >           raise ValueError(
2025-01-07T17:55:37.5689494Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5689655Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5689732Z             )
2025-01-07T17:55:37.5690083Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5690089Z 
2025-01-07T17:55:37.5690265Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5690472Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-07T17:55:37.5690559Z 
2025-01-07T17:55:37.5690836Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5691055Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5691288Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5691293Z 
2025-01-07T17:55:37.5691385Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5691497Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5691573Z         """
2025-01-07T17:55:37.5691660Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5691733Z     
2025-01-07T17:55:37.5691805Z         Parameters
2025-01-07T17:55:37.5691880Z         ----------
2025-01-07T17:55:37.5692193Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5692282Z             Simulation object.
2025-01-07T17:55:37.5692348Z     
2025-01-07T17:55:37.5692425Z         Returns
2025-01-07T17:55:37.5692503Z         -------
2025-01-07T17:55:37.5692635Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5692706Z         """
2025-01-07T17:55:37.5692842Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5692847Z 
2025-01-07T17:55:37.5692998Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5693108Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5693271Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5693539Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5693755Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5693886Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5694087Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5694166Z     return cls(
2025-01-07T17:55:37.5694271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5694276Z 
2025-01-07T17:55:37.5694551Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5694688Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5694866Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5695040Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5695245Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5695346Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5695532Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5695628Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5695798Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5695915Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5696027Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5696032Z 
2025-01-07T17:55:37.5696115Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5696277Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5696386Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5696585Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5696660Z        0.00025518])
2025-01-07T17:55:37.5696817Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5697017Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5697141Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5697379Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5697588Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5697690Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5697938Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5698081Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5698276Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5698390Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5698484Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5698590Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5698684Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5698843Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5699014Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5699143Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5699291Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5699458Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5699659Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5699826Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5699951Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5700066Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5700144Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5700152Z 
2025-01-07T17:55:37.5700221Z     def __init__(
2025-01-07T17:55:37.5700295Z         self,
2025-01-07T17:55:37.5700380Z         last_interaction_type,
2025-01-07T17:55:37.5700470Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5700556Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5700642Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5700721Z         last_interaction_in_r,
2025-01-07T17:55:37.5700797Z         lines_df,
2025-01-07T17:55:37.5700870Z         packet_nus,
2025-01-07T17:55:37.5700956Z         packet_energies,
2025-01-07T17:55:37.5701025Z         r_inner,
2025-01-07T17:55:37.5701115Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5701293Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5701393Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5701474Z         spectrum_wavelength,
2025-01-07T17:55:37.5701549Z         t_inner,
2025-01-07T17:55:37.5701636Z         time_of_simulation,
2025-01-07T17:55:37.5701712Z         time_explosion,
2025-01-07T17:55:37.5701785Z         v_inner,
2025-01-07T17:55:37.5701854Z         v_outer,
2025-01-07T17:55:37.5702036Z         velocity
2025-01-07T17:55:37.5702106Z     ):
2025-01-07T17:55:37.5702180Z         """
2025-01-07T17:55:37.5702410Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5702480Z     
2025-01-07T17:55:37.5702551Z         Parameters
2025-01-07T17:55:37.5702627Z         ----------
2025-01-07T17:55:37.5702720Z         last_interaction_type : np.array
2025-01-07T17:55:37.5702873Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5702992Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5703094Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5703239Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5703331Z             absorption (interaction in)
2025-01-07T17:55:37.5703550Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5703694Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5703783Z             emission (interaction out)
2025-01-07T17:55:37.5703878Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5704033Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5704126Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5704278Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5704365Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5704531Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5704617Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5704780Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5704857Z             unit of Hz
2025-01-07T17:55:37.5704956Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5705089Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5705173Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5705286Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5705393Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5705519Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5705625Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5705858Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5705956Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5706098Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5706181Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5706308Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5706404Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5706524Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5706595Z         """
2025-01-07T17:55:37.5706767Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5706875Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5706966Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5707038Z             {
2025-01-07T17:55:37.5707116Z                 "nus": packet_nus,
2025-01-07T17:55:37.5707245Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5707339Z                 "energies": packet_energies,
2025-01-07T17:55:37.5707461Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5707609Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5707757Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5707906Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5708018Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5708091Z             }
2025-01-07T17:55:37.5708158Z         )
2025-01-07T17:55:37.5708227Z     
2025-01-07T17:55:37.5708309Z         # Save other properties
2025-01-07T17:55:37.5708396Z         self.lines_df = lines_df
2025-01-07T17:55:37.5708474Z         self.r_inner = r_inner
2025-01-07T17:55:37.5708617Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5708756Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5708893Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5709001Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5709101Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5709167Z         )
2025-01-07T17:55:37.5709287Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5709453Z         self.t_inner = t_inner
2025-01-07T17:55:37.5709561Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5709658Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5709736Z         self.v_inner = v_inner
2025-01-07T17:55:37.5709818Z         self.v_outer = v_outer
2025-01-07T17:55:37.5709883Z     
2025-01-07T17:55:37.5709990Z         # First check if both options are provided
2025-01-07T17:55:37.5710159Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5710245Z >           raise ValueError(
2025-01-07T17:55:37.5710382Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5710549Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5710617Z             )
2025-01-07T17:55:37.5710968Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5710977Z 
2025-01-07T17:55:37.5711151Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5711363Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-07T17:55:37.5711367Z 
2025-01-07T17:55:37.5711645Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5711857Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5712193Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5712327Z 
2025-01-07T17:55:37.5712423Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5712541Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5712609Z         """
2025-01-07T17:55:37.5712700Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5712770Z     
2025-01-07T17:55:37.5712842Z         Parameters
2025-01-07T17:55:37.5712922Z         ----------
2025-01-07T17:55:37.5713064Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5713148Z             Simulation object.
2025-01-07T17:55:37.5713216Z     
2025-01-07T17:55:37.5713290Z         Returns
2025-01-07T17:55:37.5713359Z         -------
2025-01-07T17:55:37.5713491Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5713559Z         """
2025-01-07T17:55:37.5713698Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5713702Z 
2025-01-07T17:55:37.5713851Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5713963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5714121Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5714274Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5714489Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5714623Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5714825Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5714899Z     return cls(
2025-01-07T17:55:37.5715010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5715015Z 
2025-01-07T17:55:37.5715286Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5715428Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5715605Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5715784Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5715983Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5716081Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5716377Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5716474Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5716644Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5716753Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5716868Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5716873Z 
2025-01-07T17:55:37.5716955Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5717124Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5717229Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5717426Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5717499Z        0.00025518])
2025-01-07T17:55:37.5717655Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5717854Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5717977Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5718110Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5718315Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5718423Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5718746Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5718895Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5719085Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5719198Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5719294Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5719402Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5719497Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5719651Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5719826Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5719949Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5720105Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5720272Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5720396Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5720558Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5720687Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5720799Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5720876Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5720880Z 
2025-01-07T17:55:37.5720955Z     def __init__(
2025-01-07T17:55:37.5721024Z         self,
2025-01-07T17:55:37.5721110Z         last_interaction_type,
2025-01-07T17:55:37.5721196Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5721289Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5721378Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5721463Z         last_interaction_in_r,
2025-01-07T17:55:37.5721533Z         lines_df,
2025-01-07T17:55:37.5721611Z         packet_nus,
2025-01-07T17:55:37.5721693Z         packet_energies,
2025-01-07T17:55:37.5721763Z         r_inner,
2025-01-07T17:55:37.5721850Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5722230Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5722464Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5722547Z         spectrum_wavelength,
2025-01-07T17:55:37.5722624Z         t_inner,
2025-01-07T17:55:37.5722702Z         time_of_simulation,
2025-01-07T17:55:37.5722782Z         time_explosion,
2025-01-07T17:55:37.5722854Z         v_inner,
2025-01-07T17:55:37.5722928Z         v_outer,
2025-01-07T17:55:37.5722996Z         velocity
2025-01-07T17:55:37.5723069Z     ):
2025-01-07T17:55:37.5723136Z         """
2025-01-07T17:55:37.5723371Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5723444Z     
2025-01-07T17:55:37.5723523Z         Parameters
2025-01-07T17:55:37.5723596Z         ----------
2025-01-07T17:55:37.5723693Z         last_interaction_type : np.array
2025-01-07T17:55:37.5723850Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5723966Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5724073Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5724220Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5724313Z             absorption (interaction in)
2025-01-07T17:55:37.5724411Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5724561Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5724648Z             emission (interaction out)
2025-01-07T17:55:37.5724751Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5725023Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5725124Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5725270Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5725359Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5725525Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5725621Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5725785Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5725858Z             unit of Hz
2025-01-07T17:55:37.5725961Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5726088Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5726177Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5726286Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5726401Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5726525Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5726635Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5726756Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5726858Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5726997Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5727086Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5727213Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5727308Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5727423Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5727491Z         """
2025-01-07T17:55:37.5727668Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5727772Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5727871Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5727940Z             {
2025-01-07T17:55:37.5728023Z                 "nus": packet_nus,
2025-01-07T17:55:37.5728150Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5728245Z                 "energies": packet_energies,
2025-01-07T17:55:37.5728371Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5728604Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5728752Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5728891Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5729006Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5729074Z             }
2025-01-07T17:55:37.5729145Z         )
2025-01-07T17:55:37.5729210Z     
2025-01-07T17:55:37.5729298Z         # Save other properties
2025-01-07T17:55:37.5729384Z         self.lines_df = lines_df
2025-01-07T17:55:37.5729467Z         self.r_inner = r_inner
2025-01-07T17:55:37.5729609Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5729748Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5729882Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5729990Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5730094Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5730161Z         )
2025-01-07T17:55:37.5730283Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5730362Z         self.t_inner = t_inner
2025-01-07T17:55:37.5730475Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5730568Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5730654Z         self.v_inner = v_inner
2025-01-07T17:55:37.5730730Z         self.v_outer = v_outer
2025-01-07T17:55:37.5730881Z     
2025-01-07T17:55:37.5730985Z         # First check if both options are provided
2025-01-07T17:55:37.5731165Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5731245Z >           raise ValueError(
2025-01-07T17:55:37.5731389Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5731554Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5731626Z             )
2025-01-07T17:55:37.5732153Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5732164Z 
2025-01-07T17:55:37.5732350Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5732569Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-07T17:55:37.5732574Z 
2025-01-07T17:55:37.5732849Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5733074Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5733308Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5733319Z 
2025-01-07T17:55:37.5733407Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5733525Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5733598Z         """
2025-01-07T17:55:37.5733690Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5733756Z     
2025-01-07T17:55:37.5733835Z         Parameters
2025-01-07T17:55:37.5733908Z         ----------
2025-01-07T17:55:37.5734054Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5734133Z             Simulation object.
2025-01-07T17:55:37.5734206Z     
2025-01-07T17:55:37.5734275Z         Returns
2025-01-07T17:55:37.5734350Z         -------
2025-01-07T17:55:37.5734482Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5734555Z         """
2025-01-07T17:55:37.5734692Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5734702Z 
2025-01-07T17:55:37.5734845Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5734960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5735261Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5735412Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5735623Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5735759Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5735955Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5736032Z     return cls(
2025-01-07T17:55:37.5736138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5736147Z 
2025-01-07T17:55:37.5736428Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5736571Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5736747Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5736924Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5737127Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5737235Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5737418Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5737519Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5737682Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5737908Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5738020Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5738030Z 
2025-01-07T17:55:37.5738108Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5738278Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5738383Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5738587Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5738658Z        0.00025518])
2025-01-07T17:55:37.5738819Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5739013Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5739139Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5739265Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5739476Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5739583Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5739823Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5739974Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5740166Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5740284Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5740369Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5740487Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5740578Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5740737Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5740913Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5741040Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5741193Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5741360Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5741565Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5741727Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5741858Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5742067Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5742151Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5742155Z 
2025-01-07T17:55:37.5742226Z     def __init__(
2025-01-07T17:55:37.5742304Z         self,
2025-01-07T17:55:37.5742387Z         last_interaction_type,
2025-01-07T17:55:37.5742477Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5742570Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5742656Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5742740Z         last_interaction_in_r,
2025-01-07T17:55:37.5742811Z         lines_df,
2025-01-07T17:55:37.5742889Z         packet_nus,
2025-01-07T17:55:37.5742970Z         packet_energies,
2025-01-07T17:55:37.5743044Z         r_inner,
2025-01-07T17:55:37.5743131Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5743315Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5743410Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5743495Z         spectrum_wavelength,
2025-01-07T17:55:37.5743565Z         t_inner,
2025-01-07T17:55:37.5743649Z         time_of_simulation,
2025-01-07T17:55:37.5743725Z         time_explosion,
2025-01-07T17:55:37.5743915Z         v_inner,
2025-01-07T17:55:37.5743985Z         v_outer,
2025-01-07T17:55:37.5744058Z         velocity
2025-01-07T17:55:37.5744129Z     ):
2025-01-07T17:55:37.5744196Z         """
2025-01-07T17:55:37.5744427Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5744493Z     
2025-01-07T17:55:37.5744569Z         Parameters
2025-01-07T17:55:37.5744640Z         ----------
2025-01-07T17:55:37.5744742Z         last_interaction_type : np.array
2025-01-07T17:55:37.5744894Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5745011Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5745108Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5745256Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5745345Z             absorption (interaction in)
2025-01-07T17:55:37.5745448Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5745594Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5745687Z             emission (interaction out)
2025-01-07T17:55:37.5745784Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5745933Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5746030Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5746181Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5746269Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5746424Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5746518Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5746676Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5746753Z             unit of Hz
2025-01-07T17:55:37.5746848Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5746981Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5747069Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5747182Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5747296Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5747420Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5747529Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5747764Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5747865Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5748001Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5748089Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5748208Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5748308Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5748417Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5748493Z         """
2025-01-07T17:55:37.5748665Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5748775Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5748872Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5748940Z             {
2025-01-07T17:55:37.5749022Z                 "nus": packet_nus,
2025-01-07T17:55:37.5749151Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5749246Z                 "energies": packet_energies,
2025-01-07T17:55:37.5749363Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5749514Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5749658Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5749801Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5750012Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5750087Z             }
2025-01-07T17:55:37.5750154Z         )
2025-01-07T17:55:37.5750223Z     
2025-01-07T17:55:37.5750309Z         # Save other properties
2025-01-07T17:55:37.5750390Z         self.lines_df = lines_df
2025-01-07T17:55:37.5750475Z         self.r_inner = r_inner
2025-01-07T17:55:37.5750613Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5750757Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5750889Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5751000Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5751096Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5751169Z         )
2025-01-07T17:55:37.5751285Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5751370Z         self.t_inner = t_inner
2025-01-07T17:55:37.5751478Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5751582Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5751661Z         self.v_inner = v_inner
2025-01-07T17:55:37.5751742Z         self.v_outer = v_outer
2025-01-07T17:55:37.5751813Z     
2025-01-07T17:55:37.5751914Z         # First check if both options are provided
2025-01-07T17:55:37.5752186Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5752271Z >           raise ValueError(
2025-01-07T17:55:37.5752415Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5752576Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5752648Z             )
2025-01-07T17:55:37.5752997Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5753002Z 
2025-01-07T17:55:37.5753183Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5753394Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-07T17:55:37.5753404Z 
2025-01-07T17:55:37.5753677Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5753898Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5754252Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5754257Z 
2025-01-07T17:55:37.5754352Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5754464Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5754535Z         """
2025-01-07T17:55:37.5754621Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5754692Z     
2025-01-07T17:55:37.5754763Z         Parameters
2025-01-07T17:55:37.5754840Z         ----------
2025-01-07T17:55:37.5754982Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5755072Z             Simulation object.
2025-01-07T17:55:37.5755142Z     
2025-01-07T17:55:37.5755211Z         Returns
2025-01-07T17:55:37.5755285Z         -------
2025-01-07T17:55:37.5755417Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5755491Z         """
2025-01-07T17:55:37.5755624Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5755632Z 
2025-01-07T17:55:37.5755779Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5755888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5756048Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5756193Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5756410Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5756542Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5756853Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5756930Z     return cls(
2025-01-07T17:55:37.5757035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5757040Z 
2025-01-07T17:55:37.5757316Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5757457Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5757637Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5757811Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5758013Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5758112Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5758300Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5758404Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5758564Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5758683Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5758794Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5758803Z 
2025-01-07T17:55:37.5758886Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5759050Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5759161Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5759353Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5759428Z        0.00025518])
2025-01-07T17:55:37.5759584Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5759784Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5759912Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5760038Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5760247Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5760350Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5760698Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5760843Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5761038Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5761153Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5761245Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5761362Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5761453Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5761609Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5761777Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5761905Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5762247Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5762424Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5762543Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5762706Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5762832Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5763069Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5763147Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5763152Z 
2025-01-07T17:55:37.5763222Z     def __init__(
2025-01-07T17:55:37.5763295Z         self,
2025-01-07T17:55:37.5763377Z         last_interaction_type,
2025-01-07T17:55:37.5763468Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5763556Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5763653Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5763734Z         last_interaction_in_r,
2025-01-07T17:55:37.5763808Z         lines_df,
2025-01-07T17:55:37.5763881Z         packet_nus,
2025-01-07T17:55:37.5763966Z         packet_energies,
2025-01-07T17:55:37.5764037Z         r_inner,
2025-01-07T17:55:37.5764127Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5764308Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5764410Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5764502Z         spectrum_wavelength,
2025-01-07T17:55:37.5764572Z         t_inner,
2025-01-07T17:55:37.5764659Z         time_of_simulation,
2025-01-07T17:55:37.5764734Z         time_explosion,
2025-01-07T17:55:37.5764808Z         v_inner,
2025-01-07T17:55:37.5764876Z         v_outer,
2025-01-07T17:55:37.5764949Z         velocity
2025-01-07T17:55:37.5765015Z     ):
2025-01-07T17:55:37.5765088Z         """
2025-01-07T17:55:37.5765318Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5765389Z     
2025-01-07T17:55:37.5765461Z         Parameters
2025-01-07T17:55:37.5765536Z         ----------
2025-01-07T17:55:37.5765629Z         last_interaction_type : np.array
2025-01-07T17:55:37.5765784Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5765899Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5766000Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5766152Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5766250Z             absorption (interaction in)
2025-01-07T17:55:37.5766354Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5766498Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5766589Z             emission (interaction out)
2025-01-07T17:55:37.5766684Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5766952Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5767050Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5767204Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5767288Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5767453Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5767542Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5767710Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5767785Z             unit of Hz
2025-01-07T17:55:37.5767880Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5768015Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5768100Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5768214Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5768327Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5768452Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5768558Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5768683Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5768782Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5768921Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5769008Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5769214Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5769313Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5769425Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5769497Z         """
2025-01-07T17:55:37.5769671Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5769779Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5769872Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5769944Z             {
2025-01-07T17:55:37.5770023Z                 "nus": packet_nus,
2025-01-07T17:55:37.5770151Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5770240Z                 "energies": packet_energies,
2025-01-07T17:55:37.5770361Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5770510Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5770662Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5770804Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5770916Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5770988Z             }
2025-01-07T17:55:37.5771054Z         )
2025-01-07T17:55:37.5771128Z     
2025-01-07T17:55:37.5771214Z         # Save other properties
2025-01-07T17:55:37.5771300Z         self.lines_df = lines_df
2025-01-07T17:55:37.5771379Z         self.r_inner = r_inner
2025-01-07T17:55:37.5771523Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5771659Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5771799Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5771907Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5772172Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5772247Z         )
2025-01-07T17:55:37.5772371Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5772455Z         self.t_inner = t_inner
2025-01-07T17:55:37.5772565Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5772662Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5772741Z         self.v_inner = v_inner
2025-01-07T17:55:37.5772943Z         self.v_outer = v_outer
2025-01-07T17:55:37.5773009Z     
2025-01-07T17:55:37.5773115Z         # First check if both options are provided
2025-01-07T17:55:37.5773288Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5773372Z >           raise ValueError(
2025-01-07T17:55:37.5773512Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5773678Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5773745Z             )
2025-01-07T17:55:37.5774104Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5774110Z 
2025-01-07T17:55:37.5774286Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5774398Z =============================== warnings summary ===============================
2025-01-07T17:55:37.5774514Z tardis/io/configuration/config_validator.py:6
2025-01-07T17:55:37.5774628Z tardis/io/configuration/config_validator.py:6
2025-01-07T17:55:37.5774944Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-07T17:55:37.5775043Z   
2025-01-07T17:55:37.5776200Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-07T17:55:37.5776318Z 
2025-01-07T17:55:37.5776562Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-07T17:55:37.5776920Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-07T17:55:37.5776993Z   
2025-01-07T17:55:37.5777149Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-07T17:55:37.5777304Z   given by the platformdirs library.  To remove this warning and
2025-01-07T17:55:37.5777469Z   see the appropriate new directories, set the environment variable
2025-01-07T17:55:37.5777616Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-07T17:55:37.5777769Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-07T17:55:37.5777774Z 
2025-01-07T17:55:37.5782188Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-07T17:55:37.5782516Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:37.5782739Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-07T17:55:37.5782813Z   
2025-01-07T17:55:37.5782879Z   
2025-01-07T17:55:37.5783094Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:37.5783354Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-07T17:55:37.5783365Z 
2025-01-07T17:55:37.5783570Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-07T17:55:37.5783798Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-07T17:55:37.5784040Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-07T17:55:37.5784219Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-07T17:55:37.5784542Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-07T17:55:37.5784617Z   
2025-01-07T17:55:37.5784726Z   The current CMFGEN model parser is deprecated
2025-01-07T17:55:37.5784732Z 
2025-01-07T17:55:37.5784850Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-07T17:55:37.5785032Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-07T17:55:37.5785355Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-07T17:55:37.5785599Z   
2025-01-07T17:55:37.5785718Z   The current CMFGEN model parser is deprecated
2025-01-07T17:55:37.5785723Z 
2025-01-07T17:55:37.5785932Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-07T17:55:37.5786309Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-07T17:55:37.5786381Z   
2025-01-07T17:55:37.5786799Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-07T17:55:37.5786809Z 
2025-01-07T17:55:37.5786916Z tardis/model/tests/test_base.py: 6 warnings
2025-01-07T17:55:37.5787034Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-07T17:55:37.5787214Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-07T17:55:37.5787486Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-07T17:55:37.5787563Z   
2025-01-07T17:55:37.5787668Z   v_inner_boundary < 0, assuming default value
2025-01-07T17:55:37.5787673Z 
2025-01-07T17:55:37.5787777Z tardis/model/tests/test_base.py: 6 warnings
2025-01-07T17:55:37.5787892Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-07T17:55:37.5788074Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-07T17:55:37.5788348Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-07T17:55:37.5788415Z   
2025-01-07T17:55:37.5788522Z   v_outer_boundary < 0, assuming default value
2025-01-07T17:55:37.5788664Z 
2025-01-07T17:55:37.5789130Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-07T17:55:37.5789439Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-07T17:55:37.5789505Z   
2025-01-07T17:55:37.5789786Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-07T17:55:37.5790244Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-07T17:55:37.5790316Z   
2025-01-07T17:55:37.5790840Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-07T17:55:37.5790850Z 
2025-01-07T17:55:37.5790995Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-07T17:55:37.5791283Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5791348Z   
2025-01-07T17:55:37.5791441Z   Property "atomic_mass" not found
2025-01-07T17:55:37.5791447Z 
2025-01-07T17:55:37.5791880Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-07T17:55:37.5792374Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-07T17:55:37.5792662Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5792726Z   
2025-01-07T17:55:37.5792828Z   Property "j_blues_norm_factor" not found
2025-01-07T17:55:37.5792833Z 
2025-01-07T17:55:37.5793245Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-07T17:55:37.5793624Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-07T17:55:37.5793899Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5793969Z   
2025-01-07T17:55:37.5794060Z   Property "j_blue_estimator" not found
2025-01-07T17:55:37.5794176Z 
2025-01-07T17:55:37.5794572Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-07T17:55:37.5794918Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-07T17:55:37.5795191Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5795261Z   
2025-01-07T17:55:37.5795347Z   Property "volume" not found
2025-01-07T17:55:37.5795356Z 
2025-01-07T17:55:37.5795752Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-07T17:55:37.5796086Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-07T17:55:37.5796365Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5796439Z   
2025-01-07T17:55:37.5796523Z   Property "r_inner" not found
2025-01-07T17:55:37.5796528Z 
2025-01-07T17:55:37.5796742Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-07T17:55:37.5796947Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-07T17:55:37.5797153Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-07T17:55:37.5797388Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-07T17:55:37.5797567Z   
2025-01-07T17:55:37.5797756Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-07T17:55:37.5797761Z 
2025-01-07T17:55:37.5797973Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-07T17:55:37.5798170Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-07T17:55:37.5798239Z   
2025-01-07T17:55:37.5798574Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-07T17:55:37.5798579Z 
2025-01-07T17:55:37.5798786Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-07T17:55:37.5798986Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-07T17:55:37.5799050Z   
2025-01-07T17:55:37.5799406Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-07T17:55:37.5799415Z 
2025-01-07T17:55:37.5799628Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-01-07T17:55:37.5799746Z   <string>:3: NumbaPendingDeprecationWarning:
2025-01-07T17:55:37.5799811Z   
2025-01-07T17:55:37.5800875Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-01-07T17:55:37.5800962Z   Exception origin:
2025-01-07T17:55:37.5801216Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-01-07T17:55:37.5801309Z       raise TypeError(msg) from None
2025-01-07T17:55:37.5801398Z   [0m[0m
2025-01-07T17:55:37.5801404Z 
2025-01-07T17:55:37.5801763Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5802313Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5802675Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5803021Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5803492Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5803836Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5804189Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:37.5804259Z   
2025-01-07T17:55:37.5804449Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-07T17:55:37.5804630Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:37.5804872Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:37.5804882Z 
2025-01-07T17:55:37.5805230Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5805577Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5805931Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:37.5806001Z   
2025-01-07T17:55:37.5806179Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-07T17:55:37.5806352Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:37.5806585Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:37.5806692Z 
2025-01-07T17:55:37.5807050Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5807402Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:37.5807466Z   
2025-01-07T17:55:37.5807644Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-07T17:55:37.5807813Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:37.5808049Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:37.5808054Z 
2025-01-07T17:55:37.5808480Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-07T17:55:37.5808813Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-07T17:55:37.5808883Z   
2025-01-07T17:55:37.5809163Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-07T17:55:37.5809168Z 
2025-01-07T17:55:37.5809430Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:37.5809638Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-07T17:55:37.5809710Z   
2025-01-07T17:55:37.5809774Z   
2025-01-07T17:55:37.5809991Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:37.5810252Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-07T17:55:37.5810257Z 
2025-01-07T17:55:37.5810517Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:37.5810718Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-07T17:55:37.5810788Z   
2025-01-07T17:55:37.5810862Z   
2025-01-07T17:55:37.5811062Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:37.5811241Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-07T17:55:37.5811246Z 
2025-01-07T17:55:37.5811495Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:37.5811741Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-07T17:55:37.5811890Z   
2025-01-07T17:55:37.5812254Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-07T17:55:37.5812262Z 
2025-01-07T17:55:37.5812457Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-07T17:55:37.5812462Z 
2025-01-07T17:55:37.5812626Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-07T17:55:37.5812750Z Coverage HTML written to dir coverage_html_report
2025-01-07T17:55:37.5812849Z Coverage XML written to file coverage.xml
2025-01-07T17:55:37.5812858Z 
2025-01-07T17:55:37.5812984Z =========================== short test summary info ============================
2025-01-07T17:55:37.5813702Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5814413Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5815122Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5815910Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5816820Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5817610Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5818382Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5819163Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5819944Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5820718Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5821497Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5822379Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5823261Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5824052Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5824835Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5829836Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5830702Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5831694Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5832622Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5833425Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5834206Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5834981Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5835761Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5836536Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5837304Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5838080Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5838996Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5839732Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5840478Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5841202Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5842057Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5842981Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5843717Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5844466Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5845191Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5845905Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5846617Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5847321Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5848026Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5848733Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5849570Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5850281Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5850991Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5851728Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5852642Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5853380Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5854235Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5854970Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5855699Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5856433Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5857168Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5857889Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5858596Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5859298Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5860104Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5860997Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5861783Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5862677Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5863472Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5864254Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5865163Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5865952Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5866734Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5867517Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5868312Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5869104Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5869893Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5870673Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5871462Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5872470Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5873215Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5873962Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5874705Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5875463Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5876319Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5877059Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5877796Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5878533Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5879288Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5880023Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5880771Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5881511Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5882434Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5883310Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5884050Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5884796Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5885508Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5886216Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5886925Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5887741Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5888451Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5889163Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5889869Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5890875Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5892194Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5892917Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5893645Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5894362Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5895230Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5895947Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5896662Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5897382Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5897665Z = 1336 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 90 warnings, 102 errors in 727.16s (0:12:07) =
2025-01-07T17:55:39.3296269Z ##[error]Process completed with exit code 1.
