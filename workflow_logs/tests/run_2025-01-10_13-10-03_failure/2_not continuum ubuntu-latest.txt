2025-01-10T13:10:05.3746503Z Requested labels: ubuntu-latest
2025-01-10T13:10:05.3746787Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2935/merge
2025-01-10T13:10:05.3746899Z Waiting for a runner to pick up this job...
2025-01-10T13:10:05.5970984Z Job is waiting for a hosted runner to come online.
2025-01-10T13:10:09.2371204Z Job is about to start running on the hosted runner: GitHub Actions 40 (hosted)
2025-01-10T13:10:10.8830166Z Current runner version: '2.321.0'
2025-01-10T13:10:10.8857717Z ##[group]Operating System
2025-01-10T13:10:10.8858898Z Ubuntu
2025-01-10T13:10:10.8859652Z 24.04.1
2025-01-10T13:10:10.8860364Z LTS
2025-01-10T13:10:10.8861194Z ##[endgroup]
2025-01-10T13:10:10.8862040Z ##[group]Runner Image
2025-01-10T13:10:10.8862871Z Image: ubuntu-24.04
2025-01-10T13:10:10.8864013Z Version: 20250105.1.0
2025-01-10T13:10:10.8865795Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250105.1/images/ubuntu/Ubuntu2404-Readme.md
2025-01-10T13:10:10.8868017Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250105.1
2025-01-10T13:10:10.8869630Z ##[endgroup]
2025-01-10T13:10:10.8870490Z ##[group]Runner Image Provisioner
2025-01-10T13:10:10.8871397Z 2.0.404.1
2025-01-10T13:10:10.8872237Z ##[endgroup]
2025-01-10T13:10:10.8875978Z ##[group]GITHUB_TOKEN Permissions
2025-01-10T13:10:10.8879018Z Actions: read
2025-01-10T13:10:10.8880120Z Attestations: read
2025-01-10T13:10:10.8881174Z Checks: read
2025-01-10T13:10:10.8881942Z Contents: read
2025-01-10T13:10:10.8882739Z Deployments: read
2025-01-10T13:10:10.8883879Z Discussions: read
2025-01-10T13:10:10.8884674Z Issues: read
2025-01-10T13:10:10.8885466Z Metadata: read
2025-01-10T13:10:10.8886469Z Packages: read
2025-01-10T13:10:10.8887252Z Pages: read
2025-01-10T13:10:10.8888145Z PullRequests: read
2025-01-10T13:10:10.8888943Z RepositoryProjects: read
2025-01-10T13:10:10.8889882Z SecurityEvents: read
2025-01-10T13:10:10.8890751Z Statuses: read
2025-01-10T13:10:10.8891240Z ##[endgroup]
2025-01-10T13:10:10.8895135Z Secret source: None
2025-01-10T13:10:10.8895939Z Prepare workflow directory
2025-01-10T13:10:10.9554459Z Prepare all required actions
2025-01-10T13:10:10.9590719Z Getting action download info
2025-01-10T13:10:11.1173482Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-10T13:10:11.2175470Z Download action repository 'actions/upload-artifact@v4' (SHA:6f51ac03b9356f520e9adb1b1b7802705f340c2b)
2025-01-10T13:10:11.3713640Z Complete job name: not continuum ubuntu-latest 
2025-01-10T13:10:11.4486527Z ##[group]Run actions/checkout@v4
2025-01-10T13:10:11.4487432Z with:
2025-01-10T13:10:11.4487857Z   repository: tardis-sn/tardis
2025-01-10T13:10:11.4488579Z   token: ***
2025-01-10T13:10:11.4488974Z   ssh-strict: true
2025-01-10T13:10:11.4489394Z   ssh-user: git
2025-01-10T13:10:11.4489811Z   persist-credentials: true
2025-01-10T13:10:11.4490273Z   clean: true
2025-01-10T13:10:11.4490685Z   sparse-checkout-cone-mode: true
2025-01-10T13:10:11.4491170Z   fetch-depth: 1
2025-01-10T13:10:11.4491568Z   fetch-tags: false
2025-01-10T13:10:11.4491978Z   show-progress: true
2025-01-10T13:10:11.4492382Z   lfs: false
2025-01-10T13:10:11.4492764Z   submodules: false
2025-01-10T13:10:11.4493486Z   set-safe-directory: true
2025-01-10T13:10:11.4494253Z env:
2025-01-10T13:10:11.4494638Z   CACHE_NUMBER: 0
2025-01-10T13:10:11.4495830Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:11.4497142Z   CODECOV_TOKEN: 
2025-01-10T13:10:11.4497541Z ##[endgroup]
2025-01-10T13:10:11.6517994Z Syncing repository: tardis-sn/tardis
2025-01-10T13:10:11.6519877Z ##[group]Getting Git version info
2025-01-10T13:10:11.6520564Z Working directory is '/home/runner/work/tardis/tardis'
2025-01-10T13:10:11.6521488Z [command]/usr/bin/git version
2025-01-10T13:10:11.6578820Z git version 2.47.1
2025-01-10T13:10:11.6607087Z ##[endgroup]
2025-01-10T13:10:11.6622368Z Temporarily overriding HOME='/home/runner/work/_temp/98139a20-a983-4372-b79f-9b218ae37fff' before making global git config changes
2025-01-10T13:10:11.6624684Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:10:11.6629400Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-10T13:10:11.6667772Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-01-10T13:10:11.6671930Z ##[group]Initializing the repository
2025-01-10T13:10:11.6676215Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-01-10T13:10:11.6759404Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-10T13:10:11.6760853Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-10T13:10:11.6761834Z hint: of your new repositories, which will suppress this warning, call:
2025-01-10T13:10:11.6762543Z hint:
2025-01-10T13:10:11.6763470Z hint: 	git config --global init.defaultBranch <name>
2025-01-10T13:10:11.6764367Z hint:
2025-01-10T13:10:11.6764925Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-10T13:10:11.6765846Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-10T13:10:11.6766578Z hint:
2025-01-10T13:10:11.6766957Z hint: 	git branch -m <name>
2025-01-10T13:10:11.6767657Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-01-10T13:10:11.6776143Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-10T13:10:11.6812660Z ##[endgroup]
2025-01-10T13:10:11.6814192Z ##[group]Disabling automatic garbage collection
2025-01-10T13:10:11.6818020Z [command]/usr/bin/git config --local gc.auto 0
2025-01-10T13:10:11.6850343Z ##[endgroup]
2025-01-10T13:10:11.6860251Z ##[group]Setting up auth
2025-01-10T13:10:11.6861041Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:10:11.6892916Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:10:11.7224357Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:10:11.7256582Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:10:11.7489283Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-10T13:10:11.7528990Z ##[endgroup]
2025-01-10T13:10:11.7529766Z ##[group]Fetching the repository
2025-01-10T13:10:11.7539206Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +530e3ecc6ef97edbc3e00b1396c217c6d510fd0a:refs/remotes/pull/2935/merge
2025-01-10T13:10:12.9659906Z From https://github.com/tardis-sn/tardis
2025-01-10T13:10:12.9661689Z  * [new ref]         530e3ecc6ef97edbc3e00b1396c217c6d510fd0a -> pull/2935/merge
2025-01-10T13:10:12.9686234Z ##[endgroup]
2025-01-10T13:10:12.9686972Z ##[group]Determining the checkout info
2025-01-10T13:10:12.9688432Z ##[endgroup]
2025-01-10T13:10:12.9693969Z [command]/usr/bin/git sparse-checkout disable
2025-01-10T13:10:12.9733669Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-10T13:10:12.9764275Z ##[group]Checking out the ref
2025-01-10T13:10:12.9768658Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2935/merge
2025-01-10T13:10:13.1782537Z Note: switching to 'refs/remotes/pull/2935/merge'.
2025-01-10T13:10:13.1783847Z 
2025-01-10T13:10:13.1784585Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-10T13:10:13.1786621Z changes and commit them, and you can discard any commits you make in this
2025-01-10T13:10:13.1788666Z state without impacting any branches by switching back to a branch.
2025-01-10T13:10:13.1789931Z 
2025-01-10T13:10:13.1790772Z If you want to create a new branch to retain commits you create, you may
2025-01-10T13:10:13.1792572Z do so (now or later) by using -c with the switch command. Example:
2025-01-10T13:10:13.1793939Z 
2025-01-10T13:10:13.1794296Z   git switch -c <new-branch-name>
2025-01-10T13:10:13.1795016Z 
2025-01-10T13:10:13.1795366Z Or undo this operation with:
2025-01-10T13:10:13.1796020Z 
2025-01-10T13:10:13.1796766Z   git switch -
2025-01-10T13:10:13.1797248Z 
2025-01-10T13:10:13.1798158Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-10T13:10:13.1799610Z 
2025-01-10T13:10:13.1801241Z HEAD is now at 530e3ec Merge d1573cda2f67aeedd073371db0f6043344534e98 into 0fc2c76326b8122f88ddaf369f17a637bbe37c63
2025-01-10T13:10:13.1809977Z ##[endgroup]
2025-01-10T13:10:13.1944594Z [command]/usr/bin/git log -1 --format=%H
2025-01-10T13:10:13.1946273Z 530e3ecc6ef97edbc3e00b1396c217c6d510fd0a
2025-01-10T13:10:13.2256693Z Prepare all required actions
2025-01-10T13:10:13.2257684Z Getting action download info
2025-01-10T13:10:13.3658475Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-10T13:10:13.5155125Z ##[group]Run ./.github/actions/setup_lfs
2025-01-10T13:10:13.5155891Z with:
2025-01-10T13:10:13.5156530Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-10T13:10:13.5157410Z env:
2025-01-10T13:10:13.5157857Z   CACHE_NUMBER: 0
2025-01-10T13:10:13.5159783Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:13.5161902Z   CODECOV_TOKEN: 
2025-01-10T13:10:13.5162375Z ##[endgroup]
2025-01-10T13:10:13.5341008Z ##[group]Run actions/checkout@v4
2025-01-10T13:10:13.5341697Z with:
2025-01-10T13:10:13.5342245Z   repository: tardis-sn/tardis-regression-data
2025-01-10T13:10:13.5343224Z   path: tardis-regression-data
2025-01-10T13:10:13.5344198Z   token: ***
2025-01-10T13:10:13.5344680Z   ssh-strict: true
2025-01-10T13:10:13.5345183Z   ssh-user: git
2025-01-10T13:10:13.5345703Z   persist-credentials: true
2025-01-10T13:10:13.5346300Z   clean: true
2025-01-10T13:10:13.5346813Z   sparse-checkout-cone-mode: true
2025-01-10T13:10:13.5347482Z   fetch-depth: 1
2025-01-10T13:10:13.5347980Z   fetch-tags: false
2025-01-10T13:10:13.5348493Z   show-progress: true
2025-01-10T13:10:13.5349014Z   lfs: false
2025-01-10T13:10:13.5349482Z   submodules: false
2025-01-10T13:10:13.5350012Z   set-safe-directory: true
2025-01-10T13:10:13.5350593Z env:
2025-01-10T13:10:13.5351003Z   CACHE_NUMBER: 0
2025-01-10T13:10:13.5352929Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:13.5355179Z   CODECOV_TOKEN: 
2025-01-10T13:10:13.5355665Z ##[endgroup]
2025-01-10T13:10:13.6302125Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-10T13:10:13.6310486Z ##[group]Getting Git version info
2025-01-10T13:10:13.6311672Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-01-10T13:10:13.6351734Z [command]/usr/bin/git version
2025-01-10T13:10:13.6397600Z git version 2.47.1
2025-01-10T13:10:13.6423451Z ##[endgroup]
2025-01-10T13:10:13.6437549Z Temporarily overriding HOME='/home/runner/work/_temp/4f0258db-c2dd-4db5-8c35-8b693965df3f' before making global git config changes
2025-01-10T13:10:13.6442668Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:10:13.6444999Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:10:13.6475314Z ##[group]Initializing the repository
2025-01-10T13:10:13.6480390Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:10:13.6517383Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-10T13:10:13.6519697Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-10T13:10:13.6521184Z hint: of your new repositories, which will suppress this warning, call:
2025-01-10T13:10:13.6522213Z hint:
2025-01-10T13:10:13.6522818Z hint: 	git config --global init.defaultBranch <name>
2025-01-10T13:10:13.6524377Z hint:
2025-01-10T13:10:13.6525171Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-10T13:10:13.6526688Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-10T13:10:13.6528400Z hint:
2025-01-10T13:10:13.6528940Z hint: 	git branch -m <name>
2025-01-10T13:10:13.6530225Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-10T13:10:13.6533253Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-10T13:10:13.6562398Z ##[endgroup]
2025-01-10T13:10:13.6563505Z ##[group]Disabling automatic garbage collection
2025-01-10T13:10:13.6567461Z [command]/usr/bin/git config --local gc.auto 0
2025-01-10T13:10:13.6598001Z ##[endgroup]
2025-01-10T13:10:13.6599568Z ##[group]Setting up auth
2025-01-10T13:10:13.6605599Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:10:13.6637251Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:10:13.6897789Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:10:13.6932524Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:10:13.7181603Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-10T13:10:13.7230504Z ##[endgroup]
2025-01-10T13:10:13.7231004Z ##[group]Determining the default branch
2025-01-10T13:10:13.7234446Z Retrieving the default branch name
2025-01-10T13:10:13.9668912Z Default branch 'main'
2025-01-10T13:10:13.9670578Z ##[endgroup]
2025-01-10T13:10:13.9680406Z ##[group]Fetching the repository
2025-01-10T13:10:13.9681599Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-10T13:10:14.3688281Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-10T13:10:14.3689317Z  * [new branch]      main       -> origin/main
2025-01-10T13:10:14.3715806Z ##[endgroup]
2025-01-10T13:10:14.3716460Z ##[group]Determining the checkout info
2025-01-10T13:10:14.3717817Z ##[endgroup]
2025-01-10T13:10:14.3723954Z [command]/usr/bin/git sparse-checkout disable
2025-01-10T13:10:14.3765609Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-10T13:10:14.3795986Z ##[group]Checking out the ref
2025-01-10T13:10:14.3799999Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-10T13:10:14.5482725Z Switched to a new branch 'main'
2025-01-10T13:10:14.5484057Z branch 'main' set up to track 'origin/main'.
2025-01-10T13:10:14.5750221Z ##[endgroup]
2025-01-10T13:10:14.5799440Z [command]/usr/bin/git log -1 --format=%H
2025-01-10T13:10:14.5827550Z 666ab8501c2b2aea30d05b8822e7ddbfca078d23
2025-01-10T13:10:14.5981626Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-10T13:10:14.5982215Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-10T13:10:14.6013303Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:10:14.6013670Z env:
2025-01-10T13:10:14.6013851Z   CACHE_NUMBER: 0
2025-01-10T13:10:14.6014501Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:14.6015197Z   CODECOV_TOKEN: 
2025-01-10T13:10:14.6015394Z ##[endgroup]
2025-01-10T13:10:14.7522060Z ##[group]Run actions/cache/restore@v4
2025-01-10T13:10:14.7522419Z with:
2025-01-10T13:10:14.7522674Z   path: tardis-regression-data/.git/lfs
2025-01-10T13:10:14.7523547Z   key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-10T13:10:14.7524079Z   enableCrossOsArchive: false
2025-01-10T13:10:14.7524360Z   fail-on-cache-miss: false
2025-01-10T13:10:14.7524844Z   lookup-only: false
2025-01-10T13:10:14.7525066Z env:
2025-01-10T13:10:14.7525267Z   CACHE_NUMBER: 0
2025-01-10T13:10:14.7525967Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:14.7526716Z   CODECOV_TOKEN: 
2025-01-10T13:10:14.7526926Z ##[endgroup]
2025-01-10T13:10:16.1206484Z Received 251658240 of 1708418946 (14.7%), 239.8 MBs/sec
2025-01-10T13:10:17.1229930Z Received 545259520 of 1708418946 (31.9%), 259.6 MBs/sec
2025-01-10T13:10:18.1231353Z Received 851443712 of 1708418946 (49.8%), 270.4 MBs/sec
2025-01-10T13:10:19.1277652Z Received 1182793728 of 1708418946 (69.2%), 281.6 MBs/sec
2025-01-10T13:10:20.1268372Z Received 1493172224 of 1708418946 (87.4%), 284.4 MBs/sec
2025-01-10T13:10:20.8224830Z Cache Size: ~1629 MB (1708418946 B)
2025-01-10T13:10:20.8267509Z [command]/usr/bin/tar -xf /home/runner/work/_temp/3a9b117f-7de2-4d90-9327-909f5834b7e7/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T13:10:21.1285794Z Received 1708418946 of 1708418946 (100.0%), 271.1 MBs/sec
2025-01-10T13:10:27.1907147Z Cache restored successfully
2025-01-10T13:10:27.5124004Z Cache restored from key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-10T13:10:27.5309804Z ##[group]Run git lfs checkout
2025-01-10T13:10:27.5310071Z [36;1mgit lfs checkout[0m
2025-01-10T13:10:27.5336160Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:10:27.5336497Z env:
2025-01-10T13:10:27.5336674Z   CACHE_NUMBER: 0
2025-01-10T13:10:27.5337285Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:27.5337911Z   CODECOV_TOKEN: 
2025-01-10T13:10:27.5338099Z ##[endgroup]
2025-01-10T13:10:38.9177990Z Checking out LFS objects: 100% (204/204), 3.5 GB | 324 MB/s, done.
2025-01-10T13:10:42.0146255Z Prepare all required actions
2025-01-10T13:10:42.0146780Z Getting action download info
2025-01-10T13:10:42.1495001Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-10T13:10:42.5338087Z ##[group]Run ./.github/actions/setup_env
2025-01-10T13:10:42.5338363Z with:
2025-01-10T13:10:42.5338559Z   os-label: linux-64
2025-01-10T13:10:42.5338755Z env:
2025-01-10T13:10:42.5338921Z   CACHE_NUMBER: 0
2025-01-10T13:10:42.5339538Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:42.5340197Z   CODECOV_TOKEN: 
2025-01-10T13:10:42.5340391Z ##[endgroup]
2025-01-10T13:10:42.5360453Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-10T13:10:42.5360957Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-10T13:10:42.5361387Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-10T13:10:42.5387412Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:10:42.5387726Z env:
2025-01-10T13:10:42.5387897Z   CACHE_NUMBER: 0
2025-01-10T13:10:42.5388496Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:42.5389111Z   CODECOV_TOKEN: 
2025-01-10T13:10:42.5389297Z ##[endgroup]
2025-01-10T13:10:42.5681724Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-10T13:10:42.5681993Z with:
2025-01-10T13:10:42.5682190Z   environment-file: conda-linux-64.lock
2025-01-10T13:10:42.5682607Z   cache-environment-key: 1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614
2025-01-10T13:10:42.5683414Z   cache-downloads-key: 1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614
2025-01-10T13:10:42.5683826Z   environment-name: tardis
2025-01-10T13:10:42.5684055Z   cache-environment: true
2025-01-10T13:10:42.5684285Z   cache-downloads: true
2025-01-10T13:10:42.5684666Z env:
2025-01-10T13:10:42.5684837Z   CACHE_NUMBER: 0
2025-01-10T13:10:42.5685439Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:42.5686071Z   CODECOV_TOKEN: 
2025-01-10T13:10:42.5686260Z ##[endgroup]
2025-01-10T13:10:42.7030274Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-01-10T13:10:42.7041327Z ##[group]Install micromamba
2025-01-10T13:10:43.0652058Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-01-10T13:10:43.0653285Z ##[endgroup]
2025-01-10T13:10:43.0653947Z Adding conda-forge to condarc channels ...
2025-01-10T13:10:43.0664081Z ##[group]Initialize micromamba for bash.
2025-01-10T13:10:43.0680523Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:10:43.0791982Z Modifying RC file "/home/runner/.bashrc"
2025-01-10T13:10:43.0793537Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-01-10T13:10:43.0795451Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-01-10T13:10:43.0796242Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-01-10T13:10:43.0796687Z 
2025-01-10T13:10:43.0796829Z # >>> mamba initialize >>>
2025-01-10T13:10:43.0797303Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-10T13:10:43.0797947Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-01-10T13:10:43.0798560Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-01-10T13:10:43.0799388Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-10T13:10:43.0800151Z if [ $? -eq 0 ]; then
2025-01-10T13:10:43.0800497Z     eval "$__mamba_setup"
2025-01-10T13:10:43.0800837Z else
2025-01-10T13:10:43.0801635Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-10T13:10:43.0802232Z fi
2025-01-10T13:10:43.0802511Z unset __mamba_setup
2025-01-10T13:10:43.0802839Z # <<< mamba initialize <<<
2025-01-10T13:10:43.0803266Z 
2025-01-10T13:10:43.0813709Z Moving mamba initialize block to .bash_profile
2025-01-10T13:10:43.0828725Z ##[endgroup]
2025-01-10T13:10:43.0831049Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-01-10T13:10:44.2658266Z Received 176160768 of 358598106 (49.1%), 168.0 MBs/sec
2025-01-10T13:10:44.9118738Z Cache Size: ~342 MB (358598106 B)
2025-01-10T13:10:44.9178543Z [command]/usr/bin/tar -xf /home/runner/work/_temp/e36f001f-f020-428e-b020-d5c20025be37/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T13:10:45.2643900Z Received 358598106 of 358598106 (100.0%), 170.9 MBs/sec
2025-01-10T13:10:45.4191140Z Cache restored successfully
2025-01-10T13:10:45.4931026Z Restored cache with key `1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614-linux-64`
2025-01-10T13:10:45.4932499Z ##[endgroup]
2025-01-10T13:10:45.4943620Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-01-10T13:10:46.6212445Z Received 184549376 of 446689380 (41.3%), 175.8 MBs/sec
2025-01-10T13:10:47.6271631Z Received 427819008 of 446689380 (95.8%), 203.8 MBs/sec
2025-01-10T13:10:47.7200350Z Cache Size: ~426 MB (446689380 B)
2025-01-10T13:10:47.7263430Z [command]/usr/bin/tar -xf /home/runner/work/_temp/2c11d0b0-6ffb-4932-b7cc-069ff321f909/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T13:10:48.6228478Z Received 446689380 of 446689380 (100.0%), 141.9 MBs/sec
2025-01-10T13:10:52.6616657Z Cache restored successfully
2025-01-10T13:10:52.7385470Z Restored cache with key `1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614`
2025-01-10T13:10:52.7387590Z ##[endgroup]
2025-01-10T13:10:52.7387932Z Adding environment tardis to auto-activate bash ...
2025-01-10T13:10:52.7397285Z Generating micromamba run shell.
2025-01-10T13:10:52.7407989Z ##[endgroup]
2025-01-10T13:10:52.7412943Z Set environment variables.
2025-01-10T13:10:52.7417028Z ##[group]micromamba info
2025-01-10T13:10:52.7420328Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-01-10T13:10:52.9205474Z 
2025-01-10T13:10:52.9205986Z        libmamba version : 1.5.10
2025-01-10T13:10:52.9207314Z      micromamba version : 1.5.10
2025-01-10T13:10:52.9208000Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-10T13:10:52.9208872Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-10T13:10:52.9209558Z        envs directories : /home/runner/micromamba/envs
2025-01-10T13:10:52.9210133Z           package cache : /home/runner/micromamba/pkgs
2025-01-10T13:10:52.9210585Z                           /home/runner/.mamba/pkgs
2025-01-10T13:10:52.9211016Z             environment : tardis
2025-01-10T13:10:52.9211460Z            env location : /home/runner/micromamba/envs/tardis
2025-01-10T13:10:52.9211967Z       user config files : /home/runner/.mambarc
2025-01-10T13:10:52.9212602Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:10:52.9213417Z        virtual packages : __unix=0=0
2025-01-10T13:10:52.9213832Z                           __linux=6.8.0=0
2025-01-10T13:10:52.9214253Z                           __glibc=2.39=0
2025-01-10T13:10:52.9214671Z                           __archspec=1=x86_64_v3
2025-01-10T13:10:52.9215224Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-01-10T13:10:52.9215855Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-10T13:10:52.9216392Z        base environment : /home/runner/micromamba
2025-01-10T13:10:52.9217254Z                platform : linux-64
2025-01-10T13:10:52.9224126Z ##[endgroup]
2025-01-10T13:10:52.9224774Z ##[group]micromamba list
2025-01-10T13:10:52.9226221Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-01-10T13:10:53.3235777Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-01-10T13:10:53.3236322Z 
2025-01-10T13:10:53.3236561Z   Name                           Version              Build                    Channel    
2025-01-10T13:10:53.3237560Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-10T13:10:53.3238214Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-01-10T13:10:53.3238867Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-01-10T13:10:53.3239448Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3240051Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3240625Z   argon2-cffi                    23.1.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3241288Z   argon2-cffi-bindings           21.2.0               py312h66e93f0_5          conda-forge
2025-01-10T13:10:53.3241890Z   arrow                          1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3242431Z   astropy                        6.1.1                py312h4fc7734_1          conda-forge
2025-01-10T13:10:53.3243283Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3244121Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3244814Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3245442Z   async-lru                      2.0.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3246358Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-01-10T13:10:53.3246909Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-10T13:10:53.3247427Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3247993Z   beautifulsoup4                 4.12.3               pyha770c72_1             conda-forge
2025-01-10T13:10:53.3248484Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3248842Z   blosc                          1.21.6               hef167b5_0               conda-forge
2025-01-10T13:10:53.3249192Z   brotli                         1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:10:53.3249539Z   brotli-bin                     1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:10:53.3250059Z   brotli-python                  1.1.0                py312h2ec8cdc_2          conda-forge
2025-01-10T13:10:53.3250516Z   bzip2                          1.0.8                h4bc722e_7               conda-forge
2025-01-10T13:10:53.3250847Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-01-10T13:10:53.3251182Z   c-blosc2                       2.15.2               h68e2383_0               conda-forge
2025-01-10T13:10:53.3251617Z   ca-certificates                2024.12.14           hbcca054_0               conda-forge
2025-01-10T13:10:53.3252019Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-10T13:10:53.3252409Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-10T13:10:53.3252770Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-01-10T13:10:53.3253540Z   certifi                        2024.12.14           pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3253937Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-01-10T13:10:53.3254327Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3254711Z   click                          8.1.7                unix_pyh707e725_1        conda-forge
2025-01-10T13:10:53.3255063Z   codespell                      2.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3255420Z   colorama                       0.4.6                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3255764Z   comm                           0.2.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3256107Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-10T13:10:53.3256463Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-01-10T13:10:53.3256821Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-01-10T13:10:53.3257172Z   cycler                         0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3257528Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-10T13:10:53.3257884Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-01-10T13:10:53.3258236Z   decorator                      5.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3258595Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3258957Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-01-10T13:10:53.3259309Z   dot2tex                        2.11.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3259664Z   entrypoints                    0.4                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3260047Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:10:53.3260545Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3260883Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-01-10T13:10:53.3261385Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-10T13:10:53.3261945Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-10T13:10:53.3262581Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-10T13:10:53.3263305Z   font-ttf-ubuntu                0.83                 h77eed37_3               conda-forge
2025-01-10T13:10:53.3263793Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-01-10T13:10:53.3264360Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-10T13:10:53.3264890Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-10T13:10:53.3265339Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-01-10T13:10:53.3265881Z   fqdn                           1.5.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3266307Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-01-10T13:10:53.3266775Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-01-10T13:10:53.3267277Z   future                         1.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3267702Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-01-10T13:10:53.3268306Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-01-10T13:10:53.3268977Z   git-lfs                        3.5.1                h647637d_1               conda-forge
2025-01-10T13:10:53.3351655Z   gmp                            6.3.0                hac33072_2               conda-forge
2025-01-10T13:10:53.3352385Z   gmpy2                          2.1.5                py312h7201bc8_3          conda-forge
2025-01-10T13:10:53.3353002Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-01-10T13:10:53.3353752Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-01-10T13:10:53.3354305Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-01-10T13:10:53.3354814Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-01-10T13:10:53.3355349Z   h11                            0.14.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3355920Z   h2                             4.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3356502Z   h5py                           3.11.0               nompi_py312hedeef09_103  conda-forge
2025-01-10T13:10:53.3357118Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-01-10T13:10:53.3357722Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-01-10T13:10:53.3358302Z   hpack                          4.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3358896Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3359507Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3360114Z   hyperframe                     6.0.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3360699Z   icu                            73.2                 h59595ed_0               conda-forge
2025-01-10T13:10:53.3361251Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3362239Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3362913Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-10T13:10:53.3363791Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-10T13:10:53.3364506Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3365180Z   iniconfig                      2.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3365798Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-01-10T13:10:53.3366401Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-10T13:10:53.3367048Z   ipython_genutils               0.2.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:10:53.3367718Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3368398Z   isoduration                    20.11.0              pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3369009Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3369588Z   jinja2                         3.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3370163Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3370768Z   jsonpointer                    3.0.0                py312h7900ff3_1          conda-forge
2025-01-10T13:10:53.3371410Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3372155Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3373304Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3374084Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3374716Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3375348Z   jupyter_core                   5.7.2                pyh31011fe_1             conda-forge
2025-01-10T13:10:53.3375960Z   jupyter_events                 0.10.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3376591Z   jupyter_server                 2.14.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3377265Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3377922Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3378571Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:10:53.3379252Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3379917Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3380542Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-01-10T13:10:53.3381126Z   kiwisolver                     1.4.5                py312h68727a3_2          conda-forge
2025-01-10T13:10:53.3381686Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-01-10T13:10:53.3382244Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-10T13:10:53.3382813Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-01-10T13:10:53.3383532Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-01-10T13:10:53.3384092Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-01-10T13:10:53.3384772Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-01-10T13:10:53.3385324Z   libblas                        3.9.0                24_linux64_openblas      conda-forge
2025-01-10T13:10:53.3385957Z   libbrotlicommon                1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:10:53.3386604Z   libbrotlidec                   1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:10:53.3387212Z   libbrotlienc                   1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:10:53.3387800Z   libcblas                       3.9.0                24_linux64_openblas      conda-forge
2025-01-10T13:10:53.3388357Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-01-10T13:10:53.3388922Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-01-10T13:10:53.3389517Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-01-10T13:10:53.3390072Z   libev                          4.33                 hd590300_2               conda-forge
2025-01-10T13:10:53.3390616Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-01-10T13:10:53.3391173Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-01-10T13:10:53.3391739Z   libgcc                         14.2.0               h77fa898_1               conda-forge
2025-01-10T13:10:53.3392304Z   libgcc-ng                      14.2.0               h69a702a_1               conda-forge
2025-01-10T13:10:53.3392857Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-01-10T13:10:53.3393613Z   libgfortran-ng                 13.2.0               h69a702a_13              conda-forge
2025-01-10T13:10:53.3394435Z   libgfortran5                   13.2.0               h3d2ce59_13              conda-forge
2025-01-10T13:10:53.3395072Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-01-10T13:10:53.3395662Z   libgomp                        14.2.0               h77fa898_1               conda-forge
2025-01-10T13:10:53.3396244Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-01-10T13:10:53.3396825Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-01-10T13:10:53.3397417Z   liblapack                      3.9.0                24_linux64_openblas      conda-forge
2025-01-10T13:10:53.3398048Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-01-10T13:10:53.3398674Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-01-10T13:10:53.3399289Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-01-10T13:10:53.3399922Z   libopenblas                    0.3.27               pthreads_hac2b453_1      conda-forge
2025-01-10T13:10:53.3400542Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-01-10T13:10:53.3401121Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-01-10T13:10:53.3401696Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-01-10T13:10:53.3402278Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-01-10T13:10:53.3402859Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-01-10T13:10:53.3403595Z   libstdcxx                      14.2.0               hc0a3c3a_1               conda-forge
2025-01-10T13:10:53.3404225Z   libstdcxx-ng                   14.2.0               h4852527_1               conda-forge
2025-01-10T13:10:53.3404844Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-01-10T13:10:53.3405587Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-01-10T13:10:53.3406170Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-01-10T13:10:53.3406777Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-01-10T13:10:53.3407381Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-01-10T13:10:53.3407974Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-01-10T13:10:53.3408541Z   libxml2                        2.12.7               h4c95cb1_3               conda-forge
2025-01-10T13:10:53.3409101Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-01-10T13:10:53.3409660Z   libzlib                        1.3.1                hb9d3cd8_2               conda-forge
2025-01-10T13:10:53.3410228Z   llvmlite                       0.43.0               py312h374181b_1          conda-forge
2025-01-10T13:10:53.3410838Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-01-10T13:10:53.3411195Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-01-10T13:10:53.3411722Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-01-10T13:10:53.3412081Z   markupsafe                     2.1.5                py312h66e93f0_1          conda-forge
2025-01-10T13:10:53.3412476Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-01-10T13:10:53.3412891Z   matplotlib-inline              0.1.7                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3413526Z   mistune                        3.0.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3414026Z   mpc                            1.3.1                h24ddda3_1               conda-forge
2025-01-10T13:10:53.3414354Z   mpfr                           4.2.1                h90cbb55_3               conda-forge
2025-01-10T13:10:53.3414689Z   mpmath                         1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3415032Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-10T13:10:53.3415408Z   mypy_extensions                1.0.0                pyha770c72_1             conda-forge
2025-01-10T13:10:53.3415806Z   nbclassic                      1.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3416178Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3416541Z   nbconvert                      7.16.4               hd8ed1ab_3               conda-forge
2025-01-10T13:10:53.3416921Z   nbconvert-core                 7.16.4               pyhd8ed1ab_3             conda-forge
2025-01-10T13:10:53.3417334Z   nbconvert-pandoc               7.16.4               hd8ed1ab_3               conda-forge
2025-01-10T13:10:53.3417727Z   nbformat                       5.10.4               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3418083Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3418427Z   ncurses                        6.5                  he02047a_1               conda-forge
2025-01-10T13:10:53.3418781Z   nest-asyncio                   1.6.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3419143Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3419480Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-01-10T13:10:53.3419816Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3420190Z   notebook-shim                  0.2.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3420667Z   numba                          0.60.0               py312h83e6fd3_0          conda-forge
2025-01-10T13:10:53.3421003Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-01-10T13:10:53.3421337Z   numpy                          2.0.2                py312h58c1407_1          conda-forge
2025-01-10T13:10:53.3421672Z   numpydoc                       1.7.0                pyhd8ed1ab_3             conda-forge
2025-01-10T13:10:53.3422036Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-01-10T13:10:53.3422379Z   openssl                        3.4.0                h7b32b05_1               conda-forge
2025-01-10T13:10:53.3422723Z   overrides                      7.7.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3423290Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3423672Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-01-10T13:10:53.3424041Z   pandoc                         3.2.1                ha770c72_0               conda-forge
2025-01-10T13:10:53.3424416Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3424790Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-01-10T13:10:53.3425126Z   parso                          0.8.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3425474Z   pathspec                       0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3425821Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3426148Z   pcre2                          10.44                hba22ea6_2               conda-forge
2025-01-10T13:10:53.3426628Z   pexpect                        4.9.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3427001Z   pickleshare                    0.7.5                pyhd8ed1ab_1004          conda-forge
2025-01-10T13:10:53.3427360Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-01-10T13:10:53.3427701Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3428030Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-01-10T13:10:53.3428459Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_2             conda-forge
2025-01-10T13:10:53.3428863Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3429219Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3429552Z   pluggy                         1.5.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3429927Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3430327Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-10T13:10:53.3430690Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-01-10T13:10:53.3431046Z   pthread-stubs                  0.4                  hb9d3cd8_1002            conda-forge
2025-01-10T13:10:53.3431414Z   ptyprocess                     0.7.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3431773Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3432128Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3432483Z   pybtex                         0.24.0               pyhd8ed1ab_3             conda-forge
2025-01-10T13:10:53.3432855Z   pybtex-docutils                1.0.3                py312h7900ff3_2          conda-forge
2025-01-10T13:10:53.3433587Z   pycparser                      2.22                 pyh29332c3_1             conda-forge
2025-01-10T13:10:53.3433951Z   pyerfa                         2.0.1.4              py312hc0a28a1_2          conda-forge
2025-01-10T13:10:53.3434306Z   pygments                       2.18.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3434672Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-01-10T13:10:53.3435036Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3435391Z   pysocks                        1.7.1                pyha55dd90_7             conda-forge
2025-01-10T13:10:53.3435753Z   pytables                       3.10.2               py312h2895ec7_0          conda-forge
2025-01-10T13:10:53.3436100Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3436457Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3436856Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3437253Z   pytest-html                    4.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3437641Z   pytest-metadata                3.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3438011Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-01-10T13:10:53.3438392Z   python-dateutil                2.9.0.post0          pyhff2d567_1             conda-forge
2025-01-10T13:10:53.3438821Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3439256Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3439781Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3440166Z   python_abi                     3.12                 5_cp312                  conda-forge
2025-01-10T13:10:53.3440511Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3440844Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-01-10T13:10:53.3441181Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-01-10T13:10:53.3441517Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-10T13:10:53.3441893Z   radioactivedecay               0.5.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3442270Z   readline                       8.2                  h8228510_1               conda-forge
2025-01-10T13:10:53.3442633Z   recommonmark                   0.7.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3443204Z   referencing                    0.35.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3443636Z   requests                       2.32.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3444022Z   rfc3339-validator              0.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3444436Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-10T13:10:53.3444809Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-01-10T13:10:53.3445142Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-01-10T13:10:53.3445470Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-01-10T13:10:53.3445822Z   send2trash                     1.8.3                pyh0d859eb_1             conda-forge
2025-01-10T13:10:53.3446294Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3446810Z   setuptools-scm                 8.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3447193Z   setuptools_scm                 8.1.0                hd8ed1ab_1               conda-forge
2025-01-10T13:10:53.3447542Z   six                            1.16.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3447882Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3448223Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-01-10T13:10:53.3448567Z   sniffio                        1.3.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3448943Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3449319Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3449677Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3450050Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3450452Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-10T13:10:53.3450857Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3451256Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3451670Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3452071Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-10T13:10:53.3452481Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-10T13:10:53.3453405Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3454234Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3454988Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3455752Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3456241Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3456698Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3457142Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3457617Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3458049Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3458413Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-10T13:10:53.3458767Z   tabulate                       0.9.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:10:53.3459124Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3459487Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-01-10T13:10:53.3459847Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3460182Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-01-10T13:10:53.3460506Z   toml                           0.10.2               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3460838Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3461186Z   tornado                        6.4.1                py312h66e93f0_1          conda-forge
2025-01-10T13:10:53.3461529Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3462041Z   traitlets                      5.14.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3462401Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-01-10T13:10:53.3462818Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3463516Z   typing-extensions              4.12.2               hd8ed1ab_1               conda-forge
2025-01-10T13:10:53.3463932Z   typing_extensions              4.12.2               pyha770c72_1             conda-forge
2025-01-10T13:10:53.3464317Z   typing_utils                   0.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3464675Z   tzdata                         2024a                h8827d51_1               conda-forge
2025-01-10T13:10:53.3465042Z   uri-template                   1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3465409Z   urllib3                        2.2.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3465760Z   wcwidth                        0.2.13               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3466114Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3466485Z   webencodings                   0.5.1                pyhd8ed1ab_3             conda-forge
2025-01-10T13:10:53.3466876Z   websocket-client               1.8.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3467254Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:10:53.3467638Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3468040Z   xorg-kbproto                   1.0.7                hb9d3cd8_1003            conda-forge
2025-01-10T13:10:53.3468540Z   xorg-libice                    1.1.1                hb9d3cd8_1               conda-forge
2025-01-10T13:10:53.3468916Z   xorg-libsm                     1.2.4                he73a12e_1               conda-forge
2025-01-10T13:10:53.3469274Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-01-10T13:10:53.3469637Z   xorg-libxau                    1.0.11               hb9d3cd8_1               conda-forge
2025-01-10T13:10:53.3470008Z   xorg-libxdmcp                  1.1.3                hb9d3cd8_2               conda-forge
2025-01-10T13:10:53.3470379Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-01-10T13:10:53.3470761Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-01-10T13:10:53.3471165Z   xorg-renderproto               0.11.1               hb9d3cd8_1003            conda-forge
2025-01-10T13:10:53.3471584Z   xorg-xextproto                 7.3.0                hb9d3cd8_1004            conda-forge
2025-01-10T13:10:53.3471973Z   xorg-xproto                    7.0.31               hb9d3cd8_1008            conda-forge
2025-01-10T13:10:53.3472316Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-01-10T13:10:53.3472630Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-01-10T13:10:53.3472965Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-01-10T13:10:53.3473500Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-10T13:10:53.3473831Z   zlib                           1.3.1                hb9d3cd8_2               conda-forge
2025-01-10T13:10:53.3474156Z   zlib-ng                        2.2.3                h7955e40_0               conda-forge
2025-01-10T13:10:53.3474505Z   zstandard                      0.23.0               py312hef9b889_1          conda-forge
2025-01-10T13:10:53.3474852Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-01-10T13:10:53.3475569Z ##[endgroup]
2025-01-10T13:10:53.3507531Z ##[group]Run pip install -e . --user
2025-01-10T13:10:53.3507869Z [36;1mpip install -e . --user[0m
2025-01-10T13:10:53.3536440Z shell: /usr/bin/bash -l {0}
2025-01-10T13:10:53.3536692Z env:
2025-01-10T13:10:53.3536875Z   CACHE_NUMBER: 0
2025-01-10T13:10:53.3537489Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:10:53.3538141Z   CODECOV_TOKEN: 
2025-01-10T13:10:53.3538372Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T13:10:53.3538702Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T13:10:53.3539056Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:10:53.3539364Z ##[endgroup]
2025-01-10T13:10:54.0757937Z Obtaining file:///home/runner/work/tardis/tardis
2025-01-10T13:10:54.0785519Z   Installing build dependencies: started
2025-01-10T13:10:57.3742145Z   Installing build dependencies: finished with status 'done'
2025-01-10T13:10:57.3746674Z   Checking if build backend supports build_editable: started
2025-01-10T13:10:57.5064867Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-10T13:10:57.5072240Z   Getting requirements to build editable: started
2025-01-10T13:10:58.0237441Z   Getting requirements to build editable: finished with status 'done'
2025-01-10T13:10:58.0246076Z   Preparing editable metadata (pyproject.toml): started
2025-01-10T13:10:58.5183340Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-10T13:10:58.5788738Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-10T13:10:58.6164602Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.2)
2025-01-10T13:10:58.6173789Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-10T13:10:58.6183617Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-10T13:10:58.6192974Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-10T13:10:58.6201491Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-10T13:10:58.6290897Z Building wheels for collected packages: tardis
2025-01-10T13:10:58.6298496Z   Building editable for tardis (pyproject.toml): started
2025-01-10T13:10:59.3733213Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-10T13:10:59.3739690Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8878 sha256=8714f6efa41f40cfe2ad0f1ba8f3c7b9cbc9410e8d5bd62b513fa4838ac90d79
2025-01-10T13:10:59.3741003Z   Stored in directory: /tmp/pip-ephem-wheel-cache-41myp1r3/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-01-10T13:10:59.3766896Z Successfully built tardis
2025-01-10T13:11:00.1453383Z Installing collected packages: tardis
2025-01-10T13:11:00.1598463Z Successfully installed tardis-0.0.0
2025-01-10T13:11:00.3857603Z ##[group]Run pip install qgridnext
2025-01-10T13:11:00.3857944Z [36;1mpip install qgridnext[0m
2025-01-10T13:11:00.3885046Z shell: /usr/bin/bash -l {0}
2025-01-10T13:11:00.3885294Z env:
2025-01-10T13:11:00.3885474Z   CACHE_NUMBER: 0
2025-01-10T13:11:00.3886101Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:11:00.3886739Z   CODECOV_TOKEN: 
2025-01-10T13:11:00.3887146Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T13:11:00.3887462Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T13:11:00.3887821Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:11:00.3888137Z ##[endgroup]
2025-01-10T13:11:01.0114009Z Collecting qgridnext
2025-01-10T13:11:01.0787420Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-10T13:11:01.0873823Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-10T13:11:01.0882488Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-10T13:11:01.0892207Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.0.2)
2025-01-10T13:11:01.0902835Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-10T13:11:01.0987751Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-10T13:11:01.0997020Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-10T13:11:01.1010394Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-10T13:11:01.1028721Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-10T13:11:01.1043721Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-10T13:11:01.1497242Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0.post0)
2025-01-10T13:11:01.1511178Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-10T13:11:01.1519870Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-10T13:11:01.1839072Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-10T13:11:01.1853313Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-10T13:11:01.1861450Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-10T13:11:01.1872408Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-10T13:11:01.1881418Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-10T13:11:01.1891119Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-10T13:11:01.1909942Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-10T13:11:01.1957416Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-10T13:11:01.2014489Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-10T13:11:01.2201082Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-10T13:11:01.2345644Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-10T13:11:01.2358508Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-10T13:11:01.2373454Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-10T13:11:01.2383170Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-10T13:11:01.2390917Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-10T13:11:01.2420661Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-10T13:11:01.2449258Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-10T13:11:01.2586205Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-10T13:11:01.2595120Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-10T13:11:01.2602356Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-10T13:11:01.2938595Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-10T13:11:01.2948574Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-10T13:11:01.2957285Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-10T13:11:01.2968740Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-10T13:11:01.2980382Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-10T13:11:01.2991314Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-10T13:11:01.3001495Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-10T13:11:01.3014938Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-10T13:11:01.3024971Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-10T13:11:01.3033890Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-10T13:11:01.3043419Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-10T13:11:01.3052825Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-10T13:11:01.3064249Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-10T13:11:01.3073917Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-10T13:11:01.3086131Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-10T13:11:01.3104015Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-10T13:11:01.3386625Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-10T13:11:01.3398983Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-10T13:11:01.3411803Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-10T13:11:01.3426651Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-10T13:11:01.3453897Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-10T13:11:01.3647192Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-10T13:11:01.3674456Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-10T13:11:01.3686539Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-10T13:11:01.3706093Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-10T13:11:01.4065492Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-10T13:11:01.4075565Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-10T13:11:01.4173680Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-10T13:11:01.4347730Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.12.14)
2025-01-10T13:11:01.4363556Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-10T13:11:01.4442620Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-10T13:11:01.4635562Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-10T13:11:01.4658960Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-10T13:11:01.4675080Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-10T13:11:01.4741533Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-10T13:11:01.4936037Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-10T13:11:01.4947208Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-10T13:11:01.4956769Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-10T13:11:01.4966576Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-10T13:11:01.5232098Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-10T13:11:01.5390037Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-10T13:11:01.5399615Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-10T13:11:01.5411032Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-10T13:11:01.5420667Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-10T13:11:01.5849351Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-10T13:11:01.5869434Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-10T13:11:01.5884940Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-10T13:11:01.5900151Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-10T13:11:01.5912547Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-10T13:11:01.5925774Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-10T13:11:01.5943518Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-10T13:11:01.5953882Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:11:01.6070505Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-10T13:11:01.6382192Z Requirement already satisfied: charset_normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-10T13:11:01.6397612Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-10T13:11:01.7169561Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-10T13:11:01.7747340Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-10T13:11:01.7762752Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-10T13:11:01.7777793Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-10T13:11:01.7797116Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:11:01.7810675Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-10T13:11:01.8857520Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-10T13:11:01.8958453Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-10T13:11:01.9493821Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-10T13:11:01.9998070Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:11:02.0301253Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-10T13:11:02.0721134Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-10T13:11:02.1703742Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 13.1 MB/s eta 0:00:00
2025-01-10T13:11:02.9678476Z Installing collected packages: qgridnext
2025-01-10T13:11:03.0587671Z Successfully installed qgridnext-2.0.4
2025-01-10T13:11:03.2766029Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-10T13:11:03.2768212Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-10T13:11:03.2803560Z shell: /usr/bin/bash -l {0}
2025-01-10T13:11:03.2803937Z env:
2025-01-10T13:11:03.2804230Z   CACHE_NUMBER: 0
2025-01-10T13:11:03.2805266Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:11:03.2806375Z   CODECOV_TOKEN: 
2025-01-10T13:11:03.2806738Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T13:11:03.2807250Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T13:11:03.2807868Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:11:03.2808394Z ##[endgroup]
2025-01-10T13:11:12.0366960Z ============================= test session starts ==============================
2025-01-10T13:11:12.0367879Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-10T13:11:12.0368669Z rootdir: /home/runner/work/tardis/tardis
2025-01-10T13:11:12.0369304Z configfile: pyproject.toml
2025-01-10T13:11:12.0370079Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-10T13:11:12.0370888Z collected 1796 items / 2 deselected / 1794 selected
2025-01-10T13:11:12.0371205Z 
2025-01-10T13:11:17.2255863Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-10T13:11:18.9155811Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-10T13:11:20.5228947Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-10T13:11:22.3463982Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-10T13:11:22.3555400Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-10T13:11:23.6508600Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-10T13:11:23.9880300Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-10T13:11:23.9896046Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-10T13:11:27.4704347Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-10T13:11:27.4830494Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-10T13:11:27.5116540Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-10T13:12:05.7119900Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-10T13:12:05.7264635Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-10T13:12:05.7370134Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-10T13:12:05.7670173Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-10T13:12:05.7879884Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-10T13:12:06.0973474Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-10T13:12:06.4229739Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-10T13:12:06.4578128Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-10T13:12:06.6507446Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-10T13:12:06.6575930Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-10T13:13:05.1680524Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-10T13:13:06.1451833Z ............                                                             [ 10%]
2025-01-10T13:13:09.1599939Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-10T13:13:09.2074012Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-10T13:13:10.5013593Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-10T13:13:11.8211015Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-10T13:13:14.0274389Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-01-10T13:13:16.7048988Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-10T13:14:02.8680191Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-10T13:14:14.3114586Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-10T13:14:16.0318225Z tardis/plasma/tests/test_complete_plasmas.py ...........FFF..FFF..s..... [ 13%]
2025-01-10T13:14:19.5249894Z sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-01-10T13:14:21.8573677Z F..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss.... [ 22%]
2025-01-10T13:14:25.4052993Z ........s...FFF..FFF.ss.....sFF.F....ss............s...FFF..FFF.ss.....s [ 26%]
2025-01-10T13:14:29.1880819Z FF.F....ss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-01-10T13:14:30.5213671Z ..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFssFssssss..... [ 34%]
2025-01-10T13:14:34.1761881Z .......s...FFF..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sF [ 38%]
2025-01-10T13:14:37.6313563Z F.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF. [ 42%]
2025-01-10T13:14:41.6746589Z .FFF.ss.....sFF.Fssssss............s...FFF..FFF.s.....FFFF.Fssssss...... [ 46%]
2025-01-10T13:14:44.2521625Z ......s...FFF..FFF.s.....FFFF.Fssssss............s...FFF..FFF.s.....FFFF [ 50%]
2025-01-10T13:14:47.7167376Z .Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF.. [ 54%]
2025-01-10T13:14:51.8110575Z FFF.ss.....sFF.Fssssss................FFF..FFF..s.....sFF.Fssss......... [ 58%]
2025-01-10T13:14:52.4908895Z .........FFF..FFF..s.....sFF.Fssss.......                                [ 60%]
2025-01-10T13:14:52.7205350Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-01-10T13:14:52.7316181Z ......                                                                   [ 62%]
2025-01-10T13:14:52.8628830Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-10T13:17:11.5417010Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-10T13:17:11.5441818Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-10T13:17:34.4875191Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-10T13:17:47.9434335Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-10T13:17:48.6691479Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-10T13:17:57.4200041Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-01-10T13:17:57.4401614Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-10T13:17:57.9021824Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-10T13:17:57.9092328Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-10T13:18:00.0171730Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-10T13:18:00.0403781Z ..........                                                               [ 69%]
2025-01-10T13:18:00.2105831Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-10T13:18:00.2425410Z .........                                                                [ 72%]
2025-01-10T13:18:18.8476987Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-01-10T13:19:21.6972978Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-01-10T13:20:46.3559684Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-01-10T13:20:46.4294771Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-10T13:20:49.1297866Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-10T13:20:56.9250657Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-10T13:20:57.1503802Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-10T13:20:57.1675276Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-10T13:20:57.2086006Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-10T13:21:06.1973980Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-10T13:21:06.2041076Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-10T13:21:12.4190183Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-10T13:21:12.9002367Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-10T13:21:13.9486034Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-10T13:21:14.0875017Z XX.........                                                              [ 84%]
2025-01-10T13:21:14.1152998Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-10T13:21:14.4555381Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-10T13:21:14.8687010Z .....                                                                    [ 85%]
2025-01-10T13:21:50.6002380Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-01-10T13:21:50.6286729Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-10T13:21:50.6318626Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-10T13:21:53.6431491Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-10T13:21:53.6603563Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-10T13:21:57.0954163Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-10T13:21:57.0955971Z                                                                          [ 86%]
2025-01-10T13:21:57.8486080Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-10T13:21:59.1965511Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-10T13:22:01.8996024Z ......                                                                   [ 88%]
2025-01-10T13:22:06.8889768Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-01-10T13:22:09.9759842Z ..F..FF..FF.F........FF..FF.F                                            [ 91%]
2025-01-10T13:22:12.9287564Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-10T13:22:20.0887045Z ....                                                                     [ 92%]
2025-01-10T13:22:26.3564852Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-01-10T13:22:35.1648374Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-01-10T13:22:35.6015225Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-10T13:22:35.6712246Z ....                                                                     [ 96%]
2025-01-10T13:22:36.7141425Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-10T13:22:37.3398625Z ..................                                                       [ 98%]
2025-01-10T13:23:41.0971519Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-10T13:23:47.7137116Z ......                                                                   [100%]
2025-01-10T13:23:47.7137691Z 
2025-01-10T13:23:47.7137953Z =================================== FAILURES ===================================
2025-01-10T13:23:47.7138649Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-01-10T13:23:47.7139201Z 
2025-01-10T13:23:47.7139460Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-01-10T13:23:47.7140314Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-01-10T13:23:47.7140866Z 
2025-01-10T13:23:47.7141159Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7141745Z         if err_msg is None:
2025-01-10T13:23:47.7142176Z             if left.shape != right.shape:
2025-01-10T13:23:47.7142656Z                 raise_assert_detail(
2025-01-10T13:23:47.7143458Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7143848Z                 )
2025-01-10T13:23:47.7144070Z     
2025-01-10T13:23:47.7144270Z             diff = 0
2025-01-10T13:23:47.7144549Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7144894Z                 # count up differences
2025-01-10T13:23:47.7145306Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7145721Z                     diff += 1
2025-01-10T13:23:47.7145976Z     
2025-01-10T13:23:47.7146193Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7146571Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7147052Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7147503Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7147830Z E           
2025-01-10T13:23:47.7148091Z E           numpy array values are different (0.09581 %)
2025-01-10T13:23:47.7148804Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T13:23:47.7149929Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T13:23:47.7150770Z 
2025-01-10T13:23:47.7151171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7151658Z 
2025-01-10T13:23:47.7151868Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7152176Z 
2025-01-10T13:23:47.7152468Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef5943ae70>
2025-01-10T13:23:47.7153328Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef595117f0>
2025-01-10T13:23:47.7153701Z 
2025-01-10T13:23:47.7153810Z     def test_calculate_sobolev_line_opacity(
2025-01-10T13:23:47.7154106Z         nb_simulation_verysimple, regression_data
2025-01-10T13:23:47.7154368Z     ):
2025-01-10T13:23:47.7154592Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T13:23:47.7154867Z     
2025-01-10T13:23:47.7155064Z         actual = calculate_sobolev_line_opacity(
2025-01-10T13:23:47.7155333Z             legacy_plasma.lines,
2025-01-10T13:23:47.7155779Z             legacy_plasma.level_number_density,
2025-01-10T13:23:47.7156271Z             legacy_plasma.time_explosion,
2025-01-10T13:23:47.7156796Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T13:23:47.7157263Z         )
2025-01-10T13:23:47.7157586Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.7158133Z >       pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7158471Z 
2025-01-10T13:23:47.7158674Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-01-10T13:23:47.7159203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7159798Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7160308Z     ???
2025-01-10T13:23:47.7160654Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7160993Z 
2025-01-10T13:23:47.7161071Z >   ???
2025-01-10T13:23:47.7161299Z E   AssertionError: MultiIndex level [0] are different
2025-01-10T13:23:47.7161802Z E   
2025-01-10T13:23:47.7162208Z E   MultiIndex level [0] values are different (0.09581 %)
2025-01-10T13:23:47.7162783Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:23:47.7163458Z E          ...
2025-01-10T13:23:47.7163811Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:23:47.7164305Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:23:47.7164789Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:23:47.7165218Z E          ...
2025-01-10T13:23:47.7165534Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:23:47.7166020Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:23:47.7166511Z E   At positional index 54, first diff: 12 != 14
2025-01-10T13:23:47.7166818Z 
2025-01-10T13:23:47.7166969Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7167458Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.7168489Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:23:47.7169836Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:23:47.7170928Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:23:47.7171372Z 
2025-01-10T13:23:47.7171378Z 
2025-01-10T13:23:47.7171868Z Packets:                                                                                   4020/? [00:11<00:00, 34008.06it/s][A
2025-01-10T13:23:47.7172276Z 
2025-01-10T13:23:47.7172731Z Packets:                                                                                   4021/? [00:11<00:00, 253.04it/s]  [A
2025-01-10T13:23:47.7174000Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:11<00:02,  2.67s/it]
2025-01-10T13:23:47.7174502Z 
2025-01-10T13:23:47.7174962Z Packets:                                                                                   4030/? [00:11<00:00, 253.04it/s][A
2025-01-10T13:23:47.7175929Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.7177247Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:23:47.7178590Z _________________________ test_calculate_beta_sobolevs _________________________
2025-01-10T13:23:47.7179038Z 
2025-01-10T13:23:47.7179469Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef5943ae70>
2025-01-10T13:23:47.7180531Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef5954eb10>
2025-01-10T13:23:47.7181190Z 
2025-01-10T13:23:47.7181571Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-01-10T13:23:47.7182271Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T13:23:47.7183216Z     
2025-01-10T13:23:47.7183632Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-01-10T13:23:47.7184138Z             legacy_plasma.lines,
2025-01-10T13:23:47.7184592Z             legacy_plasma.level_number_density,
2025-01-10T13:23:47.7185090Z             legacy_plasma.time_explosion,
2025-01-10T13:23:47.7185593Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T13:23:47.7186067Z         )
2025-01-10T13:23:47.7186449Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-01-10T13:23:47.7186987Z         expected = regression_data.sync_ndarray(actual)
2025-01-10T13:23:47.7187520Z >       npt.assert_allclose(actual, expected)
2025-01-10T13:23:47.7187849Z 
2025-01-10T13:23:47.7188059Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-01-10T13:23:47.7188614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7188986Z 
2025-01-10T13:23:47.7189497Z args = (<function assert_allclose.<locals>.compare at 0x7fef60ea3d80>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.7190277Z        [1., 1., .....,
2025-01-10T13:23:47.7190643Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.7191068Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.7191487Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T13:23:47.7192230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.7192851Z 
2025-01-10T13:23:47.7193005Z     @wraps(func)
2025-01-10T13:23:47.7193605Z     def inner(*args, **kwds):
2025-01-10T13:23:47.7194023Z         with self._recreate_cm():
2025-01-10T13:23:47.7194459Z >           return func(*args, **kwds)
2025-01-10T13:23:47.7194919Z E           AssertionError: 
2025-01-10T13:23:47.7195374Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.7195862Z E           
2025-01-10T13:23:47.7196243Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:23:47.7196617Z E           Max absolute difference among violations: 0.99984222
2025-01-10T13:23:47.7196973Z E           Max relative difference among violations: 6337.12154973
2025-01-10T13:23:47.7197303Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.7197583Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.7197843Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:23:47.7198122Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.7198396Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.7198650Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:23:47.7198824Z 
2025-01-10T13:23:47.7199043Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.7199538Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-01-10T13:23:47.7199817Z 
2025-01-10T13:23:47.7199953Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7200510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7200825Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7201141Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7201542Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7201852Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7202107Z err_msg = None
2025-01-10T13:23:47.7202221Z 
2025-01-10T13:23:47.7202335Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7202609Z         if err_msg is None:
2025-01-10T13:23:47.7202845Z             if left.shape != right.shape:
2025-01-10T13:23:47.7203369Z                 raise_assert_detail(
2025-01-10T13:23:47.7203687Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7204123Z                 )
2025-01-10T13:23:47.7204309Z     
2025-01-10T13:23:47.7204474Z             diff = 0
2025-01-10T13:23:47.7204708Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7204999Z                 # count up differences
2025-01-10T13:23:47.7205328Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7205662Z                     diff += 1
2025-01-10T13:23:47.7205872Z     
2025-01-10T13:23:47.7206118Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7206423Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7206811Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7207184Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7207450Z E           
2025-01-10T13:23:47.7207667Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7208132Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7208737Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7209088Z 
2025-01-10T13:23:47.7209405Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7209792Z 
2025-01-10T13:23:47.7209969Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7210225Z 
2025-01-10T13:23:47.7210457Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c123c0>
2025-01-10T13:23:47.7210937Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>
2025-01-10T13:23:47.7211262Z attr = 'lines'
2025-01-10T13:23:47.7211370Z 
2025-01-10T13:23:47.7211518Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7211858Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7212144Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7212368Z         try:
2025-01-10T13:23:47.7212618Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7212927Z         except KeyError:
2025-01-10T13:23:47.7213414Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7213712Z     
2025-01-10T13:23:47.7213895Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7214145Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7214405Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7214865Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7215169Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7215413Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7215692Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7215960Z             else:
2025-01-10T13:23:47.7216170Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7216460Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7216648Z 
2025-01-10T13:23:47.7216781Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7217101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7217446Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7217746Z     ???
2025-01-10T13:23:47.7217954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7218157Z 
2025-01-10T13:23:47.7218376Z >   ???
2025-01-10T13:23:47.7218603Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7218878Z E   
2025-01-10T13:23:47.7219107Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7219434Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7219706Z E          ...
2025-01-10T13:23:47.7219903Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7220203Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7220531Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7220798Z E          ...
2025-01-10T13:23:47.7220997Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7221297Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7221612Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7221804Z 
2025-01-10T13:23:47.7221898Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7222281Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-01-10T13:23:47.7222590Z 
2025-01-10T13:23:47.7222821Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c13230>
2025-01-10T13:23:47.7223524Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>
2025-01-10T13:23:47.7223865Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.7224019Z 
2025-01-10T13:23:47.7224164Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7224500Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7224781Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7225002Z         try:
2025-01-10T13:23:47.7225253Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7225559Z         except KeyError:
2025-01-10T13:23:47.7225834Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7226126Z     
2025-01-10T13:23:47.7226322Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7226572Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7226837Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7227142Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7227449Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7227695Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7227977Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7228186Z 
2025-01-10T13:23:47.7228313Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7228637Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7228841Z 
2025-01-10T13:23:47.7228987Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7229297Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7229571Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7230000Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7230299Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7230611Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7230878Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7231147Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7231383Z err_msg = None
2025-01-10T13:23:47.7231494Z 
2025-01-10T13:23:47.7231612Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7231883Z         if err_msg is None:
2025-01-10T13:23:47.7232117Z             if left.shape != right.shape:
2025-01-10T13:23:47.7232375Z                 raise_assert_detail(
2025-01-10T13:23:47.7232680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7232980Z                 )
2025-01-10T13:23:47.7233358Z     
2025-01-10T13:23:47.7233532Z             diff = 0
2025-01-10T13:23:47.7233942Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7234229Z                 # count up differences
2025-01-10T13:23:47.7234565Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7234899Z                     diff += 1
2025-01-10T13:23:47.7235109Z     
2025-01-10T13:23:47.7235292Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7235593Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7235988Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7236353Z E           AssertionError: Series are different
2025-01-10T13:23:47.7236611Z E           
2025-01-10T13:23:47.7236822Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.7237378Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7238160Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7238890Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7239302Z 
2025-01-10T13:23:47.7239620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7240226Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-01-10T13:23:47.7240525Z 
2025-01-10T13:23:47.7240753Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c13470>
2025-01-10T13:23:47.7241231Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>
2025-01-10T13:23:47.7241568Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.7241724Z 
2025-01-10T13:23:47.7241871Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7242203Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7242485Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7242708Z         try:
2025-01-10T13:23:47.7242958Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7243567Z         except KeyError:
2025-01-10T13:23:47.7243842Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7244138Z     
2025-01-10T13:23:47.7244319Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7244569Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7244833Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7245135Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7245437Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7245685Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7245971Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7246162Z 
2025-01-10T13:23:47.7246292Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7246610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7246848Z 
2025-01-10T13:23:47.7247113Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7247431Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7247706Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7247981Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7248276Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7248587Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7248855Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7249126Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7249360Z err_msg = None
2025-01-10T13:23:47.7249473Z 
2025-01-10T13:23:47.7249585Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7249854Z         if err_msg is None:
2025-01-10T13:23:47.7250086Z             if left.shape != right.shape:
2025-01-10T13:23:47.7250340Z                 raise_assert_detail(
2025-01-10T13:23:47.7250653Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7250952Z                 )
2025-01-10T13:23:47.7251140Z     
2025-01-10T13:23:47.7251307Z             diff = 0
2025-01-10T13:23:47.7251544Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7251826Z                 # count up differences
2025-01-10T13:23:47.7252157Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7252495Z                     diff += 1
2025-01-10T13:23:47.7252708Z     
2025-01-10T13:23:47.7252888Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7253306Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7253698Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7254057Z E           AssertionError: Series are different
2025-01-10T13:23:47.7254315Z E           
2025-01-10T13:23:47.7254531Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.7255078Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7255887Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7256717Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7257294Z 
2025-01-10T13:23:47.7257607Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7258184Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-01-10T13:23:47.7258462Z 
2025-01-10T13:23:47.7258591Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7258933Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7259354Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7259675Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7260024Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7260342Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7260596Z err_msg = None
2025-01-10T13:23:47.7260708Z 
2025-01-10T13:23:47.7260825Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7261098Z         if err_msg is None:
2025-01-10T13:23:47.7261339Z             if left.shape != right.shape:
2025-01-10T13:23:47.7261595Z                 raise_assert_detail(
2025-01-10T13:23:47.7261902Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7262204Z                 )
2025-01-10T13:23:47.7262387Z     
2025-01-10T13:23:47.7262552Z             diff = 0
2025-01-10T13:23:47.7262789Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7263188Z                 # count up differences
2025-01-10T13:23:47.7263526Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7263864Z                     diff += 1
2025-01-10T13:23:47.7264075Z     
2025-01-10T13:23:47.7264255Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7264557Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7264944Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7265317Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7265582Z E           
2025-01-10T13:23:47.7265799Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7266256Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7266858Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7267196Z 
2025-01-10T13:23:47.7267505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7267889Z 
2025-01-10T13:23:47.7268069Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7268327Z 
2025-01-10T13:23:47.7268550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c12930>
2025-01-10T13:23:47.7269061Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>, attr = 'nu'
2025-01-10T13:23:47.7269517Z 
2025-01-10T13:23:47.7269659Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7269996Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7270276Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7270494Z         try:
2025-01-10T13:23:47.7270736Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7271043Z         except KeyError:
2025-01-10T13:23:47.7271316Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7271612Z     
2025-01-10T13:23:47.7271791Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7272039Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7272300Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7272601Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7272919Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7273292Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7273758Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7273956Z 
2025-01-10T13:23:47.7274089Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7274408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7274755Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7275057Z     ???
2025-01-10T13:23:47.7275264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7275464Z 
2025-01-10T13:23:47.7275534Z >   ???
2025-01-10T13:23:47.7275755Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7276031Z E   
2025-01-10T13:23:47.7276251Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7276574Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7276844Z E          ...
2025-01-10T13:23:47.7277042Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7277351Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7277681Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7277951Z E          ...
2025-01-10T13:23:47.7278146Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7278448Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7278760Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7278942Z 
2025-01-10T13:23:47.7279039Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7279393Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-01-10T13:23:47.7279680Z 
2025-01-10T13:23:47.7279818Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7280164Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7280479Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7280798Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7281142Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7281449Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7281702Z err_msg = None
2025-01-10T13:23:47.7281817Z 
2025-01-10T13:23:47.7281930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7282205Z         if err_msg is None:
2025-01-10T13:23:47.7282443Z             if left.shape != right.shape:
2025-01-10T13:23:47.7282702Z                 raise_assert_detail(
2025-01-10T13:23:47.7283006Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7283452Z                 )
2025-01-10T13:23:47.7283635Z     
2025-01-10T13:23:47.7283800Z             diff = 0
2025-01-10T13:23:47.7284034Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7284459Z                 # count up differences
2025-01-10T13:23:47.7284792Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7285128Z                     diff += 1
2025-01-10T13:23:47.7285337Z     
2025-01-10T13:23:47.7285518Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7285823Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7286208Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7286578Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7286845Z E           
2025-01-10T13:23:47.7287060Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7287638Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7288251Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7288591Z 
2025-01-10T13:23:47.7288903Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7289289Z 
2025-01-10T13:23:47.7289462Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7289711Z 
2025-01-10T13:23:47.7289939Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c12810>
2025-01-10T13:23:47.7290410Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>
2025-01-10T13:23:47.7290746Z attr = 'wavelength_cm'
2025-01-10T13:23:47.7290878Z 
2025-01-10T13:23:47.7291024Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7291359Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7291642Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7291865Z         try:
2025-01-10T13:23:47.7292113Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7292420Z         except KeyError:
2025-01-10T13:23:47.7292691Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7292990Z     
2025-01-10T13:23:47.7293357Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7293615Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7293878Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7294179Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7294480Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7294725Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7295020Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7295215Z 
2025-01-10T13:23:47.7295346Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7295664Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7296004Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7296302Z     ???
2025-01-10T13:23:47.7296511Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7296706Z 
2025-01-10T13:23:47.7296783Z >   ???
2025-01-10T13:23:47.7297005Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7297282Z E   
2025-01-10T13:23:47.7297502Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7297821Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7298089Z E          ...
2025-01-10T13:23:47.7298286Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7298754Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7299079Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7299351Z E          ...
2025-01-10T13:23:47.7299546Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7299839Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7300149Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7300337Z 
2025-01-10T13:23:47.7300429Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7300766Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-01-10T13:23:47.7301043Z 
2025-01-10T13:23:47.7301172Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7301553Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7301977Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7302300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7302649Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7302959Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7303337Z err_msg = None
2025-01-10T13:23:47.7303446Z 
2025-01-10T13:23:47.7303563Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7303833Z         if err_msg is None:
2025-01-10T13:23:47.7304068Z             if left.shape != right.shape:
2025-01-10T13:23:47.7304328Z                 raise_assert_detail(
2025-01-10T13:23:47.7304632Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7304934Z                 )
2025-01-10T13:23:47.7305115Z     
2025-01-10T13:23:47.7305282Z             diff = 0
2025-01-10T13:23:47.7305523Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7305809Z                 # count up differences
2025-01-10T13:23:47.7306140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7306475Z                     diff += 1
2025-01-10T13:23:47.7306685Z     
2025-01-10T13:23:47.7306869Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7307174Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7307562Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7307941Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7308205Z E           
2025-01-10T13:23:47.7308423Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7308881Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7309477Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7309818Z 
2025-01-10T13:23:47.7310136Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7310526Z 
2025-01-10T13:23:47.7310693Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7310951Z 
2025-01-10T13:23:47.7311173Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c128d0>
2025-01-10T13:23:47.7311687Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>, attr = 'f_lu'
2025-01-10T13:23:47.7312113Z 
2025-01-10T13:23:47.7312256Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7312587Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7312868Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7313272Z         try:
2025-01-10T13:23:47.7313522Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7313828Z         except KeyError:
2025-01-10T13:23:47.7314097Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7314393Z     
2025-01-10T13:23:47.7314573Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7314823Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7315083Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7315382Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7315683Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7315930Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7316364Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7316566Z 
2025-01-10T13:23:47.7316691Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7317008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7317350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7317649Z     ???
2025-01-10T13:23:47.7317857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7318056Z 
2025-01-10T13:23:47.7318128Z >   ???
2025-01-10T13:23:47.7318350Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7318629Z E   
2025-01-10T13:23:47.7318850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7319173Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7319442Z E          ...
2025-01-10T13:23:47.7319644Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7319954Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7320283Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7320551Z E          ...
2025-01-10T13:23:47.7320746Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7321043Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7321354Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7321537Z 
2025-01-10T13:23:47.7321634Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7321989Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-01-10T13:23:47.7322285Z 
2025-01-10T13:23:47.7322418Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7322768Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7323211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7323527Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7323874Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7324185Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7324442Z err_msg = None
2025-01-10T13:23:47.7324550Z 
2025-01-10T13:23:47.7324666Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7324934Z         if err_msg is None:
2025-01-10T13:23:47.7325188Z             if left.shape != right.shape:
2025-01-10T13:23:47.7325446Z                 raise_assert_detail(
2025-01-10T13:23:47.7325749Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7326051Z                 )
2025-01-10T13:23:47.7326232Z     
2025-01-10T13:23:47.7326398Z             diff = 0
2025-01-10T13:23:47.7326632Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7327059Z                 # count up differences
2025-01-10T13:23:47.7327392Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7327731Z                     diff += 1
2025-01-10T13:23:47.7327940Z     
2025-01-10T13:23:47.7328119Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7328419Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7328807Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7329179Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7329442Z E           
2025-01-10T13:23:47.7329660Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7330219Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7330829Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7331165Z 
2025-01-10T13:23:47.7331478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7331867Z 
2025-01-10T13:23:47.7332040Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7332297Z 
2025-01-10T13:23:47.7332520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c12960>
2025-01-10T13:23:47.7333211Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>
2025-01-10T13:23:47.7333549Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.7333679Z 
2025-01-10T13:23:47.7333815Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7334150Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7334427Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7334649Z         try:
2025-01-10T13:23:47.7334894Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7335201Z         except KeyError:
2025-01-10T13:23:47.7335476Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7335774Z     
2025-01-10T13:23:47.7335959Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7336213Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7336480Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7336786Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7337091Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7337342Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7337631Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7337901Z             else:
2025-01-10T13:23:47.7338115Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7338399Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7338586Z 
2025-01-10T13:23:47.7338720Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7339038Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7339383Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7339680Z     ???
2025-01-10T13:23:47.7340112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7340363Z 
2025-01-10T13:23:47.7340504Z >   ???
2025-01-10T13:23:47.7340844Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7341275Z E   
2025-01-10T13:23:47.7341610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7342145Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7342574Z E          ...
2025-01-10T13:23:47.7342891Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7343484Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7343944Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7344310Z E          ...
2025-01-10T13:23:47.7355918Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7356526Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7357080Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7357394Z 
2025-01-10T13:23:47.7357557Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7358037Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-01-10T13:23:47.7358342Z 
2025-01-10T13:23:47.7358667Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7359037Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7359358Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7359681Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7360032Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7360346Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7360604Z err_msg = None
2025-01-10T13:23:47.7360723Z 
2025-01-10T13:23:47.7360839Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7361117Z         if err_msg is None:
2025-01-10T13:23:47.7361356Z             if left.shape != right.shape:
2025-01-10T13:23:47.7361618Z                 raise_assert_detail(
2025-01-10T13:23:47.7361952Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7362282Z                 )
2025-01-10T13:23:47.7362469Z     
2025-01-10T13:23:47.7362640Z             diff = 0
2025-01-10T13:23:47.7362882Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7363348Z                 # count up differences
2025-01-10T13:23:47.7363687Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7364022Z                     diff += 1
2025-01-10T13:23:47.7364235Z     
2025-01-10T13:23:47.7364416Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7364720Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7365108Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7365470Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7365737Z E           
2025-01-10T13:23:47.7365954Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7366417Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7367016Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7367359Z 
2025-01-10T13:23:47.7367680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7368064Z 
2025-01-10T13:23:47.7368242Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7368653Z 
2025-01-10T13:23:47.7368886Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c11d90>
2025-01-10T13:23:47.7369361Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>
2025-01-10T13:23:47.7369691Z attr = 'beta_sobolev'
2025-01-10T13:23:47.7369815Z 
2025-01-10T13:23:47.7369963Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7370300Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7370580Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7370804Z         try:
2025-01-10T13:23:47.7371052Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7371358Z         except KeyError:
2025-01-10T13:23:47.7371628Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7371923Z     
2025-01-10T13:23:47.7372103Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7372354Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7372740Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7373434Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7373844Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7374096Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7374382Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7374650Z             else:
2025-01-10T13:23:47.7374859Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7375145Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7375340Z 
2025-01-10T13:23:47.7375467Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7375790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7376137Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7376433Z     ???
2025-01-10T13:23:47.7376639Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7376844Z 
2025-01-10T13:23:47.7376920Z >   ???
2025-01-10T13:23:47.7377139Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7377415Z E   
2025-01-10T13:23:47.7377635Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7377961Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7378229Z E          ...
2025-01-10T13:23:47.7378424Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7378724Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7379049Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7379313Z E          ...
2025-01-10T13:23:47.7379508Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7379809Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7380121Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7380304Z 
2025-01-10T13:23:47.7380406Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7380753Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-01-10T13:23:47.7381036Z 
2025-01-10T13:23:47.7381166Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7381510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7381824Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7382138Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7382475Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7382774Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7383182Z err_msg = None
2025-01-10T13:23:47.7383300Z 
2025-01-10T13:23:47.7383416Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7383856Z         if err_msg is None:
2025-01-10T13:23:47.7384098Z             if left.shape != right.shape:
2025-01-10T13:23:47.7384359Z                 raise_assert_detail(
2025-01-10T13:23:47.7384666Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7384968Z                 )
2025-01-10T13:23:47.7385148Z     
2025-01-10T13:23:47.7385311Z             diff = 0
2025-01-10T13:23:47.7385543Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7385823Z                 # count up differences
2025-01-10T13:23:47.7386154Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7386486Z                     diff += 1
2025-01-10T13:23:47.7386695Z     
2025-01-10T13:23:47.7386875Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7387177Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7387566Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7388071Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7388341Z E           
2025-01-10T13:23:47.7388560Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7389010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7389607Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7389939Z 
2025-01-10T13:23:47.7390255Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7390648Z 
2025-01-10T13:23:47.7390824Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7391075Z 
2025-01-10T13:23:47.7391304Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c12ae0>
2025-01-10T13:23:47.7391782Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef595fc0b0>
2025-01-10T13:23:47.7392302Z attr = 'j_blues'
2025-01-10T13:23:47.7392506Z 
2025-01-10T13:23:47.7392735Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7393466Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7393803Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7394023Z         try:
2025-01-10T13:23:47.7394269Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7394574Z         except KeyError:
2025-01-10T13:23:47.7394846Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7395143Z     
2025-01-10T13:23:47.7395322Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7395574Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7395832Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7396126Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7396425Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7396669Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7396951Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7397215Z             else:
2025-01-10T13:23:47.7397421Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7397700Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7397884Z 
2025-01-10T13:23:47.7398013Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7398339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7398834Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7399129Z     ???
2025-01-10T13:23:47.7399332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7399528Z 
2025-01-10T13:23:47.7399597Z >   ???
2025-01-10T13:23:47.7399816Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7400089Z E   
2025-01-10T13:23:47.7400308Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7400627Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7400889Z E          ...
2025-01-10T13:23:47.7401082Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7401413Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7401739Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7402003Z E          ...
2025-01-10T13:23:47.7402203Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7402621Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7402943Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7403275Z 
2025-01-10T13:23:47.7403371Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7403704Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-01-10T13:23:47.7403976Z 
2025-01-10T13:23:47.7404110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7404445Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7404752Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7405058Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7405395Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7405696Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7405949Z err_msg = None
2025-01-10T13:23:47.7406060Z 
2025-01-10T13:23:47.7406170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7406437Z         if err_msg is None:
2025-01-10T13:23:47.7406667Z             if left.shape != right.shape:
2025-01-10T13:23:47.7406927Z                 raise_assert_detail(
2025-01-10T13:23:47.7407238Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7407535Z                 )
2025-01-10T13:23:47.7407714Z     
2025-01-10T13:23:47.7407876Z             diff = 0
2025-01-10T13:23:47.7408102Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7408376Z                 # count up differences
2025-01-10T13:23:47.7408707Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7409037Z                     diff += 1
2025-01-10T13:23:47.7409243Z     
2025-01-10T13:23:47.7409429Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7409735Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7410223Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7410861Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7411300Z E           
2025-01-10T13:23:47.7411654Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7412114Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7412712Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7413317Z 
2025-01-10T13:23:47.7413629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7414008Z 
2025-01-10T13:23:47.7414181Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7414429Z 
2025-01-10T13:23:47.7414656Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c12750>
2025-01-10T13:23:47.7415126Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>
2025-01-10T13:23:47.7415451Z attr = 'lines'
2025-01-10T13:23:47.7415558Z 
2025-01-10T13:23:47.7415700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7416029Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7416308Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7416539Z         try:
2025-01-10T13:23:47.7416922Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7417235Z         except KeyError:
2025-01-10T13:23:47.7417504Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7417792Z     
2025-01-10T13:23:47.7417970Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7418220Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7418479Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7418782Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7419079Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7419321Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7419604Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7419864Z             else:
2025-01-10T13:23:47.7420070Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7420350Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7420540Z 
2025-01-10T13:23:47.7420676Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7420997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7421339Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7421636Z     ???
2025-01-10T13:23:47.7421836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7422030Z 
2025-01-10T13:23:47.7422104Z >   ???
2025-01-10T13:23:47.7422320Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7422592Z E   
2025-01-10T13:23:47.7422808Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7423225Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7423488Z E          ...
2025-01-10T13:23:47.7423679Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7423978Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7424358Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7424620Z E          ...
2025-01-10T13:23:47.7424806Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7425098Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7425407Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7425596Z 
2025-01-10T13:23:47.7425691Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7426045Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-01-10T13:23:47.7426332Z 
2025-01-10T13:23:47.7426564Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c107d0>
2025-01-10T13:23:47.7427037Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>
2025-01-10T13:23:47.7427374Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.7427598Z 
2025-01-10T13:23:47.7427843Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7428622Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7429095Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7429386Z         try:
2025-01-10T13:23:47.7429636Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7429944Z         except KeyError:
2025-01-10T13:23:47.7430214Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7430503Z     
2025-01-10T13:23:47.7430682Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7430930Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7431190Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7431494Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7431794Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7432038Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7432324Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7432520Z 
2025-01-10T13:23:47.7432802Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7433288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7433490Z 
2025-01-10T13:23:47.7433630Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7433940Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7434211Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7434486Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7434783Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7435091Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7435355Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7435624Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7435856Z err_msg = None
2025-01-10T13:23:47.7435968Z 
2025-01-10T13:23:47.7436094Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7436364Z         if err_msg is None:
2025-01-10T13:23:47.7436596Z             if left.shape != right.shape:
2025-01-10T13:23:47.7436851Z                 raise_assert_detail(
2025-01-10T13:23:47.7437153Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7437452Z                 )
2025-01-10T13:23:47.7437631Z     
2025-01-10T13:23:47.7437793Z             diff = 0
2025-01-10T13:23:47.7438019Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7438297Z                 # count up differences
2025-01-10T13:23:47.7438625Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7438967Z                     diff += 1
2025-01-10T13:23:47.7439178Z     
2025-01-10T13:23:47.7439355Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7439656Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7440054Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7440417Z E           AssertionError: Series are different
2025-01-10T13:23:47.7440675Z E           
2025-01-10T13:23:47.7440885Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.7441432Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7442198Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7443196Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7443608Z 
2025-01-10T13:23:47.7443926Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7444518Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-01-10T13:23:47.7444808Z 
2025-01-10T13:23:47.7445035Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c10e30>
2025-01-10T13:23:47.7445623Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>
2025-01-10T13:23:47.7446155Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.7446423Z 
2025-01-10T13:23:47.7446653Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7447213Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7447643Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7447865Z         try:
2025-01-10T13:23:47.7448109Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7448408Z         except KeyError:
2025-01-10T13:23:47.7448678Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7448964Z     
2025-01-10T13:23:47.7449143Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7449388Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7449648Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7449955Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7450266Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7450510Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7450782Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7450978Z 
2025-01-10T13:23:47.7451109Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7451426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7451626Z 
2025-01-10T13:23:47.7451769Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7452085Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7452357Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7452631Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7452929Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7453373Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7453651Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7453920Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7454155Z err_msg = None
2025-01-10T13:23:47.7454268Z 
2025-01-10T13:23:47.7454379Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7454647Z         if err_msg is None:
2025-01-10T13:23:47.7454878Z             if left.shape != right.shape:
2025-01-10T13:23:47.7455137Z                 raise_assert_detail(
2025-01-10T13:23:47.7455445Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7455741Z                 )
2025-01-10T13:23:47.7455925Z     
2025-01-10T13:23:47.7456089Z             diff = 0
2025-01-10T13:23:47.7456318Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7456598Z                 # count up differences
2025-01-10T13:23:47.7456925Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7457408Z                     diff += 1
2025-01-10T13:23:47.7457619Z     
2025-01-10T13:23:47.7457798Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7458098Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7458486Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7458845Z E           AssertionError: Series are different
2025-01-10T13:23:47.7459103Z E           
2025-01-10T13:23:47.7459305Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.7459854Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7460771Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7461592Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7462039Z 
2025-01-10T13:23:47.7462357Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7462927Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-01-10T13:23:47.7463315Z 
2025-01-10T13:23:47.7463444Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7463783Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7464096Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7464407Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7464840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7465381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7465803Z err_msg = None
2025-01-10T13:23:47.7465981Z 
2025-01-10T13:23:47.7466165Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7466497Z         if err_msg is None:
2025-01-10T13:23:47.7466737Z             if left.shape != right.shape:
2025-01-10T13:23:47.7466997Z                 raise_assert_detail(
2025-01-10T13:23:47.7467301Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7467598Z                 )
2025-01-10T13:23:47.7467778Z     
2025-01-10T13:23:47.7467941Z             diff = 0
2025-01-10T13:23:47.7468177Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7468457Z                 # count up differences
2025-01-10T13:23:47.7468784Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7469122Z                     diff += 1
2025-01-10T13:23:47.7469332Z     
2025-01-10T13:23:47.7469513Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7469814Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7470201Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7470729Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7470996Z E           
2025-01-10T13:23:47.7471217Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7471666Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7472272Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7472607Z 
2025-01-10T13:23:47.7473154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7473559Z 
2025-01-10T13:23:47.7473732Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7473988Z 
2025-01-10T13:23:47.7474214Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c17920>
2025-01-10T13:23:47.7474726Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>, attr = 'nu'
2025-01-10T13:23:47.7475017Z 
2025-01-10T13:23:47.7475158Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7475492Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7475775Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7475995Z         try:
2025-01-10T13:23:47.7476239Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7476549Z         except KeyError:
2025-01-10T13:23:47.7476821Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7477121Z     
2025-01-10T13:23:47.7477305Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7477552Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7477810Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7478112Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7478412Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7478655Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7478940Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7479132Z 
2025-01-10T13:23:47.7479266Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7479590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7479931Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7480229Z     ???
2025-01-10T13:23:47.7480436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7480640Z 
2025-01-10T13:23:47.7480715Z >   ???
2025-01-10T13:23:47.7480938Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7481212Z E   
2025-01-10T13:23:47.7481431Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7481751Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7482017Z E          ...
2025-01-10T13:23:47.7482215Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7482527Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7482859Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7483271Z E          ...
2025-01-10T13:23:47.7483573Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7484081Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7484604Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7484913Z 
2025-01-10T13:23:47.7485015Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7485514Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-01-10T13:23:47.7485798Z 
2025-01-10T13:23:47.7485934Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7486276Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7486588Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7486898Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7487239Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7487544Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7487796Z err_msg = None
2025-01-10T13:23:47.7487911Z 
2025-01-10T13:23:47.7488023Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7488292Z         if err_msg is None:
2025-01-10T13:23:47.7488646Z             if left.shape != right.shape:
2025-01-10T13:23:47.7488909Z                 raise_assert_detail(
2025-01-10T13:23:47.7489222Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7489522Z                 )
2025-01-10T13:23:47.7489703Z     
2025-01-10T13:23:47.7489866Z             diff = 0
2025-01-10T13:23:47.7490095Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7490374Z                 # count up differences
2025-01-10T13:23:47.7490713Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7491050Z                     diff += 1
2025-01-10T13:23:47.7491260Z     
2025-01-10T13:23:47.7491442Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7491746Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7492131Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7492513Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7492776Z E           
2025-01-10T13:23:47.7492987Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7493563Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7494156Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7494491Z 
2025-01-10T13:23:47.7494806Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7495191Z 
2025-01-10T13:23:47.7495367Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7495617Z 
2025-01-10T13:23:47.7495843Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c17da0>
2025-01-10T13:23:47.7496318Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>
2025-01-10T13:23:47.7496644Z attr = 'wavelength_cm'
2025-01-10T13:23:47.7496770Z 
2025-01-10T13:23:47.7496919Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7497249Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7497529Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7497748Z         try:
2025-01-10T13:23:47.7497992Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7498294Z         except KeyError:
2025-01-10T13:23:47.7498564Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7498979Z     
2025-01-10T13:23:47.7499160Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7499409Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7499673Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7499973Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7500269Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7500637Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7501126Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7501496Z 
2025-01-10T13:23:47.7501711Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7502145Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7502496Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7502792Z     ???
2025-01-10T13:23:47.7502998Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7503470Z 
2025-01-10T13:23:47.7503550Z >   ???
2025-01-10T13:23:47.7503780Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7504055Z E   
2025-01-10T13:23:47.7504280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7504601Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7504867Z E          ...
2025-01-10T13:23:47.7505063Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7505364Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7505693Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7505958Z E          ...
2025-01-10T13:23:47.7506154Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7506448Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7506758Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7506947Z 
2025-01-10T13:23:47.7507045Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7507379Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-01-10T13:23:47.7507656Z 
2025-01-10T13:23:47.7507791Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7508134Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7508450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7508760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7509102Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7509408Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7509660Z err_msg = None
2025-01-10T13:23:47.7509767Z 
2025-01-10T13:23:47.7509883Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7509978Z         if err_msg is None:
2025-01-10T13:23:47.7510074Z             if left.shape != right.shape:
2025-01-10T13:23:47.7510164Z                 raise_assert_detail(
2025-01-10T13:23:47.7510311Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7510391Z                 )
2025-01-10T13:23:47.7510464Z     
2025-01-10T13:23:47.7510544Z             diff = 0
2025-01-10T13:23:47.7510658Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7510754Z                 # count up differences
2025-01-10T13:23:47.7510922Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7511005Z                     diff += 1
2025-01-10T13:23:47.7511076Z     
2025-01-10T13:23:47.7511170Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7511306Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7511484Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7511723Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7511795Z E           
2025-01-10T13:23:47.7511914Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7512172Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7512435Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7512440Z 
2025-01-10T13:23:47.7512826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7512831Z 
2025-01-10T13:23:47.7513005Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7513009Z 
2025-01-10T13:23:47.7513346Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c17fb0>
2025-01-10T13:23:47.7513551Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>, attr = 'f_lu'
2025-01-10T13:23:47.7513555Z 
2025-01-10T13:23:47.7513694Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7513808Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7513897Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7513975Z         try:
2025-01-10T13:23:47.7514119Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7514205Z         except KeyError:
2025-01-10T13:23:47.7514343Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7514426Z     
2025-01-10T13:23:47.7514515Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7514613Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7514703Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7514841Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7514928Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7515026Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7515139Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7515144Z 
2025-01-10T13:23:47.7515277Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7515393Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7515540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7515616Z     ???
2025-01-10T13:23:47.7515725Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7515736Z 
2025-01-10T13:23:47.7515812Z >   ???
2025-01-10T13:23:47.7515939Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7516014Z E   
2025-01-10T13:23:47.7516144Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7516263Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7516337Z E          ...
2025-01-10T13:23:47.7516432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7516562Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7516681Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7516762Z E          ...
2025-01-10T13:23:47.7516848Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7516979Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7517084Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7517089Z 
2025-01-10T13:23:47.7517335Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7517530Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-01-10T13:23:47.7517534Z 
2025-01-10T13:23:47.7517668Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7517795Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7517900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7518031Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7518160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7518259Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7518336Z err_msg = None
2025-01-10T13:23:47.7518340Z 
2025-01-10T13:23:47.7518454Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7518783Z         if err_msg is None:
2025-01-10T13:23:47.7518972Z             if left.shape != right.shape:
2025-01-10T13:23:47.7519122Z                 raise_assert_detail(
2025-01-10T13:23:47.7519376Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7519493Z                 )
2025-01-10T13:23:47.7519612Z     
2025-01-10T13:23:47.7519731Z             diff = 0
2025-01-10T13:23:47.7519922Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7520074Z                 # count up differences
2025-01-10T13:23:47.7520265Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7520351Z                     diff += 1
2025-01-10T13:23:47.7520422Z     
2025-01-10T13:23:47.7520518Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7520657Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7520841Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7520963Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7521040Z E           
2025-01-10T13:23:47.7521157Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7521425Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7521687Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7521693Z 
2025-01-10T13:23:47.7522014Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7522021Z 
2025-01-10T13:23:47.7522195Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7522199Z 
2025-01-10T13:23:47.7522421Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c168d0>
2025-01-10T13:23:47.7522595Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>
2025-01-10T13:23:47.7522677Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.7522682Z 
2025-01-10T13:23:47.7522822Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7522943Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7523177Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7523258Z         try:
2025-01-10T13:23:47.7523402Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7523488Z         except KeyError:
2025-01-10T13:23:47.7523632Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7523839Z     
2025-01-10T13:23:47.7523931Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7524031Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7524121Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7524258Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7524350Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7524441Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7524557Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7524630Z             else:
2025-01-10T13:23:47.7524733Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7524840Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7524845Z 
2025-01-10T13:23:47.7524980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7525093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7525355Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7525429Z     ???
2025-01-10T13:23:47.7525545Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7525549Z 
2025-01-10T13:23:47.7525625Z >   ???
2025-01-10T13:23:47.7525752Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7525827Z E   
2025-01-10T13:23:47.7525956Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7526073Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7526147Z E          ...
2025-01-10T13:23:47.7526240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7526371Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7526491Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7526564Z E          ...
2025-01-10T13:23:47.7526656Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7526789Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7526899Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7526903Z 
2025-01-10T13:23:47.7526998Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7527193Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-01-10T13:23:47.7527197Z 
2025-01-10T13:23:47.7527332Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7527462Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7527565Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7527701Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7527830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7527932Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7528016Z err_msg = None
2025-01-10T13:23:47.7528020Z 
2025-01-10T13:23:47.7528138Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7528221Z         if err_msg is None:
2025-01-10T13:23:47.7528323Z             if left.shape != right.shape:
2025-01-10T13:23:47.7528407Z                 raise_assert_detail(
2025-01-10T13:23:47.7528556Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7528628Z                 )
2025-01-10T13:23:47.7528702Z     
2025-01-10T13:23:47.7528775Z             diff = 0
2025-01-10T13:23:47.7528893Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7528981Z                 # count up differences
2025-01-10T13:23:47.7529155Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7529232Z                     diff += 1
2025-01-10T13:23:47.7529307Z     
2025-01-10T13:23:47.7529492Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7529633Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7529812Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7529925Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7530002Z E           
2025-01-10T13:23:47.7530113Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7530374Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7530704Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7530719Z 
2025-01-10T13:23:47.7531021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7531026Z 
2025-01-10T13:23:47.7531199Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7531203Z 
2025-01-10T13:23:47.7531425Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c17320>
2025-01-10T13:23:47.7531595Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>
2025-01-10T13:23:47.7531674Z attr = 'beta_sobolev'
2025-01-10T13:23:47.7531679Z 
2025-01-10T13:23:47.7531822Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7531937Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7532031Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7532117Z         try:
2025-01-10T13:23:47.7532257Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7532343Z         except KeyError:
2025-01-10T13:23:47.7532481Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7532555Z     
2025-01-10T13:23:47.7532643Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7532743Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7532837Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7532977Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7533169Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7533269Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7533380Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7533458Z             else:
2025-01-10T13:23:47.7533554Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7533666Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7533680Z 
2025-01-10T13:23:47.7533809Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7533923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7534073Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7534144Z     ???
2025-01-10T13:23:47.7534258Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7534263Z 
2025-01-10T13:23:47.7534333Z >   ???
2025-01-10T13:23:47.7534464Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7534534Z E   
2025-01-10T13:23:47.7534666Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7534778Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7534860Z E          ...
2025-01-10T13:23:47.7534954Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7535087Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7535345Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7535417Z E          ...
2025-01-10T13:23:47.7535509Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7535634Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7535744Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7535749Z 
2025-01-10T13:23:47.7535838Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7536032Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-01-10T13:23:47.7536036Z 
2025-01-10T13:23:47.7536164Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7536295Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7536397Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7536635Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7536888Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7537056Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7537194Z err_msg = None
2025-01-10T13:23:47.7537202Z 
2025-01-10T13:23:47.7537380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7537522Z         if err_msg is None:
2025-01-10T13:23:47.7537673Z             if left.shape != right.shape:
2025-01-10T13:23:47.7537817Z                 raise_assert_detail(
2025-01-10T13:23:47.7538050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7538181Z                 )
2025-01-10T13:23:47.7538262Z     
2025-01-10T13:23:47.7538338Z             diff = 0
2025-01-10T13:23:47.7538460Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7538549Z                 # count up differences
2025-01-10T13:23:47.7538743Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7538822Z                     diff += 1
2025-01-10T13:23:47.7538899Z     
2025-01-10T13:23:47.7538992Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7539135Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7539305Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7539423Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7539496Z E           
2025-01-10T13:23:47.7539617Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7539883Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7540143Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7540148Z 
2025-01-10T13:23:47.7540459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7540463Z 
2025-01-10T13:23:47.7540634Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7540643Z 
2025-01-10T13:23:47.7540865Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c159d0>
2025-01-10T13:23:47.7541037Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef4bede7e0>
2025-01-10T13:23:47.7541113Z attr = 'j_blues'
2025-01-10T13:23:47.7541117Z 
2025-01-10T13:23:47.7541394Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7541511Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7541601Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7541674Z         try:
2025-01-10T13:23:47.7541819Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7541900Z         except KeyError:
2025-01-10T13:23:47.7542045Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7542115Z     
2025-01-10T13:23:47.7542208Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7542307Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7542395Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7542534Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7542620Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7542719Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7542903Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7542988Z             else:
2025-01-10T13:23:47.7543204Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7543322Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7543327Z 
2025-01-10T13:23:47.7543453Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7543572Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7543716Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7543794Z     ???
2025-01-10T13:23:47.7543909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7543913Z 
2025-01-10T13:23:47.7543987Z >   ???
2025-01-10T13:23:47.7544121Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7544192Z E   
2025-01-10T13:23:47.7544326Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7544443Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7544531Z E          ...
2025-01-10T13:23:47.7544622Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7544764Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7544877Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7544956Z E          ...
2025-01-10T13:23:47.7545043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7545175Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7545286Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7545290Z 
2025-01-10T13:23:47.7545380Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7545570Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-01-10T13:23:47.7545574Z 
2025-01-10T13:23:47.7545700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7545840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7545939Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7546076Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7546200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7546299Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7546380Z err_msg = None
2025-01-10T13:23:47.7546385Z 
2025-01-10T13:23:47.7546495Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7546580Z         if err_msg is None:
2025-01-10T13:23:47.7546675Z             if left.shape != right.shape:
2025-01-10T13:23:47.7546764Z                 raise_assert_detail(
2025-01-10T13:23:47.7546908Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7546988Z                 )
2025-01-10T13:23:47.7547194Z     
2025-01-10T13:23:47.7547275Z             diff = 0
2025-01-10T13:23:47.7547387Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7547480Z                 # count up differences
2025-01-10T13:23:47.7547649Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7547736Z                     diff += 1
2025-01-10T13:23:47.7547810Z     
2025-01-10T13:23:47.7547899Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7548041Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7548213Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7548335Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7548407Z E           
2025-01-10T13:23:47.7548526Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7548889Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7549164Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7549170Z 
2025-01-10T13:23:47.7549477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7549481Z 
2025-01-10T13:23:47.7549652Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7549656Z 
2025-01-10T13:23:47.7549889Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c16cc0>
2025-01-10T13:23:47.7550057Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>
2025-01-10T13:23:47.7550139Z attr = 'lines'
2025-01-10T13:23:47.7550143Z 
2025-01-10T13:23:47.7550288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7550404Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7550494Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7550565Z         try:
2025-01-10T13:23:47.7550715Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7550798Z         except KeyError:
2025-01-10T13:23:47.7550940Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7551011Z     
2025-01-10T13:23:47.7551108Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7551204Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7551302Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7551435Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7551531Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7551621Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7551739Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7551816Z             else:
2025-01-10T13:23:47.7551913Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7552025Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7552029Z 
2025-01-10T13:23:47.7552154Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7552272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7552426Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7552503Z     ???
2025-01-10T13:23:47.7552611Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7552615Z 
2025-01-10T13:23:47.7552691Z >   ???
2025-01-10T13:23:47.7552908Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7552985Z E   
2025-01-10T13:23:47.7553473Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7553602Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7553680Z E          ...
2025-01-10T13:23:47.7553977Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7554117Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7554233Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7554312Z E          ...
2025-01-10T13:23:47.7554399Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7554530Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7554637Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7554647Z 
2025-01-10T13:23:47.7554810Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7555348Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-01-10T13:23:47.7555365Z 
2025-01-10T13:23:47.7555846Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c169f0>
2025-01-10T13:23:47.7556249Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>
2025-01-10T13:23:47.7556439Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.7556445Z 
2025-01-10T13:23:47.7556763Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7557002Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7557415Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7557582Z         try:
2025-01-10T13:23:47.7557909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7558086Z         except KeyError:
2025-01-10T13:23:47.7558386Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7558611Z     
2025-01-10T13:23:47.7558890Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7559111Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7559298Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7559489Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7559664Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7559860Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7571031Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7571046Z 
2025-01-10T13:23:47.7571219Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7571346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7571352Z 
2025-01-10T13:23:47.7571496Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7571589Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7571703Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7571788Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7571954Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7572041Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7572150Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7572228Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7572309Z err_msg = None
2025-01-10T13:23:47.7572313Z 
2025-01-10T13:23:47.7572432Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7572517Z         if err_msg is None:
2025-01-10T13:23:47.7572613Z             if left.shape != right.shape:
2025-01-10T13:23:47.7572700Z                 raise_assert_detail(
2025-01-10T13:23:47.7572851Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7572924Z                 )
2025-01-10T13:23:47.7572998Z     
2025-01-10T13:23:47.7573221Z             diff = 0
2025-01-10T13:23:47.7573345Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7573620Z                 # count up differences
2025-01-10T13:23:47.7573937Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7574075Z                     diff += 1
2025-01-10T13:23:47.7574196Z     
2025-01-10T13:23:47.7574347Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7574575Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7574861Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7575031Z E           AssertionError: Series are different
2025-01-10T13:23:47.7575156Z E           
2025-01-10T13:23:47.7575306Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.7575819Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7576154Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7576483Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7576500Z 
2025-01-10T13:23:47.7576828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7577040Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-01-10T13:23:47.7577044Z 
2025-01-10T13:23:47.7577275Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c143b0>
2025-01-10T13:23:47.7577451Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>
2025-01-10T13:23:47.7577544Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.7577548Z 
2025-01-10T13:23:47.7577694Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7577818Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7577906Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7577978Z         try:
2025-01-10T13:23:47.7578125Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7578206Z         except KeyError:
2025-01-10T13:23:47.7578358Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7578427Z     
2025-01-10T13:23:47.7578516Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7578610Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7578701Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7578836Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7578925Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7579014Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7579126Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7579131Z 
2025-01-10T13:23:47.7579263Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7579376Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7579380Z 
2025-01-10T13:23:47.7579518Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7579734Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7579848Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7579928Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7580070Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7580152Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7580260Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7580341Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7580420Z err_msg = None
2025-01-10T13:23:47.7580424Z 
2025-01-10T13:23:47.7580540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7580625Z         if err_msg is None:
2025-01-10T13:23:47.7580725Z             if left.shape != right.shape:
2025-01-10T13:23:47.7580811Z                 raise_assert_detail(
2025-01-10T13:23:47.7581043Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7581123Z                 )
2025-01-10T13:23:47.7581197Z     
2025-01-10T13:23:47.7581277Z             diff = 0
2025-01-10T13:23:47.7581400Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7581489Z                 # count up differences
2025-01-10T13:23:47.7581665Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7581747Z                     diff += 1
2025-01-10T13:23:47.7581826Z     
2025-01-10T13:23:47.7581915Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7582062Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7582246Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7582355Z E           AssertionError: Series are different
2025-01-10T13:23:47.7582435Z E           
2025-01-10T13:23:47.7582543Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.7582929Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7583479Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7583856Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7583865Z 
2025-01-10T13:23:47.7584195Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7584383Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-01-10T13:23:47.7584394Z 
2025-01-10T13:23:47.7584527Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7584664Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7584764Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7584908Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7585197Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7585297Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7585374Z err_msg = None
2025-01-10T13:23:47.7585378Z 
2025-01-10T13:23:47.7585499Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7585582Z         if err_msg is None:
2025-01-10T13:23:47.7585686Z             if left.shape != right.shape:
2025-01-10T13:23:47.7585776Z                 raise_assert_detail(
2025-01-10T13:23:47.7585920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7586002Z                 )
2025-01-10T13:23:47.7586072Z     
2025-01-10T13:23:47.7586156Z             diff = 0
2025-01-10T13:23:47.7586268Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7586363Z                 # count up differences
2025-01-10T13:23:47.7586664Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7586754Z                     diff += 1
2025-01-10T13:23:47.7586825Z     
2025-01-10T13:23:47.7586922Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7587063Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7587240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7587363Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7587438Z E           
2025-01-10T13:23:47.7587557Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7587822Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7588094Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7588099Z 
2025-01-10T13:23:47.7588407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7588411Z 
2025-01-10T13:23:47.7588584Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7588589Z 
2025-01-10T13:23:47.7588825Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c15640>
2025-01-10T13:23:47.7589023Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>, attr = 'nu'
2025-01-10T13:23:47.7589027Z 
2025-01-10T13:23:47.7589181Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7589303Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7589396Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7589468Z         try:
2025-01-10T13:23:47.7589617Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7589708Z         except KeyError:
2025-01-10T13:23:47.7589848Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7589925Z     
2025-01-10T13:23:47.7590013Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7590115Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7590205Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7590346Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7590434Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7590534Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7590647Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7590759Z 
2025-01-10T13:23:47.7590894Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7591008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7591162Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7591240Z     ???
2025-01-10T13:23:47.7591351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7591356Z 
2025-01-10T13:23:47.7591434Z >   ???
2025-01-10T13:23:47.7591563Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7591640Z E   
2025-01-10T13:23:47.7591768Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7591888Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7591964Z E          ...
2025-01-10T13:23:47.7592064Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7592287Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7592655Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7592792Z E          ...
2025-01-10T13:23:47.7592949Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7593303Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7593478Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7593485Z 
2025-01-10T13:23:47.7593635Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7593955Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-01-10T13:23:47.7593961Z 
2025-01-10T13:23:47.7594098Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7594229Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7594334Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7594475Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7594609Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7594709Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7594787Z err_msg = None
2025-01-10T13:23:47.7594791Z 
2025-01-10T13:23:47.7594911Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7594992Z         if err_msg is None:
2025-01-10T13:23:47.7595093Z             if left.shape != right.shape:
2025-01-10T13:23:47.7595180Z                 raise_assert_detail(
2025-01-10T13:23:47.7595329Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7595401Z                 )
2025-01-10T13:23:47.7595476Z     
2025-01-10T13:23:47.7595550Z             diff = 0
2025-01-10T13:23:47.7595668Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7595757Z                 # count up differences
2025-01-10T13:23:47.7595937Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7596022Z                     diff += 1
2025-01-10T13:23:47.7596093Z     
2025-01-10T13:23:47.7596186Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7596325Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7596499Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7596612Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7596690Z E           
2025-01-10T13:23:47.7596804Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7597074Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7597482Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7597487Z 
2025-01-10T13:23:47.7597791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7597796Z 
2025-01-10T13:23:47.7597976Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7597980Z 
2025-01-10T13:23:47.7598202Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c15280>
2025-01-10T13:23:47.7598375Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>
2025-01-10T13:23:47.7598457Z attr = 'wavelength_cm'
2025-01-10T13:23:47.7598466Z 
2025-01-10T13:23:47.7598712Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7598836Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7598921Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7598998Z         try:
2025-01-10T13:23:47.7599141Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7599228Z         except KeyError:
2025-01-10T13:23:47.7599367Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7599444Z     
2025-01-10T13:23:47.7599533Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7599633Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7599724Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7599862Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7599950Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7600047Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7600170Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7600182Z 
2025-01-10T13:23:47.7600307Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7600427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7600574Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7600653Z     ???
2025-01-10T13:23:47.7600763Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7600768Z 
2025-01-10T13:23:47.7600845Z >   ???
2025-01-10T13:23:47.7600972Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7601051Z E   
2025-01-10T13:23:47.7601178Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7601297Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7601375Z E          ...
2025-01-10T13:23:47.7601503Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7601644Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7601763Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7601840Z E          ...
2025-01-10T13:23:47.7601926Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7602057Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7602162Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7602166Z 
2025-01-10T13:23:47.7602260Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7602452Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-01-10T13:23:47.7602456Z 
2025-01-10T13:23:47.7602587Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7602719Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7602817Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7603289Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7603423Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7603524Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7603601Z err_msg = None
2025-01-10T13:23:47.7603606Z 
2025-01-10T13:23:47.7603723Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7603805Z         if err_msg is None:
2025-01-10T13:23:47.7603908Z             if left.shape != right.shape:
2025-01-10T13:23:47.7603994Z                 raise_assert_detail(
2025-01-10T13:23:47.7604144Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7604221Z                 )
2025-01-10T13:23:47.7604291Z     
2025-01-10T13:23:47.7604368Z             diff = 0
2025-01-10T13:23:47.7604479Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7604572Z                 # count up differences
2025-01-10T13:23:47.7604876Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7604964Z                     diff += 1
2025-01-10T13:23:47.7605034Z     
2025-01-10T13:23:47.7605127Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7605265Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7605439Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7605551Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7605628Z E           
2025-01-10T13:23:47.7605739Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7606006Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7606279Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7606285Z 
2025-01-10T13:23:47.7606587Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7606592Z 
2025-01-10T13:23:47.7606764Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7606769Z 
2025-01-10T13:23:47.7606997Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c15760>
2025-01-10T13:23:47.7607194Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>, attr = 'f_lu'
2025-01-10T13:23:47.7607199Z 
2025-01-10T13:23:47.7607347Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7607461Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7607553Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7607626Z         try:
2025-01-10T13:23:47.7607771Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7607853Z         except KeyError:
2025-01-10T13:23:47.7607997Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7608068Z     
2025-01-10T13:23:47.7608162Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7608262Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7608354Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7608499Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7608588Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7608685Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7608796Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7608955Z 
2025-01-10T13:23:47.7609095Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7609209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7609362Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7609434Z     ???
2025-01-10T13:23:47.7609548Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7609552Z 
2025-01-10T13:23:47.7609627Z >   ???
2025-01-10T13:23:47.7609753Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7609827Z E   
2025-01-10T13:23:47.7609956Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7610071Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7610144Z E          ...
2025-01-10T13:23:47.7610240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7610460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7610643Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7610772Z E          ...
2025-01-10T13:23:47.7610937Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7611156Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7611343Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7611350Z 
2025-01-10T13:23:47.7611503Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7611834Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-01-10T13:23:47.7611841Z 
2025-01-10T13:23:47.7612059Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7612274Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7612409Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7612554Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7612688Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7612784Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7612866Z err_msg = None
2025-01-10T13:23:47.7612870Z 
2025-01-10T13:23:47.7612988Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7613276Z         if err_msg is None:
2025-01-10T13:23:47.7613385Z             if left.shape != right.shape:
2025-01-10T13:23:47.7613473Z                 raise_assert_detail(
2025-01-10T13:23:47.7613622Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7613694Z                 )
2025-01-10T13:23:47.7613767Z     
2025-01-10T13:23:47.7613840Z             diff = 0
2025-01-10T13:23:47.7613956Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7614044Z                 # count up differences
2025-01-10T13:23:47.7614230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7614311Z                     diff += 1
2025-01-10T13:23:47.7614387Z     
2025-01-10T13:23:47.7614476Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7614615Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7614790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7614904Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7614985Z E           
2025-01-10T13:23:47.7615098Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7615363Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7615859Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7615870Z 
2025-01-10T13:23:47.7616180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7616184Z 
2025-01-10T13:23:47.7616357Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7616362Z 
2025-01-10T13:23:47.7616595Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c15d00>
2025-01-10T13:23:47.7616765Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>
2025-01-10T13:23:47.7616846Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.7616858Z 
2025-01-10T13:23:47.7617111Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7617234Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7617320Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7617397Z         try:
2025-01-10T13:23:47.7617540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7617627Z         except KeyError:
2025-01-10T13:23:47.7617765Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7617841Z     
2025-01-10T13:23:47.7617928Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7618030Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7618121Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7618258Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7618345Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7618444Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7618575Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7618658Z             else:
2025-01-10T13:23:47.7618761Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7618868Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7618872Z 
2025-01-10T13:23:47.7619005Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7619120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7619270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7619343Z     ???
2025-01-10T13:23:47.7619462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7619466Z 
2025-01-10T13:23:47.7619536Z >   ???
2025-01-10T13:23:47.7619667Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7619738Z E   
2025-01-10T13:23:47.7619872Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7619995Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7620069Z E          ...
2025-01-10T13:23:47.7620166Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7620297Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7620414Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7620486Z E          ...
2025-01-10T13:23:47.7620577Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7620707Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7620817Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7620821Z 
2025-01-10T13:23:47.7620910Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7621112Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-01-10T13:23:47.7621116Z 
2025-01-10T13:23:47.7621252Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7621534Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7621637Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7621772Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7621900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7621997Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7622078Z err_msg = None
2025-01-10T13:23:47.7622083Z 
2025-01-10T13:23:47.7622195Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7622283Z         if err_msg is None:
2025-01-10T13:23:47.7622383Z             if left.shape != right.shape:
2025-01-10T13:23:47.7622473Z                 raise_assert_detail(
2025-01-10T13:23:47.7622623Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7622700Z                 )
2025-01-10T13:23:47.7622850Z     
2025-01-10T13:23:47.7622929Z             diff = 0
2025-01-10T13:23:47.7623180Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7623274Z                 # count up differences
2025-01-10T13:23:47.7623449Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7623527Z                     diff += 1
2025-01-10T13:23:47.7623602Z     
2025-01-10T13:23:47.7623693Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7623842Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7624012Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7624130Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7624204Z E           
2025-01-10T13:23:47.7624326Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7624595Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7624860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7624866Z 
2025-01-10T13:23:47.7625175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7625179Z 
2025-01-10T13:23:47.7625355Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7625359Z 
2025-01-10T13:23:47.7625591Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c15ca0>
2025-01-10T13:23:47.7625763Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>
2025-01-10T13:23:47.7625844Z attr = 'beta_sobolev'
2025-01-10T13:23:47.7625848Z 
2025-01-10T13:23:47.7625993Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7626109Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7626198Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7626272Z         try:
2025-01-10T13:23:47.7626416Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7626498Z         except KeyError:
2025-01-10T13:23:47.7626640Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7626716Z     
2025-01-10T13:23:47.7626804Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7626908Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7626998Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7627269Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7627356Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7627451Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7627562Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7627641Z             else:
2025-01-10T13:23:47.7627736Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7627846Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7627851Z 
2025-01-10T13:23:47.7627974Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7628095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7628244Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7628316Z     ???
2025-01-10T13:23:47.7628431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7628435Z 
2025-01-10T13:23:47.7628503Z >   ???
2025-01-10T13:23:47.7628747Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7628820Z E   
2025-01-10T13:23:47.7628954Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7629065Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7629142Z E          ...
2025-01-10T13:23:47.7629230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7629364Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7629476Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7629554Z E          ...
2025-01-10T13:23:47.7629646Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7629769Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7629879Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7629883Z 
2025-01-10T13:23:47.7629973Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7630171Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-01-10T13:23:47.7630179Z 
2025-01-10T13:23:47.7630305Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7630442Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7630541Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7630679Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7630809Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7630902Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7630984Z err_msg = None
2025-01-10T13:23:47.7630987Z 
2025-01-10T13:23:47.7631097Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7631185Z         if err_msg is None:
2025-01-10T13:23:47.7631281Z             if left.shape != right.shape:
2025-01-10T13:23:47.7631381Z                 raise_assert_detail(
2025-01-10T13:23:47.7631523Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7631601Z                 )
2025-01-10T13:23:47.7631670Z     
2025-01-10T13:23:47.7631750Z             diff = 0
2025-01-10T13:23:47.7631861Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7631954Z                 # count up differences
2025-01-10T13:23:47.7632125Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7632204Z                     diff += 1
2025-01-10T13:23:47.7632279Z     
2025-01-10T13:23:47.7632369Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7632514Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7632683Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7632805Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7632988Z E           
2025-01-10T13:23:47.7633209Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7633466Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7633730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7633735Z 
2025-01-10T13:23:47.7634038Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7634162Z 
2025-01-10T13:23:47.7634335Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7634340Z 
2025-01-10T13:23:47.7634566Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c15ac0>
2025-01-10T13:23:47.7634731Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34520260>
2025-01-10T13:23:47.7634817Z attr = 'j_blues'
2025-01-10T13:23:47.7634821Z 
2025-01-10T13:23:47.7634962Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7635078Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7635168Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7635240Z         try:
2025-01-10T13:23:47.7635386Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7635470Z         except KeyError:
2025-01-10T13:23:47.7635611Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7635683Z     
2025-01-10T13:23:47.7635786Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7635880Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7635979Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7636109Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7636202Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7636299Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7636410Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7636489Z             else:
2025-01-10T13:23:47.7636582Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7636694Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7636698Z 
2025-01-10T13:23:47.7636821Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7636940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7637084Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7637170Z     ???
2025-01-10T13:23:47.7637282Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7637286Z 
2025-01-10T13:23:47.7637361Z >   ???
2025-01-10T13:23:47.7637533Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7637656Z E   
2025-01-10T13:23:47.7637892Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7638082Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7638212Z E          ...
2025-01-10T13:23:47.7638353Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7638570Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7638754Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7638879Z E          ...
2025-01-10T13:23:47.7639018Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7639239Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7639578Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7639584Z 
2025-01-10T13:23:47.7639684Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7639887Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-01-10T13:23:47.7639891Z 
2025-01-10T13:23:47.7640019Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7640154Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7640251Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7640389Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7640511Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7640610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7640695Z err_msg = None
2025-01-10T13:23:47.7640773Z 
2025-01-10T13:23:47.7640893Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7640981Z         if err_msg is None:
2025-01-10T13:23:47.7641076Z             if left.shape != right.shape:
2025-01-10T13:23:47.7641166Z                 raise_assert_detail(
2025-01-10T13:23:47.7641314Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7641390Z                 )
2025-01-10T13:23:47.7641461Z     
2025-01-10T13:23:47.7641540Z             diff = 0
2025-01-10T13:23:47.7641652Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7641746Z                 # count up differences
2025-01-10T13:23:47.7641916Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7642004Z                     diff += 1
2025-01-10T13:23:47.7642075Z     
2025-01-10T13:23:47.7642169Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7642314Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7642489Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7642604Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7642678Z E           
2025-01-10T13:23:47.7642795Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7643188Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7643458Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7643467Z 
2025-01-10T13:23:47.7643780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7643784Z 
2025-01-10T13:23:47.7643951Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7643955Z 
2025-01-10T13:23:47.7644186Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c15df0>
2025-01-10T13:23:47.7644352Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>
2025-01-10T13:23:47.7644432Z attr = 'lines'
2025-01-10T13:23:47.7644436Z 
2025-01-10T13:23:47.7644573Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7644694Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7644777Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7644855Z         try:
2025-01-10T13:23:47.7645004Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7645220Z         except KeyError:
2025-01-10T13:23:47.7645362Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7645433Z     
2025-01-10T13:23:47.7645526Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7645620Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7645716Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7645848Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7645940Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7646030Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7646146Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7646219Z             else:
2025-01-10T13:23:47.7646318Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7646424Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7646434Z 
2025-01-10T13:23:47.7646665Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7646792Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7646936Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7647014Z     ???
2025-01-10T13:23:47.7647124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7647128Z 
2025-01-10T13:23:47.7647204Z >   ???
2025-01-10T13:23:47.7647329Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7647404Z E   
2025-01-10T13:23:47.7647531Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7647646Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7647719Z E          ...
2025-01-10T13:23:47.7647813Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7647948Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7648060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7648149Z E          ...
2025-01-10T13:23:47.7648236Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7648367Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7648471Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7648475Z 
2025-01-10T13:23:47.7648569Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7648793Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-01-10T13:23:47.7648798Z 
2025-01-10T13:23:47.7649021Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c166c0>
2025-01-10T13:23:47.7649184Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>
2025-01-10T13:23:47.7649279Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.7649284Z 
2025-01-10T13:23:47.7649425Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7649539Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7649640Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7649713Z         try:
2025-01-10T13:23:47.7649857Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7649938Z         except KeyError:
2025-01-10T13:23:47.7650082Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7650153Z     
2025-01-10T13:23:47.7650245Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7650340Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7650435Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7650566Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7650656Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7650751Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7650860Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7650865Z 
2025-01-10T13:23:47.7650994Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7651200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7651205Z 
2025-01-10T13:23:47.7651345Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7651430Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7651545Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7651626Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7651770Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7651862Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7651968Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7652056Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7652135Z err_msg = None
2025-01-10T13:23:47.7652139Z 
2025-01-10T13:23:47.7652251Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7652441Z         if err_msg is None:
2025-01-10T13:23:47.7652546Z             if left.shape != right.shape:
2025-01-10T13:23:47.7652632Z                 raise_assert_detail(
2025-01-10T13:23:47.7652779Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7652851Z                 )
2025-01-10T13:23:47.7652926Z     
2025-01-10T13:23:47.7653000Z             diff = 0
2025-01-10T13:23:47.7653254Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7653346Z                 # count up differences
2025-01-10T13:23:47.7653517Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7653599Z                     diff += 1
2025-01-10T13:23:47.7653669Z     
2025-01-10T13:23:47.7653761Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7653894Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7654074Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7654183Z E           AssertionError: Series are different
2025-01-10T13:23:47.7654261Z E           
2025-01-10T13:23:47.7654362Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.7654731Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7655064Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7655393Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7655397Z 
2025-01-10T13:23:47.7655709Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7655983Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-01-10T13:23:47.7655992Z 
2025-01-10T13:23:47.7656378Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c15790>
2025-01-10T13:23:47.7656675Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>
2025-01-10T13:23:47.7656944Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.7656949Z 
2025-01-10T13:23:47.7657102Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7657219Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7657311Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7657383Z         try:
2025-01-10T13:23:47.7657530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7657617Z         except KeyError:
2025-01-10T13:23:47.7657755Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7657830Z     
2025-01-10T13:23:47.7657918Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7658019Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7658109Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7658248Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7658335Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7658545Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7658661Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7658666Z 
2025-01-10T13:23:47.7658805Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7658920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7658930Z 
2025-01-10T13:23:47.7659068Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7659159Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7659268Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7659354Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7659492Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7659583Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7659688Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7659785Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7659864Z err_msg = None
2025-01-10T13:23:47.7659868Z 
2025-01-10T13:23:47.7659984Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7660066Z         if err_msg is None:
2025-01-10T13:23:47.7660165Z             if left.shape != right.shape:
2025-01-10T13:23:47.7660255Z                 raise_assert_detail(
2025-01-10T13:23:47.7660398Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7660481Z                 )
2025-01-10T13:23:47.7660552Z     
2025-01-10T13:23:47.7660634Z             diff = 0
2025-01-10T13:23:47.7660744Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7660836Z                 # count up differences
2025-01-10T13:23:47.7661004Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7661088Z                     diff += 1
2025-01-10T13:23:47.7661166Z     
2025-01-10T13:23:47.7661261Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7661396Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7661571Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7661682Z E           AssertionError: Series are different
2025-01-10T13:23:47.7661754Z E           
2025-01-10T13:23:47.7661861Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.7662226Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7662612Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7663220Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7663229Z 
2025-01-10T13:23:47.7663539Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7663857Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-01-10T13:23:47.7663862Z 
2025-01-10T13:23:47.7663993Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7664128Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7664234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7664366Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7664492Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7664587Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7664669Z err_msg = None
2025-01-10T13:23:47.7664673Z 
2025-01-10T13:23:47.7664782Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7664868Z         if err_msg is None:
2025-01-10T13:23:47.7664974Z             if left.shape != right.shape:
2025-01-10T13:23:47.7665065Z                 raise_assert_detail(
2025-01-10T13:23:47.7665207Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7665287Z                 )
2025-01-10T13:23:47.7665361Z     
2025-01-10T13:23:47.7665435Z             diff = 0
2025-01-10T13:23:47.7665550Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7665639Z                 # count up differences
2025-01-10T13:23:47.7665810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7665888Z                     diff += 1
2025-01-10T13:23:47.7665964Z     
2025-01-10T13:23:47.7666052Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7666192Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7666359Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7666480Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7666556Z E           
2025-01-10T13:23:47.7666673Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7666935Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7667197Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7667202Z 
2025-01-10T13:23:47.7667510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7667633Z 
2025-01-10T13:23:47.7667813Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7667817Z 
2025-01-10T13:23:47.7668039Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c14830>
2025-01-10T13:23:47.7668241Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>, attr = 'nu'
2025-01-10T13:23:47.7668245Z 
2025-01-10T13:23:47.7668382Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7668503Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7668590Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7668666Z         try:
2025-01-10T13:23:47.7668806Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7668894Z         except KeyError:
2025-01-10T13:23:47.7669030Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7669106Z     
2025-01-10T13:23:47.7669277Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7669381Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7669475Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7669607Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7669698Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7669791Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7669906Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7669912Z 
2025-01-10T13:23:47.7670037Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7670155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7670303Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7670381Z     ???
2025-01-10T13:23:47.7670490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7670499Z 
2025-01-10T13:23:47.7670570Z >   ???
2025-01-10T13:23:47.7670711Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7670781Z E   
2025-01-10T13:23:47.7670915Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7671028Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7671106Z E          ...
2025-01-10T13:23:47.7671194Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7671330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7671442Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7671523Z E          ...
2025-01-10T13:23:47.7671610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7671742Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7671847Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7671851Z 
2025-01-10T13:23:47.7671947Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7672161Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-01-10T13:23:47.7672168Z 
2025-01-10T13:23:47.7672295Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7672432Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7672530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7672669Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7672793Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7672892Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7672968Z err_msg = None
2025-01-10T13:23:47.7672977Z 
2025-01-10T13:23:47.7673194Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7673281Z         if err_msg is None:
2025-01-10T13:23:47.7673375Z             if left.shape != right.shape:
2025-01-10T13:23:47.7673617Z                 raise_assert_detail(
2025-01-10T13:23:47.7673872Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7674008Z                 )
2025-01-10T13:23:47.7674128Z     
2025-01-10T13:23:47.7674261Z             diff = 0
2025-01-10T13:23:47.7674444Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7674591Z                 # count up differences
2025-01-10T13:23:47.7674871Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7675006Z                     diff += 1
2025-01-10T13:23:47.7675113Z     
2025-01-10T13:23:47.7675214Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7675353Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7675528Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7675808Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7675891Z E           
2025-01-10T13:23:47.7676011Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7676269Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7676532Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7676538Z 
2025-01-10T13:23:47.7676849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7676861Z 
2025-01-10T13:23:47.7677030Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7677035Z 
2025-01-10T13:23:47.7677263Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c14590>
2025-01-10T13:23:47.7677427Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>
2025-01-10T13:23:47.7677516Z attr = 'wavelength_cm'
2025-01-10T13:23:47.7677521Z 
2025-01-10T13:23:47.7677658Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7677783Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7677874Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7677947Z         try:
2025-01-10T13:23:47.7678094Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7678176Z         except KeyError:
2025-01-10T13:23:47.7678323Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7678395Z     
2025-01-10T13:23:47.7678501Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7678597Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7678692Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7678824Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7678925Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7679016Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7679133Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7679137Z 
2025-01-10T13:23:47.7679262Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7679381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7679535Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7679607Z     ???
2025-01-10T13:23:47.7679722Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7679727Z 
2025-01-10T13:23:47.7679893Z >   ???
2025-01-10T13:23:47.7680030Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7680100Z E   
2025-01-10T13:23:47.7680233Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7680344Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7680423Z E          ...
2025-01-10T13:23:47.7680511Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7680648Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7680766Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7680838Z E          ...
2025-01-10T13:23:47.7680930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7681056Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7681168Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7681172Z 
2025-01-10T13:23:47.7681263Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7681559Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-01-10T13:23:47.7681564Z 
2025-01-10T13:23:47.7681697Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7681835Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7681934Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7682074Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7682207Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7682305Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7682388Z err_msg = None
2025-01-10T13:23:47.7682392Z 
2025-01-10T13:23:47.7682504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7682591Z         if err_msg is None:
2025-01-10T13:23:47.7682696Z             if left.shape != right.shape:
2025-01-10T13:23:47.7682787Z                 raise_assert_detail(
2025-01-10T13:23:47.7682931Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7683172Z                 )
2025-01-10T13:23:47.7683251Z     
2025-01-10T13:23:47.7683332Z             diff = 0
2025-01-10T13:23:47.7683446Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7683540Z                 # count up differences
2025-01-10T13:23:47.7683713Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7683791Z                     diff += 1
2025-01-10T13:23:47.7683866Z     
2025-01-10T13:23:47.7683965Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7684108Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7684280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7684415Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7684489Z E           
2025-01-10T13:23:47.7684608Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7684871Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7685133Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7685138Z 
2025-01-10T13:23:47.7685447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7685588Z 
2025-01-10T13:23:47.7685761Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7685765Z 
2025-01-10T13:23:47.7685993Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c17140>
2025-01-10T13:23:47.7686202Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>, attr = 'f_lu'
2025-01-10T13:23:47.7686207Z 
2025-01-10T13:23:47.7686344Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7686465Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7686551Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7686629Z         try:
2025-01-10T13:23:47.7686768Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7686854Z         except KeyError:
2025-01-10T13:23:47.7686992Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7687067Z     
2025-01-10T13:23:47.7687262Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7687370Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7687460Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7687598Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7687690Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7687780Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7687898Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7687903Z 
2025-01-10T13:23:47.7688028Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7688144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7688288Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7688365Z     ???
2025-01-10T13:23:47.7688474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7688478Z 
2025-01-10T13:23:47.7688563Z >   ???
2025-01-10T13:23:47.7688695Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7688771Z E   
2025-01-10T13:23:47.7688905Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7689019Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7689098Z E          ...
2025-01-10T13:23:47.7689187Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7689321Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7689436Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7689515Z E          ...
2025-01-10T13:23:47.7689602Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7689734Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7689838Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7689843Z 
2025-01-10T13:23:47.7689937Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7690147Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-01-10T13:23:47.7690157Z 
2025-01-10T13:23:47.7690288Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7690418Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7690515Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7690652Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7690775Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7690876Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7690952Z err_msg = None
2025-01-10T13:23:47.7690957Z 
2025-01-10T13:23:47.7691072Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7691154Z         if err_msg is None:
2025-01-10T13:23:47.7691351Z             if left.shape != right.shape:
2025-01-10T13:23:47.7691441Z                 raise_assert_detail(
2025-01-10T13:23:47.7691584Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7691661Z                 )
2025-01-10T13:23:47.7691731Z     
2025-01-10T13:23:47.7691808Z             diff = 0
2025-01-10T13:23:47.7691920Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7692014Z                 # count up differences
2025-01-10T13:23:47.7692181Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7692263Z                     diff += 1
2025-01-10T13:23:47.7692332Z     
2025-01-10T13:23:47.7692459Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7692698Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7692999Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7693514Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7693646Z E           
2025-01-10T13:23:47.7693833Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7694207Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7694473Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7694478Z 
2025-01-10T13:23:47.7694791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7694805Z 
2025-01-10T13:23:47.7694974Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7694978Z 
2025-01-10T13:23:47.7695204Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d42ed0>
2025-01-10T13:23:47.7695370Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>
2025-01-10T13:23:47.7695456Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.7695460Z 
2025-01-10T13:23:47.7695598Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7695718Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7695803Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7695881Z         try:
2025-01-10T13:23:47.7696022Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7696109Z         except KeyError:
2025-01-10T13:23:47.7696251Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7696325Z     
2025-01-10T13:23:47.7696423Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7696520Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7696615Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7696745Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7696837Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7696928Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7697046Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7697119Z             else:
2025-01-10T13:23:47.7697218Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7697328Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7697332Z 
2025-01-10T13:23:47.7697461Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7697579Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7697725Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7697959Z     ???
2025-01-10T13:23:47.7698069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7698073Z 
2025-01-10T13:23:47.7698150Z >   ???
2025-01-10T13:23:47.7698277Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7698352Z E   
2025-01-10T13:23:47.7698480Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7698595Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7698668Z E          ...
2025-01-10T13:23:47.7698761Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7698890Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7699010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7699087Z E          ...
2025-01-10T13:23:47.7699175Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7699382Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7699494Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7699499Z 
2025-01-10T13:23:47.7699596Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7699799Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-01-10T13:23:47.7699803Z 
2025-01-10T13:23:47.7699935Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7700062Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7700166Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7700303Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7700427Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7700529Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7700614Z err_msg = None
2025-01-10T13:23:47.7700619Z 
2025-01-10T13:23:47.7700734Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7700816Z         if err_msg is None:
2025-01-10T13:23:47.7700918Z             if left.shape != right.shape:
2025-01-10T13:23:47.7701003Z                 raise_assert_detail(
2025-01-10T13:23:47.7701152Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7701225Z                 )
2025-01-10T13:23:47.7701301Z     
2025-01-10T13:23:47.7701376Z             diff = 0
2025-01-10T13:23:47.7701526Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7701625Z                 # count up differences
2025-01-10T13:23:47.7701795Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7701878Z                     diff += 1
2025-01-10T13:23:47.7701949Z     
2025-01-10T13:23:47.7702042Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7702186Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7702360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7702473Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7702554Z E           
2025-01-10T13:23:47.7702671Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7702933Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7703337Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7703473Z 
2025-01-10T13:23:47.7703782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7703787Z 
2025-01-10T13:23:47.7703968Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7703973Z 
2025-01-10T13:23:47.7704193Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d43170>
2025-01-10T13:23:47.7704363Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>
2025-01-10T13:23:47.7704447Z attr = 'beta_sobolev'
2025-01-10T13:23:47.7704452Z 
2025-01-10T13:23:47.7704589Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7704709Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7704793Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7704873Z         try:
2025-01-10T13:23:47.7705121Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7705211Z         except KeyError:
2025-01-10T13:23:47.7705348Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7705426Z     
2025-01-10T13:23:47.7705513Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7705617Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7705708Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7705843Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7705934Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7706025Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7706139Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7706213Z             else:
2025-01-10T13:23:47.7706313Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7706421Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7706425Z 
2025-01-10T13:23:47.7706563Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7706676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7706827Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7706898Z     ???
2025-01-10T13:23:47.7707012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7707016Z 
2025-01-10T13:23:47.7707091Z >   ???
2025-01-10T13:23:47.7707218Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7707293Z E   
2025-01-10T13:23:47.7707420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7707536Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7707609Z E          ...
2025-01-10T13:23:47.7707701Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7707830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7707956Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7708029Z E          ...
2025-01-10T13:23:47.7708121Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7708247Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7708357Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7708362Z 
2025-01-10T13:23:47.7708460Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7708657Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-01-10T13:23:47.7708662Z 
2025-01-10T13:23:47.7708793Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7708921Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7709026Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7709159Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7709384Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7709479Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7709562Z err_msg = None
2025-01-10T13:23:47.7709566Z 
2025-01-10T13:23:47.7709682Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7709766Z         if err_msg is None:
2025-01-10T13:23:47.7709865Z             if left.shape != right.shape:
2025-01-10T13:23:47.7709951Z                 raise_assert_detail(
2025-01-10T13:23:47.7710097Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7710168Z                 )
2025-01-10T13:23:47.7710242Z     
2025-01-10T13:23:47.7710316Z             diff = 0
2025-01-10T13:23:47.7710433Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7710521Z                 # count up differences
2025-01-10T13:23:47.7710828Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7710985Z                     diff += 1
2025-01-10T13:23:47.7711112Z     
2025-01-10T13:23:47.7711265Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7711500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7711793Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7711976Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7712102Z E           
2025-01-10T13:23:47.7712281Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7712555Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7712826Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7712836Z 
2025-01-10T13:23:47.7713251Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7713256Z 
2025-01-10T13:23:47.7713429Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7713434Z 
2025-01-10T13:23:47.7713654Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d43110>
2025-01-10T13:23:47.7713824Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef384f27b0>
2025-01-10T13:23:47.7713903Z attr = 'j_blues'
2025-01-10T13:23:47.7713908Z 
2025-01-10T13:23:47.7714049Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7714176Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7714266Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7714345Z         try:
2025-01-10T13:23:47.7714485Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7714569Z         except KeyError:
2025-01-10T13:23:47.7714705Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7714779Z     
2025-01-10T13:23:47.7714866Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7714965Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7715053Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7715187Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7715273Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7715369Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7715478Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7715697Z             else:
2025-01-10T13:23:47.7715797Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7715909Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7715914Z 
2025-01-10T13:23:47.7716043Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7716156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7716306Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7716378Z     ???
2025-01-10T13:23:47.7716492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7716496Z 
2025-01-10T13:23:47.7716566Z >   ???
2025-01-10T13:23:47.7716697Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7716767Z E   
2025-01-10T13:23:47.7716899Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7717008Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7717092Z E          ...
2025-01-10T13:23:47.7717294Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7717430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7717547Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7717622Z E          ...
2025-01-10T13:23:47.7717715Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7717842Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7717954Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7717959Z 
2025-01-10T13:23:47.7718049Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7718298Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-01-10T13:23:47.7718303Z 
2025-01-10T13:23:47.7718429Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7718567Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7718677Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7718808Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7718938Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7719033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7719115Z err_msg = None
2025-01-10T13:23:47.7719119Z 
2025-01-10T13:23:47.7719230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7719318Z         if err_msg is None:
2025-01-10T13:23:47.7719414Z             if left.shape != right.shape:
2025-01-10T13:23:47.7719505Z                 raise_assert_detail(
2025-01-10T13:23:47.7719647Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7719725Z                 )
2025-01-10T13:23:47.7719800Z     
2025-01-10T13:23:47.7719886Z             diff = 0
2025-01-10T13:23:47.7720004Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7720093Z                 # count up differences
2025-01-10T13:23:47.7720266Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7720344Z                     diff += 1
2025-01-10T13:23:47.7720420Z     
2025-01-10T13:23:47.7720511Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7720650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7720819Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7720936Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7721009Z E           
2025-01-10T13:23:47.7721127Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7721392Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7721760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7721765Z 
2025-01-10T13:23:47.7722070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7722075Z 
2025-01-10T13:23:47.7722248Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7722252Z 
2025-01-10T13:23:47.7722476Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d42750>
2025-01-10T13:23:47.7722727Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>
2025-01-10T13:23:47.7722805Z attr = 'lines'
2025-01-10T13:23:47.7722809Z 
2025-01-10T13:23:47.7722950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7723176Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7723269Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7723342Z         try:
2025-01-10T13:23:47.7723489Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7723572Z         except KeyError:
2025-01-10T13:23:47.7723714Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7723784Z     
2025-01-10T13:23:47.7723878Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7723977Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7724065Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7724202Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7724297Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7724392Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7724502Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7724582Z             else:
2025-01-10T13:23:47.7724676Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7724788Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7724792Z 
2025-01-10T13:23:47.7724919Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7725036Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7725184Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7725256Z     ???
2025-01-10T13:23:47.7725371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7725375Z 
2025-01-10T13:23:47.7725446Z >   ???
2025-01-10T13:23:47.7725576Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7725652Z E   
2025-01-10T13:23:47.7725786Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7725895Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7725972Z E          ...
2025-01-10T13:23:47.7726060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7726193Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7726306Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7726384Z E          ...
2025-01-10T13:23:47.7726471Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7726601Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7726712Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7726717Z 
2025-01-10T13:23:47.7726806Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7727108Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-01-10T13:23:47.7727239Z 
2025-01-10T13:23:47.7727463Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d42180>
2025-01-10T13:23:47.7727635Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>
2025-01-10T13:23:47.7727724Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.7727728Z 
2025-01-10T13:23:47.7727868Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7727982Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7728073Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7728151Z         try:
2025-01-10T13:23:47.7728289Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7728374Z         except KeyError:
2025-01-10T13:23:47.7728511Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7728586Z     
2025-01-10T13:23:47.7728672Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7728772Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7728975Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7729140Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7729291Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7729464Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7729644Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7729650Z 
2025-01-10T13:23:47.7729867Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7730060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7730067Z 
2025-01-10T13:23:47.7730290Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7730435Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7730608Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7730746Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7730948Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7731039Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7731147Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7731237Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7731320Z err_msg = None
2025-01-10T13:23:47.7731324Z 
2025-01-10T13:23:47.7731438Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7731523Z         if err_msg is None:
2025-01-10T13:23:47.7731617Z             if left.shape != right.shape:
2025-01-10T13:23:47.7731706Z                 raise_assert_detail(
2025-01-10T13:23:47.7731850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7731933Z                 )
2025-01-10T13:23:47.7732003Z     
2025-01-10T13:23:47.7732082Z             diff = 0
2025-01-10T13:23:47.7732194Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7732295Z                 # count up differences
2025-01-10T13:23:47.7732463Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7732548Z                     diff += 1
2025-01-10T13:23:47.7732617Z     
2025-01-10T13:23:47.7732709Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7732859Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7733174Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7733286Z E           AssertionError: Series are different
2025-01-10T13:23:47.7733360Z E           
2025-01-10T13:23:47.7733467Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.7733836Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7734314Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7734644Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7734653Z 
2025-01-10T13:23:47.7735060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7735363Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-01-10T13:23:47.7735367Z 
2025-01-10T13:23:47.7735593Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d42930>
2025-01-10T13:23:47.7735757Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>
2025-01-10T13:23:47.7735855Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.7735859Z 
2025-01-10T13:23:47.7735997Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7736117Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7736201Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7736278Z         try:
2025-01-10T13:23:47.7736417Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7736507Z         except KeyError:
2025-01-10T13:23:47.7736649Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7736727Z     
2025-01-10T13:23:47.7736814Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7736913Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7737008Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7737140Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7737231Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7737322Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7737439Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7737444Z 
2025-01-10T13:23:47.7737567Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7737684Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7737688Z 
2025-01-10T13:23:47.7737823Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7737920Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7738036Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7738117Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7738261Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7738347Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7738458Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7738538Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7738621Z err_msg = None
2025-01-10T13:23:47.7738625Z 
2025-01-10T13:23:47.7738734Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7738821Z         if err_msg is None:
2025-01-10T13:23:47.7738915Z             if left.shape != right.shape:
2025-01-10T13:23:47.7739006Z                 raise_assert_detail(
2025-01-10T13:23:47.7739153Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7739324Z                 )
2025-01-10T13:23:47.7739398Z     
2025-01-10T13:23:47.7739473Z             diff = 0
2025-01-10T13:23:47.7739590Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7739677Z                 # count up differences
2025-01-10T13:23:47.7739851Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7739929Z                     diff += 1
2025-01-10T13:23:47.7740003Z     
2025-01-10T13:23:47.7740090Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7740229Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7740398Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7740508Z E           AssertionError: Series are different
2025-01-10T13:23:47.7740580Z E           
2025-01-10T13:23:47.7740687Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.7741165Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7741541Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7741916Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7741925Z 
2025-01-10T13:23:47.7742233Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7742471Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-01-10T13:23:47.7742476Z 
2025-01-10T13:23:47.7742611Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7742739Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7742841Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7742985Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7743235Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7743339Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7743417Z err_msg = None
2025-01-10T13:23:47.7743420Z 
2025-01-10T13:23:47.7743533Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7743615Z         if err_msg is None:
2025-01-10T13:23:47.7743719Z             if left.shape != right.shape:
2025-01-10T13:23:47.7743802Z                 raise_assert_detail(
2025-01-10T13:23:47.7743949Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7744022Z                 )
2025-01-10T13:23:47.7744097Z     
2025-01-10T13:23:47.7744174Z             diff = 0
2025-01-10T13:23:47.7744287Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7744380Z                 # count up differences
2025-01-10T13:23:47.7744675Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7744761Z                     diff += 1
2025-01-10T13:23:47.7744832Z     
2025-01-10T13:23:47.7744925Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7745060Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7745245Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7754006Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7754180Z E           
2025-01-10T13:23:47.7754392Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7754999Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7755299Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7755306Z 
2025-01-10T13:23:47.7755647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7755652Z 
2025-01-10T13:23:47.7755839Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7755844Z 
2025-01-10T13:23:47.7756073Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d424e0>
2025-01-10T13:23:47.7756280Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>, attr = 'nu'
2025-01-10T13:23:47.7756284Z 
2025-01-10T13:23:47.7756439Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7756565Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7756660Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7756735Z         try:
2025-01-10T13:23:47.7756888Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7756971Z         except KeyError:
2025-01-10T13:23:47.7757116Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7757187Z     
2025-01-10T13:23:47.7757282Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7757378Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7757473Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7757611Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7757702Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7757798Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7757911Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7757923Z 
2025-01-10T13:23:47.7758059Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7758177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7758336Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7758409Z     ???
2025-01-10T13:23:47.7758528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7758532Z 
2025-01-10T13:23:47.7758604Z >   ???
2025-01-10T13:23:47.7758745Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7758815Z E   
2025-01-10T13:23:47.7758959Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7759071Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7759151Z E          ...
2025-01-10T13:23:47.7759248Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7759382Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7759633Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7759708Z E          ...
2025-01-10T13:23:47.7759800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7759928Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7760041Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7760046Z 
2025-01-10T13:23:47.7760137Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7760418Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-01-10T13:23:47.7760422Z 
2025-01-10T13:23:47.7760556Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7760694Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7760799Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7761068Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7761204Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7761299Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7761379Z err_msg = None
2025-01-10T13:23:47.7761383Z 
2025-01-10T13:23:47.7761499Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7761589Z         if err_msg is None:
2025-01-10T13:23:47.7761686Z             if left.shape != right.shape:
2025-01-10T13:23:47.7761778Z                 raise_assert_detail(
2025-01-10T13:23:47.7761933Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7762008Z                 )
2025-01-10T13:23:47.7762083Z     
2025-01-10T13:23:47.7762158Z             diff = 0
2025-01-10T13:23:47.7762279Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7762374Z                 # count up differences
2025-01-10T13:23:47.7762556Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7762637Z                     diff += 1
2025-01-10T13:23:47.7762715Z     
2025-01-10T13:23:47.7762806Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7762947Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7763264Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7763390Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7763470Z E           
2025-01-10T13:23:47.7763592Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7763866Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7764128Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7764137Z 
2025-01-10T13:23:47.7764460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7764464Z 
2025-01-10T13:23:47.7764743Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7764752Z 
2025-01-10T13:23:47.7765145Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d42090>
2025-01-10T13:23:47.7765438Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>
2025-01-10T13:23:47.7765573Z attr = 'wavelength_cm'
2025-01-10T13:23:47.7765748Z 
2025-01-10T13:23:47.7765997Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7766199Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7766326Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7766403Z         try:
2025-01-10T13:23:47.7766558Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7766642Z         except KeyError:
2025-01-10T13:23:47.7766789Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7766865Z     
2025-01-10T13:23:47.7766956Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7767058Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7767149Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7767288Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7767376Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7767476Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7767721Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7767727Z 
2025-01-10T13:23:47.7767863Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7767982Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7768140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7768213Z     ???
2025-01-10T13:23:47.7768330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7768334Z 
2025-01-10T13:23:47.7768410Z >   ???
2025-01-10T13:23:47.7768543Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7768618Z E   
2025-01-10T13:23:47.7768745Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7768863Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7768939Z E          ...
2025-01-10T13:23:47.7769035Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7769176Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7769296Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7769370Z E          ...
2025-01-10T13:23:47.7769460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7769585Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7769699Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7769703Z 
2025-01-10T13:23:47.7769799Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7770036Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-01-10T13:23:47.7770041Z 
2025-01-10T13:23:47.7770178Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7770310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7770414Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7770558Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7770689Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7770784Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7770867Z err_msg = None
2025-01-10T13:23:47.7770871Z 
2025-01-10T13:23:47.7770991Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7771074Z         if err_msg is None:
2025-01-10T13:23:47.7771178Z             if left.shape != right.shape:
2025-01-10T13:23:47.7771264Z                 raise_assert_detail(
2025-01-10T13:23:47.7771418Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7771491Z                 )
2025-01-10T13:23:47.7771566Z     
2025-01-10T13:23:47.7771640Z             diff = 0
2025-01-10T13:23:47.7771758Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7771943Z                 # count up differences
2025-01-10T13:23:47.7772120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7772199Z                     diff += 1
2025-01-10T13:23:47.7772274Z     
2025-01-10T13:23:47.7772367Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7772505Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7772675Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7772795Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7772867Z E           
2025-01-10T13:23:47.7772989Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7773579Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7773864Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7773869Z 
2025-01-10T13:23:47.7774191Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7774195Z 
2025-01-10T13:23:47.7774370Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7774375Z 
2025-01-10T13:23:47.7774603Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d41d60>
2025-01-10T13:23:47.7774811Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>, attr = 'f_lu'
2025-01-10T13:23:47.7774819Z 
2025-01-10T13:23:47.7774962Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7775087Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7775173Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7775251Z         try:
2025-01-10T13:23:47.7775393Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7775483Z         except KeyError:
2025-01-10T13:23:47.7775620Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7775695Z     
2025-01-10T13:23:47.7775782Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7775883Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7775975Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7776116Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7776207Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7776296Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7776420Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7776424Z 
2025-01-10T13:23:47.7776551Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7776671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7776819Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7776895Z     ???
2025-01-10T13:23:47.7777005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7777009Z 
2025-01-10T13:23:47.7777085Z >   ???
2025-01-10T13:23:47.7777212Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7777289Z E   
2025-01-10T13:23:47.7777425Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7777542Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7777624Z E          ...
2025-01-10T13:23:47.7777712Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7777997Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7778109Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7778188Z E          ...
2025-01-10T13:23:47.7778275Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7778403Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7778509Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7778517Z 
2025-01-10T13:23:47.7778613Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7778885Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-01-10T13:23:47.7778894Z 
2025-01-10T13:23:47.7779024Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7779158Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7779258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7779483Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7779610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7779709Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7779786Z err_msg = None
2025-01-10T13:23:47.7779790Z 
2025-01-10T13:23:47.7779908Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7779989Z         if err_msg is None:
2025-01-10T13:23:47.7780092Z             if left.shape != right.shape:
2025-01-10T13:23:47.7780181Z                 raise_assert_detail(
2025-01-10T13:23:47.7780324Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7780401Z                 )
2025-01-10T13:23:47.7780470Z     
2025-01-10T13:23:47.7780550Z             diff = 0
2025-01-10T13:23:47.7780661Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7780765Z                 # count up differences
2025-01-10T13:23:47.7780934Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7781016Z                     diff += 1
2025-01-10T13:23:47.7781087Z     
2025-01-10T13:23:47.7781182Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7781318Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7781492Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7781609Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7781687Z E           
2025-01-10T13:23:47.7781806Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7782073Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7782340Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7782345Z 
2025-01-10T13:23:47.7782651Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7782663Z 
2025-01-10T13:23:47.7782890Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7782897Z 
2025-01-10T13:23:47.7783437Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d410a0>
2025-01-10T13:23:47.7783694Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>
2025-01-10T13:23:47.7783924Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.7783934Z 
2025-01-10T13:23:47.7784078Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7784205Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7784291Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7784367Z         try:
2025-01-10T13:23:47.7784506Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7784593Z         except KeyError:
2025-01-10T13:23:47.7784738Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7784809Z     
2025-01-10T13:23:47.7784902Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7784997Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7785090Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7785223Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7785315Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7785405Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7785646Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7785725Z             else:
2025-01-10T13:23:47.7785830Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7785943Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7785947Z 
2025-01-10T13:23:47.7786083Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7786201Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7786348Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7786425Z     ???
2025-01-10T13:23:47.7786535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7786539Z 
2025-01-10T13:23:47.7786613Z >   ???
2025-01-10T13:23:47.7786739Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7786815Z E   
2025-01-10T13:23:47.7786940Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7787066Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7787139Z E          ...
2025-01-10T13:23:47.7787233Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7787364Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7787483Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7787565Z E          ...
2025-01-10T13:23:47.7787652Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7787783Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7787888Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7787892Z 
2025-01-10T13:23:47.7787987Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7788253Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-01-10T13:23:47.7788257Z 
2025-01-10T13:23:47.7788398Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7788528Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7788630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7788767Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7788891Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7788993Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7789068Z err_msg = None
2025-01-10T13:23:47.7789072Z 
2025-01-10T13:23:47.7789188Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7789269Z         if err_msg is None:
2025-01-10T13:23:47.7789372Z             if left.shape != right.shape:
2025-01-10T13:23:47.7789457Z                 raise_assert_detail(
2025-01-10T13:23:47.7789608Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7789770Z                 )
2025-01-10T13:23:47.7789848Z     
2025-01-10T13:23:47.7789922Z             diff = 0
2025-01-10T13:23:47.7790036Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7790128Z                 # count up differences
2025-01-10T13:23:47.7790295Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7790378Z                     diff += 1
2025-01-10T13:23:47.7790449Z     
2025-01-10T13:23:47.7790542Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7790677Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7790849Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7790959Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7791036Z E           
2025-01-10T13:23:47.7791149Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7791498Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7791766Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7791771Z 
2025-01-10T13:23:47.7792075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7792079Z 
2025-01-10T13:23:47.7792251Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7792259Z 
2025-01-10T13:23:47.7792485Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d40950>
2025-01-10T13:23:47.7792662Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>
2025-01-10T13:23:47.7792748Z attr = 'beta_sobolev'
2025-01-10T13:23:47.7792752Z 
2025-01-10T13:23:47.7792889Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7793159Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7793249Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7793326Z         try:
2025-01-10T13:23:47.7793464Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7793549Z         except KeyError:
2025-01-10T13:23:47.7793685Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7793763Z     
2025-01-10T13:23:47.7793852Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7793951Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7794051Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7794187Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7794508Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7794599Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7794716Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7794790Z             else:
2025-01-10T13:23:47.7794891Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7794997Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7795001Z 
2025-01-10T13:23:47.7795131Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7795243Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7795397Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7795469Z     ???
2025-01-10T13:23:47.7795591Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7795742Z 
2025-01-10T13:23:47.7795821Z >   ???
2025-01-10T13:23:47.7795950Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7796025Z E   
2025-01-10T13:23:47.7796153Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7796270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7796343Z E          ...
2025-01-10T13:23:47.7796437Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7796563Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7796680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7796752Z E          ...
2025-01-10T13:23:47.7796845Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7796976Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7797083Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7797087Z 
2025-01-10T13:23:47.7797296Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7797550Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-01-10T13:23:47.7797554Z 
2025-01-10T13:23:47.7797689Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7797815Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7797918Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7798049Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7798175Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7798275Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7798351Z err_msg = None
2025-01-10T13:23:47.7798355Z 
2025-01-10T13:23:47.7798468Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7798560Z         if err_msg is None:
2025-01-10T13:23:47.7798660Z             if left.shape != right.shape:
2025-01-10T13:23:47.7798743Z                 raise_assert_detail(
2025-01-10T13:23:47.7798892Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7798965Z                 )
2025-01-10T13:23:47.7799039Z     
2025-01-10T13:23:47.7799113Z             diff = 0
2025-01-10T13:23:47.7799227Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7799316Z                 # count up differences
2025-01-10T13:23:47.7799488Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7799571Z                     diff += 1
2025-01-10T13:23:47.7799641Z     
2025-01-10T13:23:47.7799735Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7799870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7800048Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7800164Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7800241Z E           
2025-01-10T13:23:47.7800355Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7800616Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7800879Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7800884Z 
2025-01-10T13:23:47.7801284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7801288Z 
2025-01-10T13:23:47.7801491Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7801495Z 
2025-01-10T13:23:47.7801752Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d415e0>
2025-01-10T13:23:47.7802042Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348cc770>
2025-01-10T13:23:47.7802165Z attr = 'j_blues'
2025-01-10T13:23:47.7802180Z 
2025-01-10T13:23:47.7802411Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7802618Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7802762Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7802887Z         try:
2025-01-10T13:23:47.7803256Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7803394Z         except KeyError:
2025-01-10T13:23:47.7803807Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7803922Z     
2025-01-10T13:23:47.7804019Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7804121Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7804211Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7804351Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7804438Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7804537Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7804653Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7804727Z             else:
2025-01-10T13:23:47.7804828Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7804934Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7804939Z 
2025-01-10T13:23:47.7805071Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7805188Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7805347Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7805421Z     ???
2025-01-10T13:23:47.7805536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7805540Z 
2025-01-10T13:23:47.7805612Z >   ???
2025-01-10T13:23:47.7805740Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7805815Z E   
2025-01-10T13:23:47.7805942Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7806057Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7806131Z E          ...
2025-01-10T13:23:47.7806226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7806357Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7806477Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7806550Z E          ...
2025-01-10T13:23:47.7806646Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7806777Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7806886Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7806890Z 
2025-01-10T13:23:47.7806983Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7807192Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-01-10T13:23:47.7807196Z 
2025-01-10T13:23:47.7807329Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7807460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7807562Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7807695Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7807823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7808052Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7808134Z err_msg = None
2025-01-10T13:23:47.7808138Z 
2025-01-10T13:23:47.7808250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7808336Z         if err_msg is None:
2025-01-10T13:23:47.7808438Z             if left.shape != right.shape:
2025-01-10T13:23:47.7808524Z                 raise_assert_detail(
2025-01-10T13:23:47.7808671Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7808744Z                 )
2025-01-10T13:23:47.7808818Z     
2025-01-10T13:23:47.7808892Z             diff = 0
2025-01-10T13:23:47.7809006Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7809093Z                 # count up differences
2025-01-10T13:23:47.7809268Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7809346Z                     diff += 1
2025-01-10T13:23:47.7809424Z     
2025-01-10T13:23:47.7809596Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7809739Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7809907Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7810026Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7810103Z E           
2025-01-10T13:23:47.7810215Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7810477Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7810738Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7810746Z 
2025-01-10T13:23:47.7811053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7811057Z 
2025-01-10T13:23:47.7811230Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7811235Z 
2025-01-10T13:23:47.7811456Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d40e00>
2025-01-10T13:23:47.7811628Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>
2025-01-10T13:23:47.7811704Z attr = 'lines'
2025-01-10T13:23:47.7811708Z 
2025-01-10T13:23:47.7811849Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7811963Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7812052Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7812128Z         try:
2025-01-10T13:23:47.7812276Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7812362Z         except KeyError:
2025-01-10T13:23:47.7812499Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7812578Z     
2025-01-10T13:23:47.7812666Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7812765Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7812853Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7812990Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7813223Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7813327Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7813440Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7813520Z             else:
2025-01-10T13:23:47.7813618Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7813728Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7813859Z 
2025-01-10T13:23:47.7813994Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7814108Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7814260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7814333Z     ???
2025-01-10T13:23:47.7814448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7814452Z 
2025-01-10T13:23:47.7814523Z >   ???
2025-01-10T13:23:47.7814654Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7814725Z E   
2025-01-10T13:23:47.7814855Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7814966Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7815045Z E          ...
2025-01-10T13:23:47.7815132Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7815265Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7815495Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7815573Z E          ...
2025-01-10T13:23:47.7815664Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7815788Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7815898Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7815903Z 
2025-01-10T13:23:47.7815994Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7816252Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-01-10T13:23:47.7816257Z 
2025-01-10T13:23:47.7816475Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d41610>
2025-01-10T13:23:47.7816645Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>
2025-01-10T13:23:47.7816735Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.7816745Z 
2025-01-10T13:23:47.7816882Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7817013Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7817100Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7817178Z         try:
2025-01-10T13:23:47.7817318Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7817404Z         except KeyError:
2025-01-10T13:23:47.7817541Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7817616Z     
2025-01-10T13:23:47.7817703Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7817803Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7817893Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7818030Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7818116Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7818212Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7818326Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7818334Z 
2025-01-10T13:23:47.7818464Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7818581Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7818584Z 
2025-01-10T13:23:47.7818718Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7818808Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7818916Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7819001Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7819141Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7819228Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7819337Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7819417Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7819500Z err_msg = None
2025-01-10T13:23:47.7819648Z 
2025-01-10T13:23:47.7819765Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7819852Z         if err_msg is None:
2025-01-10T13:23:47.7819948Z             if left.shape != right.shape:
2025-01-10T13:23:47.7820038Z                 raise_assert_detail(
2025-01-10T13:23:47.7820181Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7820259Z                 )
2025-01-10T13:23:47.7820328Z     
2025-01-10T13:23:47.7820408Z             diff = 0
2025-01-10T13:23:47.7820518Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7820612Z                 # count up differences
2025-01-10T13:23:47.7820861Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7821008Z                     diff += 1
2025-01-10T13:23:47.7821135Z     
2025-01-10T13:23:47.7821287Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7821631Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7821927Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7822100Z E           AssertionError: Series are different
2025-01-10T13:23:47.7822228Z E           
2025-01-10T13:23:47.7822356Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.7822723Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7823170Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7823507Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7823513Z 
2025-01-10T13:23:47.7823822Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7824077Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-01-10T13:23:47.7824081Z 
2025-01-10T13:23:47.7824309Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61d41a30>
2025-01-10T13:23:47.7824486Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>
2025-01-10T13:23:47.7824584Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.7824589Z 
2025-01-10T13:23:47.7824726Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7824847Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7824931Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7825009Z         try:
2025-01-10T13:23:47.7825150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7825237Z         except KeyError:
2025-01-10T13:23:47.7825380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7825451Z     
2025-01-10T13:23:47.7825544Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7825638Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7825732Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7825866Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7826092Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7826184Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7826298Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7826303Z 
2025-01-10T13:23:47.7826428Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7826545Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7826549Z 
2025-01-10T13:23:47.7826685Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7826775Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7826886Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7826968Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7827111Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7827194Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7827414Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7827498Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7827578Z err_msg = None
2025-01-10T13:23:47.7827582Z 
2025-01-10T13:23:47.7827694Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7827781Z         if err_msg is None:
2025-01-10T13:23:47.7827876Z             if left.shape != right.shape:
2025-01-10T13:23:47.7827966Z                 raise_assert_detail(
2025-01-10T13:23:47.7828114Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7828187Z                 )
2025-01-10T13:23:47.7828261Z     
2025-01-10T13:23:47.7828335Z             diff = 0
2025-01-10T13:23:47.7828451Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7828538Z                 # count up differences
2025-01-10T13:23:47.7828715Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7828806Z                     diff += 1
2025-01-10T13:23:47.7828881Z     
2025-01-10T13:23:47.7828969Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7829113Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7829281Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7829389Z E           AssertionError: Series are different
2025-01-10T13:23:47.7829462Z E           
2025-01-10T13:23:47.7829575Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.7829948Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7830322Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7830695Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7830701Z 
2025-01-10T13:23:47.7831017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7831310Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-01-10T13:23:47.7831314Z 
2025-01-10T13:23:47.7831446Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7831573Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7831685Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7831821Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7831944Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7832044Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7832120Z err_msg = None
2025-01-10T13:23:47.7832124Z 
2025-01-10T13:23:47.7832236Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7832397Z         if err_msg is None:
2025-01-10T13:23:47.7832500Z             if left.shape != right.shape:
2025-01-10T13:23:47.7832585Z                 raise_assert_detail(
2025-01-10T13:23:47.7832732Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7832805Z                 )
2025-01-10T13:23:47.7832879Z     
2025-01-10T13:23:47.7832960Z             diff = 0
2025-01-10T13:23:47.7833202Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7833297Z                 # count up differences
2025-01-10T13:23:47.7833463Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7833546Z                     diff += 1
2025-01-10T13:23:47.7833616Z     
2025-01-10T13:23:47.7833707Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7833840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7834017Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7834135Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7834213Z E           
2025-01-10T13:23:47.7834328Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7834589Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7834853Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7834858Z 
2025-01-10T13:23:47.7835159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7835164Z 
2025-01-10T13:23:47.7835337Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7835342Z 
2025-01-10T13:23:47.7835567Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd4da0>
2025-01-10T13:23:47.7835766Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>, attr = 'nu'
2025-01-10T13:23:47.7835771Z 
2025-01-10T13:23:47.7835912Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7836029Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7836119Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7836192Z         try:
2025-01-10T13:23:47.7836336Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7836420Z         except KeyError:
2025-01-10T13:23:47.7836567Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7836778Z     
2025-01-10T13:23:47.7836873Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7836968Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7837065Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7837201Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7837286Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7837382Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7837491Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7837496Z 
2025-01-10T13:23:47.7837624Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7837737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7837888Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7837962Z     ???
2025-01-10T13:23:47.7838076Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7838272Z 
2025-01-10T13:23:47.7838420Z >   ???
2025-01-10T13:23:47.7838662Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7838792Z E   
2025-01-10T13:23:47.7838998Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7839122Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7839196Z E          ...
2025-01-10T13:23:47.7839296Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7839430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7839553Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7839626Z E          ...
2025-01-10T13:23:47.7839718Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7839845Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7839961Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7839973Z 
2025-01-10T13:23:47.7840069Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7840298Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-01-10T13:23:47.7840303Z 
2025-01-10T13:23:47.7840440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7840566Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7840671Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7840803Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7840931Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7841026Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7841108Z err_msg = None
2025-01-10T13:23:47.7841112Z 
2025-01-10T13:23:47.7841226Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7841321Z         if err_msg is None:
2025-01-10T13:23:47.7841424Z             if left.shape != right.shape:
2025-01-10T13:23:47.7841510Z                 raise_assert_detail(
2025-01-10T13:23:47.7841660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7841732Z                 )
2025-01-10T13:23:47.7841807Z     
2025-01-10T13:23:47.7841881Z             diff = 0
2025-01-10T13:23:47.7841999Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7842089Z                 # count up differences
2025-01-10T13:23:47.7842263Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7842343Z                     diff += 1
2025-01-10T13:23:47.7842418Z     
2025-01-10T13:23:47.7842509Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7842650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7842823Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7843178Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7843259Z E           
2025-01-10T13:23:47.7843374Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7843636Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7843893Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7843903Z 
2025-01-10T13:23:47.7844327Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7844332Z 
2025-01-10T13:23:47.7844512Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7844516Z 
2025-01-10T13:23:47.7844739Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd51f0>
2025-01-10T13:23:47.7844912Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>
2025-01-10T13:23:47.7844993Z attr = 'wavelength_cm'
2025-01-10T13:23:47.7844998Z 
2025-01-10T13:23:47.7845139Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7845255Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7845345Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7845422Z         try:
2025-01-10T13:23:47.7845562Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7845650Z         except KeyError:
2025-01-10T13:23:47.7845799Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7845874Z     
2025-01-10T13:23:47.7845962Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7846061Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7846152Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7846290Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7846377Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7846474Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7846586Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7846590Z 
2025-01-10T13:23:47.7846720Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7846839Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7846987Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7847066Z     ???
2025-01-10T13:23:47.7847179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7847186Z 
2025-01-10T13:23:47.7847264Z >   ???
2025-01-10T13:23:47.7847392Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7847467Z E   
2025-01-10T13:23:47.7847596Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7847715Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7847788Z E          ...
2025-01-10T13:23:47.7847882Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7848014Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7848133Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7848206Z E          ...
2025-01-10T13:23:47.7848300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7848431Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7848537Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7848658Z 
2025-01-10T13:23:47.7848762Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7848967Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-01-10T13:23:47.7848971Z 
2025-01-10T13:23:47.7849105Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7849233Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7849335Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7849466Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7849595Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7849698Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7849776Z err_msg = None
2025-01-10T13:23:47.7849780Z 
2025-01-10T13:23:47.7849900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7850064Z         if err_msg is None:
2025-01-10T13:23:47.7850174Z             if left.shape != right.shape:
2025-01-10T13:23:47.7850260Z                 raise_assert_detail(
2025-01-10T13:23:47.7850413Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7850485Z                 )
2025-01-10T13:23:47.7850562Z     
2025-01-10T13:23:47.7850636Z             diff = 0
2025-01-10T13:23:47.7850754Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7850844Z                 # count up differences
2025-01-10T13:23:47.7851018Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7851105Z                     diff += 1
2025-01-10T13:23:47.7851177Z     
2025-01-10T13:23:47.7851272Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7851409Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7851588Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7851702Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7851781Z E           
2025-01-10T13:23:47.7851894Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7852156Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7852421Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7852429Z 
2025-01-10T13:23:47.7852740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7852744Z 
2025-01-10T13:23:47.7852917Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7852922Z 
2025-01-10T13:23:47.7853255Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd5280>
2025-01-10T13:23:47.7853460Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>, attr = 'f_lu'
2025-01-10T13:23:47.7853464Z 
2025-01-10T13:23:47.7853608Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7853724Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7853813Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7853885Z         try:
2025-01-10T13:23:47.7854029Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7854112Z         except KeyError:
2025-01-10T13:23:47.7854258Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7854461Z     
2025-01-10T13:23:47.7854554Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7854648Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7854744Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7854877Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7854968Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7855064Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7855175Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7855179Z 
2025-01-10T13:23:47.7855310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7855421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7855571Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7855645Z     ???
2025-01-10T13:23:47.7855865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7855875Z 
2025-01-10T13:23:47.7855949Z >   ???
2025-01-10T13:23:47.7856082Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7856154Z E   
2025-01-10T13:23:47.7856370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7856577Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7856695Z E          ...
2025-01-10T13:23:47.7856854Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7857069Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7857260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7857376Z E          ...
2025-01-10T13:23:47.7857523Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7857732Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7857888Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7857903Z 
2025-01-10T13:23:47.7858000Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7858222Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-01-10T13:23:47.7858227Z 
2025-01-10T13:23:47.7858358Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7858488Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7858591Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7858723Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7858851Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7858946Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7859028Z err_msg = None
2025-01-10T13:23:47.7859032Z 
2025-01-10T13:23:47.7859142Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7859236Z         if err_msg is None:
2025-01-10T13:23:47.7859332Z             if left.shape != right.shape:
2025-01-10T13:23:47.7859423Z                 raise_assert_detail(
2025-01-10T13:23:47.7859573Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7859647Z                 )
2025-01-10T13:23:47.7859723Z     
2025-01-10T13:23:47.7859797Z             diff = 0
2025-01-10T13:23:47.7859915Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7860003Z                 # count up differences
2025-01-10T13:23:47.7860177Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7860256Z                     diff += 1
2025-01-10T13:23:47.7860331Z     
2025-01-10T13:23:47.7860421Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7860562Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7860733Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7860968Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7861042Z E           
2025-01-10T13:23:47.7861160Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7861423Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7861681Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7861690Z 
2025-01-10T13:23:47.7862089Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7862094Z 
2025-01-10T13:23:47.7862269Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7862273Z 
2025-01-10T13:23:47.7862495Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd77d0>
2025-01-10T13:23:47.7862668Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>
2025-01-10T13:23:47.7862747Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.7862751Z 
2025-01-10T13:23:47.7862901Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7863150Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7863248Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7863321Z         try:
2025-01-10T13:23:47.7863469Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7863550Z         except KeyError:
2025-01-10T13:23:47.7863703Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7863779Z     
2025-01-10T13:23:47.7863866Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7863968Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7864058Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7864195Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7864284Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7864378Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7864488Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7864566Z             else:
2025-01-10T13:23:47.7864661Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7864773Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7864778Z 
2025-01-10T13:23:47.7864904Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7865025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7865178Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7865250Z     ???
2025-01-10T13:23:47.7865362Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7865366Z 
2025-01-10T13:23:47.7865436Z >   ???
2025-01-10T13:23:47.7865570Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7865640Z E   
2025-01-10T13:23:47.7865778Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7865889Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7865969Z E          ...
2025-01-10T13:23:47.7866058Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7866195Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7866307Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7866385Z E          ...
2025-01-10T13:23:47.7866617Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7866748Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7866863Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7866867Z 
2025-01-10T13:23:47.7866959Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7867178Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-01-10T13:23:47.7867182Z 
2025-01-10T13:23:47.7867309Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7867439Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7867535Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7867671Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7867802Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7868008Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7868094Z err_msg = None
2025-01-10T13:23:47.7868098Z 
2025-01-10T13:23:47.7868210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7868297Z         if err_msg is None:
2025-01-10T13:23:47.7868393Z             if left.shape != right.shape:
2025-01-10T13:23:47.7868482Z                 raise_assert_detail(
2025-01-10T13:23:47.7868625Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7868703Z                 )
2025-01-10T13:23:47.7868774Z     
2025-01-10T13:23:47.7868853Z             diff = 0
2025-01-10T13:23:47.7868966Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7869060Z                 # count up differences
2025-01-10T13:23:47.7869237Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7869316Z                     diff += 1
2025-01-10T13:23:47.7869396Z     
2025-01-10T13:23:47.7869489Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7869633Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7869799Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7869918Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7869990Z E           
2025-01-10T13:23:47.7870107Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7870360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7870627Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7870639Z 
2025-01-10T13:23:47.7870944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7870949Z 
2025-01-10T13:23:47.7871116Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7871120Z 
2025-01-10T13:23:47.7871347Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd6720>
2025-01-10T13:23:47.7871521Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>
2025-01-10T13:23:47.7871601Z attr = 'beta_sobolev'
2025-01-10T13:23:47.7871606Z 
2025-01-10T13:23:47.7871748Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7871864Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7872047Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7872120Z         try:
2025-01-10T13:23:47.7872265Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7872347Z         except KeyError:
2025-01-10T13:23:47.7872489Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7872559Z     
2025-01-10T13:23:47.7872651Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7872747Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7872842Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7872982Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7873201Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7873299Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7873410Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7873488Z             else:
2025-01-10T13:23:47.7873583Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7873819Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7873824Z 
2025-01-10T13:23:47.7873953Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7874072Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7874218Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7874295Z     ???
2025-01-10T13:23:47.7874405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7874414Z 
2025-01-10T13:23:47.7874499Z >   ???
2025-01-10T13:23:47.7874737Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7874856Z E   
2025-01-10T13:23:47.7875086Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7875270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7875395Z E          ...
2025-01-10T13:23:47.7875538Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7875767Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7875952Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7876086Z E          ...
2025-01-10T13:23:47.7876180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7876313Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7876418Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7876422Z 
2025-01-10T13:23:47.7876518Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7876729Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-01-10T13:23:47.7876733Z 
2025-01-10T13:23:47.7876863Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7876999Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7877101Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7877247Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7877371Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7877471Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7877547Z err_msg = None
2025-01-10T13:23:47.7877551Z 
2025-01-10T13:23:47.7877668Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7877756Z         if err_msg is None:
2025-01-10T13:23:47.7877852Z             if left.shape != right.shape:
2025-01-10T13:23:47.7877943Z                 raise_assert_detail(
2025-01-10T13:23:47.7878088Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7878164Z                 )
2025-01-10T13:23:47.7878234Z     
2025-01-10T13:23:47.7878313Z             diff = 0
2025-01-10T13:23:47.7878425Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7878688Z                 # count up differences
2025-01-10T13:23:47.7878858Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7878942Z                     diff += 1
2025-01-10T13:23:47.7879012Z     
2025-01-10T13:23:47.7879107Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7879244Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7879417Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7879534Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7879607Z E           
2025-01-10T13:23:47.7879723Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7880060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7880332Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7880336Z 
2025-01-10T13:23:47.7880648Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7880652Z 
2025-01-10T13:23:47.7880818Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7880823Z 
2025-01-10T13:23:47.7881047Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd62d0>
2025-01-10T13:23:47.7881212Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b8d6150>
2025-01-10T13:23:47.7881294Z attr = 'j_blues'
2025-01-10T13:23:47.7881306Z 
2025-01-10T13:23:47.7881442Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7881564Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7881655Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7881727Z         try:
2025-01-10T13:23:47.7881874Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7881955Z         except KeyError:
2025-01-10T13:23:47.7882100Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7882170Z     
2025-01-10T13:23:47.7882263Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7882358Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7882451Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7882582Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7882674Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7882765Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7882890Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7882964Z             else:
2025-01-10T13:23:47.7883197Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7883312Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7883317Z 
2025-01-10T13:23:47.7883442Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7883559Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7883704Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7883780Z     ???
2025-01-10T13:23:47.7883887Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7883891Z 
2025-01-10T13:23:47.7883966Z >   ???
2025-01-10T13:23:47.7884093Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7884168Z E   
2025-01-10T13:23:47.7884295Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7884566Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7884639Z E          ...
2025-01-10T13:23:47.7884733Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7884868Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7884980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7885057Z E          ...
2025-01-10T13:23:47.7885145Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7885274Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7885378Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7885382Z 
2025-01-10T13:23:47.7885475Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7885683Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-01-10T13:23:47.7885687Z 
2025-01-10T13:23:47.7885822Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7886068Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7886169Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7886308Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7886430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7886533Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7886614Z err_msg = None
2025-01-10T13:23:47.7886618Z 
2025-01-10T13:23:47.7886733Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7886814Z         if err_msg is None:
2025-01-10T13:23:47.7886915Z             if left.shape != right.shape:
2025-01-10T13:23:47.7887000Z                 raise_assert_detail(
2025-01-10T13:23:47.7887152Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7887240Z                 )
2025-01-10T13:23:47.7887310Z     
2025-01-10T13:23:47.7887389Z             diff = 0
2025-01-10T13:23:47.7887500Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7887594Z                 # count up differences
2025-01-10T13:23:47.7887762Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7887845Z                     diff += 1
2025-01-10T13:23:47.7887916Z     
2025-01-10T13:23:47.7888010Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7888143Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7888319Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7888431Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7888508Z E           
2025-01-10T13:23:47.7888618Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7888882Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7889147Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7889152Z 
2025-01-10T13:23:47.7889451Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7889455Z 
2025-01-10T13:23:47.7889629Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7889633Z 
2025-01-10T13:23:47.7889956Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd6000>
2025-01-10T13:23:47.7890122Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>
2025-01-10T13:23:47.7890203Z attr = 'lines'
2025-01-10T13:23:47.7890207Z 
2025-01-10T13:23:47.7890343Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7890463Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7890548Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7890625Z         try:
2025-01-10T13:23:47.7890768Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7890854Z         except KeyError:
2025-01-10T13:23:47.7890991Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7891068Z     
2025-01-10T13:23:47.7891156Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7891255Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7891348Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7891562Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7891657Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7891748Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7891862Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7891935Z             else:
2025-01-10T13:23:47.7892036Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7892200Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7892207Z 
2025-01-10T13:23:47.7892434Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7892632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7892887Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7893135Z     ???
2025-01-10T13:23:47.7893322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7893328Z 
2025-01-10T13:23:47.7893456Z >   ???
2025-01-10T13:23:47.7893677Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7893781Z E   
2025-01-10T13:23:47.7893913Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7894029Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7894103Z E          ...
2025-01-10T13:23:47.7894201Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7894330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7894449Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7894521Z E          ...
2025-01-10T13:23:47.7894616Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7894746Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7894852Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7894857Z 
2025-01-10T13:23:47.7894950Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7895216Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-01-10T13:23:47.7895221Z 
2025-01-10T13:23:47.7895446Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd5ee0>
2025-01-10T13:23:47.7895609Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>
2025-01-10T13:23:47.7895702Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.7895707Z 
2025-01-10T13:23:47.7895842Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7895962Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7896050Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7896122Z         try:
2025-01-10T13:23:47.7896269Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7896351Z         except KeyError:
2025-01-10T13:23:47.7896493Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7896564Z     
2025-01-10T13:23:47.7896658Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7896914Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7897012Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7897153Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7897248Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7897347Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7897467Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7897471Z 
2025-01-10T13:23:47.7897599Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7897723Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7897727Z 
2025-01-10T13:23:47.7897868Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7897955Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7898070Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7898262Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7898410Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7898495Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7898606Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7898685Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7898768Z err_msg = None
2025-01-10T13:23:47.7898772Z 
2025-01-10T13:23:47.7898888Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7898974Z         if err_msg is None:
2025-01-10T13:23:47.7899076Z             if left.shape != right.shape:
2025-01-10T13:23:47.7899161Z                 raise_assert_detail(
2025-01-10T13:23:47.7899308Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7899382Z                 )
2025-01-10T13:23:47.7899457Z     
2025-01-10T13:23:47.7899532Z             diff = 0
2025-01-10T13:23:47.7899660Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7899750Z                 # count up differences
2025-01-10T13:23:47.7899925Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7900006Z                     diff += 1
2025-01-10T13:23:47.7900083Z     
2025-01-10T13:23:47.7900172Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7900313Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7900489Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7900594Z E           AssertionError: Series are different
2025-01-10T13:23:47.7900674Z E           
2025-01-10T13:23:47.7900779Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.7901156Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7901521Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7901862Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7901958Z 
2025-01-10T13:23:47.7902273Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7902529Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-01-10T13:23:47.7902533Z 
2025-01-10T13:23:47.7902763Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd5880>
2025-01-10T13:23:47.7902941Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>
2025-01-10T13:23:47.7903183Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.7903188Z 
2025-01-10T13:23:47.7903337Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7903455Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7903549Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7903623Z         try:
2025-01-10T13:23:47.7903885Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7903978Z         except KeyError:
2025-01-10T13:23:47.7904125Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7904196Z     
2025-01-10T13:23:47.7904288Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7904384Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7904478Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7904616Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7904703Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7904798Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7904908Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7904913Z 
2025-01-10T13:23:47.7905043Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7905162Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7905166Z 
2025-01-10T13:23:47.7905312Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7905398Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7905511Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7905601Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7905740Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7905832Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7905938Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7906022Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7906098Z err_msg = None
2025-01-10T13:23:47.7906102Z 
2025-01-10T13:23:47.7906216Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7906297Z         if err_msg is None:
2025-01-10T13:23:47.7906394Z             if left.shape != right.shape:
2025-01-10T13:23:47.7906479Z                 raise_assert_detail(
2025-01-10T13:23:47.7906637Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7906710Z                 )
2025-01-10T13:23:47.7906785Z     
2025-01-10T13:23:47.7906859Z             diff = 0
2025-01-10T13:23:47.7906977Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7907073Z                 # count up differences
2025-01-10T13:23:47.7907241Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7907325Z                     diff += 1
2025-01-10T13:23:47.7907395Z     
2025-01-10T13:23:47.7907488Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7907623Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7907799Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7907902Z E           AssertionError: Series are different
2025-01-10T13:23:47.7907981Z E           
2025-01-10T13:23:47.7908247Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.7908619Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7908994Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7909436Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7909451Z 
2025-01-10T13:23:47.7909769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7909977Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-01-10T13:23:47.7909982Z 
2025-01-10T13:23:47.7910154Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7910385Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7910554Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7910813Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7910970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7911068Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7911152Z err_msg = None
2025-01-10T13:23:47.7911157Z 
2025-01-10T13:23:47.7911270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7911357Z         if err_msg is None:
2025-01-10T13:23:47.7911451Z             if left.shape != right.shape:
2025-01-10T13:23:47.7911544Z                 raise_assert_detail(
2025-01-10T13:23:47.7911685Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7911763Z                 )
2025-01-10T13:23:47.7911832Z     
2025-01-10T13:23:47.7911911Z             diff = 0
2025-01-10T13:23:47.7912024Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7912125Z                 # count up differences
2025-01-10T13:23:47.7912301Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7912379Z                     diff += 1
2025-01-10T13:23:47.7912455Z     
2025-01-10T13:23:47.7912543Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7912685Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7912855Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7912977Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7913186Z E           
2025-01-10T13:23:47.7913307Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7913569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7913980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7913985Z 
2025-01-10T13:23:47.7914298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7914303Z 
2025-01-10T13:23:47.7914473Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7914477Z 
2025-01-10T13:23:47.7914707Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd66f0>
2025-01-10T13:23:47.7914909Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>, attr = 'nu'
2025-01-10T13:23:47.7914923Z 
2025-01-10T13:23:47.7915163Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7915290Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7915376Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7915451Z         try:
2025-01-10T13:23:47.7915592Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7915679Z         except KeyError:
2025-01-10T13:23:47.7915818Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7915893Z     
2025-01-10T13:23:47.7915980Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7916082Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7916174Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7916311Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7916397Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7916495Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7916622Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7916627Z 
2025-01-10T13:23:47.7916753Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7916873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7917019Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7917097Z     ???
2025-01-10T13:23:47.7917209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7917213Z 
2025-01-10T13:23:47.7917290Z >   ???
2025-01-10T13:23:47.7917418Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7917494Z E   
2025-01-10T13:23:47.7917624Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7917743Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7917820Z E          ...
2025-01-10T13:23:47.7917910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7918054Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7918168Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7918246Z E          ...
2025-01-10T13:23:47.7918333Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7918463Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7918570Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7918574Z 
2025-01-10T13:23:47.7918669Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7918895Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-01-10T13:23:47.7918899Z 
2025-01-10T13:23:47.7919034Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7919173Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7919275Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7919518Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7919641Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7919742Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7919819Z err_msg = None
2025-01-10T13:23:47.7919823Z 
2025-01-10T13:23:47.7919940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7920022Z         if err_msg is None:
2025-01-10T13:23:47.7920121Z             if left.shape != right.shape:
2025-01-10T13:23:47.7920206Z                 raise_assert_detail(
2025-01-10T13:23:47.7920354Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7920431Z                 )
2025-01-10T13:23:47.7920501Z     
2025-01-10T13:23:47.7920582Z             diff = 0
2025-01-10T13:23:47.7920696Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7920873Z                 # count up differences
2025-01-10T13:23:47.7921051Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7921135Z                     diff += 1
2025-01-10T13:23:47.7921206Z     
2025-01-10T13:23:47.7921301Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7921437Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7921612Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7921726Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7921805Z E           
2025-01-10T13:23:47.7921916Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7922184Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7922451Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7922455Z 
2025-01-10T13:23:47.7922759Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7922763Z 
2025-01-10T13:23:47.7922937Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7922941Z 
2025-01-10T13:23:47.7923449Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd7c20>
2025-01-10T13:23:47.7923631Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>
2025-01-10T13:23:47.7923723Z attr = 'wavelength_cm'
2025-01-10T13:23:47.7923732Z 
2025-01-10T13:23:47.7923871Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7923993Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7924077Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7924155Z         try:
2025-01-10T13:23:47.7924294Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7924381Z         except KeyError:
2025-01-10T13:23:47.7924518Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7924595Z     
2025-01-10T13:23:47.7924689Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7924784Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7924876Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7925006Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7925097Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7925187Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7925441Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7925446Z 
2025-01-10T13:23:47.7925575Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7925704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7925857Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7925936Z     ???
2025-01-10T13:23:47.7926047Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7926058Z 
2025-01-10T13:23:47.7926131Z >   ???
2025-01-10T13:23:47.7926268Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7926339Z E   
2025-01-10T13:23:47.7926475Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7926588Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7926671Z E          ...
2025-01-10T13:23:47.7926760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7927030Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7927151Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7927233Z E          ...
2025-01-10T13:23:47.7935876Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7936165Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7936367Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7936375Z 
2025-01-10T13:23:47.7936535Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7936814Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-01-10T13:23:47.7936819Z 
2025-01-10T13:23:47.7936965Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7937111Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7937231Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7937379Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7937516Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7937615Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7937701Z err_msg = None
2025-01-10T13:23:47.7937706Z 
2025-01-10T13:23:47.7937826Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7937917Z         if err_msg is None:
2025-01-10T13:23:47.7938018Z             if left.shape != right.shape:
2025-01-10T13:23:47.7938110Z                 raise_assert_detail(
2025-01-10T13:23:47.7938268Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7938342Z                 )
2025-01-10T13:23:47.7938419Z     
2025-01-10T13:23:47.7938497Z             diff = 0
2025-01-10T13:23:47.7938623Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7938717Z                 # count up differences
2025-01-10T13:23:47.7938901Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7938984Z                     diff += 1
2025-01-10T13:23:47.7939060Z     
2025-01-10T13:23:47.7939154Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7939301Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7939475Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7939597Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7939671Z E           
2025-01-10T13:23:47.7939793Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7940064Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7940511Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7940517Z 
2025-01-10T13:23:47.7940842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7940846Z 
2025-01-10T13:23:47.7941030Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7941035Z 
2025-01-10T13:23:47.7941258Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd7380>
2025-01-10T13:23:47.7941466Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>, attr = 'f_lu'
2025-01-10T13:23:47.7941636Z 
2025-01-10T13:23:47.7941789Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7941916Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7942003Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7942087Z         try:
2025-01-10T13:23:47.7942230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7942324Z         except KeyError:
2025-01-10T13:23:47.7942462Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7942538Z     
2025-01-10T13:23:47.7942635Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7942732Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7942829Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7942962Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7943200Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7943299Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7943428Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7943433Z 
2025-01-10T13:23:47.7943561Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7943681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7943832Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7943913Z     ???
2025-01-10T13:23:47.7944021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7944030Z 
2025-01-10T13:23:47.7944103Z >   ???
2025-01-10T13:23:47.7944231Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7944298Z E   
2025-01-10T13:23:47.7944429Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7944543Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7944624Z E          ...
2025-01-10T13:23:47.7944714Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7944861Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7944973Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7945053Z E          ...
2025-01-10T13:23:47.7945140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7945270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7945374Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7945386Z 
2025-01-10T13:23:47.7945477Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7945704Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-01-10T13:23:47.7945708Z 
2025-01-10T13:23:47.7945838Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7945976Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7946079Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7946340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7946465Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7946566Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7946643Z err_msg = None
2025-01-10T13:23:47.7946653Z 
2025-01-10T13:23:47.7946769Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7946858Z         if err_msg is None:
2025-01-10T13:23:47.7946956Z             if left.shape != right.shape:
2025-01-10T13:23:47.7947046Z                 raise_assert_detail(
2025-01-10T13:23:47.7947191Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7947269Z                 )
2025-01-10T13:23:47.7947340Z     
2025-01-10T13:23:47.7947418Z             diff = 0
2025-01-10T13:23:47.7947532Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7947740Z                 # count up differences
2025-01-10T13:23:47.7947917Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7948002Z                     diff += 1
2025-01-10T13:23:47.7948073Z     
2025-01-10T13:23:47.7948167Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7948310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7948480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7948601Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7948674Z E           
2025-01-10T13:23:47.7948793Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7949057Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7949328Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7949333Z 
2025-01-10T13:23:47.7949660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7949664Z 
2025-01-10T13:23:47.7949840Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7949844Z 
2025-01-10T13:23:47.7950078Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd7470>
2025-01-10T13:23:47.7950246Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>
2025-01-10T13:23:47.7950340Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.7950345Z 
2025-01-10T13:23:47.7950487Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7950611Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7950703Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7950777Z         try:
2025-01-10T13:23:47.7950928Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7951011Z         except KeyError:
2025-01-10T13:23:47.7951157Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7951229Z     
2025-01-10T13:23:47.7951323Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7951424Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7951519Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7951652Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7951745Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7951935Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7952053Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7952136Z             else:
2025-01-10T13:23:47.7952240Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7952353Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7952357Z 
2025-01-10T13:23:47.7952493Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7952613Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7952770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7952851Z     ???
2025-01-10T13:23:47.7952969Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7952973Z 
2025-01-10T13:23:47.7953189Z >   ???
2025-01-10T13:23:47.7953330Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7953401Z E   
2025-01-10T13:23:47.7953664Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7953798Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7953873Z E          ...
2025-01-10T13:23:47.7953984Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7954222Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7954429Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7954556Z E          ...
2025-01-10T13:23:47.7954711Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7954921Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7955103Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7955109Z 
2025-01-10T13:23:47.7955258Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7955644Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-01-10T13:23:47.7955650Z 
2025-01-10T13:23:47.7955797Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7955934Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7956041Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7956175Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7956304Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7956399Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7956485Z err_msg = None
2025-01-10T13:23:47.7956489Z 
2025-01-10T13:23:47.7956606Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7956697Z         if err_msg is None:
2025-01-10T13:23:47.7956797Z             if left.shape != right.shape:
2025-01-10T13:23:47.7956887Z                 raise_assert_detail(
2025-01-10T13:23:47.7957050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7957128Z                 )
2025-01-10T13:23:47.7957204Z     
2025-01-10T13:23:47.7957278Z             diff = 0
2025-01-10T13:23:47.7957398Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7957489Z                 # count up differences
2025-01-10T13:23:47.7957666Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7957746Z                     diff += 1
2025-01-10T13:23:47.7957822Z     
2025-01-10T13:23:47.7957913Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7958057Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7958230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7958349Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7958423Z E           
2025-01-10T13:23:47.7958541Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7958964Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7959223Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7959227Z 
2025-01-10T13:23:47.7959542Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7959546Z 
2025-01-10T13:23:47.7959722Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7959731Z 
2025-01-10T13:23:47.7960051Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd7da0>
2025-01-10T13:23:47.7960232Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>
2025-01-10T13:23:47.7960314Z attr = 'beta_sobolev'
2025-01-10T13:23:47.7960318Z 
2025-01-10T13:23:47.7960469Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7960588Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7960683Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7960756Z         try:
2025-01-10T13:23:47.7960906Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7960989Z         except KeyError:
2025-01-10T13:23:47.7961133Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7961209Z     
2025-01-10T13:23:47.7961299Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7961399Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7961502Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7961644Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7961734Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7961830Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7961943Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7962022Z             else:
2025-01-10T13:23:47.7962119Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7962229Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7962234Z 
2025-01-10T13:23:47.7962359Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7962478Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7962630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7962703Z     ???
2025-01-10T13:23:47.7962819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7962828Z 
2025-01-10T13:23:47.7962900Z >   ???
2025-01-10T13:23:47.7963175Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7963249Z E   
2025-01-10T13:23:47.7963385Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7963498Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7963578Z E          ...
2025-01-10T13:23:47.7963668Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7963802Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7963916Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7963995Z E          ...
2025-01-10T13:23:47.7964089Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7964213Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7964324Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7964328Z 
2025-01-10T13:23:47.7964553Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7964767Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-01-10T13:23:47.7964771Z 
2025-01-10T13:23:47.7964899Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7965034Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7965134Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7965271Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7965400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7965494Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7965576Z err_msg = None
2025-01-10T13:23:47.7965580Z 
2025-01-10T13:23:47.7965694Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7965891Z         if err_msg is None:
2025-01-10T13:23:47.7965996Z             if left.shape != right.shape:
2025-01-10T13:23:47.7966087Z                 raise_assert_detail(
2025-01-10T13:23:47.7966234Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7966314Z                 )
2025-01-10T13:23:47.7966385Z     
2025-01-10T13:23:47.7966463Z             diff = 0
2025-01-10T13:23:47.7966577Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7966672Z                 # count up differences
2025-01-10T13:23:47.7966850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7966930Z                     diff += 1
2025-01-10T13:23:47.7967006Z     
2025-01-10T13:23:47.7967096Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7967236Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7967409Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7967537Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7967611Z E           
2025-01-10T13:23:47.7967726Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7967984Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7968245Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7968249Z 
2025-01-10T13:23:47.7968561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7968569Z 
2025-01-10T13:23:47.7968738Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7968743Z 
2025-01-10T13:23:47.7968973Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61dd7110>
2025-01-10T13:23:47.7969144Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59263260>
2025-01-10T13:23:47.7969222Z attr = 'j_blues'
2025-01-10T13:23:47.7969226Z 
2025-01-10T13:23:47.7969372Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7969489Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7969580Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7969654Z         try:
2025-01-10T13:23:47.7969799Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7969883Z         except KeyError:
2025-01-10T13:23:47.7970030Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7970193Z     
2025-01-10T13:23:47.7970288Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7970383Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7970476Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7970609Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7970702Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7970800Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7970910Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7970991Z             else:
2025-01-10T13:23:47.7971092Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7971203Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7971208Z 
2025-01-10T13:23:47.7971334Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7971452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7971678Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7971758Z     ???
2025-01-10T13:23:47.7971869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7971874Z 
2025-01-10T13:23:47.7971949Z >   ???
2025-01-10T13:23:47.7972111Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7972239Z E   
2025-01-10T13:23:47.7972480Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7972674Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7972802Z E          ...
2025-01-10T13:23:47.7972945Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7973297Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7973485Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7973606Z E          ...
2025-01-10T13:23:47.7973754Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7973931Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7974042Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7974046Z 
2025-01-10T13:23:47.7974143Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7974385Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-01-10T13:23:47.7974389Z 
2025-01-10T13:23:47.7974521Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7974661Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7974761Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7974900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7975026Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7975129Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7975214Z err_msg = None
2025-01-10T13:23:47.7975224Z 
2025-01-10T13:23:47.7975339Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7975426Z         if err_msg is None:
2025-01-10T13:23:47.7975524Z             if left.shape != right.shape:
2025-01-10T13:23:47.7975613Z                 raise_assert_detail(
2025-01-10T13:23:47.7975761Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7975837Z                 )
2025-01-10T13:23:47.7975907Z     
2025-01-10T13:23:47.7975984Z             diff = 0
2025-01-10T13:23:47.7976101Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7976195Z                 # count up differences
2025-01-10T13:23:47.7976366Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7976450Z                     diff += 1
2025-01-10T13:23:47.7976520Z     
2025-01-10T13:23:47.7976769Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7976912Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7977080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7977198Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.7977271Z E           
2025-01-10T13:23:47.7977386Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.7977645Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7978010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7978020Z 
2025-01-10T13:23:47.7978341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7978345Z 
2025-01-10T13:23:47.7978517Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.7978521Z 
2025-01-10T13:23:47.7978748Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c95c10>
2025-01-10T13:23:47.7978912Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>
2025-01-10T13:23:47.7978994Z attr = 'lines'
2025-01-10T13:23:47.7978998Z 
2025-01-10T13:23:47.7979138Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7979261Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7979351Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7979428Z         try:
2025-01-10T13:23:47.7979581Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7979663Z         except KeyError:
2025-01-10T13:23:47.7979806Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7979876Z     
2025-01-10T13:23:47.7979969Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7980064Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7980159Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7980294Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7980385Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7980477Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7980592Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7980666Z             else:
2025-01-10T13:23:47.7980766Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.7980879Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.7980890Z 
2025-01-10T13:23:47.7981017Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.7981135Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7981283Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.7981359Z     ???
2025-01-10T13:23:47.7981469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7981473Z 
2025-01-10T13:23:47.7981550Z >   ???
2025-01-10T13:23:47.7981677Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.7981754Z E   
2025-01-10T13:23:47.7981884Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.7982002Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7982079Z E          ...
2025-01-10T13:23:47.7982169Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7982301Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7982530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.7982607Z E          ...
2025-01-10T13:23:47.7982694Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.7982822Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.7982927Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.7982932Z 
2025-01-10T13:23:47.7983166Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.7983458Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-01-10T13:23:47.7983463Z 
2025-01-10T13:23:47.7983692Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c95cd0>
2025-01-10T13:23:47.7983862Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>
2025-01-10T13:23:47.7983950Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.7983954Z 
2025-01-10T13:23:47.7984094Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7984335Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7984431Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7984502Z         try:
2025-01-10T13:23:47.7984654Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7984736Z         except KeyError:
2025-01-10T13:23:47.7984876Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7984946Z     
2025-01-10T13:23:47.7985038Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7985132Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7985228Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7985367Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7985453Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7985547Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7985656Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7985665Z 
2025-01-10T13:23:47.7985797Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7985910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7985913Z 
2025-01-10T13:23:47.7986055Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7986139Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7986252Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7986333Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7986479Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.7986566Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.7986669Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7986752Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.7986829Z err_msg = None
2025-01-10T13:23:47.7986836Z 
2025-01-10T13:23:47.7986955Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7987036Z         if err_msg is None:
2025-01-10T13:23:47.7987134Z             if left.shape != right.shape:
2025-01-10T13:23:47.7987217Z                 raise_assert_detail(
2025-01-10T13:23:47.7987365Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7987438Z                 )
2025-01-10T13:23:47.7987518Z     
2025-01-10T13:23:47.7987592Z             diff = 0
2025-01-10T13:23:47.7987707Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7987798Z                 # count up differences
2025-01-10T13:23:47.7987968Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7988054Z                     diff += 1
2025-01-10T13:23:47.7988125Z     
2025-01-10T13:23:47.7988218Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7988360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7988658Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7988763Z E           AssertionError: Series are different
2025-01-10T13:23:47.7988842Z E           
2025-01-10T13:23:47.7988945Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.7989323Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7989723Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7990221Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.7990240Z 
2025-01-10T13:23:47.7990773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7991256Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-01-10T13:23:47.7991264Z 
2025-01-10T13:23:47.7991547Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c95d90>
2025-01-10T13:23:47.7991730Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>
2025-01-10T13:23:47.7991823Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.7991827Z 
2025-01-10T13:23:47.7991972Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.7992090Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.7992175Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.7992252Z         try:
2025-01-10T13:23:47.7992394Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.7992479Z         except KeyError:
2025-01-10T13:23:47.7992617Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.7992690Z     
2025-01-10T13:23:47.7992780Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.7992878Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.7992966Z             if attr == "selected_atoms":
2025-01-10T13:23:47.7993241Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.7993339Z             elif actual.ndim == 1:
2025-01-10T13:23:47.7993435Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.7993545Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.7993553Z 
2025-01-10T13:23:47.7993678Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.7993794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.7993798Z 
2025-01-10T13:23:47.7993935Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7994024Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7994132Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7994216Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7994353Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.7994441Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.7994695Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.7994780Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.7994859Z err_msg = None
2025-01-10T13:23:47.7994863Z 
2025-01-10T13:23:47.7994972Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7995057Z         if err_msg is None:
2025-01-10T13:23:47.7995151Z             if left.shape != right.shape:
2025-01-10T13:23:47.7995240Z                 raise_assert_detail(
2025-01-10T13:23:47.7995379Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.7995454Z                 )
2025-01-10T13:23:47.7995524Z     
2025-01-10T13:23:47.7995600Z             diff = 0
2025-01-10T13:23:47.7995711Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.7995804Z                 # count up differences
2025-01-10T13:23:47.7996073Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.7996165Z                     diff += 1
2025-01-10T13:23:47.7996234Z     
2025-01-10T13:23:47.7996327Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.7996466Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.7996636Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.7996746Z E           AssertionError: Series are different
2025-01-10T13:23:47.7996823Z E           
2025-01-10T13:23:47.7996932Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.7997300Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.7997675Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7998047Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.7998052Z 
2025-01-10T13:23:47.7998364Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.7998585Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-01-10T13:23:47.7998589Z 
2025-01-10T13:23:47.7998726Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7998854Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7998956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7999091Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.7999217Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.7999313Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.7999395Z err_msg = None
2025-01-10T13:23:47.7999399Z 
2025-01-10T13:23:47.7999508Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.7999685Z         if err_msg is None:
2025-01-10T13:23:47.7999785Z             if left.shape != right.shape:
2025-01-10T13:23:47.7999871Z                 raise_assert_detail(
2025-01-10T13:23:47.8000020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8000091Z                 )
2025-01-10T13:23:47.8000164Z     
2025-01-10T13:23:47.8000237Z             diff = 0
2025-01-10T13:23:47.8000350Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8000436Z                 # count up differences
2025-01-10T13:23:47.8000608Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8000686Z                     diff += 1
2025-01-10T13:23:47.8000762Z     
2025-01-10T13:23:47.8000850Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8000988Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8001254Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8001380Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8001457Z E           
2025-01-10T13:23:47.8001607Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8001870Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8002128Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8002141Z 
2025-01-10T13:23:47.8002447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8002451Z 
2025-01-10T13:23:47.8002624Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8002628Z 
2025-01-10T13:23:47.8002849Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c96000>
2025-01-10T13:23:47.8003148Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>, attr = 'nu'
2025-01-10T13:23:47.8003153Z 
2025-01-10T13:23:47.8003293Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8003412Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8003497Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8003574Z         try:
2025-01-10T13:23:47.8003718Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8003799Z         except KeyError:
2025-01-10T13:23:47.8003946Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8004020Z     
2025-01-10T13:23:47.8004109Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8004202Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8004292Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8004427Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8004517Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8004607Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8004723Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8004728Z 
2025-01-10T13:23:47.8004854Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8004970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8005120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8005193Z     ???
2025-01-10T13:23:47.8005309Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8005453Z 
2025-01-10T13:23:47.8005526Z >   ???
2025-01-10T13:23:47.8005659Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8005729Z E   
2025-01-10T13:23:47.8005862Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8005974Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8006052Z E          ...
2025-01-10T13:23:47.8006141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8006278Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8006390Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8006466Z E          ...
2025-01-10T13:23:47.8006557Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8006682Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8006791Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8006803Z 
2025-01-10T13:23:47.8007000Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8007261Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-01-10T13:23:47.8007266Z 
2025-01-10T13:23:47.8007394Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8007525Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8007622Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8007760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8007887Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8007982Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8008084Z err_msg = None
2025-01-10T13:23:47.8008090Z 
2025-01-10T13:23:47.8008288Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8008454Z         if err_msg is None:
2025-01-10T13:23:47.8008613Z             if left.shape != right.shape:
2025-01-10T13:23:47.8008760Z                 raise_assert_detail(
2025-01-10T13:23:47.8008998Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8009122Z                 )
2025-01-10T13:23:47.8009237Z     
2025-01-10T13:23:47.8009361Z             diff = 0
2025-01-10T13:23:47.8009550Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8009670Z                 # count up differences
2025-01-10T13:23:47.8009850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8009931Z                     diff += 1
2025-01-10T13:23:47.8010004Z     
2025-01-10T13:23:47.8010096Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8010239Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8010416Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8010543Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8010617Z E           
2025-01-10T13:23:47.8010733Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8010990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8011250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8011381Z 
2025-01-10T13:23:47.8011704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8011709Z 
2025-01-10T13:23:47.8011879Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8011884Z 
2025-01-10T13:23:47.8012115Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c960f0>
2025-01-10T13:23:47.8012285Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>
2025-01-10T13:23:47.8012367Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8012372Z 
2025-01-10T13:23:47.8012515Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8012630Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8012722Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8012794Z         try:
2025-01-10T13:23:47.8012944Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8013153Z         except KeyError:
2025-01-10T13:23:47.8013436Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8013509Z     
2025-01-10T13:23:47.8013605Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8013701Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8013795Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8013933Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8014025Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8014120Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8014231Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8014235Z 
2025-01-10T13:23:47.8014371Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8014487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8014639Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8014711Z     ???
2025-01-10T13:23:47.8014830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8014839Z 
2025-01-10T13:23:47.8014911Z >   ???
2025-01-10T13:23:47.8015045Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8015115Z E   
2025-01-10T13:23:47.8015247Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8015365Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8015439Z E          ...
2025-01-10T13:23:47.8015532Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8015664Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8015779Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8015852Z E          ...
2025-01-10T13:23:47.8015944Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8016070Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8016181Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8016192Z 
2025-01-10T13:23:47.8016282Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8016500Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-01-10T13:23:47.8016504Z 
2025-01-10T13:23:47.8016635Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8016766Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8016868Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8017001Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8017127Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8017222Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8017304Z err_msg = None
2025-01-10T13:23:47.8017308Z 
2025-01-10T13:23:47.8017426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8017631Z         if err_msg is None:
2025-01-10T13:23:47.8017727Z             if left.shape != right.shape:
2025-01-10T13:23:47.8017815Z                 raise_assert_detail(
2025-01-10T13:23:47.8017963Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8018035Z                 )
2025-01-10T13:23:47.8018107Z     
2025-01-10T13:23:47.8018179Z             diff = 0
2025-01-10T13:23:47.8018296Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8018385Z                 # count up differences
2025-01-10T13:23:47.8018557Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8018634Z                     diff += 1
2025-01-10T13:23:47.8018714Z     
2025-01-10T13:23:47.8018804Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8018947Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8019200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8019326Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8019398Z E           
2025-01-10T13:23:47.8019516Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8019779Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8020035Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8020047Z 
2025-01-10T13:23:47.8020360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8020364Z 
2025-01-10T13:23:47.8020538Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8020542Z 
2025-01-10T13:23:47.8020767Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c961b0>
2025-01-10T13:23:47.8020972Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>, attr = 'f_lu'
2025-01-10T13:23:47.8020977Z 
2025-01-10T13:23:47.8021115Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8021237Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8021322Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8021400Z         try:
2025-01-10T13:23:47.8021542Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8021633Z         except KeyError:
2025-01-10T13:23:47.8021785Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8021856Z     
2025-01-10T13:23:47.8021948Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8022042Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8022138Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8022270Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8022363Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8022455Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8022570Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8022575Z 
2025-01-10T13:23:47.8022702Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8022819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8022965Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8023145Z     ???
2025-01-10T13:23:47.8023270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8023394Z 
2025-01-10T13:23:47.8023469Z >   ???
2025-01-10T13:23:47.8023601Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8023673Z E   
2025-01-10T13:23:47.8023806Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8023919Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8023996Z E          ...
2025-01-10T13:23:47.8024084Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8024219Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8024333Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8024411Z E          ...
2025-01-10T13:23:47.8024501Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8024632Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8024744Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8024879Z 
2025-01-10T13:23:47.8024975Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8025227Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-01-10T13:23:47.8025232Z 
2025-01-10T13:23:47.8025360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8025493Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8025593Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8025731Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8025854Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8025956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8026039Z err_msg = None
2025-01-10T13:23:47.8026043Z 
2025-01-10T13:23:47.8026160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8026319Z         if err_msg is None:
2025-01-10T13:23:47.8026484Z             if left.shape != right.shape:
2025-01-10T13:23:47.8026633Z                 raise_assert_detail(
2025-01-10T13:23:47.8026875Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8026999Z                 )
2025-01-10T13:23:47.8027114Z     
2025-01-10T13:23:47.8027240Z             diff = 0
2025-01-10T13:23:47.8027422Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8027570Z                 # count up differences
2025-01-10T13:23:47.8027831Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8027921Z                     diff += 1
2025-01-10T13:23:47.8027993Z     
2025-01-10T13:23:47.8028087Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8028230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8028409Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8028528Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8028602Z E           
2025-01-10T13:23:47.8028719Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8028977Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8029237Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8029340Z 
2025-01-10T13:23:47.8029657Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8029661Z 
2025-01-10T13:23:47.8029830Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8029835Z 
2025-01-10T13:23:47.8030062Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c96930>
2025-01-10T13:23:47.8030229Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>
2025-01-10T13:23:47.8030315Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8030319Z 
2025-01-10T13:23:47.8030464Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8030582Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8030673Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8030746Z         try:
2025-01-10T13:23:47.8030892Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8030975Z         except KeyError:
2025-01-10T13:23:47.8031200Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8031275Z     
2025-01-10T13:23:47.8031367Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8031462Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8031557Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8031690Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8031783Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8031873Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8031989Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8032068Z             else:
2025-01-10T13:23:47.8032164Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8032277Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8032282Z 
2025-01-10T13:23:47.8032409Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8032533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8032683Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8032760Z     ???
2025-01-10T13:23:47.8032873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8032878Z 
2025-01-10T13:23:47.8032956Z >   ???
2025-01-10T13:23:47.8033217Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8033296Z E   
2025-01-10T13:23:47.8033426Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8033548Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8033627Z E          ...
2025-01-10T13:23:47.8033716Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8033850Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8033963Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8034041Z E          ...
2025-01-10T13:23:47.8034137Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8034268Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8034375Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8034379Z 
2025-01-10T13:23:47.8034476Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8034718Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-01-10T13:23:47.8034729Z 
2025-01-10T13:23:47.8034856Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8034989Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8035086Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8035223Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8035349Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8035575Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8035653Z err_msg = None
2025-01-10T13:23:47.8035657Z 
2025-01-10T13:23:47.8035774Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8035855Z         if err_msg is None:
2025-01-10T13:23:47.8035956Z             if left.shape != right.shape:
2025-01-10T13:23:47.8036046Z                 raise_assert_detail(
2025-01-10T13:23:47.8036191Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8036267Z                 )
2025-01-10T13:23:47.8036335Z     
2025-01-10T13:23:47.8036412Z             diff = 0
2025-01-10T13:23:47.8036526Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8036620Z                 # count up differences
2025-01-10T13:23:47.8036791Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8036874Z                     diff += 1
2025-01-10T13:23:47.8037056Z     
2025-01-10T13:23:47.8037154Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8037291Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8037468Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8037582Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8037661Z E           
2025-01-10T13:23:47.8037781Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8038037Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8038531Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8038541Z 
2025-01-10T13:23:47.8038852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8038856Z 
2025-01-10T13:23:47.8039027Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8039031Z 
2025-01-10T13:23:47.8039258Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c969f0>
2025-01-10T13:23:47.8039426Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>
2025-01-10T13:23:47.8039511Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8039516Z 
2025-01-10T13:23:47.8039653Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8039780Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8039871Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8039950Z         try:
2025-01-10T13:23:47.8040096Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8040180Z         except KeyError:
2025-01-10T13:23:47.8040323Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8040396Z     
2025-01-10T13:23:47.8040487Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8040583Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8040678Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8040812Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8040904Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8040994Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8041109Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8041183Z             else:
2025-01-10T13:23:47.8041282Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8041486Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8041496Z 
2025-01-10T13:23:47.8041621Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8041740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8041888Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8041965Z     ???
2025-01-10T13:23:47.8042075Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8042079Z 
2025-01-10T13:23:47.8042156Z >   ???
2025-01-10T13:23:47.8042283Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8042359Z E   
2025-01-10T13:23:47.8042486Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8042604Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8042677Z E          ...
2025-01-10T13:23:47.8042771Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8042980Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8043210Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8043289Z E          ...
2025-01-10T13:23:47.8043379Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8043509Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8043616Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8043620Z 
2025-01-10T13:23:47.8043713Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8043942Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-01-10T13:23:47.8043946Z 
2025-01-10T13:23:47.8044078Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8044205Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8044318Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8044459Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8044583Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8044682Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8044759Z err_msg = None
2025-01-10T13:23:47.8044763Z 
2025-01-10T13:23:47.8044895Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8045048Z         if err_msg is None:
2025-01-10T13:23:47.8045214Z             if left.shape != right.shape:
2025-01-10T13:23:47.8045352Z                 raise_assert_detail(
2025-01-10T13:23:47.8045598Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8045723Z                 )
2025-01-10T13:23:47.8045850Z     
2025-01-10T13:23:47.8045979Z             diff = 0
2025-01-10T13:23:47.8046174Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8046345Z                 # count up differences
2025-01-10T13:23:47.8046631Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8046765Z                     diff += 1
2025-01-10T13:23:47.8046883Z     
2025-01-10T13:23:47.8047036Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8047260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8047555Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8047739Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8047865Z E           
2025-01-10T13:23:47.8048049Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8048511Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8049152Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8049160Z 
2025-01-10T13:23:47.8049561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8049566Z 
2025-01-10T13:23:47.8049740Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8049744Z 
2025-01-10T13:23:47.8049975Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c96b70>
2025-01-10T13:23:47.8050144Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59176a50>
2025-01-10T13:23:47.8050369Z attr = 'j_blues'
2025-01-10T13:23:47.8050374Z 
2025-01-10T13:23:47.8050518Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8050640Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8050724Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8050801Z         try:
2025-01-10T13:23:47.8050940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8051029Z         except KeyError:
2025-01-10T13:23:47.8051167Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8051243Z     
2025-01-10T13:23:47.8051332Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8051431Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8051528Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8051662Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8051755Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8051851Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8051972Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8052045Z             else:
2025-01-10T13:23:47.8052145Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8052252Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8052256Z 
2025-01-10T13:23:47.8052389Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8052504Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8052654Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8052727Z     ???
2025-01-10T13:23:47.8052841Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8052845Z 
2025-01-10T13:23:47.8052920Z >   ???
2025-01-10T13:23:47.8053175Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8053253Z E   
2025-01-10T13:23:47.8053387Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8053507Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8053581Z E          ...
2025-01-10T13:23:47.8053674Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8053804Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8053921Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8053994Z E          ...
2025-01-10T13:23:47.8054087Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8054214Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8054324Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8054328Z 
2025-01-10T13:23:47.8054424Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8054634Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-01-10T13:23:47.8054638Z 
2025-01-10T13:23:47.8054773Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8055027Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8055129Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8055260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8055386Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8055481Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8055563Z err_msg = None
2025-01-10T13:23:47.8055567Z 
2025-01-10T13:23:47.8055679Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8055761Z         if err_msg is None:
2025-01-10T13:23:47.8055858Z             if left.shape != right.shape:
2025-01-10T13:23:47.8055943Z                 raise_assert_detail(
2025-01-10T13:23:47.8056194Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8056275Z                 )
2025-01-10T13:23:47.8056349Z     
2025-01-10T13:23:47.8056423Z             diff = 0
2025-01-10T13:23:47.8056538Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8056626Z                 # count up differences
2025-01-10T13:23:47.8056799Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8056878Z                     diff += 1
2025-01-10T13:23:47.8056953Z     
2025-01-10T13:23:47.8057046Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8057182Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8057356Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8057471Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8057549Z E           
2025-01-10T13:23:47.8057660Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8057930Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8058186Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8058194Z 
2025-01-10T13:23:47.8058495Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8058499Z 
2025-01-10T13:23:47.8058672Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8058680Z 
2025-01-10T13:23:47.8058907Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c97950>
2025-01-10T13:23:47.8059079Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34aa24b0>
2025-01-10T13:23:47.8059157Z attr = 'lines'
2025-01-10T13:23:47.8059161Z 
2025-01-10T13:23:47.8059302Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8059423Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8059508Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8059587Z         try:
2025-01-10T13:23:47.8059725Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8059811Z         except KeyError:
2025-01-10T13:23:47.8059951Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8060029Z     
2025-01-10T13:23:47.8060117Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8060218Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8060308Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8060565Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8060652Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8060747Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8060857Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8060935Z             else:
2025-01-10T13:23:47.8061039Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8061146Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8061150Z 
2025-01-10T13:23:47.8061280Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8061392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8061539Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8061614Z     ???
2025-01-10T13:23:47.8061728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8061736Z 
2025-01-10T13:23:47.8061891Z >   ???
2025-01-10T13:23:47.8062027Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8062136Z E   
2025-01-10T13:23:47.8062374Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8062566Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8062686Z E          ...
2025-01-10T13:23:47.8062834Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8063186Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8063383Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8063509Z E          ...
2025-01-10T13:23:47.8063605Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8063732Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8063841Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8063846Z 
2025-01-10T13:23:47.8063935Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8064201Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-01-10T13:23:47.8064206Z 
2025-01-10T13:23:47.8064430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c97a10>
2025-01-10T13:23:47.8064596Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34aa24b0>
2025-01-10T13:23:47.8064690Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8064695Z 
2025-01-10T13:23:47.8064830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8064951Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8065036Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8065115Z         try:
2025-01-10T13:23:47.8065254Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8065341Z         except KeyError:
2025-01-10T13:23:47.8065477Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8065555Z     
2025-01-10T13:23:47.8065650Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8065749Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8065843Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8065974Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8066064Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8066157Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8066273Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8066277Z 
2025-01-10T13:23:47.8066403Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8066521Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8066525Z 
2025-01-10T13:23:47.8066662Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8066757Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8066871Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8067105Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8067250Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8067333Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8067444Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8067524Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8067606Z err_msg = None
2025-01-10T13:23:47.8067610Z 
2025-01-10T13:23:47.8067719Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8067806Z         if err_msg is None:
2025-01-10T13:23:47.8067903Z             if left.shape != right.shape:
2025-01-10T13:23:47.8067992Z                 raise_assert_detail(
2025-01-10T13:23:47.8068134Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8068214Z                 )
2025-01-10T13:23:47.8068284Z     
2025-01-10T13:23:47.8068476Z             diff = 0
2025-01-10T13:23:47.8068595Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8068682Z                 # count up differences
2025-01-10T13:23:47.8068856Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8068934Z                     diff += 1
2025-01-10T13:23:47.8069007Z     
2025-01-10T13:23:47.8069095Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8069235Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8069414Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8069525Z E           AssertionError: Series are different
2025-01-10T13:23:47.8069598Z E           
2025-01-10T13:23:47.8069707Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8070087Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8070419Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8070756Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8070763Z 
2025-01-10T13:23:47.8071076Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8071320Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-01-10T13:23:47.8071325Z 
2025-01-10T13:23:47.8071550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c97ad0>
2025-01-10T13:23:47.8071717Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34aa24b0>
2025-01-10T13:23:47.8071816Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8071820Z 
2025-01-10T13:23:47.8071959Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8072080Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8072169Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8072243Z         try:
2025-01-10T13:23:47.8072509Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8072591Z         except KeyError:
2025-01-10T13:23:47.8072735Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8072806Z     
2025-01-10T13:23:47.8072899Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8072993Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8073224Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8073361Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8073453Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8073544Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8073660Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8073665Z 
2025-01-10T13:23:47.8073789Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8073907Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8073915Z 
2025-01-10T13:23:47.8074171Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8074261Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8074375Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8074456Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8074604Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8074689Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8074801Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8074880Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8074964Z err_msg = None
2025-01-10T13:23:47.8074968Z 
2025-01-10T13:23:47.8075088Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8075170Z         if err_msg is None:
2025-01-10T13:23:47.8075268Z             if left.shape != right.shape:
2025-01-10T13:23:47.8075363Z                 raise_assert_detail(
2025-01-10T13:23:47.8075508Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8075583Z                 )
2025-01-10T13:23:47.8075660Z     
2025-01-10T13:23:47.8075734Z             diff = 0
2025-01-10T13:23:47.8075855Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8075944Z                 # count up differences
2025-01-10T13:23:47.8076118Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8076197Z                     diff += 1
2025-01-10T13:23:47.8076276Z     
2025-01-10T13:23:47.8076364Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8076504Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8076678Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8076782Z E           AssertionError: Series are different
2025-01-10T13:23:47.8076867Z E           
2025-01-10T13:23:47.8076970Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8077340Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8077707Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8078220Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8078226Z 
2025-01-10T13:23:47.8078533Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8078732Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-01-10T13:23:47.8078741Z 
2025-01-10T13:23:47.8078868Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8079000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8079180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8079319Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8079446Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8079547Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8079624Z err_msg = None
2025-01-10T13:23:47.8079628Z 
2025-01-10T13:23:47.8079741Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8079822Z         if err_msg is None:
2025-01-10T13:23:47.8079921Z             if left.shape != right.shape:
2025-01-10T13:23:47.8080011Z                 raise_assert_detail(
2025-01-10T13:23:47.8080151Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8080227Z                 )
2025-01-10T13:23:47.8080356Z     
2025-01-10T13:23:47.8080498Z             diff = 0
2025-01-10T13:23:47.8080700Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8080856Z                 # count up differences
2025-01-10T13:23:47.8081137Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8081271Z                     diff += 1
2025-01-10T13:23:47.8081390Z     
2025-01-10T13:23:47.8081547Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8081703Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8081878Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8081991Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8082069Z E           
2025-01-10T13:23:47.8082189Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8082451Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8082717Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8082722Z 
2025-01-10T13:23:47.8083131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8083142Z 
2025-01-10T13:23:47.8083316Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8083320Z 
2025-01-10T13:23:47.8083553Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c97d10>
2025-01-10T13:23:47.8083758Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34aa24b0>, attr = 'nu'
2025-01-10T13:23:47.8083903Z 
2025-01-10T13:23:47.8084060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8084180Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8084271Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8084344Z         try:
2025-01-10T13:23:47.8084489Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8084571Z         except KeyError:
2025-01-10T13:23:47.8084715Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8084793Z     
2025-01-10T13:23:47.8084881Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8084984Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8085074Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8085212Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8085300Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8085398Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8085624Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8085630Z 
2025-01-10T13:23:47.8085765Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8085878Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8086035Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8086107Z     ???
2025-01-10T13:23:47.8086221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8086225Z 
2025-01-10T13:23:47.8086300Z >   ???
2025-01-10T13:23:47.8086428Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8086505Z E   
2025-01-10T13:23:47.8086636Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8086755Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8086829Z E          ...
2025-01-10T13:23:47.8086926Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8087062Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8087180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8087254Z E          ...
2025-01-10T13:23:47.8087346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8087477Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8087588Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8087592Z 
2025-01-10T13:23:47.8087686Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8087905Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-01-10T13:23:47.8087909Z 
2025-01-10T13:23:47.8088044Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8088173Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8088285Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8088415Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8088546Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8088646Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8088723Z err_msg = None
2025-01-10T13:23:47.8088727Z 
2025-01-10T13:23:47.8088841Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8088923Z         if err_msg is None:
2025-01-10T13:23:47.8089023Z             if left.shape != right.shape:
2025-01-10T13:23:47.8089107Z                 raise_assert_detail(
2025-01-10T13:23:47.8089255Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8089328Z                 )
2025-01-10T13:23:47.8089400Z     
2025-01-10T13:23:47.8089475Z             diff = 0
2025-01-10T13:23:47.8089595Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8089778Z                 # count up differences
2025-01-10T13:23:47.8089956Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8090034Z                     diff += 1
2025-01-10T13:23:47.8090112Z     
2025-01-10T13:23:47.8090205Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8090338Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8090512Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8090625Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8090703Z E           
2025-01-10T13:23:47.8090815Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8091158Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8091431Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8091436Z 
2025-01-10T13:23:47.8091738Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8091742Z 
2025-01-10T13:23:47.8091918Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8091922Z 
2025-01-10T13:23:47.8092146Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c97dd0>
2025-01-10T13:23:47.8092319Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34aa24b0>
2025-01-10T13:23:47.8092407Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8092412Z 
2025-01-10T13:23:47.8092555Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8092673Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8092759Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8092836Z         try:
2025-01-10T13:23:47.8092975Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8093161Z         except KeyError:
2025-01-10T13:23:47.8093301Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8093376Z     
2025-01-10T13:23:47.8093463Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8093562Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8093652Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8093787Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8093877Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8093983Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8094094Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8094104Z 
2025-01-10T13:23:47.8094229Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8094345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8094492Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8094569Z     ???
2025-01-10T13:23:47.8094678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8094681Z 
2025-01-10T13:23:47.8094758Z >   ???
2025-01-10T13:23:47.8094883Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8094959Z E   
2025-01-10T13:23:47.8095086Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8095202Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8095276Z E          ...
2025-01-10T13:23:47.8095524Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8095663Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8095776Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8095855Z E          ...
2025-01-10T13:23:47.8095943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8096073Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8096178Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8096183Z 
2025-01-10T13:23:47.8096276Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8096480Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-01-10T13:23:47.8096484Z 
2025-01-10T13:23:47.8096619Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8096753Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8096960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8097100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8097224Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8097325Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8097401Z err_msg = None
2025-01-10T13:23:47.8097406Z 
2025-01-10T13:23:47.8097521Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8097604Z         if err_msg is None:
2025-01-10T13:23:47.8097706Z             if left.shape != right.shape:
2025-01-10T13:23:47.8097790Z                 raise_assert_detail(
2025-01-10T13:23:47.8097935Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8098007Z                 )
2025-01-10T13:23:47.8098083Z     
2025-01-10T13:23:47.8098166Z             diff = 0
2025-01-10T13:23:47.8098286Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8098379Z                 # count up differences
2025-01-10T13:23:47.8098547Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8098630Z                     diff += 1
2025-01-10T13:23:47.8098701Z     
2025-01-10T13:23:47.8098795Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8098932Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8099188Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8099374Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8099501Z E           
2025-01-10T13:23:47.8099682Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8100147Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8100423Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8100429Z 
2025-01-10T13:23:47.8100728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8100732Z 
2025-01-10T13:23:47.8100905Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8100909Z 
2025-01-10T13:23:47.8101136Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61c97e90>
2025-01-10T13:23:47.8101341Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34aa24b0>, attr = 'f_lu'
2025-01-10T13:23:47.8101456Z 
2025-01-10T13:23:47.8101633Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8101749Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8101839Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8101912Z         try:
2025-01-10T13:23:47.8102057Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8102139Z         except KeyError:
2025-01-10T13:23:47.8102280Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8102351Z     
2025-01-10T13:23:47.8102443Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8102543Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8102637Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8102778Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8102866Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8103189Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8103310Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8103315Z 
2025-01-10T13:23:47.8103444Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8103558Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8103709Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8103780Z     ???
2025-01-10T13:23:47.8103894Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8103898Z 
2025-01-10T13:23:47.8103974Z >   ???
2025-01-10T13:23:47.8104101Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8104175Z E   
2025-01-10T13:23:47.8104302Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8104420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8104494Z E          ...
2025-01-10T13:23:47.8104598Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8104727Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8104844Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8104917Z E          ...
2025-01-10T13:23:47.8105008Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8105133Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8105240Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8105244Z 
2025-01-10T13:23:47.8105337Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8105549Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-01-10T13:23:47.8105554Z 
2025-01-10T13:23:47.8105684Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8105809Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8105917Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8106048Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8106183Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8106279Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8106365Z err_msg = None
2025-01-10T13:23:47.8106369Z 
2025-01-10T13:23:47.8106483Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8106566Z         if err_msg is None:
2025-01-10T13:23:47.8106666Z             if left.shape != right.shape:
2025-01-10T13:23:47.8106751Z                 raise_assert_detail(
2025-01-10T13:23:47.8106902Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8106978Z                 )
2025-01-10T13:23:47.8107055Z     
2025-01-10T13:23:47.8107131Z             diff = 0
2025-01-10T13:23:47.8107408Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8107500Z                 # count up differences
2025-01-10T13:23:47.8107679Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8107761Z                     diff += 1
2025-01-10T13:23:47.8107838Z     
2025-01-10T13:23:47.8107932Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8108078Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8108257Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8108372Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8108451Z E           
2025-01-10T13:23:47.8108563Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8108917Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8109186Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8109197Z 
2025-01-10T13:23:47.8109501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8109505Z 
2025-01-10T13:23:47.8109685Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8109689Z 
2025-01-10T13:23:47.8109912Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b54650>
2025-01-10T13:23:47.8110088Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34aa24b0>
2025-01-10T13:23:47.8110177Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8110182Z 
2025-01-10T13:23:47.8110326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8110445Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8117350Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8117457Z         try:
2025-01-10T13:23:47.8117633Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8117723Z         except KeyError:
2025-01-10T13:23:47.8117878Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8117951Z     
2025-01-10T13:23:47.8118054Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8118230Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8118392Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8118616Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8118764Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8118933Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8119135Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8119247Z             else:
2025-01-10T13:23:47.8119355Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8119467Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8119473Z 
2025-01-10T13:23:47.8119612Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8119736Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8119891Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8119970Z     ???
2025-01-10T13:23:47.8120081Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8120086Z 
2025-01-10T13:23:47.8120162Z >   ???
2025-01-10T13:23:47.8120291Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8120367Z E   
2025-01-10T13:23:47.8120691Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8120813Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8120889Z E          ...
2025-01-10T13:23:47.8120987Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8121119Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8121241Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8121319Z E          ...
2025-01-10T13:23:47.8121408Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8121539Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8121651Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8121656Z 
2025-01-10T13:23:47.8121756Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8121967Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-01-10T13:23:47.8121972Z 
2025-01-10T13:23:47.8122239Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8122380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8122486Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8122625Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8122756Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8122855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8122933Z err_msg = None
2025-01-10T13:23:47.8122938Z 
2025-01-10T13:23:47.8123185Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8123275Z         if err_msg is None:
2025-01-10T13:23:47.8123379Z             if left.shape != right.shape:
2025-01-10T13:23:47.8123465Z                 raise_assert_detail(
2025-01-10T13:23:47.8123625Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8123707Z                 )
2025-01-10T13:23:47.8123783Z     
2025-01-10T13:23:47.8123857Z             diff = 0
2025-01-10T13:23:47.8123976Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8124068Z                 # count up differences
2025-01-10T13:23:47.8124245Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8124331Z                     diff += 1
2025-01-10T13:23:47.8124403Z     
2025-01-10T13:23:47.8124502Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8124639Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8124818Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8124931Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8125010Z E           
2025-01-10T13:23:47.8125125Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8125390Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8125649Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8125655Z 
2025-01-10T13:23:47.8125977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8125981Z 
2025-01-10T13:23:47.8126166Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8126326Z 
2025-01-10T13:23:47.8126559Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b54890>
2025-01-10T13:23:47.8126734Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef34aa24b0>
2025-01-10T13:23:47.8126816Z attr = 'j_blues'
2025-01-10T13:23:47.8126821Z 
2025-01-10T13:23:47.8126964Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8127089Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8127175Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8127253Z         try:
2025-01-10T13:23:47.8127397Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8127485Z         except KeyError:
2025-01-10T13:23:47.8127626Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8127703Z     
2025-01-10T13:23:47.8127792Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8127893Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8128093Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8128237Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8128331Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8128428Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8128547Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8128620Z             else:
2025-01-10T13:23:47.8128724Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8128832Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8128837Z 
2025-01-10T13:23:47.8128970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8129085Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8129238Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8129312Z     ???
2025-01-10T13:23:47.8129431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8129439Z 
2025-01-10T13:23:47.8129511Z >   ???
2025-01-10T13:23:47.8129646Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8129722Z E   
2025-01-10T13:23:47.8129850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8129968Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8130043Z E          ...
2025-01-10T13:23:47.8130137Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8130268Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8130385Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8130459Z E          ...
2025-01-10T13:23:47.8130550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8130674Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8130785Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8130792Z 
2025-01-10T13:23:47.8130887Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8131101Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-01-10T13:23:47.8131105Z 
2025-01-10T13:23:47.8131238Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8131371Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8131478Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8131611Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8131741Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8131834Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8131917Z err_msg = None
2025-01-10T13:23:47.8131921Z 
2025-01-10T13:23:47.8132038Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8132220Z         if err_msg is None:
2025-01-10T13:23:47.8132326Z             if left.shape != right.shape:
2025-01-10T13:23:47.8132416Z                 raise_assert_detail(
2025-01-10T13:23:47.8132570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8132641Z                 )
2025-01-10T13:23:47.8132715Z     
2025-01-10T13:23:47.8132789Z             diff = 0
2025-01-10T13:23:47.8132904Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8132997Z                 # count up differences
2025-01-10T13:23:47.8133275Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8133357Z                     diff += 1
2025-01-10T13:23:47.8133432Z     
2025-01-10T13:23:47.8133520Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8133660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8133943Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8134074Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8134147Z E           
2025-01-10T13:23:47.8134265Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8134525Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8134781Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8134786Z 
2025-01-10T13:23:47.8135106Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8135111Z 
2025-01-10T13:23:47.8135284Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8135294Z 
2025-01-10T13:23:47.8135517Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b55610>
2025-01-10T13:23:47.8135684Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>
2025-01-10T13:23:47.8135757Z attr = 'lines'
2025-01-10T13:23:47.8135761Z 
2025-01-10T13:23:47.8135902Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8136018Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8136110Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8136182Z         try:
2025-01-10T13:23:47.8136331Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8136459Z         except KeyError:
2025-01-10T13:23:47.8136710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8136833Z     
2025-01-10T13:23:47.8136981Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8137139Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8137284Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8137516Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8137610Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8137711Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8137825Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8137903Z             else:
2025-01-10T13:23:47.8137997Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8138110Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8138115Z 
2025-01-10T13:23:47.8138239Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8138356Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8138649Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8138722Z     ???
2025-01-10T13:23:47.8138836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8138840Z 
2025-01-10T13:23:47.8138911Z >   ???
2025-01-10T13:23:47.8139043Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8139113Z E   
2025-01-10T13:23:47.8139247Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8139360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8139439Z E          ...
2025-01-10T13:23:47.8139529Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8139664Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8139777Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8139856Z E          ...
2025-01-10T13:23:47.8139943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8140155Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8140270Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8140274Z 
2025-01-10T13:23:47.8140365Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8140626Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-01-10T13:23:47.8140630Z 
2025-01-10T13:23:47.8140851Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b556d0>
2025-01-10T13:23:47.8141021Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>
2025-01-10T13:23:47.8141110Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8141114Z 
2025-01-10T13:23:47.8141253Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8141367Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8141459Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8141537Z         try:
2025-01-10T13:23:47.8141686Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8141775Z         except KeyError:
2025-01-10T13:23:47.8141913Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8141989Z     
2025-01-10T13:23:47.8142077Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8142177Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8142268Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8142408Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8142493Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8142588Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8142696Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8142700Z 
2025-01-10T13:23:47.8142828Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8142944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8142951Z 
2025-01-10T13:23:47.8143267Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8143360Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8143468Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8143554Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8143692Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8143780Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8143884Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8143968Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8144046Z err_msg = None
2025-01-10T13:23:47.8144054Z 
2025-01-10T13:23:47.8144166Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8144252Z         if err_msg is None:
2025-01-10T13:23:47.8144347Z             if left.shape != right.shape:
2025-01-10T13:23:47.8144567Z                 raise_assert_detail(
2025-01-10T13:23:47.8144711Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8144790Z                 )
2025-01-10T13:23:47.8144860Z     
2025-01-10T13:23:47.8144938Z             diff = 0
2025-01-10T13:23:47.8145048Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8145142Z                 # count up differences
2025-01-10T13:23:47.8145311Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8145395Z                     diff += 1
2025-01-10T13:23:47.8145465Z     
2025-01-10T13:23:47.8145555Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8145696Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8145864Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8145974Z E           AssertionError: Series are different
2025-01-10T13:23:47.8146179Z E           
2025-01-10T13:23:47.8146291Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8146660Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8146991Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8147326Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8147331Z 
2025-01-10T13:23:47.8147639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8147901Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-01-10T13:23:47.8147905Z 
2025-01-10T13:23:47.8148134Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b55790>
2025-01-10T13:23:47.8148301Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>
2025-01-10T13:23:47.8148399Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8148403Z 
2025-01-10T13:23:47.8148547Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8148666Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8148751Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8148829Z         try:
2025-01-10T13:23:47.8148971Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8149057Z         except KeyError:
2025-01-10T13:23:47.8149193Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8149269Z     
2025-01-10T13:23:47.8149355Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8149453Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8149547Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8149681Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8149771Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8149861Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8149975Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8150069Z 
2025-01-10T13:23:47.8150197Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8150315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8150319Z 
2025-01-10T13:23:47.8150452Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8150541Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8150649Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8150738Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8150881Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8150963Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8151072Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8151155Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8151240Z err_msg = None
2025-01-10T13:23:47.8151319Z 
2025-01-10T13:23:47.8151431Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8151517Z         if err_msg is None:
2025-01-10T13:23:47.8151612Z             if left.shape != right.shape:
2025-01-10T13:23:47.8151701Z                 raise_assert_detail(
2025-01-10T13:23:47.8151841Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8151919Z                 )
2025-01-10T13:23:47.8151989Z     
2025-01-10T13:23:47.8152067Z             diff = 0
2025-01-10T13:23:47.8152183Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8152270Z                 # count up differences
2025-01-10T13:23:47.8152441Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8152520Z                     diff += 1
2025-01-10T13:23:47.8152595Z     
2025-01-10T13:23:47.8152682Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8152829Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8152998Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8153227Z E           AssertionError: Series are different
2025-01-10T13:23:47.8153300Z E           
2025-01-10T13:23:47.8153404Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8153777Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8154242Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8154919Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8154927Z 
2025-01-10T13:23:47.8155354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8155559Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-01-10T13:23:47.8155695Z 
2025-01-10T13:23:47.8155838Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8155968Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8156073Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8156213Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8156334Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8156430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8156506Z err_msg = None
2025-01-10T13:23:47.8156510Z 
2025-01-10T13:23:47.8156624Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8156708Z         if err_msg is None:
2025-01-10T13:23:47.8156815Z             if left.shape != right.shape:
2025-01-10T13:23:47.8156898Z                 raise_assert_detail(
2025-01-10T13:23:47.8157168Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8157244Z                 )
2025-01-10T13:23:47.8157317Z     
2025-01-10T13:23:47.8157395Z             diff = 0
2025-01-10T13:23:47.8157510Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8157604Z                 # count up differences
2025-01-10T13:23:47.8157779Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8157861Z                     diff += 1
2025-01-10T13:23:47.8157929Z     
2025-01-10T13:23:47.8158021Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8158159Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8158331Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8158451Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8158526Z E           
2025-01-10T13:23:47.8158649Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8158913Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8159179Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8159184Z 
2025-01-10T13:23:47.8159493Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8159498Z 
2025-01-10T13:23:47.8159677Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8159684Z 
2025-01-10T13:23:47.8159913Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b559d0>
2025-01-10T13:23:47.8160109Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>, attr = 'nu'
2025-01-10T13:23:47.8160114Z 
2025-01-10T13:23:47.8160255Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8160372Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8160461Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8160532Z         try:
2025-01-10T13:23:47.8160677Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8160758Z         except KeyError:
2025-01-10T13:23:47.8160899Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8160968Z     
2025-01-10T13:23:47.8161058Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8161152Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8161345Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8161484Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8161571Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8161669Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8161778Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8161783Z 
2025-01-10T13:23:47.8161913Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8162025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8162179Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8162250Z     ???
2025-01-10T13:23:47.8162364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8162368Z 
2025-01-10T13:23:47.8162438Z >   ???
2025-01-10T13:23:47.8162569Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8162648Z E   
2025-01-10T13:23:47.8162853Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8162974Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8163166Z E          ...
2025-01-10T13:23:47.8163260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8163390Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8163506Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8163577Z E          ...
2025-01-10T13:23:47.8163664Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8163787Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8163896Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8163900Z 
2025-01-10T13:23:47.8163989Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8164223Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-01-10T13:23:47.8164227Z 
2025-01-10T13:23:47.8164370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8164498Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8164600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8164733Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8164859Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8164952Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8165032Z err_msg = None
2025-01-10T13:23:47.8165036Z 
2025-01-10T13:23:47.8165152Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8165236Z         if err_msg is None:
2025-01-10T13:23:47.8165339Z             if left.shape != right.shape:
2025-01-10T13:23:47.8165423Z                 raise_assert_detail(
2025-01-10T13:23:47.8165577Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8165649Z                 )
2025-01-10T13:23:47.8165722Z     
2025-01-10T13:23:47.8165794Z             diff = 0
2025-01-10T13:23:47.8165910Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8165996Z                 # count up differences
2025-01-10T13:23:47.8166169Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8166246Z                     diff += 1
2025-01-10T13:23:47.8166323Z     
2025-01-10T13:23:47.8166411Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8166552Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8166723Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8166838Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8166918Z E           
2025-01-10T13:23:47.8167179Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8167437Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8167694Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8167702Z 
2025-01-10T13:23:47.8168002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8168007Z 
2025-01-10T13:23:47.8168278Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8168288Z 
2025-01-10T13:23:47.8168513Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b55a90>
2025-01-10T13:23:47.8168682Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>
2025-01-10T13:23:47.8168763Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8168767Z 
2025-01-10T13:23:47.8168908Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8169022Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8169109Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8169186Z         try:
2025-01-10T13:23:47.8169323Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8169409Z         except KeyError:
2025-01-10T13:23:47.8169545Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8169621Z     
2025-01-10T13:23:47.8169708Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8169810Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8169905Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8170040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8170126Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8170218Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8170328Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8170333Z 
2025-01-10T13:23:47.8170461Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8170575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8170721Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8170798Z     ???
2025-01-10T13:23:47.8170906Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8170909Z 
2025-01-10T13:23:47.8170984Z >   ???
2025-01-10T13:23:47.8171110Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8171190Z E   
2025-01-10T13:23:47.8171318Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8171435Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8171509Z E          ...
2025-01-10T13:23:47.8171604Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8171733Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8171850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8171930Z E          ...
2025-01-10T13:23:47.8172022Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8172155Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8172261Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8172265Z 
2025-01-10T13:23:47.8172395Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8172760Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-01-10T13:23:47.8172880Z 
2025-01-10T13:23:47.8173231Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8173449Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8173606Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8173744Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8173871Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8173968Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8174045Z err_msg = None
2025-01-10T13:23:47.8174049Z 
2025-01-10T13:23:47.8174160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8174242Z         if err_msg is None:
2025-01-10T13:23:47.8174341Z             if left.shape != right.shape:
2025-01-10T13:23:47.8174427Z                 raise_assert_detail(
2025-01-10T13:23:47.8174705Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8174780Z                 )
2025-01-10T13:23:47.8174856Z     
2025-01-10T13:23:47.8174932Z             diff = 0
2025-01-10T13:23:47.8175052Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8175139Z                 # count up differences
2025-01-10T13:23:47.8175312Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8175395Z                     diff += 1
2025-01-10T13:23:47.8175465Z     
2025-01-10T13:23:47.8175564Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8175699Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8175874Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8175986Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8176063Z E           
2025-01-10T13:23:47.8176184Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8176444Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8176704Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8176709Z 
2025-01-10T13:23:47.8177012Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8177016Z 
2025-01-10T13:23:47.8177199Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8177203Z 
2025-01-10T13:23:47.8177431Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b55b50>
2025-01-10T13:23:47.8177638Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>, attr = 'f_lu'
2025-01-10T13:23:47.8177641Z 
2025-01-10T13:23:47.8177786Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8177901Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8177994Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8178067Z         try:
2025-01-10T13:23:47.8178214Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8178296Z         except KeyError:
2025-01-10T13:23:47.8178440Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8178514Z     
2025-01-10T13:23:47.8178606Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8178700Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8178919Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8179052Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8179142Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8179236Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8179347Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8179352Z 
2025-01-10T13:23:47.8179480Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8179592Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8179742Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8179814Z     ???
2025-01-10T13:23:47.8179926Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8179930Z 
2025-01-10T13:23:47.8180001Z >   ???
2025-01-10T13:23:47.8180131Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8180208Z E   
2025-01-10T13:23:47.8180451Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8180574Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8180647Z E          ...
2025-01-10T13:23:47.8180740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8180871Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8180989Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8181062Z E          ...
2025-01-10T13:23:47.8181152Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8181276Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8181385Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8181390Z 
2025-01-10T13:23:47.8181479Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8181704Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-01-10T13:23:47.8181713Z 
2025-01-10T13:23:47.8181850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8181978Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8182082Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8182216Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8182341Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8182434Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8182511Z err_msg = None
2025-01-10T13:23:47.8182515Z 
2025-01-10T13:23:47.8182625Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8182711Z         if err_msg is None:
2025-01-10T13:23:47.8182805Z             if left.shape != right.shape:
2025-01-10T13:23:47.8182894Z                 raise_assert_detail(
2025-01-10T13:23:47.8183179Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8183255Z                 )
2025-01-10T13:23:47.8183330Z     
2025-01-10T13:23:47.8183403Z             diff = 0
2025-01-10T13:23:47.8183519Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8183606Z                 # count up differences
2025-01-10T13:23:47.8183779Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8183857Z                     diff += 1
2025-01-10T13:23:47.8183932Z     
2025-01-10T13:23:47.8184021Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8184161Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8184332Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8184449Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8184521Z E           
2025-01-10T13:23:47.8184772Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8185032Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8185288Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8185292Z 
2025-01-10T13:23:47.8185605Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8185609Z 
2025-01-10T13:23:47.8185888Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8185893Z 
2025-01-10T13:23:47.8186119Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b562d0>
2025-01-10T13:23:47.8186292Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>
2025-01-10T13:23:47.8186373Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8186377Z 
2025-01-10T13:23:47.8186520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8186636Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8186725Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8186799Z         try:
2025-01-10T13:23:47.8186943Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8187024Z         except KeyError:
2025-01-10T13:23:47.8187168Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8187244Z     
2025-01-10T13:23:47.8187334Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8187447Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8187536Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8187673Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8187760Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8187855Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8187964Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8188041Z             else:
2025-01-10T13:23:47.8188135Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8188245Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8188249Z 
2025-01-10T13:23:47.8188374Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8188490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8188641Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8188713Z     ???
2025-01-10T13:23:47.8188835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8188839Z 
2025-01-10T13:23:47.8188909Z >   ???
2025-01-10T13:23:47.8189043Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8189113Z E   
2025-01-10T13:23:47.8189245Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8189357Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8189433Z E          ...
2025-01-10T13:23:47.8189520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8189652Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8189765Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8189841Z E          ...
2025-01-10T13:23:47.8189932Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8190054Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8190162Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8190286Z 
2025-01-10T13:23:47.8190384Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8190619Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-01-10T13:23:47.8190626Z 
2025-01-10T13:23:47.8190853Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8191070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8191227Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8191453Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8191667Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8191784Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8191865Z err_msg = None
2025-01-10T13:23:47.8191870Z 
2025-01-10T13:23:47.8192089Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8192177Z         if err_msg is None:
2025-01-10T13:23:47.8192274Z             if left.shape != right.shape:
2025-01-10T13:23:47.8192362Z                 raise_assert_detail(
2025-01-10T13:23:47.8192505Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8192584Z                 )
2025-01-10T13:23:47.8192654Z     
2025-01-10T13:23:47.8192732Z             diff = 0
2025-01-10T13:23:47.8192844Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8192936Z                 # count up differences
2025-01-10T13:23:47.8193347Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8193471Z                     diff += 1
2025-01-10T13:23:47.8193549Z     
2025-01-10T13:23:47.8193639Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8193784Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8193961Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8194078Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8194151Z E           
2025-01-10T13:23:47.8194267Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8194523Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8194786Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8194796Z 
2025-01-10T13:23:47.8195108Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8195112Z 
2025-01-10T13:23:47.8195283Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8195288Z 
2025-01-10T13:23:47.8195517Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b56390>
2025-01-10T13:23:47.8195692Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>
2025-01-10T13:23:47.8195774Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8195778Z 
2025-01-10T13:23:47.8195921Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8196038Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8196126Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8196199Z         try:
2025-01-10T13:23:47.8196342Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8196555Z         except KeyError:
2025-01-10T13:23:47.8196701Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8196771Z     
2025-01-10T13:23:47.8196860Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8196954Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8197046Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8197178Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8197268Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8197361Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8197470Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8197548Z             else:
2025-01-10T13:23:47.8197642Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8197753Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8197757Z 
2025-01-10T13:23:47.8197881Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8198110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8198265Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8198339Z     ???
2025-01-10T13:23:47.8198445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8198449Z 
2025-01-10T13:23:47.8198525Z >   ???
2025-01-10T13:23:47.8198655Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8198725Z E   
2025-01-10T13:23:47.8198857Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8198968Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8199052Z E          ...
2025-01-10T13:23:47.8199141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8199276Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8199389Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8199468Z E          ...
2025-01-10T13:23:47.8199565Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8199696Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8199800Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8199805Z 
2025-01-10T13:23:47.8199902Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8200114Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-01-10T13:23:47.8200117Z 
2025-01-10T13:23:47.8200244Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8200378Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8200476Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8200614Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8200740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8200840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8200917Z err_msg = None
2025-01-10T13:23:47.8200929Z 
2025-01-10T13:23:47.8201042Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8201132Z         if err_msg is None:
2025-01-10T13:23:47.8201228Z             if left.shape != right.shape:
2025-01-10T13:23:47.8201320Z                 raise_assert_detail(
2025-01-10T13:23:47.8201462Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8201574Z                 )
2025-01-10T13:23:47.8201645Z     
2025-01-10T13:23:47.8201724Z             diff = 0
2025-01-10T13:23:47.8201835Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8201928Z                 # count up differences
2025-01-10T13:23:47.8202096Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8202179Z                     diff += 1
2025-01-10T13:23:47.8202342Z     
2025-01-10T13:23:47.8202436Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8202572Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8202745Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8202861Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8202934Z E           
2025-01-10T13:23:47.8203192Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8203447Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8203826Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8203837Z 
2025-01-10T13:23:47.8204149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8204153Z 
2025-01-10T13:23:47.8204321Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8204326Z 
2025-01-10T13:23:47.8204551Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b56510>
2025-01-10T13:23:47.8204719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef348ccbc0>
2025-01-10T13:23:47.8204802Z attr = 'j_blues'
2025-01-10T13:23:47.8204806Z 
2025-01-10T13:23:47.8204943Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8205064Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8205163Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8205236Z         try:
2025-01-10T13:23:47.8205382Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8205465Z         except KeyError:
2025-01-10T13:23:47.8205607Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8205679Z     
2025-01-10T13:23:47.8205771Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8205865Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8205959Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8206091Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8206182Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8206273Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8206388Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8206460Z             else:
2025-01-10T13:23:47.8206560Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8206678Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8206683Z 
2025-01-10T13:23:47.8206809Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8206925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8207072Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8207148Z     ???
2025-01-10T13:23:47.8207258Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8207262Z 
2025-01-10T13:23:47.8207338Z >   ???
2025-01-10T13:23:47.8207465Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8207542Z E   
2025-01-10T13:23:47.8207670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8207789Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8207862Z E          ...
2025-01-10T13:23:47.8207957Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8208219Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8208335Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8208415Z E          ...
2025-01-10T13:23:47.8208504Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8208636Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8208742Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8208746Z 
2025-01-10T13:23:47.8208842Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8209195Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-01-10T13:23:47.8209204Z 
2025-01-10T13:23:47.8209437Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8209666Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8209770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8210036Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8210163Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8210267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8210345Z err_msg = None
2025-01-10T13:23:47.8210349Z 
2025-01-10T13:23:47.8210468Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8210551Z         if err_msg is None:
2025-01-10T13:23:47.8210652Z             if left.shape != right.shape:
2025-01-10T13:23:47.8210738Z                 raise_assert_detail(
2025-01-10T13:23:47.8210889Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8210966Z                 )
2025-01-10T13:23:47.8211035Z     
2025-01-10T13:23:47.8211116Z             diff = 0
2025-01-10T13:23:47.8211227Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8211330Z                 # count up differences
2025-01-10T13:23:47.8211504Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8211590Z                     diff += 1
2025-01-10T13:23:47.8211660Z     
2025-01-10T13:23:47.8211755Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8211894Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8212067Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8212181Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8212259Z E           
2025-01-10T13:23:47.8212371Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8212637Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8212905Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8212910Z 
2025-01-10T13:23:47.8213383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8213389Z 
2025-01-10T13:23:47.8213565Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8213570Z 
2025-01-10T13:23:47.8213798Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b57290>
2025-01-10T13:23:47.8213966Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>
2025-01-10T13:23:47.8214173Z attr = 'lines'
2025-01-10T13:23:47.8214182Z 
2025-01-10T13:23:47.8214327Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8214448Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8214534Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8214610Z         try:
2025-01-10T13:23:47.8214752Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8214838Z         except KeyError:
2025-01-10T13:23:47.8214977Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8215052Z     
2025-01-10T13:23:47.8215141Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8215241Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8215338Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8215471Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8215562Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8215653Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8215937Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8216015Z             else:
2025-01-10T13:23:47.8216118Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8216227Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8216231Z 
2025-01-10T13:23:47.8216363Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8216475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8216623Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8216699Z     ???
2025-01-10T13:23:47.8216809Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8216814Z 
2025-01-10T13:23:47.8216893Z >   ???
2025-01-10T13:23:47.8217021Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8217097Z E   
2025-01-10T13:23:47.8217225Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8217349Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8217423Z E          ...
2025-01-10T13:23:47.8217517Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8217647Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8217765Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8217838Z E          ...
2025-01-10T13:23:47.8217930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8218057Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8218161Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8218165Z 
2025-01-10T13:23:47.8218261Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8218521Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-01-10T13:23:47.8218525Z 
2025-01-10T13:23:47.8218756Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b57350>
2025-01-10T13:23:47.8218931Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>
2025-01-10T13:23:47.8219024Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8219029Z 
2025-01-10T13:23:47.8219167Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8219285Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8219375Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8219448Z         try:
2025-01-10T13:23:47.8219592Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8219675Z         except KeyError:
2025-01-10T13:23:47.8219817Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8219889Z     
2025-01-10T13:23:47.8219980Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8220076Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8220170Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8220400Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8220490Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8220580Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8220698Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8220702Z 
2025-01-10T13:23:47.8220827Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8220943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8220947Z 
2025-01-10T13:23:47.8221089Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8221178Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8221293Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8221374Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8221520Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8221684Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8221798Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8221877Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8221960Z err_msg = None
2025-01-10T13:23:47.8221963Z 
2025-01-10T13:23:47.8222079Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8222162Z         if err_msg is None:
2025-01-10T13:23:47.8222261Z             if left.shape != right.shape:
2025-01-10T13:23:47.8222349Z                 raise_assert_detail(
2025-01-10T13:23:47.8222496Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8222569Z                 )
2025-01-10T13:23:47.8222646Z     
2025-01-10T13:23:47.8222720Z             diff = 0
2025-01-10T13:23:47.8222835Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8222923Z                 # count up differences
2025-01-10T13:23:47.8223213Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8223299Z                     diff += 1
2025-01-10T13:23:47.8223374Z     
2025-01-10T13:23:47.8223462Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8223605Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8223783Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8223889Z E           AssertionError: Series are different
2025-01-10T13:23:47.8223970Z E           
2025-01-10T13:23:47.8224075Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8224451Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8224781Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8225111Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8225116Z 
2025-01-10T13:23:47.8225434Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8225820Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-01-10T13:23:47.8225824Z 
2025-01-10T13:23:47.8226049Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b57410>
2025-01-10T13:23:47.8226220Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>
2025-01-10T13:23:47.8226311Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8226315Z 
2025-01-10T13:23:47.8226456Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8226572Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8226661Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8226783Z         try:
2025-01-10T13:23:47.8227037Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8227174Z         except KeyError:
2025-01-10T13:23:47.8227420Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8227516Z     
2025-01-10T13:23:47.8227744Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8227843Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8227940Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8228081Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8228167Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8228263Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8228374Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8228379Z 
2025-01-10T13:23:47.8228510Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8228627Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8228631Z 
2025-01-10T13:23:47.8228772Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8228860Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8228979Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8229071Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8229210Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8229297Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8229402Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8229491Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8229568Z err_msg = None
2025-01-10T13:23:47.8229572Z 
2025-01-10T13:23:47.8229686Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8229768Z         if err_msg is None:
2025-01-10T13:23:47.8229866Z             if left.shape != right.shape:
2025-01-10T13:23:47.8229951Z                 raise_assert_detail(
2025-01-10T13:23:47.8230098Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8230171Z                 )
2025-01-10T13:23:47.8230251Z     
2025-01-10T13:23:47.8230330Z             diff = 0
2025-01-10T13:23:47.8230449Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8230542Z                 # count up differences
2025-01-10T13:23:47.8230713Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8230797Z                     diff += 1
2025-01-10T13:23:47.8230868Z     
2025-01-10T13:23:47.8230963Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8231099Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8231274Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8231380Z E           AssertionError: Series are different
2025-01-10T13:23:47.8231457Z E           
2025-01-10T13:23:47.8231560Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8231931Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8232395Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8232851Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8232865Z 
2025-01-10T13:23:47.8233302Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8233510Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-01-10T13:23:47.8233514Z 
2025-01-10T13:23:47.8233643Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8233773Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8233873Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8234011Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8234142Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8234246Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8234329Z err_msg = None
2025-01-10T13:23:47.8234333Z 
2025-01-10T13:23:47.8234442Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8234529Z         if err_msg is None:
2025-01-10T13:23:47.8234625Z             if left.shape != right.shape:
2025-01-10T13:23:47.8234715Z                 raise_assert_detail(
2025-01-10T13:23:47.8234859Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8234938Z                 )
2025-01-10T13:23:47.8235008Z     
2025-01-10T13:23:47.8235087Z             diff = 0
2025-01-10T13:23:47.8235200Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8235292Z                 # count up differences
2025-01-10T13:23:47.8235463Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8235553Z                     diff += 1
2025-01-10T13:23:47.8235628Z     
2025-01-10T13:23:47.8235717Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8235857Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8236025Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8236144Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8236217Z E           
2025-01-10T13:23:47.8236334Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8236591Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8236859Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8236994Z 
2025-01-10T13:23:47.8237301Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8237306Z 
2025-01-10T13:23:47.8237477Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8237482Z 
2025-01-10T13:23:47.8237708Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b57650>
2025-01-10T13:23:47.8237907Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>, attr = 'nu'
2025-01-10T13:23:47.8237915Z 
2025-01-10T13:23:47.8238053Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8238174Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8238388Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8238468Z         try:
2025-01-10T13:23:47.8238611Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8238698Z         except KeyError:
2025-01-10T13:23:47.8238837Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8238911Z     
2025-01-10T13:23:47.8239000Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8239099Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8239189Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8239328Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8239417Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8239514Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8239630Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8239635Z 
2025-01-10T13:23:47.8239761Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8239893Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8240039Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8240120Z     ???
2025-01-10T13:23:47.8240238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8240242Z 
2025-01-10T13:23:47.8240318Z >   ???
2025-01-10T13:23:47.8240449Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8240527Z E   
2025-01-10T13:23:47.8240659Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8240780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8240860Z E          ...
2025-01-10T13:23:47.8240950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8241088Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8241205Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8241288Z E          ...
2025-01-10T13:23:47.8241381Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8241514Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8241621Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8241625Z 
2025-01-10T13:23:47.8241718Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8241947Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-01-10T13:23:47.8241952Z 
2025-01-10T13:23:47.8242093Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8242233Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8242333Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8242471Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8242602Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8242791Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8242868Z err_msg = None
2025-01-10T13:23:47.8242872Z 
2025-01-10T13:23:47.8242990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8243275Z         if err_msg is None:
2025-01-10T13:23:47.8243380Z             if left.shape != right.shape:
2025-01-10T13:23:47.8243467Z                 raise_assert_detail(
2025-01-10T13:23:47.8243615Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8243693Z                 )
2025-01-10T13:23:47.8243763Z     
2025-01-10T13:23:47.8243843Z             diff = 0
2025-01-10T13:23:47.8243956Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8244051Z                 # count up differences
2025-01-10T13:23:47.8244219Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8244430Z                     diff += 1
2025-01-10T13:23:47.8244503Z     
2025-01-10T13:23:47.8244600Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8244738Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8244909Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8245026Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8245103Z E           
2025-01-10T13:23:47.8245297Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8245776Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8246243Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8246256Z 
2025-01-10T13:23:47.8246765Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8246771Z 
2025-01-10T13:23:47.8246952Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8246957Z 
2025-01-10T13:23:47.8247187Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b57710>
2025-01-10T13:23:47.8247355Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>
2025-01-10T13:23:47.8247444Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8247448Z 
2025-01-10T13:23:47.8247589Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8247714Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8247804Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8247882Z         try:
2025-01-10T13:23:47.8248024Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8248110Z         except KeyError:
2025-01-10T13:23:47.8248249Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8248325Z     
2025-01-10T13:23:47.8248417Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8248514Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8248609Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8248740Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8248833Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8248924Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8249040Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8249044Z 
2025-01-10T13:23:47.8249170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8249435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8249582Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8249657Z     ???
2025-01-10T13:23:47.8249766Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8249775Z 
2025-01-10T13:23:47.8249846Z >   ???
2025-01-10T13:23:47.8249980Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8250051Z E   
2025-01-10T13:23:47.8250184Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8250296Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8250374Z E          ...
2025-01-10T13:23:47.8250463Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8250601Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8250713Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8250879Z E          ...
2025-01-10T13:23:47.8250971Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8251104Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8251215Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8251225Z 
2025-01-10T13:23:47.8251313Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8251523Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-01-10T13:23:47.8251527Z 
2025-01-10T13:23:47.8251656Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8251789Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8251886Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8252023Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8252151Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8252257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8252340Z err_msg = None
2025-01-10T13:23:47.8252345Z 
2025-01-10T13:23:47.8252458Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8252547Z         if err_msg is None:
2025-01-10T13:23:47.8252643Z             if left.shape != right.shape:
2025-01-10T13:23:47.8252732Z                 raise_assert_detail(
2025-01-10T13:23:47.8252876Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8252953Z                 )
2025-01-10T13:23:47.8253202Z     
2025-01-10T13:23:47.8253287Z             diff = 0
2025-01-10T13:23:47.8253400Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8253493Z                 # count up differences
2025-01-10T13:23:47.8253660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8253753Z                     diff += 1
2025-01-10T13:23:47.8253823Z     
2025-01-10T13:23:47.8253920Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8254059Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8254226Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8254344Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8254418Z E           
2025-01-10T13:23:47.8254535Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8254795Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8255060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8255220Z 
2025-01-10T13:23:47.8255546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8255551Z 
2025-01-10T13:23:47.8255727Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8255732Z 
2025-01-10T13:23:47.8255966Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b577d0>
2025-01-10T13:23:47.8256170Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>, attr = 'f_lu'
2025-01-10T13:23:47.8256174Z 
2025-01-10T13:23:47.8256317Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8256438Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8256640Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8256724Z         try:
2025-01-10T13:23:47.8256865Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8256953Z         except KeyError:
2025-01-10T13:23:47.8257093Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8257170Z     
2025-01-10T13:23:47.8257259Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8257358Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8257449Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8257588Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8257675Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8257770Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8257879Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8257883Z 
2025-01-10T13:23:47.8258013Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8258138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8258285Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8258362Z     ???
2025-01-10T13:23:47.8258470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8258474Z 
2025-01-10T13:23:47.8258549Z >   ???
2025-01-10T13:23:47.8258674Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8258749Z E   
2025-01-10T13:23:47.8258878Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8258997Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8259070Z E          ...
2025-01-10T13:23:47.8259166Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8259295Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8259413Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8259496Z E          ...
2025-01-10T13:23:47.8259583Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8259713Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8259819Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8259823Z 
2025-01-10T13:23:47.8259919Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8260152Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-01-10T13:23:47.8260156Z 
2025-01-10T13:23:47.8260288Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8260416Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8260517Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8260657Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8260785Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8260976Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8261055Z err_msg = None
2025-01-10T13:23:47.8261060Z 
2025-01-10T13:23:47.8261173Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8261255Z         if err_msg is None:
2025-01-10T13:23:47.8261356Z             if left.shape != right.shape:
2025-01-10T13:23:47.8261442Z                 raise_assert_detail(
2025-01-10T13:23:47.8261591Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8261723Z                 )
2025-01-10T13:23:47.8261857Z     
2025-01-10T13:23:47.8261988Z             diff = 0
2025-01-10T13:23:47.8262177Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8262276Z                 # count up differences
2025-01-10T13:23:47.8262450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8262638Z                     diff += 1
2025-01-10T13:23:47.8262711Z     
2025-01-10T13:23:47.8262806Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8262946Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8263237Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8263354Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8263432Z E           
2025-01-10T13:23:47.8263546Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8263811Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8264079Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8264088Z 
2025-01-10T13:23:47.8264401Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8264405Z 
2025-01-10T13:23:47.8264584Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8264588Z 
2025-01-10T13:23:47.8264820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b57f50>
2025-01-10T13:23:47.8265001Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>
2025-01-10T13:23:47.8265087Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8265091Z 
2025-01-10T13:23:47.8265233Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8265365Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8265452Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8265530Z         try:
2025-01-10T13:23:47.8265676Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8265763Z         except KeyError:
2025-01-10T13:23:47.8265905Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8265981Z     
2025-01-10T13:23:47.8266069Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8266170Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8266266Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8266401Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8266492Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8266584Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8266699Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8266774Z             else:
2025-01-10T13:23:47.8267007Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8267115Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8267119Z 
2025-01-10T13:23:47.8267249Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8267364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8267516Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8267588Z     ???
2025-01-10T13:23:47.8267700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8267704Z 
2025-01-10T13:23:47.8267781Z >   ???
2025-01-10T13:23:47.8267909Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8267984Z E   
2025-01-10T13:23:47.8268115Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8268233Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8268307Z E          ...
2025-01-10T13:23:47.8268519Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8268653Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8268770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8268843Z E          ...
2025-01-10T13:23:47.8268936Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8269062Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8269176Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8269180Z 
2025-01-10T13:23:47.8269276Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8269500Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-01-10T13:23:47.8269504Z 
2025-01-10T13:23:47.8269638Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8269767Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8269881Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8270016Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8270144Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8270241Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8270327Z err_msg = None
2025-01-10T13:23:47.8270330Z 
2025-01-10T13:23:47.8270446Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8270529Z         if err_msg is None:
2025-01-10T13:23:47.8270630Z             if left.shape != right.shape:
2025-01-10T13:23:47.8270715Z                 raise_assert_detail(
2025-01-10T13:23:47.8270865Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8270937Z                 )
2025-01-10T13:23:47.8271013Z     
2025-01-10T13:23:47.8271088Z             diff = 0
2025-01-10T13:23:47.8271212Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8271301Z                 # count up differences
2025-01-10T13:23:47.8271473Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8271552Z                     diff += 1
2025-01-10T13:23:47.8271628Z     
2025-01-10T13:23:47.8271717Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8271861Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8272036Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8272149Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8272227Z E           
2025-01-10T13:23:47.8272341Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8272607Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8272955Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8272965Z 
2025-01-10T13:23:47.8273426Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8273432Z 
2025-01-10T13:23:47.8273605Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8273609Z 
2025-01-10T13:23:47.8273832Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b88050>
2025-01-10T13:23:47.8274120Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>
2025-01-10T13:23:47.8274210Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8274214Z 
2025-01-10T13:23:47.8274358Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8274480Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8274564Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8274642Z         try:
2025-01-10T13:23:47.8274782Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8274868Z         except KeyError:
2025-01-10T13:23:47.8275007Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8275084Z     
2025-01-10T13:23:47.8275172Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8275270Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8275360Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8275496Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8275583Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8275685Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8275796Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8275878Z             else:
2025-01-10T13:23:47.8275982Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8276091Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8276095Z 
2025-01-10T13:23:47.8276226Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8276340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8276494Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8276565Z     ???
2025-01-10T13:23:47.8276682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8276686Z 
2025-01-10T13:23:47.8276756Z >   ???
2025-01-10T13:23:47.8276892Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8276963Z E   
2025-01-10T13:23:47.8277105Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8277224Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8277298Z E          ...
2025-01-10T13:23:47.8277393Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8277526Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8277646Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8277719Z E          ...
2025-01-10T13:23:47.8277811Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8277937Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8278046Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8278050Z 
2025-01-10T13:23:47.8278140Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8278352Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-01-10T13:23:47.8278356Z 
2025-01-10T13:23:47.8278636Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8278764Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8278867Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8279001Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8279128Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8279222Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8279302Z err_msg = None
2025-01-10T13:23:47.8279306Z 
2025-01-10T13:23:47.8279418Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8279504Z         if err_msg is None:
2025-01-10T13:23:47.8279599Z             if left.shape != right.shape:
2025-01-10T13:23:47.8279688Z                 raise_assert_detail(
2025-01-10T13:23:47.8279919Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8279995Z                 )
2025-01-10T13:23:47.8280070Z     
2025-01-10T13:23:47.8280143Z             diff = 0
2025-01-10T13:23:47.8280281Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8280441Z                 # count up differences
2025-01-10T13:23:47.8280749Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8280874Z                     diff += 1
2025-01-10T13:23:47.8280993Z     
2025-01-10T13:23:47.8281134Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8281369Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8281832Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8281953Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8282032Z E           
2025-01-10T13:23:47.8282152Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8282417Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8282674Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8282679Z 
2025-01-10T13:23:47.8282991Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8282996Z 
2025-01-10T13:23:47.8283297Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8283307Z 
2025-01-10T13:23:47.8283529Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b881d0>
2025-01-10T13:23:47.8283702Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f01fb60>
2025-01-10T13:23:47.8283781Z attr = 'j_blues'
2025-01-10T13:23:47.8283785Z 
2025-01-10T13:23:47.8283934Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8284050Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8284151Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8284224Z         try:
2025-01-10T13:23:47.8284372Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8284456Z         except KeyError:
2025-01-10T13:23:47.8284600Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8284677Z     
2025-01-10T13:23:47.8284768Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8284870Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8285106Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8285246Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8285333Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8285428Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8285538Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8285616Z             else:
2025-01-10T13:23:47.8285714Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8285827Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8285831Z 
2025-01-10T13:23:47.8285957Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8286078Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8286231Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8286305Z     ???
2025-01-10T13:23:47.8286524Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8286534Z 
2025-01-10T13:23:47.8286611Z >   ???
2025-01-10T13:23:47.8286747Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8286817Z E   
2025-01-10T13:23:47.8286950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8287066Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8287147Z E          ...
2025-01-10T13:23:47.8287236Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8294339Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8294507Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8294587Z E          ...
2025-01-10T13:23:47.8294688Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8294828Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8294944Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8294957Z 
2025-01-10T13:23:47.8295057Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8295282Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-01-10T13:23:47.8295286Z 
2025-01-10T13:23:47.8295425Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8295569Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8295682Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8295823Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8295962Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8296061Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8296151Z err_msg = None
2025-01-10T13:23:47.8296156Z 
2025-01-10T13:23:47.8296276Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8296373Z         if err_msg is None:
2025-01-10T13:23:47.8296474Z             if left.shape != right.shape:
2025-01-10T13:23:47.8296566Z                 raise_assert_detail(
2025-01-10T13:23:47.8296718Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8296799Z                 )
2025-01-10T13:23:47.8296875Z     
2025-01-10T13:23:47.8296949Z             diff = 0
2025-01-10T13:23:47.8297070Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8297160Z                 # count up differences
2025-01-10T13:23:47.8297339Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8297418Z                     diff += 1
2025-01-10T13:23:47.8297495Z     
2025-01-10T13:23:47.8297587Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8297734Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8297910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8298228Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8298303Z E           
2025-01-10T13:23:47.8298425Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8298691Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8298953Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8298958Z 
2025-01-10T13:23:47.8299544Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8299555Z 
2025-01-10T13:23:47.8299867Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8299885Z 
2025-01-10T13:23:47.8300273Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b88f50>
2025-01-10T13:23:47.8300567Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>
2025-01-10T13:23:47.8300695Z attr = 'lines'
2025-01-10T13:23:47.8300702Z 
2025-01-10T13:23:47.8300937Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8301130Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8301283Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8301412Z         try:
2025-01-10T13:23:47.8301624Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8301711Z         except KeyError:
2025-01-10T13:23:47.8301870Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8301941Z     
2025-01-10T13:23:47.8302036Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8302140Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8302232Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8302376Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8302464Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8302559Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8302670Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8302749Z             else:
2025-01-10T13:23:47.8302844Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8302957Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8302961Z 
2025-01-10T13:23:47.8303212Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8303339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8303491Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8303575Z     ???
2025-01-10T13:23:47.8303693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8303697Z 
2025-01-10T13:23:47.8303768Z >   ???
2025-01-10T13:23:47.8303904Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8303975Z E   
2025-01-10T13:23:47.8304110Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8304226Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8304307Z E          ...
2025-01-10T13:23:47.8304397Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8304536Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8304649Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8304731Z E          ...
2025-01-10T13:23:47.8304822Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8305121Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8305236Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8305240Z 
2025-01-10T13:23:47.8305334Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8305605Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-01-10T13:23:47.8305610Z 
2025-01-10T13:23:47.8305833Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b89010>
2025-01-10T13:23:47.8306006Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>
2025-01-10T13:23:47.8306096Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8306100Z 
2025-01-10T13:23:47.8306251Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8306367Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8306460Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8306539Z         try:
2025-01-10T13:23:47.8306819Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8306910Z         except KeyError:
2025-01-10T13:23:47.8307051Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8307128Z     
2025-01-10T13:23:47.8307215Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8307315Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8307408Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8307549Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8307642Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8307741Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8307851Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8307855Z 
2025-01-10T13:23:47.8307988Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8308109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8308123Z 
2025-01-10T13:23:47.8308262Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8308353Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8308462Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8308550Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8308690Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8308778Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8308884Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8308971Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8309051Z err_msg = None
2025-01-10T13:23:47.8309062Z 
2025-01-10T13:23:47.8309177Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8309265Z         if err_msg is None:
2025-01-10T13:23:47.8309363Z             if left.shape != right.shape:
2025-01-10T13:23:47.8309461Z                 raise_assert_detail(
2025-01-10T13:23:47.8309608Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8309688Z                 )
2025-01-10T13:23:47.8309759Z     
2025-01-10T13:23:47.8309838Z             diff = 0
2025-01-10T13:23:47.8309952Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8310047Z                 # count up differences
2025-01-10T13:23:47.8310217Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8310303Z                     diff += 1
2025-01-10T13:23:47.8310371Z     
2025-01-10T13:23:47.8310462Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8310607Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8310777Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8310889Z E           AssertionError: Series are different
2025-01-10T13:23:47.8311066Z E           
2025-01-10T13:23:47.8311169Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8311539Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8311865Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8312271Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8312277Z 
2025-01-10T13:23:47.8312599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8312858Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-01-10T13:23:47.8312862Z 
2025-01-10T13:23:47.8313246Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b890d0>
2025-01-10T13:23:47.8313416Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>
2025-01-10T13:23:47.8313512Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8313516Z 
2025-01-10T13:23:47.8313670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8313791Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8313880Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8313952Z         try:
2025-01-10T13:23:47.8314097Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8314180Z         except KeyError:
2025-01-10T13:23:47.8314320Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8314391Z     
2025-01-10T13:23:47.8314480Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8314572Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8314666Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8314800Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8314895Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8314992Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8315107Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8315114Z 
2025-01-10T13:23:47.8315245Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8315360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8315364Z 
2025-01-10T13:23:47.8315506Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8315592Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8315705Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8315786Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8315930Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8316020Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8316124Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8316209Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8316459Z err_msg = None
2025-01-10T13:23:47.8316463Z 
2025-01-10T13:23:47.8316576Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8316658Z         if err_msg is None:
2025-01-10T13:23:47.8316759Z             if left.shape != right.shape:
2025-01-10T13:23:47.8316844Z                 raise_assert_detail(
2025-01-10T13:23:47.8316991Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8317064Z                 )
2025-01-10T13:23:47.8317139Z     
2025-01-10T13:23:47.8317212Z             diff = 0
2025-01-10T13:23:47.8317329Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8317419Z                 # count up differences
2025-01-10T13:23:47.8317592Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8317676Z                     diff += 1
2025-01-10T13:23:47.8317746Z     
2025-01-10T13:23:47.8317855Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8318272Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8318604Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8318783Z E           AssertionError: Series are different
2025-01-10T13:23:47.8318908Z E           
2025-01-10T13:23:47.8319075Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8319702Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8320084Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8320457Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8320468Z 
2025-01-10T13:23:47.8320781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8320989Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-01-10T13:23:47.8320997Z 
2025-01-10T13:23:47.8321130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8321263Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8321361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8321498Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8321619Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8321718Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8321800Z err_msg = None
2025-01-10T13:23:47.8321804Z 
2025-01-10T13:23:47.8321913Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8321999Z         if err_msg is None:
2025-01-10T13:23:47.8322095Z             if left.shape != right.shape:
2025-01-10T13:23:47.8322185Z                 raise_assert_detail(
2025-01-10T13:23:47.8322436Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8322512Z                 )
2025-01-10T13:23:47.8322583Z     
2025-01-10T13:23:47.8322664Z             diff = 0
2025-01-10T13:23:47.8322777Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8322869Z                 # count up differences
2025-01-10T13:23:47.8323183Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8323271Z                     diff += 1
2025-01-10T13:23:47.8323341Z     
2025-01-10T13:23:47.8323435Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8323584Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8323752Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8323871Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8323945Z E           
2025-01-10T13:23:47.8324192Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8324456Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8324717Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8324722Z 
2025-01-10T13:23:47.8325026Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8325031Z 
2025-01-10T13:23:47.8325211Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8325216Z 
2025-01-10T13:23:47.8325446Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b89310>
2025-01-10T13:23:47.8325644Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>, attr = 'nu'
2025-01-10T13:23:47.8325648Z 
2025-01-10T13:23:47.8325789Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8325910Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8325996Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8326077Z         try:
2025-01-10T13:23:47.8326218Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8326303Z         except KeyError:
2025-01-10T13:23:47.8326441Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8326516Z     
2025-01-10T13:23:47.8326607Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8326705Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8326802Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8326939Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8327026Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8327124Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8327234Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8327244Z 
2025-01-10T13:23:47.8327369Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8327490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8327637Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8327714Z     ???
2025-01-10T13:23:47.8327825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8327829Z 
2025-01-10T13:23:47.8327905Z >   ???
2025-01-10T13:23:47.8328034Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8328247Z E   
2025-01-10T13:23:47.8328382Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8328499Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8328573Z E          ...
2025-01-10T13:23:47.8328666Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8328797Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8328916Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8328994Z E          ...
2025-01-10T13:23:47.8329081Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8329211Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8329316Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8329320Z 
2025-01-10T13:23:47.8329415Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8329645Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-01-10T13:23:47.8329655Z 
2025-01-10T13:23:47.8329887Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8330017Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8330121Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8330259Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8330380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8330478Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8330554Z err_msg = None
2025-01-10T13:23:47.8330558Z 
2025-01-10T13:23:47.8330671Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8330754Z         if err_msg is None:
2025-01-10T13:23:47.8330853Z             if left.shape != right.shape:
2025-01-10T13:23:47.8330937Z                 raise_assert_detail(
2025-01-10T13:23:47.8331093Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8331166Z                 )
2025-01-10T13:23:47.8331239Z     
2025-01-10T13:23:47.8331313Z             diff = 0
2025-01-10T13:23:47.8331429Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8331523Z                 # count up differences
2025-01-10T13:23:47.8331690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8331774Z                     diff += 1
2025-01-10T13:23:47.8331843Z     
2025-01-10T13:23:47.8331937Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8332072Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8332243Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8332355Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8332431Z E           
2025-01-10T13:23:47.8332547Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8332804Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8333175Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8333181Z 
2025-01-10T13:23:47.8333479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8333483Z 
2025-01-10T13:23:47.8333660Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8333786Z 
2025-01-10T13:23:47.8334013Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b893d0>
2025-01-10T13:23:47.8334178Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>
2025-01-10T13:23:47.8334263Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8334267Z 
2025-01-10T13:23:47.8334404Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8334524Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8334609Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8334686Z         try:
2025-01-10T13:23:47.8334824Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8334910Z         except KeyError:
2025-01-10T13:23:47.8335045Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8335121Z     
2025-01-10T13:23:47.8335210Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8335427Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8335531Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8335736Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8335896Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8336051Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8336244Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8336251Z 
2025-01-10T13:23:47.8336461Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8336651Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8336892Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8337013Z     ???
2025-01-10T13:23:47.8337206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8337219Z 
2025-01-10T13:23:47.8337304Z >   ???
2025-01-10T13:23:47.8337443Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8337528Z E   
2025-01-10T13:23:47.8337663Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8337774Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8337852Z E          ...
2025-01-10T13:23:47.8337941Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8338074Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8338188Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8338263Z E          ...
2025-01-10T13:23:47.8338349Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8338477Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8338579Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8338583Z 
2025-01-10T13:23:47.8338676Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8338882Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-01-10T13:23:47.8338893Z 
2025-01-10T13:23:47.8339018Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8339149Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8339246Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8339383Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8339505Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8339605Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8339682Z err_msg = None
2025-01-10T13:23:47.8339690Z 
2025-01-10T13:23:47.8339802Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8339886Z         if err_msg is None:
2025-01-10T13:23:47.8339983Z             if left.shape != right.shape:
2025-01-10T13:23:47.8340078Z                 raise_assert_detail(
2025-01-10T13:23:47.8340328Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8340404Z                 )
2025-01-10T13:23:47.8340474Z     
2025-01-10T13:23:47.8340551Z             diff = 0
2025-01-10T13:23:47.8340662Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8340754Z                 # count up differences
2025-01-10T13:23:47.8340921Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8341004Z                     diff += 1
2025-01-10T13:23:47.8341073Z     
2025-01-10T13:23:47.8341166Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8341302Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8341475Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8341591Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8341672Z E           
2025-01-10T13:23:47.8341865Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8342125Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8342386Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8342391Z 
2025-01-10T13:23:47.8342698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8342702Z 
2025-01-10T13:23:47.8342878Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8342882Z 
2025-01-10T13:23:47.8343232Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b89490>
2025-01-10T13:23:47.8343434Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>, attr = 'f_lu'
2025-01-10T13:23:47.8343438Z 
2025-01-10T13:23:47.8343579Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8343692Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8343788Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8343863Z         try:
2025-01-10T13:23:47.8344002Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8344090Z         except KeyError:
2025-01-10T13:23:47.8344228Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8344301Z     
2025-01-10T13:23:47.8344388Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8344491Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8344589Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8344724Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8344810Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8344906Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8345015Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8345019Z 
2025-01-10T13:23:47.8345147Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8345262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8345406Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8345482Z     ???
2025-01-10T13:23:47.8345590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8345594Z 
2025-01-10T13:23:47.8345668Z >   ???
2025-01-10T13:23:47.8345796Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8346000Z E   
2025-01-10T13:23:47.8346127Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8346241Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8346314Z E          ...
2025-01-10T13:23:47.8346406Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8346534Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8346647Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8346725Z E          ...
2025-01-10T13:23:47.8346809Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8346936Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8347037Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8347041Z 
2025-01-10T13:23:47.8347136Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8347358Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-01-10T13:23:47.8347472Z 
2025-01-10T13:23:47.8347611Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8347734Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8347835Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8347962Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8348089Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8348188Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8348265Z err_msg = None
2025-01-10T13:23:47.8348269Z 
2025-01-10T13:23:47.8348382Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8348463Z         if err_msg is None:
2025-01-10T13:23:47.8348561Z             if left.shape != right.shape:
2025-01-10T13:23:47.8348644Z                 raise_assert_detail(
2025-01-10T13:23:47.8348800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8348871Z                 )
2025-01-10T13:23:47.8348947Z     
2025-01-10T13:23:47.8349020Z             diff = 0
2025-01-10T13:23:47.8349134Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8349223Z                 # count up differences
2025-01-10T13:23:47.8349392Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8349475Z                     diff += 1
2025-01-10T13:23:47.8349545Z     
2025-01-10T13:23:47.8349637Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8349769Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8349939Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8350050Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8350134Z E           
2025-01-10T13:23:47.8350249Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8350507Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8350765Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8350770Z 
2025-01-10T13:23:47.8351067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8351071Z 
2025-01-10T13:23:47.8351354Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8351359Z 
2025-01-10T13:23:47.8351580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b89c10>
2025-01-10T13:23:47.8351749Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>
2025-01-10T13:23:47.8351832Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8351837Z 
2025-01-10T13:23:47.8351976Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8352094Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8352181Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8352255Z         try:
2025-01-10T13:23:47.8352392Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8352476Z         except KeyError:
2025-01-10T13:23:47.8352612Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8352687Z     
2025-01-10T13:23:47.8352773Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8352955Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8353192Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8353330Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8353420Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8353560Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8353765Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8353880Z             else:
2025-01-10T13:23:47.8354028Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8354184Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8354190Z 
2025-01-10T13:23:47.8354380Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8354547Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8354776Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8354887Z     ???
2025-01-10T13:23:47.8355071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8355077Z 
2025-01-10T13:23:47.8355193Z >   ???
2025-01-10T13:23:47.8355395Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8355512Z E   
2025-01-10T13:23:47.8355713Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8355890Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8356005Z E          ...
2025-01-10T13:23:47.8356154Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8356368Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8356560Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8356681Z E          ...
2025-01-10T13:23:47.8356838Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8357037Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8357223Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8357238Z 
2025-01-10T13:23:47.8357393Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8357789Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-01-10T13:23:47.8357798Z 
2025-01-10T13:23:47.8358038Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8358259Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8358429Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8358659Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8358888Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8359061Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8359203Z err_msg = None
2025-01-10T13:23:47.8359212Z 
2025-01-10T13:23:47.8359679Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8359823Z         if err_msg is None:
2025-01-10T13:23:47.8359998Z             if left.shape != right.shape:
2025-01-10T13:23:47.8360149Z                 raise_assert_detail(
2025-01-10T13:23:47.8360420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8360550Z                 )
2025-01-10T13:23:47.8360684Z     
2025-01-10T13:23:47.8360820Z             diff = 0
2025-01-10T13:23:47.8361023Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8361170Z                 # count up differences
2025-01-10T13:23:47.8361464Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8361604Z                     diff += 1
2025-01-10T13:23:47.8361734Z     
2025-01-10T13:23:47.8361888Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8362129Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8362627Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8362829Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8362949Z E           
2025-01-10T13:23:47.8363344Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8363828Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8364294Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8364329Z 
2025-01-10T13:23:47.8364850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8364857Z 
2025-01-10T13:23:47.8365156Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8365163Z 
2025-01-10T13:23:47.8365547Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b89cd0>
2025-01-10T13:23:47.8365836Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>
2025-01-10T13:23:47.8365965Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8365971Z 
2025-01-10T13:23:47.8366199Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8366405Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8366561Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8366695Z         try:
2025-01-10T13:23:47.8366944Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8367104Z         except KeyError:
2025-01-10T13:23:47.8367349Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8367475Z     
2025-01-10T13:23:47.8367624Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8367783Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8367930Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8368166Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8368307Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8368467Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8368656Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8368789Z             else:
2025-01-10T13:23:47.8368950Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8369140Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8369147Z 
2025-01-10T13:23:47.8369374Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8369880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8370149Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8370271Z     ???
2025-01-10T13:23:47.8370462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8370469Z 
2025-01-10T13:23:47.8370590Z >   ???
2025-01-10T13:23:47.8370819Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8370939Z E   
2025-01-10T13:23:47.8371173Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8371362Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8371487Z E          ...
2025-01-10T13:23:47.8371633Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8371888Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8372104Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8372235Z E          ...
2025-01-10T13:23:47.8372558Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8372794Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8372982Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8372988Z 
2025-01-10T13:23:47.8373335Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8373691Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-01-10T13:23:47.8373699Z 
2025-01-10T13:23:47.8373927Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8374151Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8374305Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8374533Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8374759Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8374923Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8375050Z err_msg = None
2025-01-10T13:23:47.8375057Z 
2025-01-10T13:23:47.8375240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8375395Z         if err_msg is None:
2025-01-10T13:23:47.8375556Z             if left.shape != right.shape:
2025-01-10T13:23:47.8375709Z                 raise_assert_detail(
2025-01-10T13:23:47.8375969Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8376071Z                 )
2025-01-10T13:23:47.8376148Z     
2025-01-10T13:23:47.8376226Z             diff = 0
2025-01-10T13:23:47.8376347Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8376436Z                 # count up differences
2025-01-10T13:23:47.8376615Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8376706Z                     diff += 1
2025-01-10T13:23:47.8376782Z     
2025-01-10T13:23:47.8376872Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8377015Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8377185Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8377306Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8377381Z E           
2025-01-10T13:23:47.8377501Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8377770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8378036Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8378208Z 
2025-01-10T13:23:47.8378534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8378540Z 
2025-01-10T13:23:47.8378717Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8378726Z 
2025-01-10T13:23:47.8378952Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b89e50>
2025-01-10T13:23:47.8379128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef605b7740>
2025-01-10T13:23:47.8379205Z attr = 'j_blues'
2025-01-10T13:23:47.8379210Z 
2025-01-10T13:23:47.8379358Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8379478Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8379680Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8379760Z         try:
2025-01-10T13:23:47.8379909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8379992Z         except KeyError:
2025-01-10T13:23:47.8380137Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8380209Z     
2025-01-10T13:23:47.8380303Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8380403Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8380494Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8380632Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8380719Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8380814Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8380925Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8381003Z             else:
2025-01-10T13:23:47.8381099Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8381219Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8381224Z 
2025-01-10T13:23:47.8381355Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8381472Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8381620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8381696Z     ???
2025-01-10T13:23:47.8381810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8381814Z 
2025-01-10T13:23:47.8381884Z >   ???
2025-01-10T13:23:47.8382015Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8382083Z E   
2025-01-10T13:23:47.8382216Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8382327Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8382402Z E          ...
2025-01-10T13:23:47.8382490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8382631Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8382743Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8382818Z E          ...
2025-01-10T13:23:47.8382905Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8383201Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8383316Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8383320Z 
2025-01-10T13:23:47.8383410Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8383619Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-01-10T13:23:47.8383623Z 
2025-01-10T13:23:47.8383752Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8383887Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8383991Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8384270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8384392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8384490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8384570Z err_msg = None
2025-01-10T13:23:47.8384575Z 
2025-01-10T13:23:47.8384688Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8384775Z         if err_msg is None:
2025-01-10T13:23:47.8384873Z             if left.shape != right.shape:
2025-01-10T13:23:47.8384966Z                 raise_assert_detail(
2025-01-10T13:23:47.8385113Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8385187Z                 )
2025-01-10T13:23:47.8385256Z     
2025-01-10T13:23:47.8385333Z             diff = 0
2025-01-10T13:23:47.8385445Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8385649Z                 # count up differences
2025-01-10T13:23:47.8385822Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8385917Z                     diff += 1
2025-01-10T13:23:47.8385996Z     
2025-01-10T13:23:47.8386086Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8386227Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8386397Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8386515Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8386589Z E           
2025-01-10T13:23:47.8386709Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8386973Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8387245Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8387250Z 
2025-01-10T13:23:47.8387565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8387569Z 
2025-01-10T13:23:47.8387741Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8387745Z 
2025-01-10T13:23:47.8387976Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8abd0>
2025-01-10T13:23:47.8388146Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>
2025-01-10T13:23:47.8388251Z attr = 'lines'
2025-01-10T13:23:47.8388258Z 
2025-01-10T13:23:47.8388511Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8388713Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8388868Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8388993Z         try:
2025-01-10T13:23:47.8389231Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8389362Z         except KeyError:
2025-01-10T13:23:47.8389592Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8389706Z     
2025-01-10T13:23:47.8389867Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8389975Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8390074Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8390210Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8390303Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8390407Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8390629Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8390708Z             else:
2025-01-10T13:23:47.8390804Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8390918Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8390923Z 
2025-01-10T13:23:47.8391050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8391167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8391312Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8391388Z     ???
2025-01-10T13:23:47.8391500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8391504Z 
2025-01-10T13:23:47.8391580Z >   ???
2025-01-10T13:23:47.8391706Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8391782Z E   
2025-01-10T13:23:47.8391993Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8392115Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8392193Z E          ...
2025-01-10T13:23:47.8392285Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8392421Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8392533Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8392614Z E          ...
2025-01-10T13:23:47.8392702Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8392832Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8392937Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8392942Z 
2025-01-10T13:23:47.8393208Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8393483Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-01-10T13:23:47.8393488Z 
2025-01-10T13:23:47.8393714Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8ac90>
2025-01-10T13:23:47.8393894Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>
2025-01-10T13:23:47.8393983Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8393987Z 
2025-01-10T13:23:47.8394128Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8394241Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8394333Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8394405Z         try:
2025-01-10T13:23:47.8394549Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8394630Z         except KeyError:
2025-01-10T13:23:47.8394772Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8394843Z     
2025-01-10T13:23:47.8394935Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8395035Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8395126Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8395272Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8395358Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8395452Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8395559Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8395563Z 
2025-01-10T13:23:47.8395693Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8395805Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8395809Z 
2025-01-10T13:23:47.8395949Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8396045Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8396154Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8396240Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8396378Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8396595Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8396698Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8396781Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8396859Z err_msg = None
2025-01-10T13:23:47.8396863Z 
2025-01-10T13:23:47.8396979Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8397060Z         if err_msg is None:
2025-01-10T13:23:47.8397160Z             if left.shape != right.shape:
2025-01-10T13:23:47.8397244Z                 raise_assert_detail(
2025-01-10T13:23:47.8397393Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8397468Z                 )
2025-01-10T13:23:47.8397538Z     
2025-01-10T13:23:47.8397617Z             diff = 0
2025-01-10T13:23:47.8397730Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8397824Z                 # count up differences
2025-01-10T13:23:47.8398105Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8398193Z                     diff += 1
2025-01-10T13:23:47.8398265Z     
2025-01-10T13:23:47.8398357Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8398493Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8398666Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8398771Z E           AssertionError: Series are different
2025-01-10T13:23:47.8398848Z E           
2025-01-10T13:23:47.8398950Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8399324Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8399667Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8399998Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8400003Z 
2025-01-10T13:23:47.8400318Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8400590Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-01-10T13:23:47.8400594Z 
2025-01-10T13:23:47.8400816Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8ad50>
2025-01-10T13:23:47.8400987Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>
2025-01-10T13:23:47.8401076Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8401081Z 
2025-01-10T13:23:47.8401222Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8401341Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8401425Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8401501Z         try:
2025-01-10T13:23:47.8401675Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8401762Z         except KeyError:
2025-01-10T13:23:47.8401900Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8402067Z     
2025-01-10T13:23:47.8402160Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8402261Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8402351Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8402492Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8402580Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8402677Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8402787Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8402797Z 
2025-01-10T13:23:47.8402920Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8403180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8403184Z 
2025-01-10T13:23:47.8403323Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8403413Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8403661Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8403752Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8403892Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8403981Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8404093Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8404179Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8404263Z err_msg = None
2025-01-10T13:23:47.8404267Z 
2025-01-10T13:23:47.8404376Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8404462Z         if err_msg is None:
2025-01-10T13:23:47.8404556Z             if left.shape != right.shape:
2025-01-10T13:23:47.8404644Z                 raise_assert_detail(
2025-01-10T13:23:47.8404787Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8404864Z                 )
2025-01-10T13:23:47.8404942Z     
2025-01-10T13:23:47.8405021Z             diff = 0
2025-01-10T13:23:47.8405133Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8405226Z                 # count up differences
2025-01-10T13:23:47.8405397Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8405481Z                     diff += 1
2025-01-10T13:23:47.8405555Z     
2025-01-10T13:23:47.8405641Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8405782Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8405950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8406059Z E           AssertionError: Series are different
2025-01-10T13:23:47.8406135Z E           
2025-01-10T13:23:47.8406242Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8406673Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8407369Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8408042Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8408240Z 
2025-01-10T13:23:47.8408580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8408795Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-01-10T13:23:47.8408800Z 
2025-01-10T13:23:47.8408937Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8409068Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8409177Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8409312Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8409515Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8409619Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8409703Z err_msg = None
2025-01-10T13:23:47.8409708Z 
2025-01-10T13:23:47.8409831Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8409914Z         if err_msg is None:
2025-01-10T13:23:47.8410017Z             if left.shape != right.shape:
2025-01-10T13:23:47.8410103Z                 raise_assert_detail(
2025-01-10T13:23:47.8410260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8410332Z                 )
2025-01-10T13:23:47.8410409Z     
2025-01-10T13:23:47.8410482Z             diff = 0
2025-01-10T13:23:47.8410602Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8410690Z                 # count up differences
2025-01-10T13:23:47.8410863Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8410950Z                     diff += 1
2025-01-10T13:23:47.8411025Z     
2025-01-10T13:23:47.8411115Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8411255Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8411427Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8411542Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8411621Z E           
2025-01-10T13:23:47.8411733Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8412001Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8412259Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8412273Z 
2025-01-10T13:23:47.8412573Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8412578Z 
2025-01-10T13:23:47.8412755Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8412760Z 
2025-01-10T13:23:47.8412983Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8af90>
2025-01-10T13:23:47.8413334Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>, attr = 'nu'
2025-01-10T13:23:47.8413339Z 
2025-01-10T13:23:47.8413480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8413602Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8413841Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8413919Z         try:
2025-01-10T13:23:47.8414064Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8414147Z         except KeyError:
2025-01-10T13:23:47.8414292Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8414361Z     
2025-01-10T13:23:47.8414455Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8414551Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8414646Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8414781Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8414873Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8414966Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8415083Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8415088Z 
2025-01-10T13:23:47.8415213Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8415450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8415606Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8415680Z     ???
2025-01-10T13:23:47.8415793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8415797Z 
2025-01-10T13:23:47.8415866Z >   ???
2025-01-10T13:23:47.8415998Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8416068Z E   
2025-01-10T13:23:47.8416200Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8416313Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8416392Z E          ...
2025-01-10T13:23:47.8416481Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8416618Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8416730Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8416819Z E          ...
2025-01-10T13:23:47.8416912Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8417034Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8417146Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8417150Z 
2025-01-10T13:23:47.8417240Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8417480Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-01-10T13:23:47.8417484Z 
2025-01-10T13:23:47.8417613Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8417746Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8417844Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8417984Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8418114Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8418214Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8418295Z err_msg = None
2025-01-10T13:23:47.8418299Z 
2025-01-10T13:23:47.8418411Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8418498Z         if err_msg is None:
2025-01-10T13:23:47.8418595Z             if left.shape != right.shape:
2025-01-10T13:23:47.8418683Z                 raise_assert_detail(
2025-01-10T13:23:47.8418825Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8418903Z                 )
2025-01-10T13:23:47.8418973Z     
2025-01-10T13:23:47.8419053Z             diff = 0
2025-01-10T13:23:47.8419165Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8419257Z                 # count up differences
2025-01-10T13:23:47.8419430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8419608Z                     diff += 1
2025-01-10T13:23:47.8419684Z     
2025-01-10T13:23:47.8419775Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8419913Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8420082Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8420200Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8420272Z E           
2025-01-10T13:23:47.8420387Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8420643Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8420981Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8420991Z 
2025-01-10T13:23:47.8421306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8421311Z 
2025-01-10T13:23:47.8421478Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8421482Z 
2025-01-10T13:23:47.8421709Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8b050>
2025-01-10T13:23:47.8421874Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>
2025-01-10T13:23:47.8421962Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8421966Z 
2025-01-10T13:23:47.8422109Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8422230Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8422320Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8422392Z         try:
2025-01-10T13:23:47.8422536Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8422618Z         except KeyError:
2025-01-10T13:23:47.8422760Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8422833Z     
2025-01-10T13:23:47.8422924Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8423128Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8423225Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8423356Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8423452Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8423547Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8423657Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8423661Z 
2025-01-10T13:23:47.8423797Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8423915Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8424109Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8424243Z     ???
2025-01-10T13:23:47.8424442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8424450Z 
2025-01-10T13:23:47.8424574Z >   ???
2025-01-10T13:23:47.8424719Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8424794Z E   
2025-01-10T13:23:47.8424935Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8425055Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8425128Z E          ...
2025-01-10T13:23:47.8425222Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8425352Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8425473Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8425681Z E          ...
2025-01-10T13:23:47.8425774Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8425898Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8426009Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8426013Z 
2025-01-10T13:23:47.8426103Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8426316Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-01-10T13:23:47.8426320Z 
2025-01-10T13:23:47.8426453Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8426583Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8426689Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8426823Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8427103Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8427205Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8427288Z err_msg = None
2025-01-10T13:23:47.8427292Z 
2025-01-10T13:23:47.8427406Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8427493Z         if err_msg is None:
2025-01-10T13:23:47.8427589Z             if left.shape != right.shape:
2025-01-10T13:23:47.8427679Z                 raise_assert_detail(
2025-01-10T13:23:47.8427829Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8427902Z                 )
2025-01-10T13:23:47.8427977Z     
2025-01-10T13:23:47.8428050Z             diff = 0
2025-01-10T13:23:47.8428167Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8428255Z                 # count up differences
2025-01-10T13:23:47.8428434Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8428516Z                     diff += 1
2025-01-10T13:23:47.8428591Z     
2025-01-10T13:23:47.8428679Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8428820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8428989Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8429111Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8429184Z E           
2025-01-10T13:23:47.8429300Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8429562Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8429829Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8429838Z 
2025-01-10T13:23:47.8430146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8430150Z 
2025-01-10T13:23:47.8430332Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8430335Z 
2025-01-10T13:23:47.8430557Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8b110>
2025-01-10T13:23:47.8430763Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>, attr = 'f_lu'
2025-01-10T13:23:47.8430767Z 
2025-01-10T13:23:47.8430905Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8431030Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8431207Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8431284Z         try:
2025-01-10T13:23:47.8431425Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8431512Z         except KeyError:
2025-01-10T13:23:47.8431656Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8431728Z     
2025-01-10T13:23:47.8431821Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8431916Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8432010Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8432143Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8432235Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8432326Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8432440Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8432444Z 
2025-01-10T13:23:47.8432646Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8432774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8432920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8432997Z     ???
2025-01-10T13:23:47.8433251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8433257Z 
2025-01-10T13:23:47.8433328Z >   ???
2025-01-10T13:23:47.8433462Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8433538Z E   
2025-01-10T13:23:47.8433673Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8433783Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8433861Z E          ...
2025-01-10T13:23:47.8433949Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8434083Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8434196Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8434283Z E          ...
2025-01-10T13:23:47.8434370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8434498Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8434608Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8434612Z 
2025-01-10T13:23:47.8434701Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8434933Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-01-10T13:23:47.8434938Z 
2025-01-10T13:23:47.8435065Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8435195Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8435292Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8435429Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8435558Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8435658Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8435743Z err_msg = None
2025-01-10T13:23:47.8435747Z 
2025-01-10T13:23:47.8435858Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8435943Z         if err_msg is None:
2025-01-10T13:23:47.8436039Z             if left.shape != right.shape:
2025-01-10T13:23:47.8436128Z                 raise_assert_detail(
2025-01-10T13:23:47.8436269Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8436346Z                 )
2025-01-10T13:23:47.8436415Z     
2025-01-10T13:23:47.8436494Z             diff = 0
2025-01-10T13:23:47.8436607Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8436700Z                 # count up differences
2025-01-10T13:23:47.8436870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8437082Z                     diff += 1
2025-01-10T13:23:47.8437152Z     
2025-01-10T13:23:47.8437247Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8437387Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8437556Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8437675Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8437747Z E           
2025-01-10T13:23:47.8437865Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8438121Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8438489Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8438500Z 
2025-01-10T13:23:47.8438807Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8438812Z 
2025-01-10T13:23:47.8438980Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8438985Z 
2025-01-10T13:23:47.8439209Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8b890>
2025-01-10T13:23:47.8439375Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>
2025-01-10T13:23:47.8439460Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8439464Z 
2025-01-10T13:23:47.8439606Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8439730Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8439818Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8439889Z         try:
2025-01-10T13:23:47.8440033Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8440114Z         except KeyError:
2025-01-10T13:23:47.8440255Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8440327Z     
2025-01-10T13:23:47.8440420Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8440514Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8440609Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8440739Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8440834Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8440925Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8441040Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8441119Z             else:
2025-01-10T13:23:47.8441226Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8441338Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8441343Z 
2025-01-10T13:23:47.8441469Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8441586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8441731Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8441808Z     ???
2025-01-10T13:23:47.8441917Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8441921Z 
2025-01-10T13:23:47.8441997Z >   ???
2025-01-10T13:23:47.8442125Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8442201Z E   
2025-01-10T13:23:47.8442329Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8442445Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8442526Z E          ...
2025-01-10T13:23:47.8442715Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8442871Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8443201Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8443346Z E          ...
2025-01-10T13:23:47.8443502Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8443730Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8443911Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8443917Z 
2025-01-10T13:23:47.8444067Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8444464Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-01-10T13:23:47.8444476Z 
2025-01-10T13:23:47.8444632Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8444768Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8445011Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8445155Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8445280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8445381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8445457Z err_msg = None
2025-01-10T13:23:47.8445462Z 
2025-01-10T13:23:47.8445579Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8445659Z         if err_msg is None:
2025-01-10T13:23:47.8445760Z             if left.shape != right.shape:
2025-01-10T13:23:47.8445848Z                 raise_assert_detail(
2025-01-10T13:23:47.8445994Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8446069Z                 )
2025-01-10T13:23:47.8446138Z     
2025-01-10T13:23:47.8446217Z             diff = 0
2025-01-10T13:23:47.8446342Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8446439Z                 # count up differences
2025-01-10T13:23:47.8446607Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8446690Z                     diff += 1
2025-01-10T13:23:47.8446760Z     
2025-01-10T13:23:47.8446853Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8446990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8447165Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8447278Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8447357Z E           
2025-01-10T13:23:47.8447474Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8447741Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8448010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8448015Z 
2025-01-10T13:23:47.8448321Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8448330Z 
2025-01-10T13:23:47.8448503Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8448507Z 
2025-01-10T13:23:47.8448738Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8b950>
2025-01-10T13:23:47.8448910Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>
2025-01-10T13:23:47.8449158Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8449163Z 
2025-01-10T13:23:47.8449303Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8449425Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8449510Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8449587Z         try:
2025-01-10T13:23:47.8449728Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8449815Z         except KeyError:
2025-01-10T13:23:47.8449958Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8450027Z     
2025-01-10T13:23:47.8450119Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8450214Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8450307Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8450440Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8450618Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8450718Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8450840Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8450914Z             else:
2025-01-10T13:23:47.8451014Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8451127Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8451132Z 
2025-01-10T13:23:47.8451269Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8451388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8451541Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8451618Z     ???
2025-01-10T13:23:47.8451731Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8451735Z 
2025-01-10T13:23:47.8451809Z >   ???
2025-01-10T13:23:47.8451939Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8452019Z E   
2025-01-10T13:23:47.8452158Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8452280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8452353Z E          ...
2025-01-10T13:23:47.8452448Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8452581Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8452741Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8452884Z E          ...
2025-01-10T13:23:47.8453165Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8453405Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8453586Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8453592Z 
2025-01-10T13:23:47.8453748Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8454105Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-01-10T13:23:47.8454118Z 
2025-01-10T13:23:47.8454340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8454474Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8454577Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8454720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8454842Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8454940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8455019Z err_msg = None
2025-01-10T13:23:47.8455023Z 
2025-01-10T13:23:47.8455147Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8455228Z         if err_msg is None:
2025-01-10T13:23:47.8455348Z             if left.shape != right.shape:
2025-01-10T13:23:47.8455436Z                 raise_assert_detail(
2025-01-10T13:23:47.8455734Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8455807Z                 )
2025-01-10T13:23:47.8455882Z     
2025-01-10T13:23:47.8455956Z             diff = 0
2025-01-10T13:23:47.8456076Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8456170Z                 # count up differences
2025-01-10T13:23:47.8456342Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8456424Z                     diff += 1
2025-01-10T13:23:47.8456493Z     
2025-01-10T13:23:47.8456588Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8456724Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8456897Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8457011Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8457089Z E           
2025-01-10T13:23:47.8457316Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8457588Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8457850Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8457854Z 
2025-01-10T13:23:47.8458160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8458164Z 
2025-01-10T13:23:47.8458343Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8458351Z 
2025-01-10T13:23:47.8458576Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61b8bad0>
2025-01-10T13:23:47.8458755Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5bc22510>
2025-01-10T13:23:47.8458837Z attr = 'j_blues'
2025-01-10T13:23:47.8458842Z 
2025-01-10T13:23:47.8458982Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8459103Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8459188Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8459264Z         try:
2025-01-10T13:23:47.8459405Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8459494Z         except KeyError:
2025-01-10T13:23:47.8459632Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8459708Z     
2025-01-10T13:23:47.8459796Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8459898Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8459992Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8460131Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8460222Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8460314Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8460429Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8460511Z             else:
2025-01-10T13:23:47.8460611Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8460720Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8460725Z 
2025-01-10T13:23:47.8460858Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8460970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8461121Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8461194Z     ???
2025-01-10T13:23:47.8461312Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8461402Z 
2025-01-10T13:23:47.8461481Z >   ???
2025-01-10T13:23:47.8461609Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8461684Z E   
2025-01-10T13:23:47.8461815Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8461932Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8462005Z E          ...
2025-01-10T13:23:47.8462097Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8462226Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8462344Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8462417Z E          ...
2025-01-10T13:23:47.8462508Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8462632Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8462741Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8462828Z 
2025-01-10T13:23:47.8462930Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8463365Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-01-10T13:23:47.8463372Z 
2025-01-10T13:23:47.8463506Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8463633Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8463739Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8463871Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8463997Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8464091Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8464173Z err_msg = None
2025-01-10T13:23:47.8464177Z 
2025-01-10T13:23:47.8464303Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8464385Z         if err_msg is None:
2025-01-10T13:23:47.8464484Z             if left.shape != right.shape:
2025-01-10T13:23:47.8464567Z                 raise_assert_detail(
2025-01-10T13:23:47.8464715Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8464787Z                 )
2025-01-10T13:23:47.8464862Z     
2025-01-10T13:23:47.8464936Z             diff = 0
2025-01-10T13:23:47.8465053Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8465141Z                 # count up differences
2025-01-10T13:23:47.8465317Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8465400Z                     diff += 1
2025-01-10T13:23:47.8465479Z     
2025-01-10T13:23:47.8465568Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8465708Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8465887Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8466001Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8466077Z E           
2025-01-10T13:23:47.8466187Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8466448Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8466708Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8466844Z 
2025-01-10T13:23:47.8467154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8467159Z 
2025-01-10T13:23:47.8467332Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8467336Z 
2025-01-10T13:23:47.8467558Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba8890>
2025-01-10T13:23:47.8467730Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8467806Z attr = 'lines'
2025-01-10T13:23:47.8467810Z 
2025-01-10T13:23:47.8467951Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8468067Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8468157Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8468233Z         try:
2025-01-10T13:23:47.8468372Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8468457Z         except KeyError:
2025-01-10T13:23:47.8468707Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8468786Z     
2025-01-10T13:23:47.8468875Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8468974Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8469063Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8469200Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8469288Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8469385Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8469498Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8469576Z             else:
2025-01-10T13:23:47.8469692Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8469895Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8469904Z 
2025-01-10T13:23:47.8470131Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8470340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8470594Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8470710Z     ???
2025-01-10T13:23:47.8470896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8470903Z 
2025-01-10T13:23:47.8471017Z >   ???
2025-01-10T13:23:47.8471239Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8471318Z E   
2025-01-10T13:23:47.8471454Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8471568Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8471646Z E          ...
2025-01-10T13:23:47.8471741Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8471870Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8471988Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8472064Z E          ...
2025-01-10T13:23:47.8472162Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8472285Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8472393Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8472397Z 
2025-01-10T13:23:47.8472488Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8472802Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-01-10T13:23:47.8472807Z 
2025-01-10T13:23:47.8473182Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba8950>
2025-01-10T13:23:47.8473359Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8473456Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8473461Z 
2025-01-10T13:23:47.8473596Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8473715Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8473969Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8474052Z         try:
2025-01-10T13:23:47.8474195Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8474283Z         except KeyError:
2025-01-10T13:23:47.8474421Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8474495Z     
2025-01-10T13:23:47.8474583Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8474681Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8474769Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8474907Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8474999Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8475092Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8475207Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8475212Z 
2025-01-10T13:23:47.8475338Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8475562Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8475572Z 
2025-01-10T13:23:47.8475710Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8475801Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8475911Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8476006Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8476149Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8476233Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8476343Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8476423Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8476505Z err_msg = None
2025-01-10T13:23:47.8476509Z 
2025-01-10T13:23:47.8476619Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8484388Z         if err_msg is None:
2025-01-10T13:23:47.8484552Z             if left.shape != right.shape:
2025-01-10T13:23:47.8484648Z                 raise_assert_detail(
2025-01-10T13:23:47.8484822Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8484899Z                 )
2025-01-10T13:23:47.8484976Z     
2025-01-10T13:23:47.8485057Z             diff = 0
2025-01-10T13:23:47.8485183Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8485281Z                 # count up differences
2025-01-10T13:23:47.8485460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8485548Z                     diff += 1
2025-01-10T13:23:47.8485620Z     
2025-01-10T13:23:47.8485716Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8485860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8486038Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8486156Z E           AssertionError: Series are different
2025-01-10T13:23:47.8486235Z E           
2025-01-10T13:23:47.8486342Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8486715Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8487052Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8487579Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8487591Z 
2025-01-10T13:23:47.8487921Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8488237Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-01-10T13:23:47.8488250Z 
2025-01-10T13:23:47.8488655Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba8a10>
2025-01-10T13:23:47.8488959Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8489283Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8489291Z 
2025-01-10T13:23:47.8489531Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8489730Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8489878Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8489996Z         try:
2025-01-10T13:23:47.8490147Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8490237Z         except KeyError:
2025-01-10T13:23:47.8490378Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8490454Z     
2025-01-10T13:23:47.8490543Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8490647Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8490738Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8490882Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8490970Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8491076Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8491187Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8491192Z 
2025-01-10T13:23:47.8491325Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8491449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8491453Z 
2025-01-10T13:23:47.8491590Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8491681Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8491791Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8491878Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8492017Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8492107Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8492212Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8492304Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8492382Z err_msg = None
2025-01-10T13:23:47.8492391Z 
2025-01-10T13:23:47.8492504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8492591Z         if err_msg is None:
2025-01-10T13:23:47.8492686Z             if left.shape != right.shape:
2025-01-10T13:23:47.8492778Z                 raise_assert_detail(
2025-01-10T13:23:47.8492923Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8493001Z                 )
2025-01-10T13:23:47.8493217Z     
2025-01-10T13:23:47.8493300Z             diff = 0
2025-01-10T13:23:47.8493416Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8493514Z                 # count up differences
2025-01-10T13:23:47.8493683Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8493770Z                     diff += 1
2025-01-10T13:23:47.8493969Z     
2025-01-10T13:23:47.8494069Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8494214Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8494383Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8494494Z E           AssertionError: Series are different
2025-01-10T13:23:47.8494571Z E           
2025-01-10T13:23:47.8494682Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8495047Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8495539Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8495921Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8495926Z 
2025-01-10T13:23:47.8496245Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8496526Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-01-10T13:23:47.8496531Z 
2025-01-10T13:23:47.8496671Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8496800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8496907Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8497042Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8497169Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8497262Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8497348Z err_msg = None
2025-01-10T13:23:47.8497352Z 
2025-01-10T13:23:47.8497465Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8497553Z         if err_msg is None:
2025-01-10T13:23:47.8497662Z             if left.shape != right.shape:
2025-01-10T13:23:47.8497748Z                 raise_assert_detail(
2025-01-10T13:23:47.8497900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8497971Z                 )
2025-01-10T13:23:47.8498047Z     
2025-01-10T13:23:47.8498122Z             diff = 0
2025-01-10T13:23:47.8498241Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8498331Z                 # count up differences
2025-01-10T13:23:47.8498504Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8498583Z                     diff += 1
2025-01-10T13:23:47.8498659Z     
2025-01-10T13:23:47.8498749Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8498889Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8499058Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8499273Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8499350Z E           
2025-01-10T13:23:47.8499462Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8499726Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8499986Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8499991Z 
2025-01-10T13:23:47.8500388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8500397Z 
2025-01-10T13:23:47.8500587Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8500592Z 
2025-01-10T13:23:47.8500819Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba8c50>
2025-01-10T13:23:47.8501026Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>, attr = 'nu'
2025-01-10T13:23:47.8501030Z 
2025-01-10T13:23:47.8501176Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8501295Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8501386Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8501460Z         try:
2025-01-10T13:23:47.8501639Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8501723Z         except KeyError:
2025-01-10T13:23:47.8501866Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8501938Z     
2025-01-10T13:23:47.8502041Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8502137Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8502233Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8502369Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8502460Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8502550Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8502667Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8502672Z 
2025-01-10T13:23:47.8502804Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8502919Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8503177Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8503252Z     ???
2025-01-10T13:23:47.8503367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8503372Z 
2025-01-10T13:23:47.8503448Z >   ???
2025-01-10T13:23:47.8503587Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8503657Z E   
2025-01-10T13:23:47.8503791Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8503904Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8503983Z E          ...
2025-01-10T13:23:47.8504086Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8504218Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8504338Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8504412Z E          ...
2025-01-10T13:23:47.8504505Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8504630Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8504740Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8504745Z 
2025-01-10T13:23:47.8504836Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8505248Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-01-10T13:23:47.8505252Z 
2025-01-10T13:23:47.8505383Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8505513Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8505620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8505754Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8505880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8505974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8506057Z err_msg = None
2025-01-10T13:23:47.8506061Z 
2025-01-10T13:23:47.8506170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8506258Z         if err_msg is None:
2025-01-10T13:23:47.8506463Z             if left.shape != right.shape:
2025-01-10T13:23:47.8506557Z                 raise_assert_detail(
2025-01-10T13:23:47.8506712Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8506785Z                 )
2025-01-10T13:23:47.8506862Z     
2025-01-10T13:23:47.8506975Z             diff = 0
2025-01-10T13:23:47.8507176Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8507325Z                 # count up differences
2025-01-10T13:23:47.8507624Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8507747Z                     diff += 1
2025-01-10T13:23:47.8507824Z     
2025-01-10T13:23:47.8507916Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8508059Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8508228Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8508360Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8508434Z E           
2025-01-10T13:23:47.8508557Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8508820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8509076Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8509082Z 
2025-01-10T13:23:47.8509390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8509397Z 
2025-01-10T13:23:47.8509571Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8509576Z 
2025-01-10T13:23:47.8509798Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba8d10>
2025-01-10T13:23:47.8509972Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8510055Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8510059Z 
2025-01-10T13:23:47.8510201Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8510318Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8510408Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8510480Z         try:
2025-01-10T13:23:47.8510625Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8510708Z         except KeyError:
2025-01-10T13:23:47.8510852Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8511041Z     
2025-01-10T13:23:47.8511132Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8511232Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8511321Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8511460Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8511548Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8511643Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8511754Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8511758Z 
2025-01-10T13:23:47.8511888Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8512001Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8512151Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8512223Z     ???
2025-01-10T13:23:47.8512338Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8512421Z 
2025-01-10T13:23:47.8512499Z >   ???
2025-01-10T13:23:47.8512629Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8512705Z E   
2025-01-10T13:23:47.8512831Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8512947Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8513179Z E          ...
2025-01-10T13:23:47.8513276Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8513406Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8513522Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8513594Z E          ...
2025-01-10T13:23:47.8513685Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8513811Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8513922Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8513926Z 
2025-01-10T13:23:47.8514031Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8514293Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-01-10T13:23:47.8514297Z 
2025-01-10T13:23:47.8514430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8514555Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8514658Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8514789Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8514914Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8515009Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8515091Z err_msg = None
2025-01-10T13:23:47.8515095Z 
2025-01-10T13:23:47.8515214Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8515304Z         if err_msg is None:
2025-01-10T13:23:47.8515405Z             if left.shape != right.shape:
2025-01-10T13:23:47.8515490Z                 raise_assert_detail(
2025-01-10T13:23:47.8515641Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8515714Z                 )
2025-01-10T13:23:47.8515789Z     
2025-01-10T13:23:47.8515863Z             diff = 0
2025-01-10T13:23:47.8515980Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8516068Z                 # count up differences
2025-01-10T13:23:47.8516242Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8516320Z                     diff += 1
2025-01-10T13:23:47.8516399Z     
2025-01-10T13:23:47.8516491Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8516627Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8516803Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8517062Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8517141Z E           
2025-01-10T13:23:47.8517251Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8517512Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8517769Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8517779Z 
2025-01-10T13:23:47.8518187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8518192Z 
2025-01-10T13:23:47.8518373Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8518377Z 
2025-01-10T13:23:47.8518599Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba8dd0>
2025-01-10T13:23:47.8518805Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>, attr = 'f_lu'
2025-01-10T13:23:47.8518809Z 
2025-01-10T13:23:47.8518945Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8519064Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8519153Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8519225Z         try:
2025-01-10T13:23:47.8519369Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8519451Z         except KeyError:
2025-01-10T13:23:47.8519597Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8519676Z     
2025-01-10T13:23:47.8519771Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8519865Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8519958Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8520091Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8520183Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8520277Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8520390Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8520395Z 
2025-01-10T13:23:47.8520523Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8520634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8520784Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8520854Z     ???
2025-01-10T13:23:47.8520966Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8520976Z 
2025-01-10T13:23:47.8521049Z >   ???
2025-01-10T13:23:47.8521180Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8521251Z E   
2025-01-10T13:23:47.8521381Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8521492Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8521572Z E          ...
2025-01-10T13:23:47.8521661Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8521795Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8521912Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8521985Z E          ...
2025-01-10T13:23:47.8522075Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8522200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8522309Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8522313Z 
2025-01-10T13:23:47.8522508Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8522836Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-01-10T13:23:47.8522841Z 
2025-01-10T13:23:47.8523170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba93d0>
2025-01-10T13:23:47.8523340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8523437Z attr = 'stimulated_emission_factor'
2025-01-10T13:23:47.8523442Z 
2025-01-10T13:23:47.8523575Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8523692Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8523775Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8523852Z         try:
2025-01-10T13:23:47.8524100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8524248Z         except KeyError:
2025-01-10T13:23:47.8524481Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8524802Z     
2025-01-10T13:23:47.8524955Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8525115Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8525268Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8525499Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8525594Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8525687Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8525804Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8525877Z             else:
2025-01-10T13:23:47.8525978Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8526086Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8526091Z 
2025-01-10T13:23:47.8526221Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8526332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8526497Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8526569Z     ???
2025-01-10T13:23:47.8526686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8526690Z 
2025-01-10T13:23:47.8526764Z >   ???
2025-01-10T13:23:47.8526945Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:47.8527019Z E   
2025-01-10T13:23:47.8527184Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-10T13:23:47.8527552Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8532081Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-10T13:23:47.8536978Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T13:23:47.8537177Z E   At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T13:23:47.8537182Z 
2025-01-10T13:23:47.8537277Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8537580Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-01-10T13:23:47.8537585Z 
2025-01-10T13:23:47.8537719Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8537855Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8537962Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8538100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8538222Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8538321Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8538399Z err_msg = None
2025-01-10T13:23:47.8538403Z 
2025-01-10T13:23:47.8538520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8538603Z         if err_msg is None:
2025-01-10T13:23:47.8538704Z             if left.shape != right.shape:
2025-01-10T13:23:47.8538788Z                 raise_assert_detail(
2025-01-10T13:23:47.8538938Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8539133Z                 )
2025-01-10T13:23:47.8539211Z     
2025-01-10T13:23:47.8539287Z             diff = 0
2025-01-10T13:23:47.8539403Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8539496Z                 # count up differences
2025-01-10T13:23:47.8539671Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8539753Z                     diff += 1
2025-01-10T13:23:47.8539823Z     
2025-01-10T13:23:47.8539914Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8540052Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8540225Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8540339Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8540418Z E           
2025-01-10T13:23:47.8540529Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8540867Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8541134Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8541139Z 
2025-01-10T13:23:47.8541446Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8541450Z 
2025-01-10T13:23:47.8541622Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8541627Z 
2025-01-10T13:23:47.8541858Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba9490>
2025-01-10T13:23:47.8542065Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8542232Z attr = 'previous_beta_sobolev'
2025-01-10T13:23:47.8542240Z 
2025-01-10T13:23:47.8542473Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8542681Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8542821Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8542946Z         try:
2025-01-10T13:23:47.8543324Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8543462Z         except KeyError:
2025-01-10T13:23:47.8543695Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8543802Z     
2025-01-10T13:23:47.8543892Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8543992Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8544088Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8544235Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8544326Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8544417Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8544531Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8544604Z             else:
2025-01-10T13:23:47.8544702Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8544815Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8544819Z 
2025-01-10T13:23:47.8544951Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8545064Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8545223Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8545294Z     ???
2025-01-10T13:23:47.8545408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8545412Z 
2025-01-10T13:23:47.8545644Z >   ???
2025-01-10T13:23:47.8545782Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8545857Z E   
2025-01-10T13:23:47.8545985Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8546101Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8546175Z E          ...
2025-01-10T13:23:47.8546266Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8546395Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8546515Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8546585Z E          ...
2025-01-10T13:23:47.8546676Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8546801Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8546911Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8546916Z 
2025-01-10T13:23:47.8547012Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8547399Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-01-10T13:23:47.8547404Z 
2025-01-10T13:23:47.8547543Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8547667Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8547769Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8547901Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8548024Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8548122Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8548198Z err_msg = None
2025-01-10T13:23:47.8548202Z 
2025-01-10T13:23:47.8548317Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8548399Z         if err_msg is None:
2025-01-10T13:23:47.8548509Z             if left.shape != right.shape:
2025-01-10T13:23:47.8548592Z                 raise_assert_detail(
2025-01-10T13:23:47.8548738Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8548810Z                 )
2025-01-10T13:23:47.8548884Z     
2025-01-10T13:23:47.8548957Z             diff = 0
2025-01-10T13:23:47.8549072Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8549162Z                 # count up differences
2025-01-10T13:23:47.8549333Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8549410Z                     diff += 1
2025-01-10T13:23:47.8549487Z     
2025-01-10T13:23:47.8549579Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8549716Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8549887Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8550007Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8550085Z E           
2025-01-10T13:23:47.8550197Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8550459Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8550720Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8550725Z 
2025-01-10T13:23:47.8551030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8551148Z 
2025-01-10T13:23:47.8551335Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8551340Z 
2025-01-10T13:23:47.8551565Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba9550>
2025-01-10T13:23:47.8551733Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8551812Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8551817Z 
2025-01-10T13:23:47.8551961Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8552082Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8552168Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8552244Z         try:
2025-01-10T13:23:47.8552390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8552475Z         except KeyError:
2025-01-10T13:23:47.8552615Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8552771Z     
2025-01-10T13:23:47.8552867Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8552969Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8553206Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8553356Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8553442Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8553539Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8553654Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8553731Z             else:
2025-01-10T13:23:47.8553830Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8553939Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8553943Z 
2025-01-10T13:23:47.8554075Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8554194Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8554357Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8554429Z     ???
2025-01-10T13:23:47.8554545Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8554549Z 
2025-01-10T13:23:47.8554619Z >   ???
2025-01-10T13:23:47.8554751Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8554821Z E   
2025-01-10T13:23:47.8554955Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8555071Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8555144Z E          ...
2025-01-10T13:23:47.8555237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8555368Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8555486Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8555559Z E          ...
2025-01-10T13:23:47.8555646Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8555779Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8555889Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8555893Z 
2025-01-10T13:23:47.8555984Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8556269Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-01-10T13:23:47.8556273Z 
2025-01-10T13:23:47.8556429Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8556654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8556831Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8556976Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8557105Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8557425Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8557506Z err_msg = None
2025-01-10T13:23:47.8557511Z 
2025-01-10T13:23:47.8557626Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8557714Z         if err_msg is None:
2025-01-10T13:23:47.8557812Z             if left.shape != right.shape:
2025-01-10T13:23:47.8557904Z                 raise_assert_detail(
2025-01-10T13:23:47.8558056Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8558128Z                 )
2025-01-10T13:23:47.8558204Z     
2025-01-10T13:23:47.8558278Z             diff = 0
2025-01-10T13:23:47.8558396Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8558485Z                 # count up differences
2025-01-10T13:23:47.8558659Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8558738Z                     diff += 1
2025-01-10T13:23:47.8558813Z     
2025-01-10T13:23:47.8559019Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8559167Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8559334Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8559449Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8559526Z E           
2025-01-10T13:23:47.8559637Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8559899Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8560163Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8560172Z 
2025-01-10T13:23:47.8560555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8560563Z 
2025-01-10T13:23:47.8560860Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8560868Z 
2025-01-10T13:23:47.8561158Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba9610>
2025-01-10T13:23:47.8561599Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8561682Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8561687Z 
2025-01-10T13:23:47.8561831Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8561948Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8562038Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8562115Z         try:
2025-01-10T13:23:47.8562267Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8562354Z         except KeyError:
2025-01-10T13:23:47.8562492Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8562566Z     
2025-01-10T13:23:47.8562654Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8562753Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8562843Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8562978Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8563202Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8563302Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8563419Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8563497Z             else:
2025-01-10T13:23:47.8563593Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8563706Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8563855Z 
2025-01-10T13:23:47.8563999Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8564117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8564277Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8564350Z     ???
2025-01-10T13:23:47.8564467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8564472Z 
2025-01-10T13:23:47.8564542Z >   ???
2025-01-10T13:23:47.8564680Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8564752Z E   
2025-01-10T13:23:47.8564889Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8565003Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8565081Z E          ...
2025-01-10T13:23:47.8565172Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8565310Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8565563Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8565640Z E          ...
2025-01-10T13:23:47.8565733Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8565860Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8565973Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8565977Z 
2025-01-10T13:23:47.8566068Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8566339Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-01-10T13:23:47.8566344Z 
2025-01-10T13:23:47.8566476Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8566611Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8566715Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8566857Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8566985Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8567081Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8567162Z err_msg = None
2025-01-10T13:23:47.8567166Z 
2025-01-10T13:23:47.8567281Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8567367Z         if err_msg is None:
2025-01-10T13:23:47.8567465Z             if left.shape != right.shape:
2025-01-10T13:23:47.8567557Z                 raise_assert_detail(
2025-01-10T13:23:47.8567704Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8567784Z                 )
2025-01-10T13:23:47.8567855Z     
2025-01-10T13:23:47.8567935Z             diff = 0
2025-01-10T13:23:47.8568052Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8568141Z                 # count up differences
2025-01-10T13:23:47.8568325Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8568407Z                     diff += 1
2025-01-10T13:23:47.8568485Z     
2025-01-10T13:23:47.8568576Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8568717Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8568888Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8569006Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8569080Z E           
2025-01-10T13:23:47.8569199Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8569465Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8569820Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8569824Z 
2025-01-10T13:23:47.8570141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8570145Z 
2025-01-10T13:23:47.8570321Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8570330Z 
2025-01-10T13:23:47.8570556Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61ba9790>
2025-01-10T13:23:47.8570728Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef59750380>
2025-01-10T13:23:47.8570806Z attr = 'j_blues'
2025-01-10T13:23:47.8570814Z 
2025-01-10T13:23:47.8571034Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8571157Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8571249Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8571324Z         try:
2025-01-10T13:23:47.8571471Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8571552Z         except KeyError:
2025-01-10T13:23:47.8571700Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8571772Z     
2025-01-10T13:23:47.8571864Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8571960Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8572055Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8572193Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8572278Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8572371Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8572491Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8572571Z             else:
2025-01-10T13:23:47.8572666Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8572776Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8572781Z 
2025-01-10T13:23:47.8572906Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8573172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8573322Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8573399Z     ???
2025-01-10T13:23:47.8573513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8573518Z 
2025-01-10T13:23:47.8573588Z >   ???
2025-01-10T13:23:47.8573721Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8573791Z E   
2025-01-10T13:23:47.8573927Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8574046Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8574122Z E          ...
2025-01-10T13:23:47.8574212Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8574347Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8574458Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8574535Z E          ...
2025-01-10T13:23:47.8574623Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8574760Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8574868Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8574873Z 
2025-01-10T13:23:47.8574964Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8575222Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-01-10T13:23:47.8575226Z 
2025-01-10T13:23:47.8575357Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8575643Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8575742Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8575885Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8576011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8576111Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8576193Z err_msg = None
2025-01-10T13:23:47.8576198Z 
2025-01-10T13:23:47.8576313Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8576401Z         if err_msg is None:
2025-01-10T13:23:47.8576497Z             if left.shape != right.shape:
2025-01-10T13:23:47.8576586Z                 raise_assert_detail(
2025-01-10T13:23:47.8576734Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8576921Z                 )
2025-01-10T13:23:47.8576994Z     
2025-01-10T13:23:47.8577074Z             diff = 0
2025-01-10T13:23:47.8577190Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8577283Z                 # count up differences
2025-01-10T13:23:47.8577453Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8577540Z                     diff += 1
2025-01-10T13:23:47.8577611Z     
2025-01-10T13:23:47.8577709Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8577848Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8578018Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8578135Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8578209Z E           
2025-01-10T13:23:47.8578326Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8578587Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8578929Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8578937Z 
2025-01-10T13:23:47.8579470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8579478Z 
2025-01-10T13:23:47.8579770Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8579777Z 
2025-01-10T13:23:47.8580184Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61baa510>
2025-01-10T13:23:47.8580463Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8580593Z attr = 'lines'
2025-01-10T13:23:47.8580599Z 
2025-01-10T13:23:47.8580828Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8580947Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8581038Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8581112Z         try:
2025-01-10T13:23:47.8581257Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8581340Z         except KeyError:
2025-01-10T13:23:47.8581485Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8581560Z     
2025-01-10T13:23:47.8581653Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8581749Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8581845Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8582099Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8582191Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8582284Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8582401Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8582480Z             else:
2025-01-10T13:23:47.8582576Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8582687Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8582691Z 
2025-01-10T13:23:47.8582819Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8582937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8583212Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8583290Z     ???
2025-01-10T13:23:47.8583402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8583407Z 
2025-01-10T13:23:47.8583488Z >   ???
2025-01-10T13:23:47.8583733Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8583815Z E   
2025-01-10T13:23:47.8583952Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8584070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8584148Z E          ...
2025-01-10T13:23:47.8584237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8584374Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8584488Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8584566Z E          ...
2025-01-10T13:23:47.8584653Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8584786Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8584892Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8584896Z 
2025-01-10T13:23:47.8584992Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8585296Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-01-10T13:23:47.8585306Z 
2025-01-10T13:23:47.8585530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61baa5d0>
2025-01-10T13:23:47.8585702Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8585791Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8585795Z 
2025-01-10T13:23:47.8585938Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8586051Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8586140Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8586215Z         try:
2025-01-10T13:23:47.8586359Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8586441Z         except KeyError:
2025-01-10T13:23:47.8586584Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8586655Z     
2025-01-10T13:23:47.8586761Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8586862Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8586953Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8587089Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8587176Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8587273Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8587383Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8587387Z 
2025-01-10T13:23:47.8587516Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8587627Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8587631Z 
2025-01-10T13:23:47.8587774Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8587862Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8587977Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8588193Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8588338Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8588427Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8588534Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8588618Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8588695Z err_msg = None
2025-01-10T13:23:47.8588699Z 
2025-01-10T13:23:47.8588814Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8588897Z         if err_msg is None:
2025-01-10T13:23:47.8588998Z             if left.shape != right.shape:
2025-01-10T13:23:47.8589084Z                 raise_assert_detail(
2025-01-10T13:23:47.8589231Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8589309Z                 )
2025-01-10T13:23:47.8589381Z     
2025-01-10T13:23:47.8589466Z             diff = 0
2025-01-10T13:23:47.8589659Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8589759Z                 # count up differences
2025-01-10T13:23:47.8589926Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8590009Z                     diff += 1
2025-01-10T13:23:47.8590081Z     
2025-01-10T13:23:47.8590236Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8590457Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8590747Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8590927Z E           AssertionError: Series are different
2025-01-10T13:23:47.8591055Z E           
2025-01-10T13:23:47.8591223Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8591830Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8592172Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8592503Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8592518Z 
2025-01-10T13:23:47.8592827Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8593273Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-01-10T13:23:47.8593279Z 
2025-01-10T13:23:47.8593509Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61baa690>
2025-01-10T13:23:47.8593681Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8593773Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8593777Z 
2025-01-10T13:23:47.8593920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8594043Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8594130Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8594209Z         try:
2025-01-10T13:23:47.8594506Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8594595Z         except KeyError:
2025-01-10T13:23:47.8594735Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8594812Z     
2025-01-10T13:23:47.8594904Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8595006Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8595098Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8595236Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8595322Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8595421Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8595533Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8595543Z 
2025-01-10T13:23:47.8595668Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8595790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8595799Z 
2025-01-10T13:23:47.8596059Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8596156Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8596265Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8596351Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8596490Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8596583Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8596688Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8596770Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8596850Z err_msg = None
2025-01-10T13:23:47.8596854Z 
2025-01-10T13:23:47.8596963Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8597050Z         if err_msg is None:
2025-01-10T13:23:47.8597147Z             if left.shape != right.shape:
2025-01-10T13:23:47.8597246Z                 raise_assert_detail(
2025-01-10T13:23:47.8597390Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8597470Z                 )
2025-01-10T13:23:47.8597543Z     
2025-01-10T13:23:47.8597624Z             diff = 0
2025-01-10T13:23:47.8597738Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8597835Z                 # count up differences
2025-01-10T13:23:47.8598008Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8598096Z                     diff += 1
2025-01-10T13:23:47.8598167Z     
2025-01-10T13:23:47.8598260Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8598400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8598571Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8598681Z E           AssertionError: Series are different
2025-01-10T13:23:47.8598761Z E           
2025-01-10T13:23:47.8598871Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8599235Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8599609Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8600081Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8600086Z 
2025-01-10T13:23:47.8600392Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8600643Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-01-10T13:23:47.8600647Z 
2025-01-10T13:23:47.8600782Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8600910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8601091Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8601227Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8601355Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8601449Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8601535Z err_msg = None
2025-01-10T13:23:47.8601539Z 
2025-01-10T13:23:47.8601683Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8601774Z         if err_msg is None:
2025-01-10T13:23:47.8601876Z             if left.shape != right.shape:
2025-01-10T13:23:47.8601963Z                 raise_assert_detail(
2025-01-10T13:23:47.8602110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8602183Z                 )
2025-01-10T13:23:47.8602259Z     
2025-01-10T13:23:47.8602333Z             diff = 0
2025-01-10T13:23:47.8602460Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8602550Z                 # count up differences
2025-01-10T13:23:47.8602723Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8602803Z                     diff += 1
2025-01-10T13:23:47.8602880Z     
2025-01-10T13:23:47.8602970Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8603218Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8603389Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8603509Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8603586Z E           
2025-01-10T13:23:47.8603700Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8603968Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8604369Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8604385Z 
2025-01-10T13:23:47.8604920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8604927Z 
2025-01-10T13:23:47.8605218Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8605225Z 
2025-01-10T13:23:47.8605614Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61baa8d0>
2025-01-10T13:23:47.8605833Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>, attr = 'nu'
2025-01-10T13:23:47.8605975Z 
2025-01-10T13:23:47.8606120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8606243Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8606329Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8606407Z         try:
2025-01-10T13:23:47.8606554Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8606636Z         except KeyError:
2025-01-10T13:23:47.8606780Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8606851Z     
2025-01-10T13:23:47.8606944Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8607040Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8607136Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8607270Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8607364Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8607568Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8607694Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8607698Z 
2025-01-10T13:23:47.8607828Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8607948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8608100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8608173Z     ???
2025-01-10T13:23:47.8608289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8608294Z 
2025-01-10T13:23:47.8608367Z >   ???
2025-01-10T13:23:47.8608500Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8608571Z E   
2025-01-10T13:23:47.8608705Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8608821Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8608900Z E          ...
2025-01-10T13:23:47.8609000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8609138Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8609251Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8609330Z E          ...
2025-01-10T13:23:47.8609422Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8609549Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8609661Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8609666Z 
2025-01-10T13:23:47.8609756Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8610026Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-01-10T13:23:47.8610030Z 
2025-01-10T13:23:47.8610164Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8610293Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8610398Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8610536Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8610664Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8610760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8610843Z err_msg = None
2025-01-10T13:23:47.8610847Z 
2025-01-10T13:23:47.8610956Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8611041Z         if err_msg is None:
2025-01-10T13:23:47.8611136Z             if left.shape != right.shape:
2025-01-10T13:23:47.8611228Z                 raise_assert_detail(
2025-01-10T13:23:47.8611373Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8611451Z                 )
2025-01-10T13:23:47.8611522Z     
2025-01-10T13:23:47.8611605Z             diff = 0
2025-01-10T13:23:47.8611811Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8611906Z                 # count up differences
2025-01-10T13:23:47.8612082Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8612162Z                     diff += 1
2025-01-10T13:23:47.8612239Z     
2025-01-10T13:23:47.8612328Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8612470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8612640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8612756Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8612830Z E           
2025-01-10T13:23:47.8612948Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8613456Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8613731Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8613736Z 
2025-01-10T13:23:47.8614044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8614049Z 
2025-01-10T13:23:47.8614217Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8614222Z 
2025-01-10T13:23:47.8614453Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61baa990>
2025-01-10T13:23:47.8614626Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8614716Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8614720Z 
2025-01-10T13:23:47.8614863Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8614978Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8615068Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8615143Z         try:
2025-01-10T13:23:47.8615305Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8615388Z         except KeyError:
2025-01-10T13:23:47.8615532Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8615603Z     
2025-01-10T13:23:47.8615698Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8615795Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8615890Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8616022Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8616119Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8616219Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8616332Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8616337Z 
2025-01-10T13:23:47.8616470Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8616583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8616734Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8616808Z     ???
2025-01-10T13:23:47.8616924Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8616928Z 
2025-01-10T13:23:47.8617000Z >   ???
2025-01-10T13:23:47.8617135Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8617206Z E   
2025-01-10T13:23:47.8617340Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8617458Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8617674Z E          ...
2025-01-10T13:23:47.8617773Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8617903Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8618024Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8618099Z E          ...
2025-01-10T13:23:47.8618194Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8618321Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8618431Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8618435Z 
2025-01-10T13:23:47.8618525Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8618780Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-01-10T13:23:47.8618785Z 
2025-01-10T13:23:47.8618918Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8619137Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8619247Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8619381Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8619510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8619603Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8619684Z err_msg = None
2025-01-10T13:23:47.8619688Z 
2025-01-10T13:23:47.8619805Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8619893Z         if err_msg is None:
2025-01-10T13:23:47.8619990Z             if left.shape != right.shape:
2025-01-10T13:23:47.8620082Z                 raise_assert_detail(
2025-01-10T13:23:47.8620226Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8620300Z                 )
2025-01-10T13:23:47.8620374Z     
2025-01-10T13:23:47.8620465Z             diff = 0
2025-01-10T13:23:47.8620581Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8620670Z                 # count up differences
2025-01-10T13:23:47.8620843Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8620922Z                     diff += 1
2025-01-10T13:23:47.8620998Z     
2025-01-10T13:23:47.8621091Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8621232Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8621404Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8621524Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8621598Z E           
2025-01-10T13:23:47.8621717Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8621982Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8622293Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8622302Z 
2025-01-10T13:23:47.8622843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8622852Z 
2025-01-10T13:23:47.8623277Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8623289Z 
2025-01-10T13:23:47.8623670Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61baaa50>
2025-01-10T13:23:47.8624122Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>, attr = 'f_lu'
2025-01-10T13:23:47.8624128Z 
2025-01-10T13:23:47.8624271Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8624395Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8624481Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8624559Z         try:
2025-01-10T13:23:47.8624700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8624789Z         except KeyError:
2025-01-10T13:23:47.8624937Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8625008Z     
2025-01-10T13:23:47.8625102Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8625197Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8625294Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8625427Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8625638Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8625734Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8625852Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8625856Z 
2025-01-10T13:23:47.8625982Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8626099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8626247Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8626325Z     ???
2025-01-10T13:23:47.8626440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8626444Z 
2025-01-10T13:23:47.8626516Z >   ???
2025-01-10T13:23:47.8626648Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8626720Z E   
2025-01-10T13:23:47.8626853Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8626967Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8627056Z E          ...
2025-01-10T13:23:47.8627145Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8627282Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8627395Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8627476Z E          ...
2025-01-10T13:23:47.8627563Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8627693Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8627803Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8627808Z 
2025-01-10T13:23:47.8627898Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8628207Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-01-10T13:23:47.8628212Z 
2025-01-10T13:23:47.8628439Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bab050>
2025-01-10T13:23:47.8628615Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8628712Z attr = 'stimulated_emission_factor'
2025-01-10T13:23:47.8628716Z 
2025-01-10T13:23:47.8628858Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8628972Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8629063Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8629141Z         try:
2025-01-10T13:23:47.8629279Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8629366Z         except KeyError:
2025-01-10T13:23:47.8629505Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8629582Z     
2025-01-10T13:23:47.8629670Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8629770Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8629861Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8629999Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8630182Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8630281Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8630394Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8630475Z             else:
2025-01-10T13:23:47.8630570Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8630685Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8630690Z 
2025-01-10T13:23:47.8630819Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8630932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8631084Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8631157Z     ???
2025-01-10T13:23:47.8631272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8631276Z 
2025-01-10T13:23:47.8631347Z >   ???
2025-01-10T13:23:47.8631529Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:47.8631688Z E   
2025-01-10T13:23:47.8631866Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:23:47.8632233Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8637311Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T13:23:47.8643193Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:23:47.8643511Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:23:47.8643517Z 
2025-01-10T13:23:47.8643618Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8643917Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-01-10T13:23:47.8643922Z 
2025-01-10T13:23:47.8644065Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8644197Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8644305Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8644451Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8644583Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8644684Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8644763Z err_msg = None
2025-01-10T13:23:47.8644767Z 
2025-01-10T13:23:47.8644891Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8644975Z         if err_msg is None:
2025-01-10T13:23:47.8645080Z             if left.shape != right.shape:
2025-01-10T13:23:47.8645167Z                 raise_assert_detail(
2025-01-10T13:23:47.8645320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8645395Z                 )
2025-01-10T13:23:47.8645473Z     
2025-01-10T13:23:47.8645549Z             diff = 0
2025-01-10T13:23:47.8645668Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8645767Z                 # count up differences
2025-01-10T13:23:47.8645947Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8646032Z                     diff += 1
2025-01-10T13:23:47.8646107Z     
2025-01-10T13:23:47.8646204Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8646346Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8646520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8646635Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8646713Z E           
2025-01-10T13:23:47.8646827Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8647095Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8647474Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8647479Z 
2025-01-10T13:23:47.8647786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8647790Z 
2025-01-10T13:23:47.8647967Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8647972Z 
2025-01-10T13:23:47.8648197Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bab110>
2025-01-10T13:23:47.8648372Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8648461Z attr = 'previous_beta_sobolev'
2025-01-10T13:23:47.8648580Z 
2025-01-10T13:23:47.8648732Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8648858Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8648943Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8649023Z         try:
2025-01-10T13:23:47.8649165Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8649254Z         except KeyError:
2025-01-10T13:23:47.8649394Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8649470Z     
2025-01-10T13:23:47.8649560Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8649661Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8649754Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8649891Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8649979Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8650079Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8650208Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8650283Z             else:
2025-01-10T13:23:47.8650383Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8650494Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8650498Z 
2025-01-10T13:23:47.8650631Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8650747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8650900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8650973Z     ???
2025-01-10T13:23:47.8651088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8651093Z 
2025-01-10T13:23:47.8651164Z >   ???
2025-01-10T13:23:47.8651295Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8651371Z E   
2025-01-10T13:23:47.8651503Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8651627Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8651701Z E          ...
2025-01-10T13:23:47.8651799Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8651933Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8652052Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8652129Z E          ...
2025-01-10T13:23:47.8652222Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8652348Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8652459Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8652464Z 
2025-01-10T13:23:47.8652554Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8652829Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-01-10T13:23:47.8652834Z 
2025-01-10T13:23:47.8652972Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8653321Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8653428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8653568Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8653704Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8653804Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8653889Z err_msg = None
2025-01-10T13:23:47.8653893Z 
2025-01-10T13:23:47.8654006Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8654092Z         if err_msg is None:
2025-01-10T13:23:47.8654196Z             if left.shape != right.shape:
2025-01-10T13:23:47.8654283Z                 raise_assert_detail(
2025-01-10T13:23:47.8654548Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8654631Z                 )
2025-01-10T13:23:47.8654705Z     
2025-01-10T13:23:47.8654780Z             diff = 0
2025-01-10T13:23:47.8654897Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8654987Z                 # count up differences
2025-01-10T13:23:47.8655164Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8655242Z                     diff += 1
2025-01-10T13:23:47.8655321Z     
2025-01-10T13:23:47.8655412Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8655558Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8655728Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8655848Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8655927Z E           
2025-01-10T13:23:47.8656041Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8656313Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8656571Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8656576Z 
2025-01-10T13:23:47.8656887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8656891Z 
2025-01-10T13:23:47.8657066Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8657073Z 
2025-01-10T13:23:47.8657303Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bab1d0>
2025-01-10T13:23:47.8657476Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8657557Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8657562Z 
2025-01-10T13:23:47.8657707Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8657824Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8657917Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8657990Z         try:
2025-01-10T13:23:47.8658140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8658229Z         except KeyError:
2025-01-10T13:23:47.8658369Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8658446Z     
2025-01-10T13:23:47.8658536Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8658640Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8658955Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8659202Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8659354Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8659516Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8659703Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8659831Z             else:
2025-01-10T13:23:47.8659987Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8660168Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8660174Z 
2025-01-10T13:23:47.8660393Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8660549Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8660705Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8660781Z     ???
2025-01-10T13:23:47.8660899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8660909Z 
2025-01-10T13:23:47.8661084Z >   ???
2025-01-10T13:23:47.8661223Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8661294Z E   
2025-01-10T13:23:47.8661429Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8661544Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8661624Z E          ...
2025-01-10T13:23:47.8661713Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8661849Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8661969Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8662042Z E          ...
2025-01-10T13:23:47.8662135Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8662260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8662370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8662375Z 
2025-01-10T13:23:47.8662469Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8662748Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-01-10T13:23:47.8662753Z 
2025-01-10T13:23:47.8662883Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8663142Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8663251Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8663383Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8663510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8663606Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8663686Z err_msg = None
2025-01-10T13:23:47.8663690Z 
2025-01-10T13:23:47.8663803Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8663902Z         if err_msg is None:
2025-01-10T13:23:47.8663999Z             if left.shape != right.shape:
2025-01-10T13:23:47.8664090Z                 raise_assert_detail(
2025-01-10T13:23:47.8664239Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8664317Z                 )
2025-01-10T13:23:47.8664391Z     
2025-01-10T13:23:47.8664470Z             diff = 0
2025-01-10T13:23:47.8664589Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8664678Z                 # count up differences
2025-01-10T13:23:47.8664851Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8664931Z                     diff += 1
2025-01-10T13:23:47.8665008Z     
2025-01-10T13:23:47.8665099Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8665240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8665414Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8665662Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8665736Z E           
2025-01-10T13:23:47.8665855Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8666118Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8666377Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8666382Z 
2025-01-10T13:23:47.8666797Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8666802Z 
2025-01-10T13:23:47.8666977Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8666987Z 
2025-01-10T13:23:47.8667209Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bab290>
2025-01-10T13:23:47.8667384Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8667465Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8667469Z 
2025-01-10T13:23:47.8667615Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8667731Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8667827Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8667901Z         try:
2025-01-10T13:23:47.8668046Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8668129Z         except KeyError:
2025-01-10T13:23:47.8668280Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8668356Z     
2025-01-10T13:23:47.8668449Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8668544Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8668639Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8668779Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8668866Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8668962Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8669073Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8669150Z             else:
2025-01-10T13:23:47.8669245Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8669358Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8669362Z 
2025-01-10T13:23:47.8669489Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8669610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8669763Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8669842Z     ???
2025-01-10T13:23:47.8669958Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8669963Z 
2025-01-10T13:23:47.8670034Z >   ???
2025-01-10T13:23:47.8670168Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8670239Z E   
2025-01-10T13:23:47.8670372Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8670484Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8670563Z E          ...
2025-01-10T13:23:47.8670653Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8670786Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8670898Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8670984Z E          ...
2025-01-10T13:23:47.8671072Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8671319Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8671431Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8671436Z 
2025-01-10T13:23:47.8671524Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8671786Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-01-10T13:23:47.8671790Z 
2025-01-10T13:23:47.8671920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8672052Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8672150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8672285Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8672408Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8672589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8672674Z err_msg = None
2025-01-10T13:23:47.8672678Z 
2025-01-10T13:23:47.8672789Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8672877Z         if err_msg is None:
2025-01-10T13:23:47.8672975Z             if left.shape != right.shape:
2025-01-10T13:23:47.8673209Z                 raise_assert_detail(
2025-01-10T13:23:47.8673355Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8673438Z                 )
2025-01-10T13:23:47.8673510Z     
2025-01-10T13:23:47.8673591Z             diff = 0
2025-01-10T13:23:47.8673706Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8673801Z                 # count up differences
2025-01-10T13:23:47.8673974Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8674059Z                     diff += 1
2025-01-10T13:23:47.8674140Z     
2025-01-10T13:23:47.8674237Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8674380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8674556Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8674679Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8674752Z E           
2025-01-10T13:23:47.8674871Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8675128Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8675402Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8675410Z 
2025-01-10T13:23:47.8675731Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8675735Z 
2025-01-10T13:23:47.8675908Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8675912Z 
2025-01-10T13:23:47.8676146Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bab410>
2025-01-10T13:23:47.8676318Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef36ea9790>
2025-01-10T13:23:47.8676402Z attr = 'j_blues'
2025-01-10T13:23:47.8676406Z 
2025-01-10T13:23:47.8676552Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8676672Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8676762Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8677115Z         try:
2025-01-10T13:23:47.8677376Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8677516Z         except KeyError:
2025-01-10T13:23:47.8677757Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8677876Z     
2025-01-10T13:23:47.8678029Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8678184Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8678345Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8678488Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8678584Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8678678Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8678799Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8678880Z             else:
2025-01-10T13:23:47.8678978Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8679247Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8679259Z 
2025-01-10T13:23:47.8679394Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8679517Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8679667Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8679747Z     ???
2025-01-10T13:23:47.8679859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8679863Z 
2025-01-10T13:23:47.8687642Z >   ???
2025-01-10T13:23:47.8687831Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8687906Z E   
2025-01-10T13:23:47.8688053Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8688174Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8688251Z E          ...
2025-01-10T13:23:47.8688350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8688504Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8688632Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8688713Z E          ...
2025-01-10T13:23:47.8688803Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8688940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8689054Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8689060Z 
2025-01-10T13:23:47.8689160Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8689368Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-01-10T13:23:47.8689373Z 
2025-01-10T13:23:47.8689512Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8689647Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8689754Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8689913Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8690038Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8690139Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8690219Z err_msg = None
2025-01-10T13:23:47.8690223Z 
2025-01-10T13:23:47.8690348Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8690432Z         if err_msg is None:
2025-01-10T13:23:47.8690542Z             if left.shape != right.shape:
2025-01-10T13:23:47.8690629Z                 raise_assert_detail(
2025-01-10T13:23:47.8690789Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8690863Z                 )
2025-01-10T13:23:47.8690937Z     
2025-01-10T13:23:47.8691010Z             diff = 0
2025-01-10T13:23:47.8691125Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8691407Z                 # count up differences
2025-01-10T13:23:47.8691586Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8691674Z                     diff += 1
2025-01-10T13:23:47.8691746Z     
2025-01-10T13:23:47.8691844Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8691986Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8692165Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8692285Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8692364Z E           
2025-01-10T13:23:47.8692478Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8692851Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8693272Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8693279Z 
2025-01-10T13:23:47.8693601Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8693606Z 
2025-01-10T13:23:47.8693788Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8693792Z 
2025-01-10T13:23:47.8694020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd41d0>
2025-01-10T13:23:47.8694200Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8694281Z attr = 'lines'
2025-01-10T13:23:47.8694290Z 
2025-01-10T13:23:47.8694441Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8694569Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8694655Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8694731Z         try:
2025-01-10T13:23:47.8694973Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8695180Z         except KeyError:
2025-01-10T13:23:47.8695439Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8695586Z     
2025-01-10T13:23:47.8695743Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8695911Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8696057Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8696291Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8696439Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8696590Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8696760Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8696836Z             else:
2025-01-10T13:23:47.8696942Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8697053Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8697058Z 
2025-01-10T13:23:47.8697197Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8697315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8697475Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8697547Z     ???
2025-01-10T13:23:47.8697665Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8697669Z 
2025-01-10T13:23:47.8697745Z >   ???
2025-01-10T13:23:47.8697877Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8697953Z E   
2025-01-10T13:23:47.8698083Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8698359Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8698432Z E          ...
2025-01-10T13:23:47.8698526Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8698657Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8698775Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8698849Z E          ...
2025-01-10T13:23:47.8698943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8699067Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8699179Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8699184Z 
2025-01-10T13:23:47.8699281Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8699514Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-01-10T13:23:47.8699519Z 
2025-01-10T13:23:47.8699750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4290>
2025-01-10T13:23:47.8700048Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8700151Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8700156Z 
2025-01-10T13:23:47.8700296Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8700418Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8700502Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8700581Z         try:
2025-01-10T13:23:47.8700722Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8700811Z         except KeyError:
2025-01-10T13:23:47.8700955Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8701026Z     
2025-01-10T13:23:47.8701120Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8701214Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8701312Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8701450Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8701554Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8701686Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8701803Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8701808Z 
2025-01-10T13:23:47.8701933Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8702051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8702054Z 
2025-01-10T13:23:47.8702199Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8702284Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8702395Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8702476Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8702626Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8702710Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8702828Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8702916Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8702992Z err_msg = None
2025-01-10T13:23:47.8702996Z 
2025-01-10T13:23:47.8703241Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8703323Z         if err_msg is None:
2025-01-10T13:23:47.8703424Z             if left.shape != right.shape:
2025-01-10T13:23:47.8703509Z                 raise_assert_detail(
2025-01-10T13:23:47.8703659Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8703731Z                 )
2025-01-10T13:23:47.8703806Z     
2025-01-10T13:23:47.8703881Z             diff = 0
2025-01-10T13:23:47.8703999Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8704088Z                 # count up differences
2025-01-10T13:23:47.8704263Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8704479Z                     diff += 1
2025-01-10T13:23:47.8704557Z     
2025-01-10T13:23:47.8704649Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8704785Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8704959Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8705063Z E           AssertionError: Series are different
2025-01-10T13:23:47.8705141Z E           
2025-01-10T13:23:47.8705244Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8705719Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8706060Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8706387Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8706391Z 
2025-01-10T13:23:47.8706706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8706954Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-01-10T13:23:47.8706960Z 
2025-01-10T13:23:47.8707185Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4350>
2025-01-10T13:23:47.8707357Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8707449Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8707453Z 
2025-01-10T13:23:47.8707598Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8707712Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8707802Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8707875Z         try:
2025-01-10T13:23:47.8708022Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8708103Z         except KeyError:
2025-01-10T13:23:47.8708247Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8708322Z     
2025-01-10T13:23:47.8708416Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8708515Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8708604Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8708743Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8708830Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8708928Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8709038Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8709043Z 
2025-01-10T13:23:47.8709172Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8709285Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8709289Z 
2025-01-10T13:23:47.8709430Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8709519Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8709626Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8709817Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8709955Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8710039Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8710142Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8710225Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8710299Z err_msg = None
2025-01-10T13:23:47.8710303Z 
2025-01-10T13:23:47.8710420Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8710501Z         if err_msg is None:
2025-01-10T13:23:47.8710601Z             if left.shape != right.shape:
2025-01-10T13:23:47.8710691Z                 raise_assert_detail(
2025-01-10T13:23:47.8710834Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8710911Z                 )
2025-01-10T13:23:47.8710981Z     
2025-01-10T13:23:47.8711059Z             diff = 0
2025-01-10T13:23:47.8711253Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8711353Z                 # count up differences
2025-01-10T13:23:47.8711525Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8711609Z                     diff += 1
2025-01-10T13:23:47.8711679Z     
2025-01-10T13:23:47.8711774Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8711911Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8712085Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8712189Z E           AssertionError: Series are different
2025-01-10T13:23:47.8712267Z E           
2025-01-10T13:23:47.8712375Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8712743Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8713452Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8714143Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8714158Z 
2025-01-10T13:23:47.8714657Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8714861Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-01-10T13:23:47.8714865Z 
2025-01-10T13:23:47.8714994Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8715127Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8715232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8715365Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8715498Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8715737Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8715820Z err_msg = None
2025-01-10T13:23:47.8715824Z 
2025-01-10T13:23:47.8715938Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8716027Z         if err_msg is None:
2025-01-10T13:23:47.8716124Z             if left.shape != right.shape:
2025-01-10T13:23:47.8716213Z                 raise_assert_detail(
2025-01-10T13:23:47.8716358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8716436Z                 )
2025-01-10T13:23:47.8716509Z     
2025-01-10T13:23:47.8716581Z             diff = 0
2025-01-10T13:23:47.8716699Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8716787Z                 # count up differences
2025-01-10T13:23:47.8716959Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8717037Z                     diff += 1
2025-01-10T13:23:47.8717230Z     
2025-01-10T13:23:47.8717325Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8717469Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8717637Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8717756Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8717828Z E           
2025-01-10T13:23:47.8717946Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8718210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8718476Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8718485Z 
2025-01-10T13:23:47.8718792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8718797Z 
2025-01-10T13:23:47.8718966Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8718976Z 
2025-01-10T13:23:47.8719198Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4590>
2025-01-10T13:23:47.8719405Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>, attr = 'nu'
2025-01-10T13:23:47.8719409Z 
2025-01-10T13:23:47.8719548Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8719671Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8719756Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8719842Z         try:
2025-01-10T13:23:47.8719983Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8720070Z         except KeyError:
2025-01-10T13:23:47.8720207Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8720283Z     
2025-01-10T13:23:47.8720370Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8720470Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8720566Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8720698Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8720788Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8720880Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8720995Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8721000Z 
2025-01-10T13:23:47.8721126Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8721249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8721495Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8721577Z     ???
2025-01-10T13:23:47.8721691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8721695Z 
2025-01-10T13:23:47.8721773Z >   ???
2025-01-10T13:23:47.8721909Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8721980Z E   
2025-01-10T13:23:47.8722117Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8722230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8722316Z E          ...
2025-01-10T13:23:47.8722405Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8722543Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8722656Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8722736Z E          ...
2025-01-10T13:23:47.8722939Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8723308Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8723426Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8723431Z 
2025-01-10T13:23:47.8723528Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8723740Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-01-10T13:23:47.8723745Z 
2025-01-10T13:23:47.8723875Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8724013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8724113Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8724249Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8724373Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8724480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8724556Z err_msg = None
2025-01-10T13:23:47.8724560Z 
2025-01-10T13:23:47.8724675Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8724762Z         if err_msg is None:
2025-01-10T13:23:47.8724858Z             if left.shape != right.shape:
2025-01-10T13:23:47.8724947Z                 raise_assert_detail(
2025-01-10T13:23:47.8725089Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8725164Z                 )
2025-01-10T13:23:47.8725234Z     
2025-01-10T13:23:47.8725311Z             diff = 0
2025-01-10T13:23:47.8725424Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8725518Z                 # count up differences
2025-01-10T13:23:47.8725687Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8725772Z                     diff += 1
2025-01-10T13:23:47.8725846Z     
2025-01-10T13:23:47.8725945Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8726082Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8726258Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8726385Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8726459Z E           
2025-01-10T13:23:47.8726579Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8726838Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8727099Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8727237Z 
2025-01-10T13:23:47.8727546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8727551Z 
2025-01-10T13:23:47.8727719Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8727723Z 
2025-01-10T13:23:47.8727950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4650>
2025-01-10T13:23:47.8728117Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8728204Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8728208Z 
2025-01-10T13:23:47.8728346Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8728466Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8728664Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8728741Z         try:
2025-01-10T13:23:47.8728889Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8728970Z         except KeyError:
2025-01-10T13:23:47.8729113Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8729183Z     
2025-01-10T13:23:47.8729275Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8729368Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8729463Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8729594Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8729682Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8729770Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8729883Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8729888Z 
2025-01-10T13:23:47.8730015Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8730138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8730290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8730362Z     ???
2025-01-10T13:23:47.8730476Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8730481Z 
2025-01-10T13:23:47.8730549Z >   ???
2025-01-10T13:23:47.8730681Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8730751Z E   
2025-01-10T13:23:47.8730884Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8730994Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8731077Z E          ...
2025-01-10T13:23:47.8731165Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8731300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8731417Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8731491Z E          ...
2025-01-10T13:23:47.8731669Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8731893Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8732080Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8732087Z 
2025-01-10T13:23:47.8732241Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8732575Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-01-10T13:23:47.8732582Z 
2025-01-10T13:23:47.8732793Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8733006Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8733338Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8733475Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8733615Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8733877Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8733958Z err_msg = None
2025-01-10T13:23:47.8733963Z 
2025-01-10T13:23:47.8734074Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8734160Z         if err_msg is None:
2025-01-10T13:23:47.8734255Z             if left.shape != right.shape:
2025-01-10T13:23:47.8734343Z                 raise_assert_detail(
2025-01-10T13:23:47.8734487Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8734563Z                 )
2025-01-10T13:23:47.8734633Z     
2025-01-10T13:23:47.8734710Z             diff = 0
2025-01-10T13:23:47.8734826Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8734913Z                 # count up differences
2025-01-10T13:23:47.8735085Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8735162Z                     diff += 1
2025-01-10T13:23:47.8735352Z     
2025-01-10T13:23:47.8735445Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8735590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8735762Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8735883Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8735958Z E           
2025-01-10T13:23:47.8736076Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8736332Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8736603Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8736612Z 
2025-01-10T13:23:47.8736923Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8736927Z 
2025-01-10T13:23:47.8737095Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8737099Z 
2025-01-10T13:23:47.8737323Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4710>
2025-01-10T13:23:47.8737530Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>, attr = 'f_lu'
2025-01-10T13:23:47.8737535Z 
2025-01-10T13:23:47.8737672Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8737793Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8737880Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8737968Z         try:
2025-01-10T13:23:47.8738107Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8738194Z         except KeyError:
2025-01-10T13:23:47.8738335Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8738411Z     
2025-01-10T13:23:47.8738498Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8738597Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8738687Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8738822Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8738910Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8739000Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8739115Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8739120Z 
2025-01-10T13:23:47.8739242Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8739358Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8739597Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8739675Z     ???
2025-01-10T13:23:47.8739786Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8739789Z 
2025-01-10T13:23:47.8739863Z >   ???
2025-01-10T13:23:47.8739990Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8740064Z E   
2025-01-10T13:23:47.8740197Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8740309Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8740387Z E          ...
2025-01-10T13:23:47.8740477Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8740610Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8740722Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8740800Z E          ...
2025-01-10T13:23:47.8740984Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8741124Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8741230Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8741235Z 
2025-01-10T13:23:47.8741329Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8741568Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-01-10T13:23:47.8741577Z 
2025-01-10T13:23:47.8741800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4d10>
2025-01-10T13:23:47.8741973Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8742065Z attr = 'stimulated_emission_factor'
2025-01-10T13:23:47.8742069Z 
2025-01-10T13:23:47.8742207Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8742321Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8742410Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8742493Z         try:
2025-01-10T13:23:47.8742636Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8742718Z         except KeyError:
2025-01-10T13:23:47.8742861Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8742932Z     
2025-01-10T13:23:47.8743191Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8743296Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8743385Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8743520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8743606Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8743699Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8743808Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8743885Z             else:
2025-01-10T13:23:47.8743979Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8744093Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8744107Z 
2025-01-10T13:23:47.8744232Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8744347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8744491Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8744567Z     ???
2025-01-10T13:23:47.8744680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8744683Z 
2025-01-10T13:23:47.8744753Z >   ???
2025-01-10T13:23:47.8744933Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:47.8745003Z E   
2025-01-10T13:23:47.8745176Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:23:47.8745543Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8750642Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T13:23:47.8756342Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:23:47.8756555Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:23:47.8756707Z 
2025-01-10T13:23:47.8756809Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8757053Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-01-10T13:23:47.8757057Z 
2025-01-10T13:23:47.8757198Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8757332Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8757439Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8757576Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8757705Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8757803Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8757886Z err_msg = None
2025-01-10T13:23:47.8757895Z 
2025-01-10T13:23:47.8758119Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8758212Z         if err_msg is None:
2025-01-10T13:23:47.8758316Z             if left.shape != right.shape:
2025-01-10T13:23:47.8758402Z                 raise_assert_detail(
2025-01-10T13:23:47.8758558Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8758631Z                 )
2025-01-10T13:23:47.8758712Z     
2025-01-10T13:23:47.8758786Z             diff = 0
2025-01-10T13:23:47.8758903Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8758992Z                 # count up differences
2025-01-10T13:23:47.8759170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8759249Z                     diff += 1
2025-01-10T13:23:47.8759324Z     
2025-01-10T13:23:47.8759415Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8759564Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8759741Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8759863Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8759942Z E           
2025-01-10T13:23:47.8760059Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8760327Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8760589Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8760599Z 
2025-01-10T13:23:47.8760919Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8760924Z 
2025-01-10T13:23:47.8761104Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8761109Z 
2025-01-10T13:23:47.8761334Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4dd0>
2025-01-10T13:23:47.8761507Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8761597Z attr = 'previous_beta_sobolev'
2025-01-10T13:23:47.8761601Z 
2025-01-10T13:23:47.8761747Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8761867Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8761959Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8762031Z         try:
2025-01-10T13:23:47.8762185Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8762379Z         except KeyError:
2025-01-10T13:23:47.8762524Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8762600Z     
2025-01-10T13:23:47.8762688Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8762788Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8762881Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8763175Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8763270Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8763365Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8763479Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8763556Z             else:
2025-01-10T13:23:47.8763653Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8763766Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8763771Z 
2025-01-10T13:23:47.8763904Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8764145Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8764308Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8764380Z     ???
2025-01-10T13:23:47.8764494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8764498Z 
2025-01-10T13:23:47.8764568Z >   ???
2025-01-10T13:23:47.8764703Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8764772Z E   
2025-01-10T13:23:47.8764905Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8765020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8765099Z E          ...
2025-01-10T13:23:47.8765188Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8765323Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8765440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8765521Z E          ...
2025-01-10T13:23:47.8765612Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8765739Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8765850Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8765854Z 
2025-01-10T13:23:47.8765944Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8766151Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-01-10T13:23:47.8766155Z 
2025-01-10T13:23:47.8766286Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8766422Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8766526Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8766658Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8766790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8766891Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8766974Z err_msg = None
2025-01-10T13:23:47.8766979Z 
2025-01-10T13:23:47.8767099Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8767187Z         if err_msg is None:
2025-01-10T13:23:47.8767283Z             if left.shape != right.shape:
2025-01-10T13:23:47.8767374Z                 raise_assert_detail(
2025-01-10T13:23:47.8767520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8767601Z                 )
2025-01-10T13:23:47.8767673Z     
2025-01-10T13:23:47.8767752Z             diff = 0
2025-01-10T13:23:47.8767869Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8767978Z                 # count up differences
2025-01-10T13:23:47.8768288Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8768632Z                     diff += 1
2025-01-10T13:23:47.8768763Z     
2025-01-10T13:23:47.8768913Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8769145Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8769432Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8769632Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8769713Z E           
2025-01-10T13:23:47.8769834Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8770098Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8770460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8770472Z 
2025-01-10T13:23:47.8770791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8770797Z 
2025-01-10T13:23:47.8770973Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8770977Z 
2025-01-10T13:23:47.8771210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4e90>
2025-01-10T13:23:47.8771386Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8771468Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8771472Z 
2025-01-10T13:23:47.8771616Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8771744Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8771833Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8771905Z         try:
2025-01-10T13:23:47.8772051Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8772133Z         except KeyError:
2025-01-10T13:23:47.8772276Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8772346Z     
2025-01-10T13:23:47.8772441Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8772536Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8772630Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8772767Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8772853Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8772948Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8773198Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8773278Z             else:
2025-01-10T13:23:47.8773383Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8773495Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8773499Z 
2025-01-10T13:23:47.8773627Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8773745Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8773890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8773967Z     ???
2025-01-10T13:23:47.8774082Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8774086Z 
2025-01-10T13:23:47.8774156Z >   ???
2025-01-10T13:23:47.8774288Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8774359Z E   
2025-01-10T13:23:47.8774493Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8774605Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8774684Z E          ...
2025-01-10T13:23:47.8774926Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8775065Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8775179Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8775256Z E          ...
2025-01-10T13:23:47.8775344Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8775476Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8775582Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8775591Z 
2025-01-10T13:23:47.8775680Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8775888Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-01-10T13:23:47.8775892Z 
2025-01-10T13:23:47.8776020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8776153Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8776363Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8776506Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8776628Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8776727Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8776807Z err_msg = None
2025-01-10T13:23:47.8776811Z 
2025-01-10T13:23:47.8776922Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8777007Z         if err_msg is None:
2025-01-10T13:23:47.8777104Z             if left.shape != right.shape:
2025-01-10T13:23:47.8777194Z                 raise_assert_detail(
2025-01-10T13:23:47.8777337Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8777414Z                 )
2025-01-10T13:23:47.8777483Z     
2025-01-10T13:23:47.8777562Z             diff = 0
2025-01-10T13:23:47.8777681Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8777774Z                 # count up differences
2025-01-10T13:23:47.8777943Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8778026Z                     diff += 1
2025-01-10T13:23:47.8778100Z     
2025-01-10T13:23:47.8778195Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8778337Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8778505Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8778622Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8778694Z E           
2025-01-10T13:23:47.8778811Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8779072Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8779336Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8779341Z 
2025-01-10T13:23:47.8779649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8779653Z 
2025-01-10T13:23:47.8779822Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8779827Z 
2025-01-10T13:23:47.8780052Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd4f50>
2025-01-10T13:23:47.8780223Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8780412Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8780417Z 
2025-01-10T13:23:47.8780563Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8780677Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8780768Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8780842Z         try:
2025-01-10T13:23:47.8780988Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8781069Z         except KeyError:
2025-01-10T13:23:47.8781216Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8781286Z     
2025-01-10T13:23:47.8781379Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8781475Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8781570Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8781703Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8781794Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8781966Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8782091Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8782169Z             else:
2025-01-10T13:23:47.8782264Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8782378Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8782382Z 
2025-01-10T13:23:47.8782506Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8782626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8782772Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8782849Z     ???
2025-01-10T13:23:47.8782957Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8782961Z 
2025-01-10T13:23:47.8783181Z >   ???
2025-01-10T13:23:47.8783316Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8783390Z E   
2025-01-10T13:23:47.8783534Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8783654Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8783731Z E          ...
2025-01-10T13:23:47.8783820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8783954Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8784065Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8784143Z E          ...
2025-01-10T13:23:47.8784227Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8784355Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8784462Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8784466Z 
2025-01-10T13:23:47.8784560Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8784760Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-01-10T13:23:47.8784764Z 
2025-01-10T13:23:47.8784902Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8785034Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8785132Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8785270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8785392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8785493Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8785570Z err_msg = None
2025-01-10T13:23:47.8785574Z 
2025-01-10T13:23:47.8785689Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8785773Z         if err_msg is None:
2025-01-10T13:23:47.8785873Z             if left.shape != right.shape:
2025-01-10T13:23:47.8785959Z                 raise_assert_detail(
2025-01-10T13:23:47.8786235Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8786360Z                 )
2025-01-10T13:23:47.8786489Z     
2025-01-10T13:23:47.8786627Z             diff = 0
2025-01-10T13:23:47.8786817Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8786971Z                 # count up differences
2025-01-10T13:23:47.8787256Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8787388Z                     diff += 1
2025-01-10T13:23:47.8787502Z     
2025-01-10T13:23:47.8787651Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8787867Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8788045Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8788159Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8788238Z E           
2025-01-10T13:23:47.8788490Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8788766Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8789031Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8789037Z 
2025-01-10T13:23:47.8789340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8789350Z 
2025-01-10T13:23:47.8789519Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8789531Z 
2025-01-10T13:23:47.8789757Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd50d0>
2025-01-10T13:23:47.8789924Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5966ed50>
2025-01-10T13:23:47.8790006Z attr = 'j_blues'
2025-01-10T13:23:47.8790010Z 
2025-01-10T13:23:47.8790148Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8790268Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8790352Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8790429Z         try:
2025-01-10T13:23:47.8790568Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8790655Z         except KeyError:
2025-01-10T13:23:47.8790797Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8790868Z     
2025-01-10T13:23:47.8790962Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8791060Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8791162Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8791293Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8791383Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8791473Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8791586Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8791660Z             else:
2025-01-10T13:23:47.8791759Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8791864Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8791868Z 
2025-01-10T13:23:47.8791999Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8792116Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8792260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8792338Z     ???
2025-01-10T13:23:47.8792449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8792540Z 
2025-01-10T13:23:47.8792617Z >   ???
2025-01-10T13:23:47.8792745Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8792820Z E   
2025-01-10T13:23:47.8792948Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8793338Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8793462Z E          ...
2025-01-10T13:23:47.8793617Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8793753Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8793873Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8793953Z E          ...
2025-01-10T13:23:47.8794040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8794172Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8794277Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8794292Z 
2025-01-10T13:23:47.8794546Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8794772Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-01-10T13:23:47.8794777Z 
2025-01-10T13:23:47.8794913Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8795042Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8795144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8795276Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8795403Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8795502Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8795579Z err_msg = None
2025-01-10T13:23:47.8795583Z 
2025-01-10T13:23:47.8795698Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8795792Z         if err_msg is None:
2025-01-10T13:23:47.8795893Z             if left.shape != right.shape:
2025-01-10T13:23:47.8795980Z                 raise_assert_detail(
2025-01-10T13:23:47.8796127Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8796198Z                 )
2025-01-10T13:23:47.8796274Z     
2025-01-10T13:23:47.8796349Z             diff = 0
2025-01-10T13:23:47.8796465Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8796553Z                 # count up differences
2025-01-10T13:23:47.8796726Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8796810Z                     diff += 1
2025-01-10T13:23:47.8796881Z     
2025-01-10T13:23:47.8796977Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8797113Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8797290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8797407Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8797485Z E           
2025-01-10T13:23:47.8797597Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8797862Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8798124Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8798129Z 
2025-01-10T13:23:47.8798580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8798586Z 
2025-01-10T13:23:47.8798758Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8798762Z 
2025-01-10T13:23:47.8798985Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd5e50>
2025-01-10T13:23:47.8799159Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>
2025-01-10T13:23:47.8799239Z attr = 'lines'
2025-01-10T13:23:47.8799244Z 
2025-01-10T13:23:47.8799381Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8799500Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8799586Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8799663Z         try:
2025-01-10T13:23:47.8799799Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8799886Z         except KeyError:
2025-01-10T13:23:47.8800109Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8800186Z     
2025-01-10T13:23:47.8800274Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8800374Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8800462Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8800599Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8800693Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8800782Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8800896Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8800970Z             else:
2025-01-10T13:23:47.8801068Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8801177Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8801181Z 
2025-01-10T13:23:47.8801311Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8801423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8801585Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8801695Z     ???
2025-01-10T13:23:47.8801809Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8801813Z 
2025-01-10T13:23:47.8801888Z >   ???
2025-01-10T13:23:47.8802015Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8802091Z E   
2025-01-10T13:23:47.8802219Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8802336Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8802408Z E          ...
2025-01-10T13:23:47.8802502Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8802634Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8802755Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8802829Z E          ...
2025-01-10T13:23:47.8802924Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8803214Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8803329Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8803334Z 
2025-01-10T13:23:47.8803425Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8803656Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-01-10T13:23:47.8803660Z 
2025-01-10T13:23:47.8803883Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd5f10>
2025-01-10T13:23:47.8804052Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>
2025-01-10T13:23:47.8804146Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8804150Z 
2025-01-10T13:23:47.8804286Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8804403Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8804486Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8804564Z         try:
2025-01-10T13:23:47.8804842Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8804986Z         except KeyError:
2025-01-10T13:23:47.8805231Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8805359Z     
2025-01-10T13:23:47.8805517Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8805674Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8805825Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8806047Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8806190Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8806336Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8806529Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8806535Z 
2025-01-10T13:23:47.8806667Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8806784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8806795Z 
2025-01-10T13:23:47.8807074Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8807167Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8807283Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8807366Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8807514Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8807598Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8807711Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8807793Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8807876Z err_msg = None
2025-01-10T13:23:47.8807879Z 
2025-01-10T13:23:47.8807991Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8808077Z         if err_msg is None:
2025-01-10T13:23:47.8808172Z             if left.shape != right.shape:
2025-01-10T13:23:47.8808269Z                 raise_assert_detail(
2025-01-10T13:23:47.8808417Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8808491Z                 )
2025-01-10T13:23:47.8808565Z     
2025-01-10T13:23:47.8808639Z             diff = 0
2025-01-10T13:23:47.8808759Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8808848Z                 # count up differences
2025-01-10T13:23:47.8809024Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8809102Z                     diff += 1
2025-01-10T13:23:47.8809181Z     
2025-01-10T13:23:47.8809268Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8809412Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8809581Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8809691Z E           AssertionError: Series are different
2025-01-10T13:23:47.8809778Z E           
2025-01-10T13:23:47.8809881Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8810255Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8810583Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8810919Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8811036Z 
2025-01-10T13:23:47.8811351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8811575Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-01-10T13:23:47.8811579Z 
2025-01-10T13:23:47.8811803Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd5fd0>
2025-01-10T13:23:47.8811974Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>
2025-01-10T13:23:47.8812070Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8812074Z 
2025-01-10T13:23:47.8812293Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8812419Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8812509Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8812582Z         try:
2025-01-10T13:23:47.8812736Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8812820Z         except KeyError:
2025-01-10T13:23:47.8812964Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8813166Z     
2025-01-10T13:23:47.8813265Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8813363Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8813457Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8813591Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8813682Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8813778Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8813888Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8813903Z 
2025-01-10T13:23:47.8814033Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8814150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8814154Z 
2025-01-10T13:23:47.8814295Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8814383Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8814495Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8814573Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8814717Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8814800Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8814910Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8814995Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8815074Z err_msg = None
2025-01-10T13:23:47.8815081Z 
2025-01-10T13:23:47.8815195Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8815277Z         if err_msg is None:
2025-01-10T13:23:47.8815380Z             if left.shape != right.shape:
2025-01-10T13:23:47.8815469Z                 raise_assert_detail(
2025-01-10T13:23:47.8815616Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8815687Z                 )
2025-01-10T13:23:47.8815764Z     
2025-01-10T13:23:47.8815838Z             diff = 0
2025-01-10T13:23:47.8815954Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8816043Z                 # count up differences
2025-01-10T13:23:47.8816220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8816305Z                     diff += 1
2025-01-10T13:23:47.8816377Z     
2025-01-10T13:23:47.8816509Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8816904Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8817199Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8817348Z E           AssertionError: Series are different
2025-01-10T13:23:47.8817429Z E           
2025-01-10T13:23:47.8817535Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8817907Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8818456Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8818835Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8818840Z 
2025-01-10T13:23:47.8819157Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8819356Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-01-10T13:23:47.8819360Z 
2025-01-10T13:23:47.8819501Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8819634Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8819734Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8819872Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8819993Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8820092Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8820169Z err_msg = None
2025-01-10T13:23:47.8820179Z 
2025-01-10T13:23:47.8820287Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8820373Z         if err_msg is None:
2025-01-10T13:23:47.8820471Z             if left.shape != right.shape:
2025-01-10T13:23:47.8820561Z                 raise_assert_detail(
2025-01-10T13:23:47.8820714Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8820791Z                 )
2025-01-10T13:23:47.8820862Z     
2025-01-10T13:23:47.8820943Z             diff = 0
2025-01-10T13:23:47.8821054Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8821149Z                 # count up differences
2025-01-10T13:23:47.8821319Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8821407Z                     diff += 1
2025-01-10T13:23:47.8821477Z     
2025-01-10T13:23:47.8821572Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8821710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8821878Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8821997Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8822070Z E           
2025-01-10T13:23:47.8822311Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8822569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8822831Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8822836Z 
2025-01-10T13:23:47.8823301Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8823307Z 
2025-01-10T13:23:47.8823606Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8823617Z 
2025-01-10T13:23:47.8823848Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd6210>
2025-01-10T13:23:47.8824048Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>, attr = 'nu'
2025-01-10T13:23:47.8824052Z 
2025-01-10T13:23:47.8824270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8824472Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8824627Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8824764Z         try:
2025-01-10T13:23:47.8825004Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8825146Z         except KeyError:
2025-01-10T13:23:47.8825372Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8825492Z     
2025-01-10T13:23:47.8825634Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8825787Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8825898Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8826041Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8826130Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8826228Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8826347Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8826352Z 
2025-01-10T13:23:47.8826486Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8826609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8826758Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8826834Z     ???
2025-01-10T13:23:47.8826943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8826947Z 
2025-01-10T13:23:47.8827022Z >   ???
2025-01-10T13:23:47.8827152Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8827227Z E   
2025-01-10T13:23:47.8827364Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8827484Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8827557Z E          ...
2025-01-10T13:23:47.8827655Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8827786Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8827906Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8827984Z E          ...
2025-01-10T13:23:47.8828071Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8828203Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8828311Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8828315Z 
2025-01-10T13:23:47.8828410Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8828610Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-01-10T13:23:47.8828614Z 
2025-01-10T13:23:47.8828919Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8829054Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8829158Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8829296Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8829422Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8829521Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8829598Z err_msg = None
2025-01-10T13:23:47.8829602Z 
2025-01-10T13:23:47.8829717Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8829799Z         if err_msg is None:
2025-01-10T13:23:47.8829900Z             if left.shape != right.shape:
2025-01-10T13:23:47.8829986Z                 raise_assert_detail(
2025-01-10T13:23:47.8830218Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8830295Z                 )
2025-01-10T13:23:47.8830370Z     
2025-01-10T13:23:47.8830444Z             diff = 0
2025-01-10T13:23:47.8830561Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8830655Z                 # count up differences
2025-01-10T13:23:47.8830826Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8830909Z                     diff += 1
2025-01-10T13:23:47.8830980Z     
2025-01-10T13:23:47.8831077Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8831213Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8831388Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8831501Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8831578Z E           
2025-01-10T13:23:47.8831698Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8832009Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8832286Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8832291Z 
2025-01-10T13:23:47.8832599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8832604Z 
2025-01-10T13:23:47.8832783Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8832790Z 
2025-01-10T13:23:47.8833321Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd62d0>
2025-01-10T13:23:47.8833500Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>
2025-01-10T13:23:47.8833587Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8833593Z 
2025-01-10T13:23:47.8833729Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8833852Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8833937Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8834015Z         try:
2025-01-10T13:23:47.8834155Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8834242Z         except KeyError:
2025-01-10T13:23:47.8834380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8834456Z     
2025-01-10T13:23:47.8834545Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8834645Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8834886Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8835028Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8835122Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8835217Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8835334Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8835339Z 
2025-01-10T13:23:47.8835466Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8835585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8835733Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8835810Z     ???
2025-01-10T13:23:47.8835921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8835925Z 
2025-01-10T13:23:47.8836000Z >   ???
2025-01-10T13:23:47.8836128Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8836210Z E   
2025-01-10T13:23:47.8836453Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8836572Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8836651Z E          ...
2025-01-10T13:23:47.8836741Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8836875Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8836988Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8837065Z E          ...
2025-01-10T13:23:47.8837152Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8837281Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8837386Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8837391Z 
2025-01-10T13:23:47.8837485Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8837675Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-01-10T13:23:47.8837689Z 
2025-01-10T13:23:47.8837822Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8837954Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8838052Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8838190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8838313Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8838416Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8838494Z err_msg = None
2025-01-10T13:23:47.8838497Z 
2025-01-10T13:23:47.8838615Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8838697Z         if err_msg is None:
2025-01-10T13:23:47.8838799Z             if left.shape != right.shape:
2025-01-10T13:23:47.8838889Z                 raise_assert_detail(
2025-01-10T13:23:47.8839040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8839118Z                 )
2025-01-10T13:23:47.8839188Z     
2025-01-10T13:23:47.8839267Z             diff = 0
2025-01-10T13:23:47.8839381Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8839475Z                 # count up differences
2025-01-10T13:23:47.8839645Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8839728Z                     diff += 1
2025-01-10T13:23:47.8839799Z     
2025-01-10T13:23:47.8839897Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8840034Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8840210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8840329Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8840401Z E           
2025-01-10T13:23:47.8840639Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8840896Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8841157Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8841162Z 
2025-01-10T13:23:47.8841467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8841472Z 
2025-01-10T13:23:47.8841711Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8841721Z 
2025-01-10T13:23:47.8841951Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd6390>
2025-01-10T13:23:47.8842155Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>, attr = 'f_lu'
2025-01-10T13:23:47.8842159Z 
2025-01-10T13:23:47.8842300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8842414Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8842506Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8842578Z         try:
2025-01-10T13:23:47.8842721Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8842810Z         except KeyError:
2025-01-10T13:23:47.8842946Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8843158Z     
2025-01-10T13:23:47.8843248Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8843346Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8843446Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8843583Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8843669Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8843766Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8843877Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8843882Z 
2025-01-10T13:23:47.8844010Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8844121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8844271Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8844347Z     ???
2025-01-10T13:23:47.8844456Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8844459Z 
2025-01-10T13:23:47.8844534Z >   ???
2025-01-10T13:23:47.8844661Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8844739Z E   
2025-01-10T13:23:47.8844871Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8844986Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8845061Z E          ...
2025-01-10T13:23:47.8845154Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8845284Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8845402Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8845474Z E          ...
2025-01-10T13:23:47.8845567Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8845700Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8845805Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8845810Z 
2025-01-10T13:23:47.8845908Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8846107Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-01-10T13:23:47.8846238Z 
2025-01-10T13:23:47.8846379Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8846507Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8846608Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8846740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8846873Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8846974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8847052Z err_msg = None
2025-01-10T13:23:47.8847056Z 
2025-01-10T13:23:47.8847169Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8847254Z         if err_msg is None:
2025-01-10T13:23:47.8847352Z             if left.shape != right.shape:
2025-01-10T13:23:47.8847436Z                 raise_assert_detail(
2025-01-10T13:23:47.8847720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8847807Z                 )
2025-01-10T13:23:47.8847882Z     
2025-01-10T13:23:47.8847957Z             diff = 0
2025-01-10T13:23:47.8848072Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8848160Z                 # count up differences
2025-01-10T13:23:47.8848333Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8848416Z                     diff += 1
2025-01-10T13:23:47.8848488Z     
2025-01-10T13:23:47.8848581Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8848716Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8848890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8849002Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8849078Z E           
2025-01-10T13:23:47.8849200Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8849463Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8849723Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8849728Z 
2025-01-10T13:23:47.8850029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8850034Z 
2025-01-10T13:23:47.8850211Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8850219Z 
2025-01-10T13:23:47.8850661Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd6b10>
2025-01-10T13:23:47.8850943Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>
2025-01-10T13:23:47.8851030Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8851040Z 
2025-01-10T13:23:47.8851182Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8851304Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8851388Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8851464Z         try:
2025-01-10T13:23:47.8851606Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8851695Z         except KeyError:
2025-01-10T13:23:47.8851832Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8851907Z     
2025-01-10T13:23:47.8851994Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8852100Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8852291Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8852431Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8852517Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8852613Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8852730Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8852804Z             else:
2025-01-10T13:23:47.8852906Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8853140Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8853146Z 
2025-01-10T13:23:47.8853280Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8853395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8853549Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8853624Z     ???
2025-01-10T13:23:47.8853860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8853870Z 
2025-01-10T13:23:47.8853944Z >   ???
2025-01-10T13:23:47.8854078Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8854153Z E   
2025-01-10T13:23:47.8854282Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8854400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8854474Z E          ...
2025-01-10T13:23:47.8854569Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8854699Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8854817Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8854890Z E          ...
2025-01-10T13:23:47.8854981Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8855106Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8855217Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8855231Z 
2025-01-10T13:23:47.8855321Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8855530Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-01-10T13:23:47.8855535Z 
2025-01-10T13:23:47.8855674Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8855803Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8855906Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8856041Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8856170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8856265Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8856348Z err_msg = None
2025-01-10T13:23:47.8856352Z 
2025-01-10T13:23:47.8856467Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8856557Z         if err_msg is None:
2025-01-10T13:23:47.8856660Z             if left.shape != right.shape:
2025-01-10T13:23:47.8856746Z                 raise_assert_detail(
2025-01-10T13:23:47.8856931Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8857063Z                 )
2025-01-10T13:23:47.8857193Z     
2025-01-10T13:23:47.8857320Z             diff = 0
2025-01-10T13:23:47.8857514Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8857665Z                 # count up differences
2025-01-10T13:23:47.8857960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8858088Z                     diff += 1
2025-01-10T13:23:47.8858211Z     
2025-01-10T13:23:47.8858355Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8858589Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8858927Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8859055Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8859138Z E           
2025-01-10T13:23:47.8859255Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8859519Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8859777Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8859787Z 
2025-01-10T13:23:47.8860180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8860185Z 
2025-01-10T13:23:47.8860370Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8860374Z 
2025-01-10T13:23:47.8860602Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd6bd0>
2025-01-10T13:23:47.8860780Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>
2025-01-10T13:23:47.8860863Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8860867Z 
2025-01-10T13:23:47.8861015Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8861135Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8861226Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8861299Z         try:
2025-01-10T13:23:47.8861451Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8861539Z         except KeyError:
2025-01-10T13:23:47.8861690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8861767Z     
2025-01-10T13:23:47.8861856Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8861958Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8862050Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8862190Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8862281Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8862380Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8862492Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8862572Z             else:
2025-01-10T13:23:47.8862669Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8862782Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8862787Z 
2025-01-10T13:23:47.8862921Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8863498Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8863660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8863733Z     ???
2025-01-10T13:23:47.8863852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8863856Z 
2025-01-10T13:23:47.8863929Z >   ???
2025-01-10T13:23:47.8864065Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8864136Z E   
2025-01-10T13:23:47.8864271Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8864385Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8864466Z E          ...
2025-01-10T13:23:47.8864560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8864699Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8864819Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8864893Z E          ...
2025-01-10T13:23:47.8865134Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8865265Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8865377Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8865381Z 
2025-01-10T13:23:47.8865472Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8865673Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-01-10T13:23:47.8865677Z 
2025-01-10T13:23:47.8865808Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8865950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8866058Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8866196Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8866329Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8866534Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8866620Z err_msg = None
2025-01-10T13:23:47.8866624Z 
2025-01-10T13:23:47.8866738Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8866825Z         if err_msg is None:
2025-01-10T13:23:47.8866923Z             if left.shape != right.shape:
2025-01-10T13:23:47.8867015Z                 raise_assert_detail(
2025-01-10T13:23:47.8867162Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8867240Z                 )
2025-01-10T13:23:47.8867326Z     
2025-01-10T13:23:47.8867402Z             diff = 0
2025-01-10T13:23:47.8867523Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8867614Z                 # count up differences
2025-01-10T13:23:47.8867796Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8867878Z                     diff += 1
2025-01-10T13:23:47.8867971Z     
2025-01-10T13:23:47.8868064Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8868210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8868385Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8868506Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8868582Z E           
2025-01-10T13:23:47.8868701Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8868967Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8869230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8869239Z 
2025-01-10T13:23:47.8869552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8869556Z 
2025-01-10T13:23:47.8869726Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8869737Z 
2025-01-10T13:23:47.8869963Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd6d50>
2025-01-10T13:23:47.8870140Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5b57bad0>
2025-01-10T13:23:47.8870220Z attr = 'j_blues'
2025-01-10T13:23:47.8870224Z 
2025-01-10T13:23:47.8870370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8870489Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8870702Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8870776Z         try:
2025-01-10T13:23:47.8870928Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8871012Z         except KeyError:
2025-01-10T13:23:47.8871162Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8871234Z     
2025-01-10T13:23:47.8871328Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8871432Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8871524Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8871662Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8871752Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8871847Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8871959Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8872040Z             else:
2025-01-10T13:23:47.8872136Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8872334Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8872340Z 
2025-01-10T13:23:47.8872474Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8872595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8872747Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8872827Z     ???
2025-01-10T13:23:47.8881393Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8881407Z 
2025-01-10T13:23:47.8881503Z >   ???
2025-01-10T13:23:47.8881651Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8881725Z E   
2025-01-10T13:23:47.8881915Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8882120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8882248Z E          ...
2025-01-10T13:23:47.8882395Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8882670Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8882868Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8883004Z E          ...
2025-01-10T13:23:47.8883313Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8883508Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8883629Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8883635Z 
2025-01-10T13:23:47.8883741Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8883950Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-01-10T13:23:47.8883955Z 
2025-01-10T13:23:47.8884098Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8884234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8884341Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8884495Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8884622Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8884724Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8884801Z err_msg = None
2025-01-10T13:23:47.8884805Z 
2025-01-10T13:23:47.8884931Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8885017Z         if err_msg is None:
2025-01-10T13:23:47.8885124Z             if left.shape != right.shape:
2025-01-10T13:23:47.8885212Z                 raise_assert_detail(
2025-01-10T13:23:47.8885368Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8885441Z                 )
2025-01-10T13:23:47.8885518Z     
2025-01-10T13:23:47.8885601Z             diff = 0
2025-01-10T13:23:47.8885716Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8886053Z                 # count up differences
2025-01-10T13:23:47.8886233Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8886318Z                     diff += 1
2025-01-10T13:23:47.8886389Z     
2025-01-10T13:23:47.8886486Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8886628Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8886807Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8886924Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8887004Z E           
2025-01-10T13:23:47.8887118Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8887493Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8887774Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8887779Z 
2025-01-10T13:23:47.8888095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8888100Z 
2025-01-10T13:23:47.8888280Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8888285Z 
2025-01-10T13:23:47.8888518Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd7ad0>
2025-01-10T13:23:47.8888688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>
2025-01-10T13:23:47.8888772Z attr = 'lines'
2025-01-10T13:23:47.8888785Z 
2025-01-10T13:23:47.8888934Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8889060Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8889147Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8889228Z         try:
2025-01-10T13:23:47.8889372Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8889464Z         except KeyError:
2025-01-10T13:23:47.8889604Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8889680Z     
2025-01-10T13:23:47.8889770Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8889871Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8889968Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8890101Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8890196Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8890288Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8890407Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8890478Z             else:
2025-01-10T13:23:47.8890582Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8890691Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8890695Z 
2025-01-10T13:23:47.8890830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8890947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8891099Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8891173Z     ???
2025-01-10T13:23:47.8891290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8891294Z 
2025-01-10T13:23:47.8891372Z >   ???
2025-01-10T13:23:47.8891500Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8891577Z E   
2025-01-10T13:23:47.8891707Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8891929Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8892002Z E          ...
2025-01-10T13:23:47.8892099Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8892232Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8892356Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8892430Z E          ...
2025-01-10T13:23:47.8892523Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8892648Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8892761Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8892764Z 
2025-01-10T13:23:47.8892861Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8893237Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-01-10T13:23:47.8893243Z 
2025-01-10T13:23:47.8893471Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd7b90>
2025-01-10T13:23:47.8893790Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>
2025-01-10T13:23:47.8893889Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8893894Z 
2025-01-10T13:23:47.8894034Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8894158Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8894244Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8894324Z         try:
2025-01-10T13:23:47.8894473Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8894555Z         except KeyError:
2025-01-10T13:23:47.8894701Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8894772Z     
2025-01-10T13:23:47.8894866Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8894961Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8895057Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8895195Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8895293Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8895384Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8895501Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8895506Z 
2025-01-10T13:23:47.8895633Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8895752Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8895756Z 
2025-01-10T13:23:47.8895899Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8895987Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8896104Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8896186Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8896330Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8896419Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8896535Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8896617Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8896700Z err_msg = None
2025-01-10T13:23:47.8896703Z 
2025-01-10T13:23:47.8896815Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8896904Z         if err_msg is None:
2025-01-10T13:23:47.8897005Z             if left.shape != right.shape:
2025-01-10T13:23:47.8897094Z                 raise_assert_detail(
2025-01-10T13:23:47.8897243Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8897322Z                 )
2025-01-10T13:23:47.8897392Z     
2025-01-10T13:23:47.8897475Z             diff = 0
2025-01-10T13:23:47.8897587Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8897681Z                 # count up differences
2025-01-10T13:23:47.8897853Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8898081Z                     diff += 1
2025-01-10T13:23:47.8898157Z     
2025-01-10T13:23:47.8898256Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8898399Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8898579Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8898690Z E           AssertionError: Series are different
2025-01-10T13:23:47.8898763Z E           
2025-01-10T13:23:47.8898871Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8899313Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8899657Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8899986Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8899991Z 
2025-01-10T13:23:47.8900301Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8900532Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-01-10T13:23:47.8900536Z 
2025-01-10T13:23:47.8900760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd7c50>
2025-01-10T13:23:47.8900933Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>
2025-01-10T13:23:47.8901028Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8901033Z 
2025-01-10T13:23:47.8901171Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8901292Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8901377Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8901458Z         try:
2025-01-10T13:23:47.8901599Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8901722Z         except KeyError:
2025-01-10T13:23:47.8901860Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8901935Z     
2025-01-10T13:23:47.8902032Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8902133Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8902226Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8902365Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8902455Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8902545Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8902662Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8902666Z 
2025-01-10T13:23:47.8902792Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8902909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8902913Z 
2025-01-10T13:23:47.8903173Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8903268Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8903376Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8903597Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8903741Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8903826Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8903937Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8904015Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8904098Z err_msg = None
2025-01-10T13:23:47.8904102Z 
2025-01-10T13:23:47.8904210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8904297Z         if err_msg is None:
2025-01-10T13:23:47.8904391Z             if left.shape != right.shape:
2025-01-10T13:23:47.8904480Z                 raise_assert_detail(
2025-01-10T13:23:47.8904621Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8904698Z                 )
2025-01-10T13:23:47.8904769Z     
2025-01-10T13:23:47.8904853Z             diff = 0
2025-01-10T13:23:47.8905075Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8905178Z                 # count up differences
2025-01-10T13:23:47.8905353Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8905433Z                     diff += 1
2025-01-10T13:23:47.8905510Z     
2025-01-10T13:23:47.8905598Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8905738Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8905907Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8906017Z E           AssertionError: Series are different
2025-01-10T13:23:47.8906091Z E           
2025-01-10T13:23:47.8906198Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8906568Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8907236Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8907641Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8907651Z 
2025-01-10T13:23:47.8907965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8908158Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-01-10T13:23:47.8908162Z 
2025-01-10T13:23:47.8908301Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8908430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8908537Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8908667Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8908796Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8908998Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8909076Z err_msg = None
2025-01-10T13:23:47.8909081Z 
2025-01-10T13:23:47.8909198Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8909279Z         if err_msg is None:
2025-01-10T13:23:47.8909378Z             if left.shape != right.shape:
2025-01-10T13:23:47.8909463Z                 raise_assert_detail(
2025-01-10T13:23:47.8909612Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8909685Z                 )
2025-01-10T13:23:47.8909759Z     
2025-01-10T13:23:47.8909833Z             diff = 0
2025-01-10T13:23:47.8909950Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8910040Z                 # count up differences
2025-01-10T13:23:47.8910213Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8910292Z                     diff += 1
2025-01-10T13:23:47.8910456Z     
2025-01-10T13:23:47.8910555Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8910693Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8910863Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8910976Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8911054Z E           
2025-01-10T13:23:47.8911167Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8911431Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8911700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8911712Z 
2025-01-10T13:23:47.8912010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8912015Z 
2025-01-10T13:23:47.8912188Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8912192Z 
2025-01-10T13:23:47.8912416Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd7e90>
2025-01-10T13:23:47.8912619Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>, attr = 'nu'
2025-01-10T13:23:47.8912623Z 
2025-01-10T13:23:47.8912770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8912886Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8912976Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8913181Z         try:
2025-01-10T13:23:47.8913328Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8913411Z         except KeyError:
2025-01-10T13:23:47.8913553Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8913624Z     
2025-01-10T13:23:47.8913717Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8913813Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8913908Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8914039Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8914131Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8914221Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8914339Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8914344Z 
2025-01-10T13:23:47.8914474Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8914595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8914889Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8914961Z     ???
2025-01-10T13:23:47.8915077Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8915081Z 
2025-01-10T13:23:47.8915151Z >   ???
2025-01-10T13:23:47.8915289Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8915359Z E   
2025-01-10T13:23:47.8915496Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8915611Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8915691Z E          ...
2025-01-10T13:23:47.8915786Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8915916Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8916035Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8916108Z E          ...
2025-01-10T13:23:47.8916333Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8916465Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8916578Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8916583Z 
2025-01-10T13:23:47.8916674Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8916881Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-01-10T13:23:47.8916885Z 
2025-01-10T13:23:47.8917014Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8917146Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8917248Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8917379Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8917506Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8917609Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8917693Z err_msg = None
2025-01-10T13:23:47.8917697Z 
2025-01-10T13:23:47.8917810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8917897Z         if err_msg is None:
2025-01-10T13:23:47.8917993Z             if left.shape != right.shape:
2025-01-10T13:23:47.8918083Z                 raise_assert_detail(
2025-01-10T13:23:47.8918228Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8918306Z                 )
2025-01-10T13:23:47.8918381Z     
2025-01-10T13:23:47.8918457Z             diff = 0
2025-01-10T13:23:47.8918576Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8918665Z                 # count up differences
2025-01-10T13:23:47.8918839Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8918918Z                     diff += 1
2025-01-10T13:23:47.8919002Z     
2025-01-10T13:23:47.8919091Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8919232Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8919402Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8919520Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8919594Z E           
2025-01-10T13:23:47.8919711Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8919972Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8920234Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8920333Z 
2025-01-10T13:23:47.8920650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8920655Z 
2025-01-10T13:23:47.8920824Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8920834Z 
2025-01-10T13:23:47.8921058Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61bd7f50>
2025-01-10T13:23:47.8921231Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>
2025-01-10T13:23:47.8921312Z attr = 'wavelength_cm'
2025-01-10T13:23:47.8921316Z 
2025-01-10T13:23:47.8921466Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8921581Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8921750Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8921824Z         try:
2025-01-10T13:23:47.8921972Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8922055Z         except KeyError:
2025-01-10T13:23:47.8922202Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8922272Z     
2025-01-10T13:23:47.8922370Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8922469Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8922559Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8922701Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8922789Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8922884Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8922994Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8922999Z 
2025-01-10T13:23:47.8923253Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8923378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8923533Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8923604Z     ???
2025-01-10T13:23:47.8923719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8923722Z 
2025-01-10T13:23:47.8923800Z >   ???
2025-01-10T13:23:47.8923928Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8924002Z E   
2025-01-10T13:23:47.8924132Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8924249Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8924323Z E          ...
2025-01-10T13:23:47.8924418Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8924548Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8924667Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8924743Z E          ...
2025-01-10T13:23:47.8924838Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8924964Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8925084Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8925090Z 
2025-01-10T13:23:47.8925186Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8925378Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-01-10T13:23:47.8925382Z 
2025-01-10T13:23:47.8925515Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8925643Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8925748Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8925881Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8926013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8926232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8926314Z err_msg = None
2025-01-10T13:23:47.8926319Z 
2025-01-10T13:23:47.8926435Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8926517Z         if err_msg is None:
2025-01-10T13:23:47.8926620Z             if left.shape != right.shape:
2025-01-10T13:23:47.8926705Z                 raise_assert_detail(
2025-01-10T13:23:47.8926853Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8926926Z                 )
2025-01-10T13:23:47.8927001Z     
2025-01-10T13:23:47.8927075Z             diff = 0
2025-01-10T13:23:47.8927193Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8927281Z                 # count up differences
2025-01-10T13:23:47.8927457Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8927543Z                     diff += 1
2025-01-10T13:23:47.8927726Z     
2025-01-10T13:23:47.8927825Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8927968Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8928144Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8928256Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8928334Z E           
2025-01-10T13:23:47.8928446Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8928710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8928976Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8928990Z 
2025-01-10T13:23:47.8929298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8929302Z 
2025-01-10T13:23:47.8929477Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8929482Z 
2025-01-10T13:23:47.8929706Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fc050>
2025-01-10T13:23:47.8929915Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>, attr = 'f_lu'
2025-01-10T13:23:47.8929919Z 
2025-01-10T13:23:47.8930057Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8930179Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8930277Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8930351Z         try:
2025-01-10T13:23:47.8930495Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8930577Z         except KeyError:
2025-01-10T13:23:47.8930720Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8930791Z     
2025-01-10T13:23:47.8930884Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8930979Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8931074Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8931205Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8931296Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8931388Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8931502Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8931506Z 
2025-01-10T13:23:47.8931636Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8931967Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8932232Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8932352Z     ???
2025-01-10T13:23:47.8932473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8932477Z 
2025-01-10T13:23:47.8932549Z >   ???
2025-01-10T13:23:47.8932684Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8932757Z E   
2025-01-10T13:23:47.8932894Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8933007Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8933280Z E          ...
2025-01-10T13:23:47.8933373Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8933507Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8933626Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8933699Z E          ...
2025-01-10T13:23:47.8933972Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8934110Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8934221Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8934226Z 
2025-01-10T13:23:47.8934319Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8934531Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-01-10T13:23:47.8934535Z 
2025-01-10T13:23:47.8934667Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8934804Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8934904Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8935047Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8935183Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8935283Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8935364Z err_msg = None
2025-01-10T13:23:47.8935368Z 
2025-01-10T13:23:47.8935482Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8935568Z         if err_msg is None:
2025-01-10T13:23:47.8935665Z             if left.shape != right.shape:
2025-01-10T13:23:47.8935756Z                 raise_assert_detail(
2025-01-10T13:23:47.8935902Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8935981Z                 )
2025-01-10T13:23:47.8936052Z     
2025-01-10T13:23:47.8936131Z             diff = 0
2025-01-10T13:23:47.8936247Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8936344Z                 # count up differences
2025-01-10T13:23:47.8936522Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8936603Z                     diff += 1
2025-01-10T13:23:47.8936685Z     
2025-01-10T13:23:47.8936777Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8936922Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8937092Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8937214Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8937289Z E           
2025-01-10T13:23:47.8937409Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8937667Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8937931Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8938087Z 
2025-01-10T13:23:47.8938402Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8938407Z 
2025-01-10T13:23:47.8938578Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8938582Z 
2025-01-10T13:23:47.8938812Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fc7d0>
2025-01-10T13:23:47.8938988Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>
2025-01-10T13:23:47.8939068Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.8939073Z 
2025-01-10T13:23:47.8939220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8939338Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8939508Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8939584Z         try:
2025-01-10T13:23:47.8939731Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8939817Z         except KeyError:
2025-01-10T13:23:47.8939961Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8940033Z     
2025-01-10T13:23:47.8940127Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8940222Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8940319Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8940462Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8940550Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8940647Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8940760Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8940839Z             else:
2025-01-10T13:23:47.8940934Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8941057Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8941062Z 
2025-01-10T13:23:47.8941189Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8941310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8941487Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8941625Z     ???
2025-01-10T13:23:47.8941823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8941837Z 
2025-01-10T13:23:47.8941964Z >   ???
2025-01-10T13:23:47.8942110Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8942182Z E   
2025-01-10T13:23:47.8942320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8942436Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8942516Z E          ...
2025-01-10T13:23:47.8942607Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8942756Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8942871Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8942949Z E          ...
2025-01-10T13:23:47.8943174Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8943308Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8943413Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8943424Z 
2025-01-10T13:23:47.8943513Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8943721Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-01-10T13:23:47.8943725Z 
2025-01-10T13:23:47.8943857Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8943993Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8944093Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8944408Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8944535Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8944635Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8944719Z err_msg = None
2025-01-10T13:23:47.8944723Z 
2025-01-10T13:23:47.8944836Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8944925Z         if err_msg is None:
2025-01-10T13:23:47.8945023Z             if left.shape != right.shape:
2025-01-10T13:23:47.8945114Z                 raise_assert_detail(
2025-01-10T13:23:47.8945269Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8945347Z                 )
2025-01-10T13:23:47.8945418Z     
2025-01-10T13:23:47.8945498Z             diff = 0
2025-01-10T13:23:47.8945613Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8945819Z                 # count up differences
2025-01-10T13:23:47.8945994Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8946083Z                     diff += 1
2025-01-10T13:23:47.8946155Z     
2025-01-10T13:23:47.8946252Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8946396Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8946569Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8946691Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8946766Z E           
2025-01-10T13:23:47.8946885Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8947146Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8947415Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8947420Z 
2025-01-10T13:23:47.8947731Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8947735Z 
2025-01-10T13:23:47.8947905Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8947909Z 
2025-01-10T13:23:47.8948138Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fc890>
2025-01-10T13:23:47.8948307Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>
2025-01-10T13:23:47.8948400Z attr = 'beta_sobolev'
2025-01-10T13:23:47.8948405Z 
2025-01-10T13:23:47.8948544Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8948665Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8948758Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8948830Z         try:
2025-01-10T13:23:47.8948975Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8949059Z         except KeyError:
2025-01-10T13:23:47.8949204Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8949276Z     
2025-01-10T13:23:47.8949369Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8949489Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8949593Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8949727Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8949818Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8949915Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8950120Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8950195Z             else:
2025-01-10T13:23:47.8950297Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8950410Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8950414Z 
2025-01-10T13:23:47.8950540Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8950748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8951007Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8951094Z     ???
2025-01-10T13:23:47.8951209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8951213Z 
2025-01-10T13:23:47.8951290Z >   ???
2025-01-10T13:23:47.8951420Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8951496Z E   
2025-01-10T13:23:47.8951624Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8951868Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8951953Z E          ...
2025-01-10T13:23:47.8952043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8952176Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8952293Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8952371Z E          ...
2025-01-10T13:23:47.8952460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8952590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8952695Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8952699Z 
2025-01-10T13:23:47.8952794Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8952988Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-01-10T13:23:47.8952992Z 
2025-01-10T13:23:47.8953270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8953413Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8953510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8953646Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8953771Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8953868Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8953947Z err_msg = None
2025-01-10T13:23:47.8953951Z 
2025-01-10T13:23:47.8954065Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8954147Z         if err_msg is None:
2025-01-10T13:23:47.8954249Z             if left.shape != right.shape:
2025-01-10T13:23:47.8954335Z                 raise_assert_detail(
2025-01-10T13:23:47.8954485Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8954569Z                 )
2025-01-10T13:23:47.8954639Z     
2025-01-10T13:23:47.8954717Z             diff = 0
2025-01-10T13:23:47.8954831Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8954926Z                 # count up differences
2025-01-10T13:23:47.8955098Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8955181Z                     diff += 1
2025-01-10T13:23:47.8955253Z     
2025-01-10T13:23:47.8955349Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8955487Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8955665Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8955777Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8955855Z E           
2025-01-10T13:23:47.8955968Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8956364Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8956629Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8956634Z 
2025-01-10T13:23:47.8956937Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8956947Z 
2025-01-10T13:23:47.8957116Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8957125Z 
2025-01-10T13:23:47.8957460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fca10>
2025-01-10T13:23:47.8957634Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef5923c950>
2025-01-10T13:23:47.8957717Z attr = 'j_blues'
2025-01-10T13:23:47.8957721Z 
2025-01-10T13:23:47.8957859Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8957980Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8958065Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8958143Z         try:
2025-01-10T13:23:47.8958284Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8958371Z         except KeyError:
2025-01-10T13:23:47.8958509Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8958585Z     
2025-01-10T13:23:47.8958678Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8958772Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8958865Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8959005Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8959093Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8959182Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8959296Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8959369Z             else:
2025-01-10T13:23:47.8959468Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8959576Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8959580Z 
2025-01-10T13:23:47.8959709Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8959823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8959978Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8960055Z     ???
2025-01-10T13:23:47.8960163Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8960171Z 
2025-01-10T13:23:47.8960250Z >   ???
2025-01-10T13:23:47.8960378Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8960454Z E   
2025-01-10T13:23:47.8960584Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8960701Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8960775Z E          ...
2025-01-10T13:23:47.8960871Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8961001Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8961121Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8961194Z E          ...
2025-01-10T13:23:47.8961286Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8961416Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8961523Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8961528Z 
2025-01-10T13:23:47.8961623Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8961959Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-01-10T13:23:47.8961963Z 
2025-01-10T13:23:47.8962096Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8962223Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8962326Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8962458Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8962589Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8962688Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8962765Z err_msg = None
2025-01-10T13:23:47.8962769Z 
2025-01-10T13:23:47.8962884Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8962966Z         if err_msg is None:
2025-01-10T13:23:47.8963333Z             if left.shape != right.shape:
2025-01-10T13:23:47.8963429Z                 raise_assert_detail(
2025-01-10T13:23:47.8963586Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8963659Z                 )
2025-01-10T13:23:47.8963734Z     
2025-01-10T13:23:47.8963809Z             diff = 0
2025-01-10T13:23:47.8963928Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8964016Z                 # count up differences
2025-01-10T13:23:47.8964195Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8964279Z                     diff += 1
2025-01-10T13:23:47.8964351Z     
2025-01-10T13:23:47.8964448Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8964589Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8964776Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8964902Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8964983Z E           
2025-01-10T13:23:47.8965094Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8965359Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8965620Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8965625Z 
2025-01-10T13:23:47.8965931Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8965938Z 
2025-01-10T13:23:47.8966113Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8966118Z 
2025-01-10T13:23:47.8966339Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fd790>
2025-01-10T13:23:47.8966515Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>
2025-01-10T13:23:47.8966596Z attr = 'lines'
2025-01-10T13:23:47.8966600Z 
2025-01-10T13:23:47.8966738Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8966857Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8966942Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8967023Z         try:
2025-01-10T13:23:47.8967165Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8967252Z         except KeyError:
2025-01-10T13:23:47.8967389Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8967603Z     
2025-01-10T13:23:47.8967692Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8967792Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8967881Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8968017Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8968103Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8968200Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8968316Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8968389Z             else:
2025-01-10T13:23:47.8968489Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.8968596Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.8968601Z 
2025-01-10T13:23:47.8968733Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.8968844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8969082Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8969158Z     ???
2025-01-10T13:23:47.8969272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8969276Z 
2025-01-10T13:23:47.8969347Z >   ???
2025-01-10T13:23:47.8969481Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8969558Z E   
2025-01-10T13:23:47.8969687Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8969805Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8969880Z E          ...
2025-01-10T13:23:47.8969973Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8970099Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8970215Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8970286Z E          ...
2025-01-10T13:23:47.8970376Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8970512Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8970620Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8970625Z 
2025-01-10T13:23:47.8970716Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8970971Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-01-10T13:23:47.8970976Z 
2025-01-10T13:23:47.8971203Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fd850>
2025-01-10T13:23:47.8971371Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>
2025-01-10T13:23:47.8971465Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.8971469Z 
2025-01-10T13:23:47.8971604Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8971726Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8971811Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8971890Z         try:
2025-01-10T13:23:47.8972030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8972122Z         except KeyError:
2025-01-10T13:23:47.8972259Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8972335Z     
2025-01-10T13:23:47.8972428Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8972524Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8972620Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8972750Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8972840Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8972931Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8973169Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8973174Z 
2025-01-10T13:23:47.8973301Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8973418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8973422Z 
2025-01-10T13:23:47.8973689Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8973787Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8973901Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8973985Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8974130Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.8974214Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.8974327Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8974405Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.8974488Z err_msg = None
2025-01-10T13:23:47.8974492Z 
2025-01-10T13:23:47.8974601Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8974693Z         if err_msg is None:
2025-01-10T13:23:47.8974787Z             if left.shape != right.shape:
2025-01-10T13:23:47.8974879Z                 raise_assert_detail(
2025-01-10T13:23:47.8975287Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8975428Z                 )
2025-01-10T13:23:47.8975556Z     
2025-01-10T13:23:47.8975637Z             diff = 0
2025-01-10T13:23:47.8975765Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8975857Z                 # count up differences
2025-01-10T13:23:47.8976038Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8976118Z                     diff += 1
2025-01-10T13:23:47.8976194Z     
2025-01-10T13:23:47.8976287Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8976433Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8976608Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8976721Z E           AssertionError: Series are different
2025-01-10T13:23:47.8976796Z E           
2025-01-10T13:23:47.8976920Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.8977294Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8977626Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8977963Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8977971Z 
2025-01-10T13:23:47.8978293Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8978544Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-01-10T13:23:47.8978549Z 
2025-01-10T13:23:47.8978780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fd910>
2025-01-10T13:23:47.8978955Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>
2025-01-10T13:23:47.8979049Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.8979054Z 
2025-01-10T13:23:47.8979201Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8979420Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8979512Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8979585Z         try:
2025-01-10T13:23:47.8979732Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8979814Z         except KeyError:
2025-01-10T13:23:47.8979958Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8980029Z     
2025-01-10T13:23:47.8980122Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8980215Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8980313Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8980447Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8980543Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8980635Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8980754Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8980764Z 
2025-01-10T13:23:47.8980992Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8981109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8981113Z 
2025-01-10T13:23:47.8981256Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8981342Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8981456Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8981538Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8981682Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.8981770Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.8981880Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.8981965Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.8982043Z err_msg = None
2025-01-10T13:23:47.8982051Z 
2025-01-10T13:23:47.8982176Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8982261Z         if err_msg is None:
2025-01-10T13:23:47.8982363Z             if left.shape != right.shape:
2025-01-10T13:23:47.8982452Z                 raise_assert_detail(
2025-01-10T13:23:47.8982602Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8982674Z                 )
2025-01-10T13:23:47.8982750Z     
2025-01-10T13:23:47.8982825Z             diff = 0
2025-01-10T13:23:47.8982942Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8983193Z                 # count up differences
2025-01-10T13:23:47.8983373Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8983453Z                     diff += 1
2025-01-10T13:23:47.8983530Z     
2025-01-10T13:23:47.8983623Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8983763Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8983939Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8984046Z E           AssertionError: Series are different
2025-01-10T13:23:47.8984124Z E           
2025-01-10T13:23:47.8984227Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.8984601Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.8984977Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8985841Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.8985849Z 
2025-01-10T13:23:47.8986329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8986649Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-01-10T13:23:47.8986657Z 
2025-01-10T13:23:47.8987096Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8987338Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8987527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8987774Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8987993Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8988161Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8988291Z err_msg = None
2025-01-10T13:23:47.8988305Z 
2025-01-10T13:23:47.8988488Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8988630Z         if err_msg is None:
2025-01-10T13:23:47.8988788Z             if left.shape != right.shape:
2025-01-10T13:23:47.8988935Z                 raise_assert_detail(
2025-01-10T13:23:47.8989186Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8989323Z                 )
2025-01-10T13:23:47.8989396Z     
2025-01-10T13:23:47.8989475Z             diff = 0
2025-01-10T13:23:47.8989592Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8989687Z                 # count up differences
2025-01-10T13:23:47.8989861Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8989949Z                     diff += 1
2025-01-10T13:23:47.8990019Z     
2025-01-10T13:23:47.8990116Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8990260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8990434Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8990556Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8990629Z E           
2025-01-10T13:23:47.8990748Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.8991017Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8991284Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.8991289Z 
2025-01-10T13:23:47.8991613Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.8991616Z 
2025-01-10T13:23:47.8991789Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.8991910Z 
2025-01-10T13:23:47.8992146Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fdb50>
2025-01-10T13:23:47.8992349Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>, attr = 'nu'
2025-01-10T13:23:47.8992353Z 
2025-01-10T13:23:47.8992501Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.8992621Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.8992713Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.8992791Z         try:
2025-01-10T13:23:47.8992934Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.8993215Z         except KeyError:
2025-01-10T13:23:47.8993427Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.8993505Z     
2025-01-10T13:23:47.8993595Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.8993696Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.8993789Z             if attr == "selected_atoms":
2025-01-10T13:23:47.8994090Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.8994186Z             elif actual.ndim == 1:
2025-01-10T13:23:47.8994286Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.8994401Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.8994406Z 
2025-01-10T13:23:47.8994541Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.8994662Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8994811Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.8994888Z     ???
2025-01-10T13:23:47.8994999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.8995003Z 
2025-01-10T13:23:47.8995078Z >   ???
2025-01-10T13:23:47.8995206Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.8995283Z E   
2025-01-10T13:23:47.8995417Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.8995544Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8995620Z E          ...
2025-01-10T13:23:47.8995717Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8995849Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8995971Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.8996049Z E          ...
2025-01-10T13:23:47.8996136Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.8996271Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.8996385Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.8996390Z 
2025-01-10T13:23:47.8996486Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.8996711Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-01-10T13:23:47.8996715Z 
2025-01-10T13:23:47.8996852Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8996987Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8997094Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8997231Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.8997357Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.8997460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.8997540Z err_msg = None
2025-01-10T13:23:47.8997544Z 
2025-01-10T13:23:47.8997661Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.8997744Z         if err_msg is None:
2025-01-10T13:23:47.8997844Z             if left.shape != right.shape:
2025-01-10T13:23:47.8997930Z                 raise_assert_detail(
2025-01-10T13:23:47.8998083Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.8998296Z                 )
2025-01-10T13:23:47.8998373Z     
2025-01-10T13:23:47.8998447Z             diff = 0
2025-01-10T13:23:47.8998568Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.8998662Z                 # count up differences
2025-01-10T13:23:47.8998833Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.8998918Z                     diff += 1
2025-01-10T13:23:47.8998989Z     
2025-01-10T13:23:47.8999084Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.8999220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.8999394Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.8999507Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.8999586Z E           
2025-01-10T13:23:47.8999699Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9000049Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9000318Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9000323Z 
2025-01-10T13:23:47.9000629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9000633Z 
2025-01-10T13:23:47.9000807Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9000819Z 
2025-01-10T13:23:47.9001049Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fdc10>
2025-01-10T13:23:47.9001224Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>
2025-01-10T13:23:47.9001310Z attr = 'wavelength_cm'
2025-01-10T13:23:47.9001315Z 
2025-01-10T13:23:47.9001453Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9001576Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9001662Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9001779Z         try:
2025-01-10T13:23:47.9001919Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9002008Z         except KeyError:
2025-01-10T13:23:47.9002158Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9002287Z     
2025-01-10T13:23:47.9002441Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9002612Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9002759Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9002908Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9003002Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9003279Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9003406Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9003410Z 
2025-01-10T13:23:47.9003539Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.9003660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9003809Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9003885Z     ???
2025-01-10T13:23:47.9003995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9003999Z 
2025-01-10T13:23:47.9004075Z >   ???
2025-01-10T13:23:47.9004205Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9004281Z E   
2025-01-10T13:23:47.9004565Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9004679Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9004759Z E          ...
2025-01-10T13:23:47.9004859Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9004995Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9005111Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9005190Z E          ...
2025-01-10T13:23:47.9005280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9005414Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9005520Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9005524Z 
2025-01-10T13:23:47.9005620Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9005825Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-01-10T13:23:47.9005833Z 
2025-01-10T13:23:47.9006099Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9006241Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9006340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9006480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9006604Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9006704Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9006780Z err_msg = None
2025-01-10T13:23:47.9006785Z 
2025-01-10T13:23:47.9006897Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9006981Z         if err_msg is None:
2025-01-10T13:23:47.9007081Z             if left.shape != right.shape:
2025-01-10T13:23:47.9007176Z                 raise_assert_detail(
2025-01-10T13:23:47.9007328Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9007411Z                 )
2025-01-10T13:23:47.9007482Z     
2025-01-10T13:23:47.9007564Z             diff = 0
2025-01-10T13:23:47.9007678Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9007774Z                 # count up differences
2025-01-10T13:23:47.9007948Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9008033Z                     diff += 1
2025-01-10T13:23:47.9008103Z     
2025-01-10T13:23:47.9008198Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9008333Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9008507Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9008626Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9008700Z E           
2025-01-10T13:23:47.9008826Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9009086Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9009350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9009355Z 
2025-01-10T13:23:47.9009667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9009672Z 
2025-01-10T13:23:47.9009843Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9009943Z 
2025-01-10T13:23:47.9010176Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fdcd0>
2025-01-10T13:23:47.9010377Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>, attr = 'f_lu'
2025-01-10T13:23:47.9010381Z 
2025-01-10T13:23:47.9010527Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9010643Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9010734Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9010806Z         try:
2025-01-10T13:23:47.9010953Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9011040Z         except KeyError:
2025-01-10T13:23:47.9011178Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9011254Z     
2025-01-10T13:23:47.9011343Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9011443Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9011615Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9011757Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9011845Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9011941Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9012053Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9012058Z 
2025-01-10T13:23:47.9012191Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.9012305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9012456Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9012533Z     ???
2025-01-10T13:23:47.9012643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9012647Z 
2025-01-10T13:23:47.9012722Z >   ???
2025-01-10T13:23:47.9012848Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9012922Z E   
2025-01-10T13:23:47.9013245Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9013375Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9013450Z E          ...
2025-01-10T13:23:47.9013544Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9013677Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9013797Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9013871Z E          ...
2025-01-10T13:23:47.9013963Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9014094Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9014201Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9014205Z 
2025-01-10T13:23:47.9014301Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9014517Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-01-10T13:23:47.9014521Z 
2025-01-10T13:23:47.9014660Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9014792Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9014894Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9015028Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9015159Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9015258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9015335Z err_msg = None
2025-01-10T13:23:47.9015339Z 
2025-01-10T13:23:47.9015457Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9015540Z         if err_msg is None:
2025-01-10T13:23:47.9015642Z             if left.shape != right.shape:
2025-01-10T13:23:47.9015728Z                 raise_assert_detail(
2025-01-10T13:23:47.9015886Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9016095Z                 )
2025-01-10T13:23:47.9016172Z     
2025-01-10T13:23:47.9016248Z             diff = 0
2025-01-10T13:23:47.9016365Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9016455Z                 # count up differences
2025-01-10T13:23:47.9016631Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9016715Z                     diff += 1
2025-01-10T13:23:47.9016787Z     
2025-01-10T13:23:47.9016881Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9017017Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9017193Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9017307Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9017386Z E           
2025-01-10T13:23:47.9017499Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9017877Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9018145Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9018150Z 
2025-01-10T13:23:47.9018456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9018461Z 
2025-01-10T13:23:47.9018634Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9018647Z 
2025-01-10T13:23:47.9018871Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fe450>
2025-01-10T13:23:47.9019047Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>
2025-01-10T13:23:47.9019130Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.9019139Z 
2025-01-10T13:23:47.9019281Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9019404Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9019490Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9019568Z         try:
2025-01-10T13:23:47.9019711Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9019798Z         except KeyError:
2025-01-10T13:23:47.9019937Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9020014Z     
2025-01-10T13:23:47.9020102Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9020202Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9020301Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9020441Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9020527Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9020625Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9020746Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9020821Z             else:
2025-01-10T13:23:47.9020922Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9021030Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.9021034Z 
2025-01-10T13:23:47.9021168Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.9021281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9021435Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9021508Z     ???
2025-01-10T13:23:47.9021625Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9021725Z 
2025-01-10T13:23:47.9021800Z >   ???
2025-01-10T13:23:47.9021935Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9022006Z E   
2025-01-10T13:23:47.9022141Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9022259Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9022335Z E          ...
2025-01-10T13:23:47.9022430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9022561Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9022679Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9022752Z E          ...
2025-01-10T13:23:47.9022845Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9022969Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9023284Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9023291Z 
2025-01-10T13:23:47.9023512Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9023737Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-01-10T13:23:47.9023742Z 
2025-01-10T13:23:47.9023875Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9024005Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9024107Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9024240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9024368Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9024462Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9024546Z err_msg = None
2025-01-10T13:23:47.9024549Z 
2025-01-10T13:23:47.9024661Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9024756Z         if err_msg is None:
2025-01-10T13:23:47.9024858Z             if left.shape != right.shape:
2025-01-10T13:23:47.9024950Z                 raise_assert_detail(
2025-01-10T13:23:47.9025100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9025172Z                 )
2025-01-10T13:23:47.9025247Z     
2025-01-10T13:23:47.9025323Z             diff = 0
2025-01-10T13:23:47.9025445Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9025534Z                 # count up differences
2025-01-10T13:23:47.9025708Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9025787Z                     diff += 1
2025-01-10T13:23:47.9025862Z     
2025-01-10T13:23:47.9025952Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9026091Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9026263Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9026385Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9026463Z E           
2025-01-10T13:23:47.9026575Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9026837Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9027094Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9027099Z 
2025-01-10T13:23:47.9027555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9027560Z 
2025-01-10T13:23:47.9027735Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9027740Z 
2025-01-10T13:23:47.9027967Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fe510>
2025-01-10T13:23:47.9028137Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>
2025-01-10T13:23:47.9028218Z attr = 'beta_sobolev'
2025-01-10T13:23:47.9028222Z 
2025-01-10T13:23:47.9028363Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9028480Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9028570Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9028644Z         try:
2025-01-10T13:23:47.9028791Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9028878Z         except KeyError:
2025-01-10T13:23:47.9029100Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9029188Z     
2025-01-10T13:23:47.9029276Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9029376Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9029465Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9029605Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9029692Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9029792Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9029902Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9029982Z             else:
2025-01-10T13:23:47.9030078Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9030191Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.9030195Z 
2025-01-10T13:23:47.9030329Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.9030443Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9030603Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9030676Z     ???
2025-01-10T13:23:47.9030793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9030797Z 
2025-01-10T13:23:47.9030868Z >   ???
2025-01-10T13:23:47.9031002Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9031072Z E   
2025-01-10T13:23:47.9031204Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9031316Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9031396Z E          ...
2025-01-10T13:23:47.9031484Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9031619Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9031739Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9031812Z E          ...
2025-01-10T13:23:47.9031905Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9032039Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9032151Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9032155Z 
2025-01-10T13:23:47.9032249Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9032463Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-01-10T13:23:47.9032467Z 
2025-01-10T13:23:47.9032598Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9032731Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9032829Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9032967Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9033327Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9033598Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9033684Z err_msg = None
2025-01-10T13:23:47.9033688Z 
2025-01-10T13:23:47.9033809Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9033898Z         if err_msg is None:
2025-01-10T13:23:47.9033997Z             if left.shape != right.shape:
2025-01-10T13:23:47.9034090Z                 raise_assert_detail(
2025-01-10T13:23:47.9034238Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9034315Z                 )
2025-01-10T13:23:47.9034386Z     
2025-01-10T13:23:47.9034465Z             diff = 0
2025-01-10T13:23:47.9034579Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9034678Z                 # count up differences
2025-01-10T13:23:47.9034856Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9034935Z                     diff += 1
2025-01-10T13:23:47.9035068Z     
2025-01-10T13:23:47.9035488Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9035658Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9035840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9035959Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9036034Z E           
2025-01-10T13:23:47.9036156Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9036413Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9036682Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9036691Z 
2025-01-10T13:23:47.9037006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9037010Z 
2025-01-10T13:23:47.9037184Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9037188Z 
2025-01-10T13:23:47.9037417Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619fe690>
2025-01-10T13:23:47.9037589Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef0e9a5880>
2025-01-10T13:23:47.9037667Z attr = 'j_blues'
2025-01-10T13:23:47.9037671Z 
2025-01-10T13:23:47.9037817Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9037935Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9038026Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9038108Z         try:
2025-01-10T13:23:47.9038256Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9038339Z         except KeyError:
2025-01-10T13:23:47.9038484Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9038557Z     
2025-01-10T13:23:47.9038649Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9038743Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9038838Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9038978Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9039066Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9039162Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9039274Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9039352Z             else:
2025-01-10T13:23:47.9039448Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9039565Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.9039663Z 
2025-01-10T13:23:47.9039792Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.9039909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9040056Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9040134Z     ???
2025-01-10T13:23:47.9040245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9040255Z 
2025-01-10T13:23:47.9040326Z >   ???
2025-01-10T13:23:47.9040459Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9040530Z E   
2025-01-10T13:23:47.9040665Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9040776Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9040856Z E          ...
2025-01-10T13:23:47.9040944Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9041155Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9041277Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9041355Z E          ...
2025-01-10T13:23:47.9041441Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9041570Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9041676Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9041686Z 
2025-01-10T13:23:47.9041775Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9042034Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-01-10T13:23:47.9042038Z 
2025-01-10T13:23:47.9042173Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9042309Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9042407Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9042555Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9042680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9042785Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9042861Z err_msg = None
2025-01-10T13:23:47.9042871Z 
2025-01-10T13:23:47.9042983Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9043258Z         if err_msg is None:
2025-01-10T13:23:47.9043364Z             if left.shape != right.shape:
2025-01-10T13:23:47.9043456Z                 raise_assert_detail(
2025-01-10T13:23:47.9043601Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9043677Z                 )
2025-01-10T13:23:47.9043748Z     
2025-01-10T13:23:47.9043827Z             diff = 0
2025-01-10T13:23:47.9043939Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9044037Z                 # count up differences
2025-01-10T13:23:47.9044212Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9044296Z                     diff += 1
2025-01-10T13:23:47.9044367Z     
2025-01-10T13:23:47.9044460Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9044600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9044772Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9044889Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9044962Z E           
2025-01-10T13:23:47.9045079Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9045339Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9045751Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9045756Z 
2025-01-10T13:23:47.9046063Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9046067Z 
2025-01-10T13:23:47.9046237Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9046241Z 
2025-01-10T13:23:47.9046467Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619ff410>
2025-01-10T13:23:47.9046635Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>
2025-01-10T13:23:47.9046718Z attr = 'lines'
2025-01-10T13:23:47.9046726Z 
2025-01-10T13:23:47.9046964Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9047088Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9047178Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9047251Z         try:
2025-01-10T13:23:47.9047395Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9047480Z         except KeyError:
2025-01-10T13:23:47.9047622Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9047695Z     
2025-01-10T13:23:47.9047788Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9047883Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9047980Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9048115Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9048208Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9048300Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9048427Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9048502Z             else:
2025-01-10T13:23:47.9048603Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9048714Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.9048718Z 
2025-01-10T13:23:47.9048845Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.9048966Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9049111Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9049189Z     ???
2025-01-10T13:23:47.9049301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9049305Z 
2025-01-10T13:23:47.9049385Z >   ???
2025-01-10T13:23:47.9049513Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9049598Z E   
2025-01-10T13:23:47.9049728Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9049855Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9049942Z E          ...
2025-01-10T13:23:47.9050034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9050171Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9050287Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9050366Z E          ...
2025-01-10T13:23:47.9050457Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9050589Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9050696Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9050700Z 
2025-01-10T13:23:47.9050798Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9051114Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-01-10T13:23:47.9051118Z 
2025-01-10T13:23:47.9051356Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619ff4d0>
2025-01-10T13:23:47.9051673Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>
2025-01-10T13:23:47.9051766Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.9051770Z 
2025-01-10T13:23:47.9051918Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9052037Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9052132Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9052207Z         try:
2025-01-10T13:23:47.9052356Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9052439Z         except KeyError:
2025-01-10T13:23:47.9052582Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9052653Z     
2025-01-10T13:23:47.9052747Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9052840Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9052937Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9053378Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9053487Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9053592Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9053708Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9053713Z 
2025-01-10T13:23:47.9053846Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.9070486Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9070511Z 
2025-01-10T13:23:47.9070810Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.9070970Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.9071164Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9071305Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.9071553Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:23:47.9071704Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:23:47.9071890Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9072029Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:23:47.9072148Z err_msg = None
2025-01-10T13:23:47.9072154Z 
2025-01-10T13:23:47.9072281Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9072370Z         if err_msg is None:
2025-01-10T13:23:47.9072472Z             if left.shape != right.shape:
2025-01-10T13:23:47.9072567Z                 raise_assert_detail(
2025-01-10T13:23:47.9072726Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9072806Z                 )
2025-01-10T13:23:47.9072876Z     
2025-01-10T13:23:47.9072956Z             diff = 0
2025-01-10T13:23:47.9073299Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9073409Z                 # count up differences
2025-01-10T13:23:47.9073602Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9073686Z                     diff += 1
2025-01-10T13:23:47.9073760Z     
2025-01-10T13:23:47.9073854Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9073999Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9074175Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9074288Z E           AssertionError: Series are different
2025-01-10T13:23:47.9074362Z E           
2025-01-10T13:23:47.9074472Z E           Series values are different (4.04858 %)
2025-01-10T13:23:47.9074853Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.9075375Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9075710Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9075715Z 
2025-01-10T13:23:47.9076041Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9076462Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-01-10T13:23:47.9076468Z 
2025-01-10T13:23:47.9076703Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619ff590>
2025-01-10T13:23:47.9076876Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>
2025-01-10T13:23:47.9076974Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.9076978Z 
2025-01-10T13:23:47.9077124Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9077248Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9077341Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9077416Z         try:
2025-01-10T13:23:47.9077569Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9077652Z         except KeyError:
2025-01-10T13:23:47.9077797Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9077872Z     
2025-01-10T13:23:47.9077970Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9078067Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9078166Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9078304Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9078399Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9078491Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9078607Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9078613Z 
2025-01-10T13:23:47.9078741Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.9078865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9078869Z 
2025-01-10T13:23:47.9079011Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.9079097Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.9079215Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.9079303Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.9079448Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:23:47.9079534Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:23:47.9079646Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:23:47.9079726Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:23:47.9079810Z err_msg = None
2025-01-10T13:23:47.9079814Z 
2025-01-10T13:23:47.9079936Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9080019Z         if err_msg is None:
2025-01-10T13:23:47.9080123Z             if left.shape != right.shape:
2025-01-10T13:23:47.9080208Z                 raise_assert_detail(
2025-01-10T13:23:47.9080358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9080430Z                 )
2025-01-10T13:23:47.9080505Z     
2025-01-10T13:23:47.9080704Z             diff = 0
2025-01-10T13:23:47.9080830Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9080923Z                 # count up differences
2025-01-10T13:23:47.9081100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9081180Z                     diff += 1
2025-01-10T13:23:47.9081254Z     
2025-01-10T13:23:47.9081344Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9081488Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9081661Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9081767Z E           AssertionError: Series are different
2025-01-10T13:23:47.9081845Z E           
2025-01-10T13:23:47.9081949Z E           Series values are different (6.47773 %)
2025-01-10T13:23:47.9082396Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.9082774Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.9083393Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:47.9083405Z 
2025-01-10T13:23:47.9083735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9083981Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-01-10T13:23:47.9083992Z 
2025-01-10T13:23:47.9084124Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9084263Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9084364Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9084502Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9084629Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9084734Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9084813Z err_msg = None
2025-01-10T13:23:47.9084817Z 
2025-01-10T13:23:47.9084936Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9085025Z         if err_msg is None:
2025-01-10T13:23:47.9085130Z             if left.shape != right.shape:
2025-01-10T13:23:47.9085223Z                 raise_assert_detail(
2025-01-10T13:23:47.9085369Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9085446Z                 )
2025-01-10T13:23:47.9085517Z     
2025-01-10T13:23:47.9085596Z             diff = 0
2025-01-10T13:23:47.9085711Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9085805Z                 # count up differences
2025-01-10T13:23:47.9085974Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9086192Z                     diff += 1
2025-01-10T13:23:47.9086266Z     
2025-01-10T13:23:47.9086361Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9086498Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9086670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9086784Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9086864Z E           
2025-01-10T13:23:47.9086982Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9087243Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9087611Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9087622Z 
2025-01-10T13:23:47.9087926Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9087936Z 
2025-01-10T13:23:47.9088108Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9088112Z 
2025-01-10T13:23:47.9088339Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619ff7d0>
2025-01-10T13:23:47.9088538Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>, attr = 'nu'
2025-01-10T13:23:47.9088542Z 
2025-01-10T13:23:47.9088690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9088808Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9088911Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9088986Z         try:
2025-01-10T13:23:47.9089134Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9089216Z         except KeyError:
2025-01-10T13:23:47.9089361Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9089436Z     
2025-01-10T13:23:47.9089526Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9089626Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9089716Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9089855Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9089942Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9090039Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9090151Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9090155Z 
2025-01-10T13:23:47.9090288Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.9090414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9090567Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9090644Z     ???
2025-01-10T13:23:47.9090756Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9090760Z 
2025-01-10T13:23:47.9090834Z >   ???
2025-01-10T13:23:47.9090963Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9091038Z E   
2025-01-10T13:23:47.9091166Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9091282Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9091357Z E          ...
2025-01-10T13:23:47.9091453Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9091587Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9091705Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9091869Z E          ...
2025-01-10T13:23:47.9091967Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9092093Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9092207Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9092211Z 
2025-01-10T13:23:47.9092308Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9092601Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-01-10T13:23:47.9092605Z 
2025-01-10T13:23:47.9092742Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9092871Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9092975Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9093240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9093485Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9093600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9093681Z err_msg = None
2025-01-10T13:23:47.9093685Z 
2025-01-10T13:23:47.9093806Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9093889Z         if err_msg is None:
2025-01-10T13:23:47.9093994Z             if left.shape != right.shape:
2025-01-10T13:23:47.9094081Z                 raise_assert_detail(
2025-01-10T13:23:47.9094233Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9094306Z                 )
2025-01-10T13:23:47.9094381Z     
2025-01-10T13:23:47.9094456Z             diff = 0
2025-01-10T13:23:47.9094575Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9094666Z                 # count up differences
2025-01-10T13:23:47.9094842Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9094929Z                     diff += 1
2025-01-10T13:23:47.9095009Z     
2025-01-10T13:23:47.9095105Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9095242Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9095416Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9095533Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9095613Z E           
2025-01-10T13:23:47.9095726Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9095989Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9096256Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9096264Z 
2025-01-10T13:23:47.9096574Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9096578Z 
2025-01-10T13:23:47.9096754Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9096759Z 
2025-01-10T13:23:47.9096986Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619ff890>
2025-01-10T13:23:47.9097160Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>
2025-01-10T13:23:47.9097241Z attr = 'wavelength_cm'
2025-01-10T13:23:47.9097254Z 
2025-01-10T13:23:47.9097393Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9097519Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9097727Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9097807Z         try:
2025-01-10T13:23:47.9097948Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9098035Z         except KeyError:
2025-01-10T13:23:47.9098176Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9098253Z     
2025-01-10T13:23:47.9098342Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9098443Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9098533Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9098670Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9098757Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9098854Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9098969Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9098975Z 
2025-01-10T13:23:47.9099180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.9099311Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9099461Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9099537Z     ???
2025-01-10T13:23:47.9099649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9099654Z 
2025-01-10T13:23:47.9099732Z >   ???
2025-01-10T13:23:47.9099861Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9099937Z E   
2025-01-10T13:23:47.9100066Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9100184Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9100261Z E          ...
2025-01-10T13:23:47.9100358Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9100492Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9100602Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9100691Z E          ...
2025-01-10T13:23:47.9100846Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9101072Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9101252Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9101259Z 
2025-01-10T13:23:47.9101393Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9101677Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-01-10T13:23:47.9101682Z 
2025-01-10T13:23:47.9101847Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9101982Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9102082Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9102222Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9102356Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9102456Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9102533Z err_msg = None
2025-01-10T13:23:47.9102537Z 
2025-01-10T13:23:47.9102654Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9102737Z         if err_msg is None:
2025-01-10T13:23:47.9102836Z             if left.shape != right.shape:
2025-01-10T13:23:47.9102922Z                 raise_assert_detail(
2025-01-10T13:23:47.9103209Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9103298Z                 )
2025-01-10T13:23:47.9103423Z     
2025-01-10T13:23:47.9103545Z             diff = 0
2025-01-10T13:23:47.9103662Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9103754Z                 # count up differences
2025-01-10T13:23:47.9103928Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9104185Z                     diff += 1
2025-01-10T13:23:47.9104257Z     
2025-01-10T13:23:47.9104350Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9104487Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9104662Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9104779Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9104858Z E           
2025-01-10T13:23:47.9104972Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9105238Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9105605Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9105619Z 
2025-01-10T13:23:47.9105928Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9105932Z 
2025-01-10T13:23:47.9106105Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9106110Z 
2025-01-10T13:23:47.9106336Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef619ff950>
2025-01-10T13:23:47.9106537Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>, attr = 'f_lu'
2025-01-10T13:23:47.9106541Z 
2025-01-10T13:23:47.9106686Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9106808Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9106905Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9106978Z         try:
2025-01-10T13:23:47.9107124Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9107209Z         except KeyError:
2025-01-10T13:23:47.9107353Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9107423Z     
2025-01-10T13:23:47.9107516Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9107616Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9107706Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9107843Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9107929Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9108027Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9108139Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9108143Z 
2025-01-10T13:23:47.9108276Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:23:47.9108395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9108545Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9108617Z     ???
2025-01-10T13:23:47.9108732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9108736Z 
2025-01-10T13:23:47.9108812Z >   ???
2025-01-10T13:23:47.9108940Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9109017Z E   
2025-01-10T13:23:47.9109148Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9109265Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9109339Z E          ...
2025-01-10T13:23:47.9109440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9109569Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9109686Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9109861Z E          ...
2025-01-10T13:23:47.9109957Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9110093Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9110207Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9110211Z 
2025-01-10T13:23:47.9110308Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9110584Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-01-10T13:23:47.9110588Z 
2025-01-10T13:23:47.9110720Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9110846Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9110950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9111082Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9111286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9111382Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9111480Z err_msg = None
2025-01-10T13:23:47.9111486Z 
2025-01-10T13:23:47.9111692Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9111832Z         if err_msg is None:
2025-01-10T13:23:47.9112003Z             if left.shape != right.shape:
2025-01-10T13:23:47.9112097Z                 raise_assert_detail(
2025-01-10T13:23:47.9112252Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9112326Z                 )
2025-01-10T13:23:47.9112399Z     
2025-01-10T13:23:47.9112474Z             diff = 0
2025-01-10T13:23:47.9112593Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9112683Z                 # count up differences
2025-01-10T13:23:47.9112867Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9112950Z                     diff += 1
2025-01-10T13:23:47.9113171Z     
2025-01-10T13:23:47.9113267Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9113412Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9113586Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9113700Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9113778Z E           
2025-01-10T13:23:47.9113890Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9114153Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9114418Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9114429Z 
2025-01-10T13:23:47.9114733Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9114737Z 
2025-01-10T13:23:47.9114910Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9114915Z 
2025-01-10T13:23:47.9115137Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61a20110>
2025-01-10T13:23:47.9115308Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>
2025-01-10T13:23:47.9115387Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.9115391Z 
2025-01-10T13:23:47.9115540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9115802Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9115889Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9115967Z         try:
2025-01-10T13:23:47.9116107Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9116193Z         except KeyError:
2025-01-10T13:23:47.9116331Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9116406Z     
2025-01-10T13:23:47.9116494Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9116594Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9116684Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9116820Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9116908Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9117005Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9117116Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9117203Z             else:
2025-01-10T13:23:47.9117418Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9117530Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.9117534Z 
2025-01-10T13:23:47.9117663Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.9117777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9117927Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9118000Z     ???
2025-01-10T13:23:47.9118114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9118118Z 
2025-01-10T13:23:47.9118189Z >   ???
2025-01-10T13:23:47.9118320Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9118394Z E   
2025-01-10T13:23:47.9118529Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9118640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9118721Z E          ...
2025-01-10T13:23:47.9118823Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9118954Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9119072Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9119145Z E          ...
2025-01-10T13:23:47.9119237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9119363Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9119474Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9119478Z 
2025-01-10T13:23:47.9119569Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9119850Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-01-10T13:23:47.9119854Z 
2025-01-10T13:23:47.9119982Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9120117Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9120221Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9120352Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9120478Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9120575Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9120657Z err_msg = None
2025-01-10T13:23:47.9120661Z 
2025-01-10T13:23:47.9120771Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9120860Z         if err_msg is None:
2025-01-10T13:23:47.9120957Z             if left.shape != right.shape:
2025-01-10T13:23:47.9121046Z                 raise_assert_detail(
2025-01-10T13:23:47.9121194Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9121298Z                 )
2025-01-10T13:23:47.9121430Z     
2025-01-10T13:23:47.9121696Z             diff = 0
2025-01-10T13:23:47.9121872Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9121963Z                 # count up differences
2025-01-10T13:23:47.9122149Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9122229Z                     diff += 1
2025-01-10T13:23:47.9122304Z     
2025-01-10T13:23:47.9122396Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9122539Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9122709Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9122831Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9122905Z E           
2025-01-10T13:23:47.9123140Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9123556Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9123825Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9123831Z 
2025-01-10T13:23:47.9124144Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9124149Z 
2025-01-10T13:23:47.9124324Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9124328Z 
2025-01-10T13:23:47.9124552Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61a201d0>
2025-01-10T13:23:47.9124734Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>
2025-01-10T13:23:47.9124815Z attr = 'beta_sobolev'
2025-01-10T13:23:47.9124820Z 
2025-01-10T13:23:47.9124964Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9125089Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9125180Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9125253Z         try:
2025-01-10T13:23:47.9125399Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9125480Z         except KeyError:
2025-01-10T13:23:47.9125625Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9125700Z     
2025-01-10T13:23:47.9125789Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9125888Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9125978Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9126115Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9126210Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9126305Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9126418Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9126496Z             else:
2025-01-10T13:23:47.9126592Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9126704Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.9126709Z 
2025-01-10T13:23:47.9126839Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.9126962Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9127115Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9127189Z     ???
2025-01-10T13:23:47.9127301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9127305Z 
2025-01-10T13:23:47.9127372Z >   ???
2025-01-10T13:23:47.9127507Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9127743Z E   
2025-01-10T13:23:47.9127883Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9127995Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9128073Z E          ...
2025-01-10T13:23:47.9128163Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9128301Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9128413Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9128491Z E          ...
2025-01-10T13:23:47.9128587Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9128712Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9128822Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9128827Z 
2025-01-10T13:23:47.9128919Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9129190Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-01-10T13:23:47.9129279Z 
2025-01-10T13:23:47.9129413Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9129551Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9129650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9129792Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:23:47.9129921Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:23:47.9130015Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:23:47.9130098Z err_msg = None
2025-01-10T13:23:47.9130103Z 
2025-01-10T13:23:47.9130218Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:23:47.9130305Z         if err_msg is None:
2025-01-10T13:23:47.9130405Z             if left.shape != right.shape:
2025-01-10T13:23:47.9130502Z                 raise_assert_detail(
2025-01-10T13:23:47.9130651Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:23:47.9130730Z                 )
2025-01-10T13:23:47.9130799Z     
2025-01-10T13:23:47.9130878Z             diff = 0
2025-01-10T13:23:47.9130992Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:23:47.9131087Z                 # count up differences
2025-01-10T13:23:47.9131262Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:23:47.9131341Z                     diff += 1
2025-01-10T13:23:47.9131415Z     
2025-01-10T13:23:47.9131507Z             diff = diff * 100.0 / left.size
2025-01-10T13:23:47.9131649Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:23:47.9131817Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:23:47.9131937Z E           AssertionError: numpy array are different
2025-01-10T13:23:47.9132019Z E           
2025-01-10T13:23:47.9132138Z E           numpy array values are different (4.04858 %)
2025-01-10T13:23:47.9132398Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9132664Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:47.9132669Z 
2025-01-10T13:23:47.9132982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:23:47.9133207Z 
2025-01-10T13:23:47.9133392Z During handling of the above exception, another exception occurred:
2025-01-10T13:23:47.9133396Z 
2025-01-10T13:23:47.9133625Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7fef61a20350>
2025-01-10T13:23:47.9133792Z plasma = <tardis.plasma.base.BasePlasma object at 0x7fef2f2d0860>
2025-01-10T13:23:47.9133876Z attr = 'j_blues'
2025-01-10T13:23:47.9133880Z 
2025-01-10T13:23:47.9134023Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:23:47.9134138Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:23:47.9134230Z         key = f"plasma/{attr}"
2025-01-10T13:23:47.9134305Z         try:
2025-01-10T13:23:47.9134453Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:23:47.9134535Z         except KeyError:
2025-01-10T13:23:47.9134684Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:23:47.9134754Z     
2025-01-10T13:23:47.9134852Z         if hasattr(plasma, attr):
2025-01-10T13:23:47.9135063Z             actual = getattr(plasma, attr)
2025-01-10T13:23:47.9135162Z             if attr == "selected_atoms":
2025-01-10T13:23:47.9135300Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:23:47.9135395Z             elif actual.ndim == 1:
2025-01-10T13:23:47.9135491Z                 actual = pd.Series(actual)
2025-01-10T13:23:47.9135603Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:23:47.9135682Z             else:
2025-01-10T13:23:47.9135778Z                 actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9135893Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:23:47.9135897Z 
2025-01-10T13:23:47.9136026Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:23:47.9136147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9136296Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9136372Z     ???
2025-01-10T13:23:47.9136494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9136499Z 
2025-01-10T13:23:47.9136572Z >   ???
2025-01-10T13:23:47.9136704Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:47.9136776Z E   
2025-01-10T13:23:47.9136911Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:47.9137025Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9137104Z E          ...
2025-01-10T13:23:47.9137195Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9137331Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9137445Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9137521Z E          ...
2025-01-10T13:23:47.9137606Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:47.9137735Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:47.9137900Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:23:47.9137908Z 
2025-01-10T13:23:47.9138073Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9138366Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-01-10T13:23:47.9138371Z 
2025-01-10T13:23:47.9138607Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef33f0f110>
2025-01-10T13:23:47.9138705Z attr = 'stimulated_emission_factor'
2025-01-10T13:23:47.9138976Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef2f2d0590>
2025-01-10T13:23:47.9138980Z 
2025-01-10T13:23:47.9139129Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:23:47.9139299Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:23:47.9139427Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:23:47.9139558Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:23:47.9139683Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:23:47.9139896Z             if hasattr(actual, "cgs"):
2025-01-10T13:23:47.9139988Z                 actual = actual.cgs.value
2025-01-10T13:23:47.9140095Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:23:47.9140099Z 
2025-01-10T13:23:47.9140203Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:23:47.9140319Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9140323Z 
2025-01-10T13:23:47.9140656Z args = (<function assert_allclose.<locals>.compare at 0x7fef4cebe2a0>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-01-10T13:23:47.9140735Z         0.01476858],
2025-01-10T13:23:47.9140874Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-01-10T13:23:47.9140954Z         0.01473787]]))
2025-01-10T13:23:47.9141215Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9141306Z 
2025-01-10T13:23:47.9141389Z     @wraps(func)
2025-01-10T13:23:47.9141487Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9141575Z         with self._recreate_cm():
2025-01-10T13:23:47.9141668Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9141758Z E           AssertionError: 
2025-01-10T13:23:47.9141876Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9141949Z E           
2025-01-10T13:23:47.9142060Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-01-10T13:23:47.9142178Z E           Max absolute difference among violations: 1.
2025-01-10T13:23:47.9142296Z E           Max relative difference among violations: 1.
2025-01-10T13:23:47.9142443Z E            ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:23:47.9142554Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:23:47.9142668Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:23:47.9142819Z E            DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:23:47.9142926Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:23:47.9143229Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:23:47.9143239Z 
2025-01-10T13:23:47.9143509Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9143672Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-01-10T13:23:47.9143676Z 
2025-01-10T13:23:47.9143906Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef33f0f110>
2025-01-10T13:23:47.9143994Z attr = 'lines_lower_level_index'
2025-01-10T13:23:47.9144267Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef358ed580>
2025-01-10T13:23:47.9144272Z 
2025-01-10T13:23:47.9144438Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:23:47.9144607Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:23:47.9144733Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:23:47.9144866Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:23:47.9144990Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:23:47.9145079Z             if hasattr(actual, "cgs"):
2025-01-10T13:23:47.9145178Z                 actual = actual.cgs.value
2025-01-10T13:23:47.9145284Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:23:47.9145288Z 
2025-01-10T13:23:47.9145401Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:23:47.9145519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9145523Z 
2025-01-10T13:23:47.9145923Z args = (<function assert_allclose.<locals>.compare at 0x7fef32269c60>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-01-10T13:23:47.9146316Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9146321Z 
2025-01-10T13:23:47.9146397Z     @wraps(func)
2025-01-10T13:23:47.9146485Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9146579Z         with self._recreate_cm():
2025-01-10T13:23:47.9146672Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9146758Z E           AssertionError: 
2025-01-10T13:23:47.9146875Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9146949Z E           
2025-01-10T13:23:47.9147056Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-01-10T13:23:47.9147181Z E           Max absolute difference among violations: 4005
2025-01-10T13:23:47.9147314Z E           Max relative difference among violations: 26.00649351
2025-01-10T13:23:47.9147447Z E            ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:23:47.9147710Z E            DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:23:47.9147716Z 
2025-01-10T13:23:47.9147982Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9148268Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-01-10T13:23:47.9148274Z 
2025-01-10T13:23:47.9148568Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef33f0f110>
2025-01-10T13:23:47.9148660Z attr = 'lines_upper_level_index'
2025-01-10T13:23:47.9148942Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef5b5fe3f0>
2025-01-10T13:23:47.9148947Z 
2025-01-10T13:23:47.9149097Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:23:47.9149260Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:23:47.9149387Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:23:47.9149538Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:23:47.9149664Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:23:47.9149753Z             if hasattr(actual, "cgs"):
2025-01-10T13:23:47.9149850Z                 actual = actual.cgs.value
2025-01-10T13:23:47.9149953Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:23:47.9149958Z 
2025-01-10T13:23:47.9150069Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:23:47.9150185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9150188Z 
2025-01-10T13:23:47.9150577Z args = (<function assert_allclose.<locals>.compare at 0x7fef3945c2c0>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-01-10T13:23:47.9150833Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9150837Z 
2025-01-10T13:23:47.9150917Z     @wraps(func)
2025-01-10T13:23:47.9151011Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9151098Z         with self._recreate_cm():
2025-01-10T13:23:47.9151190Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9151276Z E           AssertionError: 
2025-01-10T13:23:47.9151388Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9151467Z E           
2025-01-10T13:23:47.9151568Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-01-10T13:23:47.9151693Z E           Max absolute difference among violations: 4046
2025-01-10T13:23:47.9151824Z E           Max relative difference among violations: 24.82208589
2025-01-10T13:23:47.9151955Z E            ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:23:47.9152079Z E            DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:23:47.9152084Z 
2025-01-10T13:23:47.9152286Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9152571Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-01-10T13:23:47.9152576Z 
2025-01-10T13:23:47.9152809Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef33f0f110>
2025-01-10T13:23:47.9152889Z attr = 'beta_sobolev'
2025-01-10T13:23:47.9153438Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef34afa3f0>
2025-01-10T13:23:47.9153447Z 
2025-01-10T13:23:47.9153600Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:23:47.9153763Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:23:47.9153890Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:23:47.9154019Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:23:47.9154142Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:23:47.9154229Z             if hasattr(actual, "cgs"):
2025-01-10T13:23:47.9154323Z                 actual = actual.cgs.value
2025-01-10T13:23:47.9154564Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:23:47.9154570Z 
2025-01-10T13:23:47.9154679Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:23:47.9154794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9154798Z 
2025-01-10T13:23:47.9155066Z args = (<function assert_allclose.<locals>.compare at 0x7fef3945e7a0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.9155145Z        [1., 1., .....,
2025-01-10T13:23:47.9155232Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.9155312Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.9155391Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T13:23:47.9155646Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9155650Z 
2025-01-10T13:23:47.9155726Z     @wraps(func)
2025-01-10T13:23:47.9155816Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9155913Z         with self._recreate_cm():
2025-01-10T13:23:47.9156007Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9156096Z E           AssertionError: 
2025-01-10T13:23:47.9156202Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9156280Z E           
2025-01-10T13:23:47.9156383Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:23:47.9156518Z E           Max absolute difference among violations: 0.99984222
2025-01-10T13:23:47.9156654Z E           Max relative difference among violations: 6337.12154973
2025-01-10T13:23:47.9156764Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.9156852Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.9156951Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:23:47.9157056Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.9157146Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:47.9157243Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:23:47.9157252Z 
2025-01-10T13:23:47.9157456Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9157604Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-01-10T13:23:47.9157608Z 
2025-01-10T13:23:47.9157836Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef33f0f110>
2025-01-10T13:23:47.9157917Z attr = 'lines'
2025-01-10T13:23:47.9158183Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef34e6e120>
2025-01-10T13:23:47.9158188Z 
2025-01-10T13:23:47.9158339Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:23:47.9158503Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:23:47.9158629Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:23:47.9158764Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:23:47.9159023Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:23:47.9159120Z             if hasattr(actual, "cgs"):
2025-01-10T13:23:47.9159209Z                 actual = actual.cgs.value
2025-01-10T13:23:47.9159313Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:23:47.9159318Z 
2025-01-10T13:23:47.9159428Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:23:47.9159541Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9159545Z 
2025-01-10T13:23:47.9160002Z args = (<function assert_allclose.<locals>.compare at 0x7fef4ce72b60>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-01-10T13:23:47.9160114Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-01-10T13:23:47.9160371Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9160379Z 
2025-01-10T13:23:47.9160531Z     @wraps(func)
2025-01-10T13:23:47.9160624Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9160711Z         with self._recreate_cm():
2025-01-10T13:23:47.9160804Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9160890Z E           AssertionError: 
2025-01-10T13:23:47.9161001Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9161074Z E           
2025-01-10T13:23:47.9161183Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-01-10T13:23:47.9161321Z E           Max absolute difference among violations: 4.25260542e+12
2025-01-10T13:23:47.9161460Z E           Max relative difference among violations: 18196.0085861
2025-01-10T13:23:47.9161633Z E            ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:23:47.9161730Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T13:23:47.9161876Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:23:47.9162055Z E            DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:23:47.9162148Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T13:23:47.9162281Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:23:47.9162285Z 
2025-01-10T13:23:47.9162492Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9162924Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-01-10T13:23:47.9162929Z 
2025-01-10T13:23:47.9163340Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef33f0f110>
2025-01-10T13:23:47.9163422Z attr = 'f_lu'
2025-01-10T13:23:47.9163688Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef34e6e210>
2025-01-10T13:23:47.9163692Z 
2025-01-10T13:23:47.9163844Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:23:47.9164012Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:23:47.9164141Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:23:47.9164274Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:23:47.9164397Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:23:47.9164486Z             if hasattr(actual, "cgs"):
2025-01-10T13:23:47.9164583Z                 actual = actual.cgs.value
2025-01-10T13:23:47.9164688Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:23:47.9164701Z 
2025-01-10T13:23:47.9164810Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:23:47.9164926Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9164931Z 
2025-01-10T13:23:47.9165401Z args = (<function assert_allclose.<locals>.compare at 0x7fef4ce44f40>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-01-10T13:23:47.9165649Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-01-10T13:23:47.9165905Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9165909Z 
2025-01-10T13:23:47.9165991Z     @wraps(func)
2025-01-10T13:23:47.9166078Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9166169Z         with self._recreate_cm():
2025-01-10T13:23:47.9166264Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9166350Z E           AssertionError: 
2025-01-10T13:23:47.9166464Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9166538Z E           
2025-01-10T13:23:47.9166720Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-01-10T13:23:47.9166943Z E           Max absolute difference among violations: 2.92713618
2025-01-10T13:23:47.9167172Z E           Max relative difference among violations: 18196.0085861
2025-01-10T13:23:47.9167564Z E            ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:23:47.9167684Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T13:23:47.9167860Z E            DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:23:47.9167956Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T13:23:47.9167961Z 
2025-01-10T13:23:47.9168170Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9168331Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-01-10T13:23:47.9168335Z 
2025-01-10T13:23:47.9168571Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7fef33f0f110>
2025-01-10T13:23:47.9168655Z attr = 'tau_sobolevs'
2025-01-10T13:23:47.9168934Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef5b5fe2d0>
2025-01-10T13:23:47.9168938Z 
2025-01-10T13:23:47.9169088Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:23:47.9169271Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:23:47.9169402Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:23:47.9169543Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:23:47.9169669Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:23:47.9169765Z             if hasattr(actual, "cgs"):
2025-01-10T13:23:47.9169864Z                 actual = actual.cgs.value
2025-01-10T13:23:47.9169969Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:23:47.9169974Z 
2025-01-10T13:23:47.9170086Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:23:47.9170204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9170209Z 
2025-01-10T13:23:47.9170666Z args = (<function assert_allclose.<locals>.compare at 0x7fef3492c860>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-01-10T13:23:47.9170782Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-01-10T13:23:47.9171047Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9171051Z 
2025-01-10T13:23:47.9171132Z     @wraps(func)
2025-01-10T13:23:47.9171218Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9171314Z         with self._recreate_cm():
2025-01-10T13:23:47.9171402Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9171494Z E           AssertionError: 
2025-01-10T13:23:47.9171603Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9171678Z E           
2025-01-10T13:23:47.9171784Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-01-10T13:23:47.9171932Z E           Max absolute difference among violations: 282815.33818472
2025-01-10T13:23:47.9172069Z E           Max relative difference among violations: 4.12352828e+47
2025-01-10T13:23:47.9172249Z E            ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:23:47.9172457Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T13:23:47.9172606Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:23:47.9172786Z E            DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:23:47.9172875Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T13:23:47.9173138Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:23:47.9173143Z 
2025-01-10T13:23:47.9173349Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9173524Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-01-10T13:23:47.9173528Z 
2025-01-10T13:23:47.9173744Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9173831Z attr = 'iterations_w'
2025-01-10T13:23:47.9174226Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef2cd87e00>
2025-01-10T13:23:47.9174237Z 
2025-01-10T13:23:47.9174334Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9174416Z         "attr",
2025-01-10T13:23:47.9174488Z         [
2025-01-10T13:23:47.9174576Z             "iterations_w",
2025-01-10T13:23:47.9174658Z             "iterations_t_rad",
2025-01-10T13:23:47.9174763Z             "iterations_electron_densities",
2025-01-10T13:23:47.9174849Z             "iterations_t_inner",
2025-01-10T13:23:47.9174927Z         ],
2025-01-10T13:23:47.9174999Z     )
2025-01-10T13:23:47.9175200Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9175312Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:23:47.9175406Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9175492Z             actual = actual.value
2025-01-10T13:23:47.9175589Z         actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9175725Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9175907Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9175911Z 
2025-01-10T13:23:47.9176035Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:23:47.9176148Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9176300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9176372Z     ???
2025-01-10T13:23:47.9176485Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9176489Z 
2025-01-10T13:23:47.9176559Z >   ???
2025-01-10T13:23:47.9176744Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:47.9176815Z E   
2025-01-10T13:23:47.9176982Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:23:47.9177060Z E   [index]: [0, 1]
2025-01-10T13:23:47.9177172Z E   [left]:  [0.40039163797855976, 0.45013644671958974]
2025-01-10T13:23:47.9177287Z E   [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T13:23:47.9177457Z E   At positional index 1, first diff: 0.45013644671958974 != 0.4500690173218345
2025-01-10T13:23:47.9177462Z 
2025-01-10T13:23:47.9177556Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9177711Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9178137Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:23:47.9178584Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:23:47.9178742Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:23:47.9178747Z 
2025-01-10T13:23:47.9178750Z 
2025-01-10T13:23:47.9178988Z Packets:                                                                                   4031/? [04:50<00:00,  7.35it/s] [A
2025-01-10T13:23:47.9179132Z 
2025-01-10T13:23:47.9179371Z Packets:                                                                                   14696/? [04:50<00:00, 60.42it/s][A
2025-01-10T13:23:47.9179377Z 
2025-01-10T13:23:47.9179606Z Packets:                                                                                   25511/? [04:50<00:00, 137.20it/s][A
2025-01-10T13:23:47.9179610Z 
2025-01-10T13:23:47.9179829Z Packets:                                                                                   36455/? [04:50<00:00, 248.01it/s][A
2025-01-10T13:23:47.9180321Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:50<00:00, 102.34s/it]
2025-01-10T13:23:47.9180327Z 
2025-01-10T13:23:47.9180564Z Packets:                                                                                   44030/? [04:50<00:00, 248.01it/s][A
2025-01-10T13:23:47.9180569Z 
2025-01-10T13:23:47.9180883Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-01-10T13:23:47.9180898Z 
2025-01-10T13:23:47.9181175Z Packets:   ███████████████████▋                                                            9833/40000 [00:00<00:00, 35586.42it/s][A
2025-01-10T13:23:47.9181179Z 
2025-01-10T13:23:47.9181443Z Packets:   ██████████████████████████▊                                                     13392/40000 [00:00<00:00, 35567.97it/s][A
2025-01-10T13:23:47.9181453Z 
2025-01-10T13:23:47.9181724Z Packets:   █████████████████████████████████▉                                              16948/40000 [00:00<00:00, 35519.33it/s][A
2025-01-10T13:23:47.9181729Z 
2025-01-10T13:23:47.9182007Z Packets:   ████████████████████████████████████████▉                                       20498/40000 [00:00<00:00, 35426.42it/s][A
2025-01-10T13:23:47.9182012Z 
2025-01-10T13:23:47.9182290Z Packets:   ████████████████████████████████████████████████                                24052/40000 [00:00<00:00, 35458.42it/s][A
2025-01-10T13:23:47.9182308Z 
2025-01-10T13:23:47.9182613Z Packets:   ███████████████████████████████████████████████████████▎                        27625/40000 [00:00<00:00, 35532.24it/s][A
2025-01-10T13:23:47.9182618Z 
2025-01-10T13:23:47.9182919Z Packets:   ██████████████████████████████████████████████████████████████▎                 31181/40000 [00:00<00:00, 35540.07it/s][A
2025-01-10T13:23:47.9182924Z 
2025-01-10T13:23:47.9183363Z Packets:   █████████████████████████████████████████████████████████████████████▌          34760/40000 [00:00<00:00, 35613.93it/s][A
2025-01-10T13:23:47.9183369Z 
2025-01-10T13:23:47.9183690Z Packets:   ████████████████████████████████████████████████████████████████████████████▋   38327/40000 [00:01<00:00, 35630.04it/s][A
2025-01-10T13:23:47.9183838Z Iterations:                                                                                6/? [04:53<00:00, 68.34s/it] 
2025-01-10T13:23:47.9183843Z 
2025-01-10T13:23:47.9184182Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35630.04it/s][A
2025-01-10T13:23:47.9184483Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9184989Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:23:47.9185168Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-01-10T13:23:47.9185176Z 
2025-01-10T13:23:47.9185395Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9185487Z attr = 'iterations_t_rad'
2025-01-10T13:23:47.9185761Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef557e4710>
2025-01-10T13:23:47.9185765Z 
2025-01-10T13:23:47.9185866Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9185942Z         "attr",
2025-01-10T13:23:47.9186014Z         [
2025-01-10T13:23:47.9186240Z             "iterations_w",
2025-01-10T13:23:47.9186328Z             "iterations_t_rad",
2025-01-10T13:23:47.9186437Z             "iterations_electron_densities",
2025-01-10T13:23:47.9186523Z             "iterations_t_inner",
2025-01-10T13:23:47.9186600Z         ],
2025-01-10T13:23:47.9186672Z     )
2025-01-10T13:23:47.9186876Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9186990Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:23:47.9187086Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9187172Z             actual = actual.value
2025-01-10T13:23:47.9187270Z         actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9187397Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9187581Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9187587Z 
2025-01-10T13:23:47.9187711Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:23:47.9187842Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9187999Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9188076Z     ???
2025-01-10T13:23:47.9188194Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9188198Z 
2025-01-10T13:23:47.9188271Z >   ???
2025-01-10T13:23:47.9188458Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:47.9188528Z E   
2025-01-10T13:23:47.9188695Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:23:47.9188775Z E   [index]: [0, 1]
2025-01-10T13:23:47.9188884Z E   [left]:  [9967.488442185557, 10090.925208074616]
2025-01-10T13:23:47.9188986Z E   [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T13:23:47.9189167Z E   At positional index 1, first diff: 10090.925208074616 != 10091.396322818851
2025-01-10T13:23:47.9189172Z 
2025-01-10T13:23:47.9189271Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9189463Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-01-10T13:23:47.9189468Z 
2025-01-10T13:23:47.9189691Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9189788Z attr = 'iterations_electron_densities'
2025-01-10T13:23:47.9190060Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef566772c0>
2025-01-10T13:23:47.9190064Z 
2025-01-10T13:23:47.9190159Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9190239Z         "attr",
2025-01-10T13:23:47.9190311Z         [
2025-01-10T13:23:47.9190398Z             "iterations_w",
2025-01-10T13:23:47.9190486Z             "iterations_t_rad",
2025-01-10T13:23:47.9190585Z             "iterations_electron_densities",
2025-01-10T13:23:47.9190677Z             "iterations_t_inner",
2025-01-10T13:23:47.9190749Z         ],
2025-01-10T13:23:47.9190827Z     )
2025-01-10T13:23:47.9191026Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9191232Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:23:47.9191321Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9191412Z             actual = actual.value
2025-01-10T13:23:47.9191503Z         actual = pd.DataFrame(actual)
2025-01-10T13:23:47.9191635Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9191809Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9191813Z 
2025-01-10T13:23:47.9191938Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:23:47.9192055Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9192204Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9192312Z     ???
2025-01-10T13:23:47.9192515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9192523Z 
2025-01-10T13:23:47.9192661Z >   ???
2025-01-10T13:23:47.9193246Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:47.9193341Z E   
2025-01-10T13:23:47.9193519Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:23:47.9193603Z E   [index]: [0, 1]
2025-01-10T13:23:47.9193707Z E   [left]:  [2869544645.3209715, 2880986026.9779425]
2025-01-10T13:23:47.9193813Z E   [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T13:23:47.9193986Z E   At positional index 1, first diff: 2880986026.9779425 != 2881024886.0882792
2025-01-10T13:23:47.9193997Z 
2025-01-10T13:23:47.9194089Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9194259Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-01-10T13:23:47.9194263Z 
2025-01-10T13:23:47.9194480Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9194571Z attr = 'nu_bar_estimator'
2025-01-10T13:23:47.9194848Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef56684d70>
2025-01-10T13:23:47.9194856Z 
2025-01-10T13:23:47.9194954Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9195028Z         "attr",
2025-01-10T13:23:47.9195102Z         [
2025-01-10T13:23:47.9195185Z             "nu_bar_estimator",
2025-01-10T13:23:47.9195279Z             "j_estimator",
2025-01-10T13:23:47.9195358Z             "t_radiative",
2025-01-10T13:23:47.9195448Z             "dilution_factor",
2025-01-10T13:23:47.9195533Z             "output_nus",
2025-01-10T13:23:47.9195616Z             "output_energies",
2025-01-10T13:23:47.9195692Z         ],
2025-01-10T13:23:47.9195765Z     )
2025-01-10T13:23:47.9195953Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9196070Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:23:47.9196156Z             actual = getattr(
2025-01-10T13:23:47.9196349Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:23:47.9196435Z                 attr,
2025-01-10T13:23:47.9196509Z             )
2025-01-10T13:23:47.9196636Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:23:47.9196786Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:23:47.9196908Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:23:47.9196989Z             actual = getattr(
2025-01-10T13:23:47.9197169Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:23:47.9197249Z                 attr,
2025-01-10T13:23:47.9197321Z             )
2025-01-10T13:23:47.9197397Z         else:
2025-01-10T13:23:47.9197532Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:23:47.9197608Z     
2025-01-10T13:23:47.9197698Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9197791Z             actual = actual.value
2025-01-10T13:23:47.9197881Z         actual = pd.Series(actual)
2025-01-10T13:23:47.9198178Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9198361Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9198366Z 
2025-01-10T13:23:47.9198491Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:23:47.9198605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9198763Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9198840Z     ???
2025-01-10T13:23:47.9198950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9198954Z 
2025-01-10T13:23:47.9199031Z >   ???
2025-01-10T13:23:47.9199131Z E   AssertionError: Series are different
2025-01-10T13:23:47.9199206Z E   
2025-01-10T13:23:47.9199303Z E   Series values are different (100.0 %)
2025-01-10T13:23:47.9199438Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:23:47.9200731Z E   [left]:  [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-10T13:23:47.9201970Z E   [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T13:23:47.9202172Z E   At positional index 0, first diff: 1.0190851489144414e+29 != 1.0202042777991753e+29
2025-01-10T13:23:47.9202180Z 
2025-01-10T13:23:47.9202270Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9202432Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-01-10T13:23:47.9202437Z 
2025-01-10T13:23:47.9202660Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9202741Z attr = 'j_estimator'
2025-01-10T13:23:47.9203152Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef5668d8e0>
2025-01-10T13:23:47.9203157Z 
2025-01-10T13:23:47.9203256Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9203334Z         "attr",
2025-01-10T13:23:47.9203407Z         [
2025-01-10T13:23:47.9203494Z             "nu_bar_estimator",
2025-01-10T13:23:47.9203574Z             "j_estimator",
2025-01-10T13:23:47.9203657Z             "t_radiative",
2025-01-10T13:23:47.9203740Z             "dilution_factor",
2025-01-10T13:23:47.9203830Z             "output_nus",
2025-01-10T13:23:47.9203916Z             "output_energies",
2025-01-10T13:23:47.9203994Z         ],
2025-01-10T13:23:47.9204065Z     )
2025-01-10T13:23:47.9204250Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9204374Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:23:47.9204456Z             actual = getattr(
2025-01-10T13:23:47.9204655Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:23:47.9204730Z                 attr,
2025-01-10T13:23:47.9204806Z             )
2025-01-10T13:23:47.9204922Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:23:47.9205075Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:23:47.9205196Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:23:47.9205282Z             actual = getattr(
2025-01-10T13:23:47.9205460Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:23:47.9205669Z                 attr,
2025-01-10T13:23:47.9205741Z             )
2025-01-10T13:23:47.9205821Z         else:
2025-01-10T13:23:47.9205958Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:23:47.9206036Z     
2025-01-10T13:23:47.9206129Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9206214Z             actual = actual.value
2025-01-10T13:23:47.9206308Z         actual = pd.Series(actual)
2025-01-10T13:23:47.9206433Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9206616Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9206621Z 
2025-01-10T13:23:47.9206739Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:23:47.9206855Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9207002Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9207084Z     ???
2025-01-10T13:23:47.9207300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9207305Z 
2025-01-10T13:23:47.9207383Z >   ???
2025-01-10T13:23:47.9207488Z E   AssertionError: Series are different
2025-01-10T13:23:47.9207560Z E   
2025-01-10T13:23:47.9207662Z E   Series values are different (100.0 %)
2025-01-10T13:23:47.9207790Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:23:47.9208745Z E   [left]:  [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-10T13:23:47.9209695Z E   [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T13:23:47.9209874Z E   At positional index 0, first diff: 116548101693134.0 != 116635492761989.08
2025-01-10T13:23:47.9209878Z 
2025-01-10T13:23:47.9209972Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9210129Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-01-10T13:23:47.9210132Z 
2025-01-10T13:23:47.9210349Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9210429Z attr = 't_radiative'
2025-01-10T13:23:47.9210705Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef5668c110>
2025-01-10T13:23:47.9210709Z 
2025-01-10T13:23:47.9210801Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9210897Z         "attr",
2025-01-10T13:23:47.9210977Z         [
2025-01-10T13:23:47.9211060Z             "nu_bar_estimator",
2025-01-10T13:23:47.9211148Z             "j_estimator",
2025-01-10T13:23:47.9211227Z             "t_radiative",
2025-01-10T13:23:47.9211316Z             "dilution_factor",
2025-01-10T13:23:47.9211397Z             "output_nus",
2025-01-10T13:23:47.9211488Z             "output_energies",
2025-01-10T13:23:47.9211560Z         ],
2025-01-10T13:23:47.9211639Z     )
2025-01-10T13:23:47.9211820Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9211940Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:23:47.9212021Z             actual = getattr(
2025-01-10T13:23:47.9212219Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:23:47.9212294Z                 attr,
2025-01-10T13:23:47.9212375Z             )
2025-01-10T13:23:47.9212502Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:23:47.9212770Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:23:47.9212894Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:23:47.9212978Z             actual = getattr(
2025-01-10T13:23:47.9213263Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:23:47.9213340Z                 attr,
2025-01-10T13:23:47.9213419Z             )
2025-01-10T13:23:47.9213492Z         else:
2025-01-10T13:23:47.9213631Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:23:47.9213702Z     
2025-01-10T13:23:47.9213798Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9213886Z             actual = actual.value
2025-01-10T13:23:47.9213980Z         actual = pd.Series(actual)
2025-01-10T13:23:47.9214103Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9214286Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9214409Z 
2025-01-10T13:23:47.9214541Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:23:47.9214653Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9214805Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9214880Z     ???
2025-01-10T13:23:47.9214996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9215000Z 
2025-01-10T13:23:47.9215071Z >   ???
2025-01-10T13:23:47.9215181Z E   AssertionError: Series are different
2025-01-10T13:23:47.9215251Z E   
2025-01-10T13:23:47.9215352Z E   Series values are different (90.0 %)
2025-01-10T13:23:47.9215479Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:23:47.9216497Z E   [left]:  [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-10T13:23:47.9217507Z E   [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T13:23:47.9217676Z E   At positional index 0, first diff: 10090.925208074616 != 10091.396322818851
2025-01-10T13:23:47.9217680Z 
2025-01-10T13:23:47.9217778Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9218074Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-01-10T13:23:47.9218091Z 
2025-01-10T13:23:47.9218448Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9218549Z attr = 'dilution_factor'
2025-01-10T13:23:47.9218818Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef5668f230>
2025-01-10T13:23:47.9218823Z 
2025-01-10T13:23:47.9218923Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9218998Z         "attr",
2025-01-10T13:23:47.9219075Z         [
2025-01-10T13:23:47.9219157Z             "nu_bar_estimator",
2025-01-10T13:23:47.9219242Z             "j_estimator",
2025-01-10T13:23:47.9219322Z             "t_radiative",
2025-01-10T13:23:47.9219410Z             "dilution_factor",
2025-01-10T13:23:47.9219490Z             "output_nus",
2025-01-10T13:23:47.9219582Z             "output_energies",
2025-01-10T13:23:47.9219654Z         ],
2025-01-10T13:23:47.9219733Z     )
2025-01-10T13:23:47.9219918Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9220031Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:23:47.9220264Z             actual = getattr(
2025-01-10T13:23:47.9220457Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:23:47.9220537Z                 attr,
2025-01-10T13:23:47.9220610Z             )
2025-01-10T13:23:47.9220735Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:23:47.9220937Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:23:47.9221138Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:23:47.9221251Z             actual = getattr(
2025-01-10T13:23:47.9221621Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:23:47.9221744Z                 attr,
2025-01-10T13:23:47.9221901Z             )
2025-01-10T13:23:47.9222007Z         else:
2025-01-10T13:23:47.9222210Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:23:47.9222382Z     
2025-01-10T13:23:47.9222626Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9222780Z             actual = actual.value
2025-01-10T13:23:47.9222901Z         actual = pd.Series(actual)
2025-01-10T13:23:47.9223363Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9223619Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9223625Z 
2025-01-10T13:23:47.9223912Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:23:47.9224059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9224279Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9224384Z     ???
2025-01-10T13:23:47.9224543Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9224548Z 
2025-01-10T13:23:47.9224759Z >   ???
2025-01-10T13:23:47.9224894Z E   AssertionError: Series are different
2025-01-10T13:23:47.9225029Z E   
2025-01-10T13:23:47.9225156Z E   Series values are different (95.0 %)
2025-01-10T13:23:47.9225353Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:23:47.9226520Z E   [left]:  [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-10T13:23:47.9227673Z E   [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T13:23:47.9227916Z E   At positional index 0, first diff: 0.45013644671958974 != 0.4500690173218345
2025-01-10T13:23:47.9227921Z 
2025-01-10T13:23:47.9228045Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9228252Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-01-10T13:23:47.9228257Z 
2025-01-10T13:23:47.9228569Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9228850Z attr = 'output_nus'
2025-01-10T13:23:47.9229188Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef5668e3c0>
2025-01-10T13:23:47.9229193Z 
2025-01-10T13:23:47.9229318Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9229459Z         "attr",
2025-01-10T13:23:47.9229611Z         [
2025-01-10T13:23:47.9229780Z             "nu_bar_estimator",
2025-01-10T13:23:47.9229893Z             "j_estimator",
2025-01-10T13:23:47.9230038Z             "t_radiative",
2025-01-10T13:23:47.9230315Z             "dilution_factor",
2025-01-10T13:23:47.9230514Z             "output_nus",
2025-01-10T13:23:47.9230646Z             "output_energies",
2025-01-10T13:23:47.9230787Z         ],
2025-01-10T13:23:47.9230890Z     )
2025-01-10T13:23:47.9231165Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9231378Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:23:47.9231508Z             actual = getattr(
2025-01-10T13:23:47.9231772Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:23:47.9231896Z                 attr,
2025-01-10T13:23:47.9232035Z             )
2025-01-10T13:23:47.9232171Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:23:47.9232450Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:23:47.9232599Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:23:47.9232765Z             actual = getattr(
2025-01-10T13:23:47.9233228Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:23:47.9233372Z                 attr,
2025-01-10T13:23:47.9233586Z             )
2025-01-10T13:23:47.9233710Z         else:
2025-01-10T13:23:47.9233918Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:23:47.9234019Z     
2025-01-10T13:23:47.9234160Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9234321Z             actual = actual.value
2025-01-10T13:23:47.9234509Z         actual = pd.Series(actual)
2025-01-10T13:23:47.9234666Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9234918Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9234923Z 
2025-01-10T13:23:47.9235073Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:23:47.9235289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9235545Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9235654Z     ???
2025-01-10T13:23:47.9235986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9235990Z 
2025-01-10T13:23:47.9236091Z >   ???
2025-01-10T13:23:47.9236288Z E   AssertionError: Series are different
2025-01-10T13:23:47.9236493Z E   
2025-01-10T13:23:47.9236783Z E   Series values are different (5.1125 %)
2025-01-10T13:23:47.9237453Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.9242643Z E   [left]:  [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-10T13:23:47.9248272Z E   [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T13:23:47.9248522Z E   At positional index 56, first diff: 657025184715239.1 != 657003154645147.8
2025-01-10T13:23:47.9248528Z 
2025-01-10T13:23:47.9248762Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9248993Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-01-10T13:23:47.9249001Z 
2025-01-10T13:23:47.9249289Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7fef557e54c0>
2025-01-10T13:23:47.9249407Z attr = 'output_energies'
2025-01-10T13:23:47.9249735Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef5669c140>
2025-01-10T13:23:47.9249739Z 
2025-01-10T13:23:47.9249923Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9250101Z         "attr",
2025-01-10T13:23:47.9250208Z         [
2025-01-10T13:23:47.9250363Z             "nu_bar_estimator",
2025-01-10T13:23:47.9250503Z             "j_estimator",
2025-01-10T13:23:47.9250664Z             "t_radiative",
2025-01-10T13:23:47.9250851Z             "dilution_factor",
2025-01-10T13:23:47.9250963Z             "output_nus",
2025-01-10T13:23:47.9251115Z             "output_energies",
2025-01-10T13:23:47.9251218Z         ],
2025-01-10T13:23:47.9251412Z     )
2025-01-10T13:23:47.9251672Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:23:47.9251994Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:23:47.9252111Z             actual = getattr(
2025-01-10T13:23:47.9252372Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:23:47.9252464Z                 attr,
2025-01-10T13:23:47.9252687Z             )
2025-01-10T13:23:47.9252878Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:23:47.9253199Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:23:47.9253384Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:23:47.9253501Z             actual = getattr(
2025-01-10T13:23:47.9253806Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:23:47.9253913Z                 attr,
2025-01-10T13:23:47.9254060Z             )
2025-01-10T13:23:47.9254163Z         else:
2025-01-10T13:23:47.9254492Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:23:47.9254651Z     
2025-01-10T13:23:47.9254925Z         if hasattr(actual, "value"):
2025-01-10T13:23:47.9255119Z             actual = actual.value
2025-01-10T13:23:47.9255322Z         actual = pd.Series(actual)
2025-01-10T13:23:47.9255671Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:23:47.9255930Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:23:47.9255936Z 
2025-01-10T13:23:47.9256124Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:23:47.9256256Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9256566Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:23:47.9256671Z     ???
2025-01-10T13:23:47.9256850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9256855Z 
2025-01-10T13:23:47.9256963Z >   ???
2025-01-10T13:23:47.9257125Z E   AssertionError: Series are different
2025-01-10T13:23:47.9257350Z E   
2025-01-10T13:23:47.9257482Z E   Series values are different (1.3025 %)
2025-01-10T13:23:47.9257917Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:47.9264450Z E   [left]:  [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:23:47.9271161Z E   [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:23:47.9271457Z E   At positional index 414, first diff: 2.5347525852067693e-05 != 2.5657552576608082e-05
2025-01-10T13:23:47.9271463Z 
2025-01-10T13:23:47.9271590Z testing.pyx:173: AssertionError
2025-01-10T13:23:47.9271866Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-01-10T13:23:47.9271871Z 
2025-01-10T13:23:47.9272148Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7fef61946c30>
2025-01-10T13:23:47.9272483Z simulation = <tardis.simulation.base.Simulation object at 0x7fef2d1d9850>
2025-01-10T13:23:47.9272487Z 
2025-01-10T13:23:47.9272681Z     def test_spectrum_real_packets(self, simulation):
2025-01-10T13:23:47.9272981Z         transport_state = simulation.transport.transport_state
2025-01-10T13:23:47.9273466Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:23:47.9273559Z     
2025-01-10T13:23:47.9273897Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:23:47.9274055Z         result = solver.spectrum_real_packets.luminosity
2025-01-10T13:23:47.9274315Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:23:47.9274456Z         expected = self.get_expected_data(key)
2025-01-10T13:23:47.9274579Z     
2025-01-10T13:23:47.9274820Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9274924Z     
2025-01-10T13:23:47.9275098Z >       assert_quantity_allclose(
2025-01-10T13:23:47.9275204Z             result,
2025-01-10T13:23:47.9275432Z             luminosity,
2025-01-10T13:23:47.9275592Z         )
2025-01-10T13:23:47.9275597Z 
2025-01-10T13:23:47.9275993Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-01-10T13:23:47.9276151Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9276569Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9276694Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9276909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9276914Z 
2025-01-10T13:23:47.9277488Z args = (<function assert_allclose.<locals>.compare at 0x7fef5b9d4f40>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T13:23:47.9277628Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9277956Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9277960Z 
2025-01-10T13:23:47.9278081Z     @wraps(func)
2025-01-10T13:23:47.9278267Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9278419Z         with self._recreate_cm():
2025-01-10T13:23:47.9278578Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9278699Z E           AssertionError: 
2025-01-10T13:23:47.9278878Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9279051Z E           
2025-01-10T13:23:47.9279227Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:23:47.9279437Z E           Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:23:47.9279585Z E           Max relative difference among violations: 1.
2025-01-10T13:23:47.9279828Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9280015Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9280430Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9280613Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9280627Z 
2025-01-10T13:23:47.9280980Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9281264Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-01-10T13:23:47.9281268Z 
2025-01-10T13:23:47.9281560Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7fef61946c00>
2025-01-10T13:23:47.9281849Z simulation = <tardis.simulation.base.Simulation object at 0x7fef2d1d9850>
2025-01-10T13:23:47.9281853Z 
2025-01-10T13:23:47.9282037Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-01-10T13:23:47.9282283Z         transport_state = simulation.transport.transport_state
2025-01-10T13:23:47.9282522Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:23:47.9282661Z     
2025-01-10T13:23:47.9282931Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:23:47.9283489Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-01-10T13:23:47.9283825Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-01-10T13:23:47.9283981Z         expected = self.get_expected_data(key)
2025-01-10T13:23:47.9284139Z     
2025-01-10T13:23:47.9284282Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9284419Z     
2025-01-10T13:23:47.9284528Z >       assert_quantity_allclose(
2025-01-10T13:23:47.9284930Z             result,
2025-01-10T13:23:47.9285059Z             luminosity,
2025-01-10T13:23:47.9285201Z         )
2025-01-10T13:23:47.9285206Z 
2025-01-10T13:23:47.9285366Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-01-10T13:23:47.9285535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9286021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9286273Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9286459Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9286464Z 
2025-01-10T13:23:47.9286966Z args = (<function assert_allclose.<locals>.compare at 0x7fef34abe520>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-01-10T13:23:47.9287126Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9287480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9287535Z 
2025-01-10T13:23:47.9287645Z     @wraps(func)
2025-01-10T13:23:47.9287798Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9287919Z         with self._recreate_cm():
2025-01-10T13:23:47.9288062Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9288240Z E           AssertionError: 
2025-01-10T13:23:47.9288436Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9288553Z E           
2025-01-10T13:23:47.9288728Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-01-10T13:23:47.9288902Z E           Max absolute difference among violations: 4.15247374e+37
2025-01-10T13:23:47.9289146Z E           Max relative difference among violations: 1.03027212
2025-01-10T13:23:47.9289364Z E            ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9289523Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9289760Z E            DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9289895Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9289899Z 
2025-01-10T13:23:47.9290199Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9290411Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-01-10T13:23:47.9290416Z 
2025-01-10T13:23:47.9290752Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7fef61947770>
2025-01-10T13:23:47.9290983Z simulation = <tardis.simulation.base.Simulation object at 0x7fef2d1d9850>
2025-01-10T13:23:47.9291025Z 
2025-01-10T13:23:47.9291169Z     def test_solve(self, simulation):
2025-01-10T13:23:47.9291413Z         transport_state = simulation.transport.transport_state
2025-01-10T13:23:47.9291650Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:23:47.9291787Z     
2025-01-10T13:23:47.9292003Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:23:47.9292247Z         result_real, result_virtual, result_integrated = solver.solve(
2025-01-10T13:23:47.9292349Z             transport_state
2025-01-10T13:23:47.9292548Z         )
2025-01-10T13:23:47.9292763Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:23:47.9292954Z         expected_real = self.get_expected_data(key_real)
2025-01-10T13:23:47.9293408Z     
2025-01-10T13:23:47.9293607Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-01-10T13:23:47.9293827Z     
2025-01-10T13:23:47.9293948Z >       assert_quantity_allclose(
2025-01-10T13:23:47.9294122Z             result_real.luminosity,
2025-01-10T13:23:47.9294239Z             luminosity_real,
2025-01-10T13:23:47.9294362Z         )
2025-01-10T13:23:47.9294366Z 
2025-01-10T13:23:47.9294587Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-01-10T13:23:47.9294784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9295176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9295337Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9295481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9295507Z 
2025-01-10T13:23:47.9296170Z args = (<function assert_allclose.<locals>.compare at 0x7fef60b66a20>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T13:23:47.9296384Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9296676Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9296681Z 
2025-01-10T13:23:47.9296827Z     @wraps(func)
2025-01-10T13:23:47.9296944Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9297139Z         with self._recreate_cm():
2025-01-10T13:23:47.9297294Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9297452Z E           AssertionError: 
2025-01-10T13:23:47.9297630Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9297739Z E           
2025-01-10T13:23:47.9297944Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:23:47.9298151Z E           Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:23:47.9298514Z E           Max relative difference among violations: 1.
2025-01-10T13:23:47.9306653Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9306800Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9307014Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9307113Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9307119Z 
2025-01-10T13:23:47.9307347Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9307545Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-01-10T13:23:47.9307549Z 
2025-01-10T13:23:47.9307774Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7fef61949490>
2025-01-10T13:23:47.9307978Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5382db80>
2025-01-10T13:23:47.9307982Z 
2025-01-10T13:23:47.9308117Z     def test_j_blue_estimators(self, simulation):
2025-01-10T13:23:47.9308278Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-01-10T13:23:47.9308383Z         expected = self.get_expected_data(key)
2025-01-10T13:23:47.9308464Z     
2025-01-10T13:23:47.9308552Z >       npt.assert_allclose(
2025-01-10T13:23:47.9308784Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-01-10T13:23:47.9308876Z             expected.values,
2025-01-10T13:23:47.9308949Z         )
2025-01-10T13:23:47.9308954Z 
2025-01-10T13:23:47.9309059Z tardis/tests/test_tardis_full.py:70: 
2025-01-10T13:23:47.9309179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9309182Z 
2025-01-10T13:23:47.9309461Z args = (<function assert_allclose.<locals>.compare at 0x7fef4ccc4ea0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9309538Z        [0., 0., .....,
2025-01-10T13:23:47.9309623Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9309900Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9309989Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:23:47.9310251Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9310261Z 
2025-01-10T13:23:47.9310341Z     @wraps(func)
2025-01-10T13:23:47.9310430Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9310518Z         with self._recreate_cm():
2025-01-10T13:23:47.9310613Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9310701Z E           AssertionError: 
2025-01-10T13:23:47.9310819Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9310893Z E           
2025-01-10T13:23:47.9311009Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-01-10T13:23:47.9311153Z E           Max absolute difference among violations: 5.32418652e-19
2025-01-10T13:23:47.9311287Z E           Max relative difference among violations: 8.78746214
2025-01-10T13:23:47.9311509Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9311612Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9311703Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9311817Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9311909Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9311995Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9312000Z 
2025-01-10T13:23:47.9312214Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9312374Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9312717Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9312793Z 	
2025-01-10T13:23:47.9313652Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-10T13:23:47.9313859Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9314293Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-10T13:23:47.9314470Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9314952Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-10T13:23:47.9315202Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:23:47.9315648Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:23:47.9315832Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9316047Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:23:47.9316223Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9316298Z 	
2025-01-10T13:23:47.9316460Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-10T13:23:47.9316621Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9316697Z 	
2025-01-10T13:23:47.9316794Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T13:23:47.9316894Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T13:23:47.9316991Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9317102Z  ([1mbase.py[0m:657)
2025-01-10T13:23:47.9317269Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9317339Z 	
2025-01-10T13:23:47.9317504Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:23:47.9317663Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9317739Z 	
2025-01-10T13:23:47.9317847Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T13:23:47.9317941Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T13:23:47.9318029Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T13:23:47.9318289Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T13:23:47.9318374Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T13:23:47.9318494Z  ([1mbase.py[0m:650)
2025-01-10T13:23:47.9318663Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9318739Z 	
2025-01-10T13:23:47.9318833Z 	Current t_inner = 9974.969 K
2025-01-10T13:23:47.9318956Z 	Expected t_inner for next iteration = 10736.783 K
2025-01-10T13:23:47.9319068Z  ([1mbase.py[0m:652)
2025-01-10T13:23:47.9319233Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9319308Z 	
2025-01-10T13:23:47.9319461Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-01-10T13:23:47.9319626Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9319696Z 	
2025-01-10T13:23:47.9319794Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T13:23:47.9319887Z 	Luminosity absorbed  = 3.624e+42 erg / s
2025-01-10T13:23:47.9320129Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9320242Z  ([1mbase.py[0m:657)
2025-01-10T13:23:47.9320408Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9320478Z 	
2025-01-10T13:23:47.9320632Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:23:47.9320790Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9320869Z 	
2025-01-10T13:23:47.9320981Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:23:47.9321070Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-01-10T13:23:47.9321160Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T13:23:47.9321248Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-01-10T13:23:47.9321338Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T13:23:47.9321443Z  ([1mbase.py[0m:650)
2025-01-10T13:23:47.9321611Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9321682Z 	
2025-01-10T13:23:47.9321775Z 	Current t_inner = 10736.783 K
2025-01-10T13:23:47.9321900Z 	Expected t_inner for next iteration = 10718.619 K
2025-01-10T13:23:47.9322010Z  ([1mbase.py[0m:652)
2025-01-10T13:23:47.9322174Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9322249Z 	
2025-01-10T13:23:47.9322401Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-01-10T13:23:47.9322567Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9322642Z 	
2025-01-10T13:23:47.9322736Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T13:23:47.9322835Z 	Luminosity absorbed  = 3.514e+42 erg / s
2025-01-10T13:23:47.9322926Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9323315Z  ([1mbase.py[0m:657)
2025-01-10T13:23:47.9323501Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9323730Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T13:23:47.9323894Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9323993Z 	
2025-01-10T13:23:47.9324277Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:23:47.9324561Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9324634Z 	
2025-01-10T13:23:47.9324749Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:23:47.9324836Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-01-10T13:23:47.9324930Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T13:23:47.9325022Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-01-10T13:23:47.9325108Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0921
2025-01-10T13:23:47.9325222Z  ([1mbase.py[0m:650)
2025-01-10T13:23:47.9325388Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9325467Z 	
2025-01-10T13:23:47.9325554Z 	Current t_inner = 10718.619 K
2025-01-10T13:23:47.9325679Z 	Expected t_inner for next iteration = 10696.651 K
2025-01-10T13:23:47.9325786Z  ([1mbase.py[0m:652)
2025-01-10T13:23:47.9325952Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9326172Z 	
2025-01-10T13:23:47.9326343Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-01-10T13:23:47.9326512Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9326586Z 	
2025-01-10T13:23:47.9326682Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T13:23:47.9326779Z 	Luminosity absorbed  = 3.437e+42 erg / s
2025-01-10T13:23:47.9326872Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9326985Z  ([1mbase.py[0m:657)
2025-01-10T13:23:47.9327152Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9327370Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T13:23:47.9327535Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9327605Z 	
2025-01-10T13:23:47.9327758Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:23:47.9327917Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9327991Z 	
2025-01-10T13:23:47.9328098Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:23:47.9328318Z 	0         1.07e+04 K  1.09e+04 K  0.491    0.49
2025-01-10T13:23:47.9328409Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T13:23:47.9328501Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T13:23:47.9328588Z 	15        1.04e+04 K  1.05e+04 K 0.0921  0.0902
2025-01-10T13:23:47.9328702Z  ([1mbase.py[0m:650)
2025-01-10T13:23:47.9328863Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9328939Z 	
2025-01-10T13:23:47.9329030Z 	Current t_inner = 10696.651 K
2025-01-10T13:23:47.9329148Z 	Expected t_inner for next iteration = 10684.004 K
2025-01-10T13:23:47.9329259Z  ([1mbase.py[0m:652)
2025-01-10T13:23:47.9329417Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9329495Z 	
2025-01-10T13:23:47.9329594Z 	Simulation finished in 4 iterations 
2025-01-10T13:23:47.9329682Z 	Simulation took 12.80 s
2025-01-10T13:23:47.9329789Z  ([1mbase.py[0m:542)
2025-01-10T13:23:47.9329952Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9330029Z 	
2025-01-10T13:23:47.9330185Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-01-10T13:23:47.9330344Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9330419Z 	
2025-01-10T13:23:47.9330511Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T13:23:47.9330607Z 	Luminosity absorbed  = 3.447e+42 erg / s
2025-01-10T13:23:47.9330698Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9330808Z  ([1mbase.py[0m:657)
2025-01-10T13:23:47.9330975Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:23:47.9330980Z 
2025-01-10T13:23:47.9330984Z 
2025-01-10T13:23:47.9331238Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-01-10T13:23:47.9331243Z 
2025-01-10T13:23:47.9331465Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-01-10T13:23:47.9331473Z 
2025-01-10T13:23:47.9331737Z Packets:   ████▏                                                                           10539/200000 [00:00<00:01, 105380.30it/s][A
2025-01-10T13:23:47.9331748Z 
2025-01-10T13:23:47.9331992Z Packets:   ████████▌                                                                       21494/200000 [00:00<00:01, 107829.86it/s][A
2025-01-10T13:23:47.9331998Z 
2025-01-10T13:23:47.9332249Z Packets:   ████████████▉                                                                   32368/200000 [00:00<00:01, 108242.77it/s][A
2025-01-10T13:23:47.9332254Z 
2025-01-10T13:23:47.9332504Z Packets:   █████████████████▎                                                              43193/200000 [00:00<00:01, 108107.89it/s][A
2025-01-10T13:23:47.9332509Z 
2025-01-10T13:23:47.9332767Z Packets:   █████████████████████▋                                                          54197/200000 [00:00<00:01, 108800.43it/s][A
2025-01-10T13:23:47.9332771Z 
2025-01-10T13:23:47.9333355Z Packets:   ██████████████████████████                                                      65086/200000 [00:00<00:01, 108830.82it/s][A
2025-01-10T13:23:47.9333362Z 
2025-01-10T13:23:47.9333636Z Packets:   ██████████████████████████████▍                                                 76042/200000 [00:00<00:01, 109066.17it/s][A
2025-01-10T13:23:47.9333641Z 
2025-01-10T13:23:47.9333918Z Packets:   ██████████████████████████████████▊                                             86949/200000 [00:00<00:01, 108805.29it/s][A
2025-01-10T13:23:47.9333922Z 
2025-01-10T13:23:47.9334198Z Packets:   ███████████████████████████████████████▏                                        97941/200000 [00:00<00:00, 109152.10it/s][A
2025-01-10T13:23:47.9334202Z 
2025-01-10T13:23:47.9334499Z Packets:   ███████████████████████████████████████████▌                                    108857/200000 [00:01<00:00, 109002.64it/s][A
2025-01-10T13:23:47.9334504Z 
2025-01-10T13:23:47.9334929Z Packets:   ███████████████████████████████████████████████▉                                119758/200000 [00:01<00:00, 108707.15it/s][A
2025-01-10T13:23:47.9334944Z 
2025-01-10T13:23:47.9335251Z Packets:   ████████████████████████████████████████████████████▎                           130726/200000 [00:01<00:00, 109000.06it/s][A
2025-01-10T13:23:47.9335256Z 
2025-01-10T13:23:47.9335562Z Packets:   ████████████████████████████████████████████████████████▋                       141627/200000 [00:01<00:00, 108593.42it/s][A
2025-01-10T13:23:47.9335566Z 
2025-01-10T13:23:47.9335875Z Packets:   █████████████████████████████████████████████████████████████                   152614/200000 [00:01<00:00, 108976.41it/s][A
2025-01-10T13:23:47.9335880Z 
2025-01-10T13:23:47.9336187Z Packets:   █████████████████████████████████████████████████████████████████▍              163513/200000 [00:01<00:00, 108673.72it/s][A
2025-01-10T13:23:47.9336191Z 
2025-01-10T13:23:47.9336523Z Packets:   █████████████████████████████████████████████████████████████████████▊          174473/200000 [00:01<00:00, 108947.47it/s][A
2025-01-10T13:23:47.9336541Z 
2025-01-10T13:23:47.9336858Z Packets:   ██████████████████████████████████████████████████████████████████████████▏     185369/200000 [00:01<00:00, 108694.06it/s][A
2025-01-10T13:23:47.9336862Z 
2025-01-10T13:23:47.9337185Z Packets:   ██████████████████████████████████████████████████████████████████████████████▍ 196239/200000 [00:01<00:00, 108548.18it/s][A
2025-01-10T13:23:47.9337343Z Iterations:                                                                                13/? [05:54<00:00, 12.29s/it]
2025-01-10T13:23:47.9337348Z 
2025-01-10T13:23:47.9337686Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 108548.18it/s][A
2025-01-10T13:23:47.9337690Z 
2025-01-10T13:23:47.9337928Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:23:47.9337933Z 
2025-01-10T13:23:47.9338310Z Packets:   ████▎                                                                           10930/200000 [00:00<00:01, 109290.46it/s][A
2025-01-10T13:23:47.9338320Z 
2025-01-10T13:23:47.9338563Z Packets:   ████████▊                                                                       21959/200000 [00:00<00:01, 109874.92it/s][A
2025-01-10T13:23:47.9338567Z 
2025-01-10T13:23:47.9338816Z Packets:   █████████████▏                                                                  32947/200000 [00:00<00:01, 109668.36it/s][A
2025-01-10T13:23:47.9338821Z 
2025-01-10T13:23:47.9339070Z Packets:   █████████████████▌                                                              43914/200000 [00:00<00:01, 109656.26it/s][A
2025-01-10T13:23:47.9339074Z 
2025-01-10T13:23:47.9339330Z Packets:   █████████████████████▉                                                          54880/200000 [00:00<00:01, 109448.64it/s][A
2025-01-10T13:23:47.9339335Z 
2025-01-10T13:23:47.9339685Z Packets:   ██████████████████████████▎                                                     65825/200000 [00:00<00:01, 109235.59it/s][A
2025-01-10T13:23:47.9339697Z 
2025-01-10T13:23:47.9339965Z Packets:   ██████████████████████████████▋                                                 76794/200000 [00:00<00:01, 109382.61it/s][A
2025-01-10T13:23:47.9339969Z 
2025-01-10T13:23:47.9340245Z Packets:   ███████████████████████████████████                                             87733/200000 [00:00<00:01, 109243.62it/s][A
2025-01-10T13:23:47.9340249Z 
2025-01-10T13:23:47.9340525Z Packets:   ███████████████████████████████████████▍                                        98687/200000 [00:00<00:00, 109333.59it/s][A
2025-01-10T13:23:47.9340530Z 
2025-01-10T13:23:47.9340817Z Packets:   ███████████████████████████████████████████▊                                    109621/200000 [00:01<00:00, 106528.15it/s][A
2025-01-10T13:23:47.9340822Z 
2025-01-10T13:23:47.9341129Z Packets:   ████████████████████████████████████████████████                                120289/200000 [00:01<00:00, 106507.82it/s][A
2025-01-10T13:23:47.9341143Z 
2025-01-10T13:23:47.9341436Z Packets:   ████████████████████████████████████████████████████▍                           131187/200000 [00:01<00:00, 107245.55it/s][A
2025-01-10T13:23:47.9341441Z 
2025-01-10T13:23:47.9341741Z Packets:   ████████████████████████████████████████████████████████▉                       142189/200000 [00:01<00:00, 108076.20it/s][A
2025-01-10T13:23:47.9341746Z 
2025-01-10T13:23:47.9342056Z Packets:   █████████████████████████████████████████████████████████████▏                  153113/200000 [00:01<00:00, 108423.76it/s][A
2025-01-10T13:23:47.9342060Z 
2025-01-10T13:23:47.9342370Z Packets:   █████████████████████████████████████████████████████████████████▌              164040/200000 [00:01<00:00, 108677.59it/s][A
2025-01-10T13:23:47.9342375Z 
2025-01-10T13:23:47.9342692Z Packets:   █████████████████████████████████████████████████████████████████████▉          174989/200000 [00:01<00:00, 108920.96it/s][A
2025-01-10T13:23:47.9342889Z 
2025-01-10T13:23:47.9343430Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     185936/200000 [00:01<00:00, 109082.82it/s][A
2025-01-10T13:23:47.9343438Z 
2025-01-10T13:23:47.9343771Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 196873/200000 [00:01<00:00, 109168.53it/s][A
2025-01-10T13:23:47.9343926Z Iterations:                                                                                14/? [05:57<00:00,  9.54s/it]
2025-01-10T13:23:47.9343930Z 
2025-01-10T13:23:47.9344256Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 109168.53it/s][A
2025-01-10T13:23:47.9344260Z 
2025-01-10T13:23:47.9344509Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:23:47.9344514Z 
2025-01-10T13:23:47.9344772Z Packets:   ████▍                                                                           10948/200000 [00:00<00:01, 109468.88it/s][A
2025-01-10T13:23:47.9344794Z 
2025-01-10T13:23:47.9345037Z Packets:   ████████▊                                                                       21933/200000 [00:00<00:01, 109689.89it/s][A
2025-01-10T13:23:47.9345041Z 
2025-01-10T13:23:47.9345294Z Packets:   █████████████▏                                                                  32905/200000 [00:00<00:01, 109701.90it/s][A
2025-01-10T13:23:47.9345299Z 
2025-01-10T13:23:47.9345547Z Packets:   █████████████████▌                                                              43876/200000 [00:00<00:01, 109586.31it/s][A
2025-01-10T13:23:47.9345552Z 
2025-01-10T13:23:47.9345813Z Packets:   █████████████████████▉                                                          54901/200000 [00:00<00:01, 109824.00it/s][A
2025-01-10T13:23:47.9345818Z 
2025-01-10T13:23:47.9346095Z Packets:   ██████████████████████████▎                                                     65884/200000 [00:00<00:01, 109740.45it/s][A
2025-01-10T13:23:47.9346106Z 
2025-01-10T13:23:47.9346371Z Packets:   ██████████████████████████████▊                                                 76921/200000 [00:00<00:01, 109944.93it/s][A
2025-01-10T13:23:47.9346376Z 
2025-01-10T13:23:47.9346654Z Packets:   ███████████████████████████████████▏                                            87957/200000 [00:00<00:01, 110075.77it/s][A
2025-01-10T13:23:47.9346659Z 
2025-01-10T13:23:47.9346936Z Packets:   ███████████████████████████████████████▌                                        98965/200000 [00:00<00:00, 109963.57it/s][A
2025-01-10T13:23:47.9346941Z 
2025-01-10T13:23:47.9347230Z Packets:   ████████████████████████████████████████████                                    110008/200000 [00:01<00:00, 110104.54it/s][A
2025-01-10T13:23:47.9347234Z 
2025-01-10T13:23:47.9347528Z Packets:   ████████████████████████████████████████████████▍                               121039/200000 [00:01<00:00, 110164.60it/s][A
2025-01-10T13:23:47.9347766Z 
2025-01-10T13:23:47.9348074Z Packets:   ████████████████████████████████████████████████████▊                           132067/200000 [00:01<00:00, 110197.64it/s][A
2025-01-10T13:23:47.9348079Z 
2025-01-10T13:23:47.9348382Z Packets:   █████████████████████████████████████████████████████████▏                      143087/200000 [00:01<00:00, 110111.81it/s][A
2025-01-10T13:23:47.9348387Z 
2025-01-10T13:23:47.9348696Z Packets:   █████████████████████████████████████████████████████████████▋                  154120/200000 [00:01<00:00, 110176.03it/s][A
2025-01-10T13:23:47.9348700Z 
2025-01-10T13:23:47.9349009Z Packets:   ██████████████████████████████████████████████████████████████████              165231/200000 [00:01<00:00, 110455.68it/s][A
2025-01-10T13:23:47.9349014Z 
2025-01-10T13:23:47.9349329Z Packets:   ██████████████████████████████████████████████████████████████████████▌         176277/200000 [00:01<00:00, 110428.02it/s][A
2025-01-10T13:23:47.9349349Z 
2025-01-10T13:23:47.9349833Z Packets:   ██████████████████████████████████████████████████████████████████████████▉     187334/200000 [00:01<00:00, 110467.56it/s][A
2025-01-10T13:23:47.9349843Z 
2025-01-10T13:23:47.9350291Z Packets:   ███████████████████████████████████████████████████████████████████████████████▎198381/200000 [00:01<00:00, 110468.24it/s][A
2025-01-10T13:23:47.9350446Z Iterations:                                                                                15/? [06:00<00:00,  7.62s/it]
2025-01-10T13:23:47.9350450Z 
2025-01-10T13:23:47.9350773Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 110468.24it/s][A
2025-01-10T13:23:47.9350777Z 
2025-01-10T13:23:47.9351017Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:23:47.9351021Z 
2025-01-10T13:23:47.9351271Z Packets:   ████▍                                                                           11047/200000 [00:00<00:01, 108161.33it/s][A
2025-01-10T13:23:47.9351439Z 
2025-01-10T13:23:47.9351688Z Packets:   ████████▊                                                                       21901/200000 [00:00<00:01, 108379.03it/s][A
2025-01-10T13:23:47.9351692Z 
2025-01-10T13:23:47.9351944Z Packets:   █████████████                                                                   32807/200000 [00:00<00:01, 108687.84it/s][A
2025-01-10T13:23:47.9351949Z 
2025-01-10T13:23:47.9352201Z Packets:   █████████████████▍                                                              43677/200000 [00:00<00:01, 108447.37it/s][A
2025-01-10T13:23:47.9352206Z 
2025-01-10T13:23:47.9352464Z Packets:   █████████████████████▊                                                          54586/200000 [00:00<00:01, 108677.82it/s][A
2025-01-10T13:23:47.9352468Z 
2025-01-10T13:23:47.9352816Z Packets:   ██████████████████████████▏                                                     65454/200000 [00:00<00:01, 108529.36it/s][A
2025-01-10T13:23:47.9352830Z 
2025-01-10T13:23:47.9353326Z Packets:   ██████████████████████████████▌                                                 76308/200000 [00:00<00:01, 108389.33it/s][A
2025-01-10T13:23:47.9353335Z 
2025-01-10T13:23:47.9353627Z Packets:   ██████████████████████████████████▊                                             87148/200000 [00:00<00:01, 108215.71it/s][A
2025-01-10T13:23:47.9353632Z 
2025-01-10T13:23:47.9353908Z Packets:   ███████████████████████████████████████▏                                        97970/200000 [00:00<00:00, 106076.14it/s][A
2025-01-10T13:23:47.9353919Z 
2025-01-10T13:23:47.9354203Z Packets:   ███████████████████████████████████████████▍                                    108738/200000 [00:01<00:00, 106560.29it/s][A
2025-01-10T13:23:47.9354208Z 
2025-01-10T13:23:47.9354503Z Packets:   ███████████████████████████████████████████████▊                                119423/200000 [00:01<00:00, 106647.01it/s][A
2025-01-10T13:23:47.9354520Z 
2025-01-10T13:23:47.9354823Z Packets:   ████████████████████████████████████████████████████                            130196/200000 [00:01<00:00, 106971.89it/s][A
2025-01-10T13:23:47.9354828Z 
2025-01-10T13:23:47.9355128Z Packets:   ████████████████████████████████████████████████████████▍                       141021/200000 [00:01<00:00, 107356.41it/s][A
2025-01-10T13:23:47.9355132Z 
2025-01-10T13:23:47.9355437Z Packets:   ████████████████████████████████████████████████████████████▊                   151944/200000 [00:01<00:00, 107919.60it/s][A
2025-01-10T13:23:47.9355441Z 
2025-01-10T13:23:47.9355745Z Packets:   █████████████████████████████████████████████████████████████████▏              162857/200000 [00:01<00:00, 108282.28it/s][A
2025-01-10T13:23:47.9355750Z 
2025-01-10T13:23:47.9356078Z Packets:   █████████████████████████████████████████████████████████████████████▌          173790/200000 [00:01<00:00, 108594.45it/s][A
2025-01-10T13:23:47.9356083Z 
2025-01-10T13:23:47.9356558Z Packets:   █████████████████████████████████████████████████████████████████████████▊      184651/200000 [00:01<00:00, 108536.98it/s][A
2025-01-10T13:23:47.9356563Z 
2025-01-10T13:23:47.9356888Z Packets:   ██████████████████████████████████████████████████████████████████████████████▏ 195506/200000 [00:01<00:00, 108498.84it/s][A
2025-01-10T13:23:47.9357041Z Iterations:                                                                                16/? [06:03<00:00,  6.30s/it]
2025-01-10T13:23:47.9357045Z 
2025-01-10T13:23:47.9357373Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108498.84it/s][A
2025-01-10T13:23:47.9357378Z 
2025-01-10T13:23:47.9357616Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-01-10T13:23:47.9357620Z 
2025-01-10T13:23:47.9357975Z Packets:   █▋                                                                              10851/500000 [00:00<00:13, 35330.41it/s][A
2025-01-10T13:23:47.9357997Z 
2025-01-10T13:23:47.9358235Z Packets:   ██▎                                                                             14385/500000 [00:00<00:13, 35109.31it/s][A
2025-01-10T13:23:47.9358240Z 
2025-01-10T13:23:47.9358473Z Packets:   ██▊                                                                             17878/500000 [00:00<00:14, 33984.22it/s][A
2025-01-10T13:23:47.9358478Z 
2025-01-10T13:23:47.9358709Z Packets:   ███▍                                                                            21351/500000 [00:00<00:13, 34205.24it/s][A
2025-01-10T13:23:47.9358713Z 
2025-01-10T13:23:47.9358948Z Packets:   ███▉                                                                            24821/500000 [00:00<00:13, 34353.39it/s][A
2025-01-10T13:23:47.9358953Z 
2025-01-10T13:23:47.9359190Z Packets:   ████▌                                                                           28260/500000 [00:00<00:13, 34361.98it/s][A
2025-01-10T13:23:47.9359203Z 
2025-01-10T13:23:47.9359441Z Packets:   █████                                                                           31713/500000 [00:00<00:13, 34410.49it/s][A
2025-01-10T13:23:47.9359446Z 
2025-01-10T13:23:47.9359686Z Packets:   █████▋                                                                          35167/500000 [00:01<00:13, 34448.07it/s][A
2025-01-10T13:23:47.9359691Z 
2025-01-10T13:23:47.9359924Z Packets:   ██████▏                                                                         38615/500000 [00:01<00:13, 34456.50it/s][A
2025-01-10T13:23:47.9359934Z 
2025-01-10T13:23:47.9360166Z Packets:   ██████▋                                                                         42074/500000 [00:01<00:13, 34492.94it/s][A
2025-01-10T13:23:47.9360170Z 
2025-01-10T13:23:47.9360409Z Packets:   ███████▎                                                                        45590/500000 [00:01<00:13, 34691.33it/s][A
2025-01-10T13:23:47.9360413Z 
2025-01-10T13:23:47.9360761Z Packets:   ███████▊                                                                        49083/500000 [00:01<00:12, 34762.34it/s][A
2025-01-10T13:23:47.9360766Z 
2025-01-10T13:23:47.9361009Z Packets:   ████████▍                                                                       52559/500000 [00:01<00:12, 34751.73it/s][A
2025-01-10T13:23:47.9361013Z 
2025-01-10T13:23:47.9361255Z Packets:   ████████▉                                                                       56034/500000 [00:01<00:13, 33361.12it/s][A
2025-01-10T13:23:47.9361259Z 
2025-01-10T13:23:47.9361497Z Packets:   █████████▌                                                                      59487/500000 [00:01<00:13, 33699.42it/s][A
2025-01-10T13:23:47.9361501Z 
2025-01-10T13:23:47.9361740Z Packets:   ██████████                                                                      62931/500000 [00:01<00:12, 33916.91it/s][A
2025-01-10T13:23:47.9361744Z 
2025-01-10T13:23:47.9362064Z Packets:   ██████████▋                                                                     66414/500000 [00:01<00:12, 34184.40it/s][A
2025-01-10T13:23:47.9362077Z 
2025-01-10T13:23:47.9362325Z Packets:   ███████████▏                                                                    69838/500000 [00:02<00:12, 34046.28it/s][A
2025-01-10T13:23:47.9362330Z 
2025-01-10T13:23:47.9362577Z Packets:   ███████████▋                                                                    73268/500000 [00:02<00:12, 34117.98it/s][A
2025-01-10T13:23:47.9362582Z 
2025-01-10T13:23:47.9362823Z Packets:   ████████████▎                                                                   76726/500000 [00:02<00:12, 34254.01it/s][A
2025-01-10T13:23:47.9362828Z 
2025-01-10T13:23:47.9363279Z Packets:   ████████████▊                                                                   80154/500000 [00:02<00:12, 34190.71it/s][A
2025-01-10T13:23:47.9363288Z 
2025-01-10T13:23:47.9363563Z Packets:   █████████████▍                                                                  83603/500000 [00:02<00:12, 34274.96it/s][A
2025-01-10T13:23:47.9363586Z 
2025-01-10T13:23:47.9363834Z Packets:   █████████████▉                                                                  87032/500000 [00:02<00:12, 34234.35it/s][A
2025-01-10T13:23:47.9363838Z 
2025-01-10T13:23:47.9364092Z Packets:   ██████████████▍                                                                 90457/500000 [00:02<00:12, 32955.41it/s][A
2025-01-10T13:23:47.9364096Z 
2025-01-10T13:23:47.9364341Z Packets:   ███████████████                                                                 93899/500000 [00:02<00:12, 33377.24it/s][A
2025-01-10T13:23:47.9364345Z 
2025-01-10T13:23:47.9364594Z Packets:   ███████████████▌                                                                97260/500000 [00:02<00:12, 33445.20it/s][A
2025-01-10T13:23:47.9364599Z 
2025-01-10T13:23:47.9364854Z Packets:   ████████████████                                                                100650/500000 [00:02<00:11, 33579.32it/s][A
2025-01-10T13:23:47.9364868Z 
2025-01-10T13:23:47.9365125Z Packets:   ████████████████▋                                                               104104/500000 [00:03<00:11, 33863.50it/s][A
2025-01-10T13:23:47.9365130Z 
2025-01-10T13:23:47.9365384Z Packets:   █████████████████▏                                                              107595/500000 [00:03<00:11, 34174.48it/s][A
2025-01-10T13:23:47.9365389Z 
2025-01-10T13:23:47.9365637Z Packets:   █████████████████▊                                                              111028/500000 [00:03<00:11, 34220.11it/s][A
2025-01-10T13:23:47.9365647Z 
2025-01-10T13:23:47.9365897Z Packets:   ██████████████████▎                                                             114518/500000 [00:03<00:11, 34422.38it/s][A
2025-01-10T13:23:47.9365902Z 
2025-01-10T13:23:47.9366158Z Packets:   ██████████████████▊                                                             117962/500000 [00:03<00:11, 34350.34it/s][A
2025-01-10T13:23:47.9366163Z 
2025-01-10T13:23:47.9366427Z Packets:   ███████████████████▍                                                            121399/500000 [00:03<00:11, 34321.36it/s][A
2025-01-10T13:23:47.9366566Z 
2025-01-10T13:23:47.9366832Z Packets:   ███████████████████▉                                                            124832/500000 [00:03<00:11, 33017.58it/s][A
2025-01-10T13:23:47.9366836Z 
2025-01-10T13:23:47.9367093Z Packets:   ████████████████████▌                                                           128302/500000 [00:03<00:11, 33506.98it/s][A
2025-01-10T13:23:47.9367097Z 
2025-01-10T13:23:47.9367349Z Packets:   █████████████████████                                                           131755/500000 [00:03<00:10, 33799.64it/s][A
2025-01-10T13:23:47.9367353Z 
2025-01-10T13:23:47.9367612Z Packets:   █████████████████████▌                                                          135142/500000 [00:03<00:10, 33562.02it/s][A
2025-01-10T13:23:47.9367616Z 
2025-01-10T13:23:47.9367982Z Packets:   ██████████████████████▏                                                         138613/500000 [00:04<00:10, 33900.24it/s][A
2025-01-10T13:23:47.9368002Z 
2025-01-10T13:23:47.9368267Z Packets:   ██████████████████████▋                                                         142096/500000 [00:04<00:10, 34175.65it/s][A
2025-01-10T13:23:47.9368271Z 
2025-01-10T13:23:47.9368530Z Packets:   ███████████████████████▎                                                        145529/500000 [00:04<00:10, 34220.42it/s][A
2025-01-10T13:23:47.9368534Z 
2025-01-10T13:23:47.9368804Z Packets:   ███████████████████████▊                                                        149048/500000 [00:04<00:10, 34504.27it/s][A
2025-01-10T13:23:47.9368808Z 
2025-01-10T13:23:47.9369075Z Packets:   ████████████████████████▍                                                       152506/500000 [00:04<00:10, 34519.78it/s][A
2025-01-10T13:23:47.9369079Z 
2025-01-10T13:23:47.9369340Z Packets:   ████████████████████████▉                                                       155988/500000 [00:04<00:09, 34609.27it/s][A
2025-01-10T13:23:47.9369364Z 
2025-01-10T13:23:47.9369632Z Packets:   █████████████████████████▌                                                      159450/500000 [00:04<00:10, 33381.51it/s][A
2025-01-10T13:23:47.9369636Z 
2025-01-10T13:23:47.9369897Z Packets:   ██████████████████████████                                                      162917/500000 [00:04<00:09, 33748.77it/s][A
2025-01-10T13:23:47.9369909Z 
2025-01-10T13:23:47.9370174Z Packets:   ██████████████████████████▌                                                     166360/500000 [00:04<00:09, 33948.90it/s][A
2025-01-10T13:23:47.9370179Z 
2025-01-10T13:23:47.9370448Z Packets:   ███████████████████████████▏                                                    169924/500000 [00:04<00:09, 34448.94it/s][A
2025-01-10T13:23:47.9370452Z 
2025-01-10T13:23:47.9370712Z Packets:   ███████████████████████████▋                                                    173420/500000 [00:05<00:09, 34600.34it/s][A
2025-01-10T13:23:47.9371106Z 
2025-01-10T13:23:47.9371391Z Packets:   ████████████████████████████▎                                                   176940/500000 [00:05<00:09, 34775.70it/s][A
2025-01-10T13:23:47.9371395Z 
2025-01-10T13:23:47.9371664Z Packets:   ████████████████████████████▊                                                   180421/500000 [00:05<00:09, 34747.88it/s][A
2025-01-10T13:23:47.9371668Z 
2025-01-10T13:23:47.9371938Z Packets:   █████████████████████████████▍                                                  183914/500000 [00:05<00:09, 34800.57it/s][A
2025-01-10T13:23:47.9371942Z 
2025-01-10T13:23:47.9372212Z Packets:   █████████████████████████████▉                                                  187401/500000 [00:05<00:08, 34820.28it/s][A
2025-01-10T13:23:47.9372217Z 
2025-01-10T13:23:47.9372483Z Packets:   ██████████████████████████████▌                                                 190901/500000 [00:05<00:08, 34871.63it/s][A
2025-01-10T13:23:47.9372487Z 
2025-01-10T13:23:47.9372857Z Packets:   ███████████████████████████████                                                 194389/500000 [00:05<00:09, 33363.78it/s][A
2025-01-10T13:23:47.9372872Z 
2025-01-10T13:23:47.9373496Z Packets:   ███████████████████████████████▋                                                197876/500000 [00:05<00:08, 33800.13it/s][A
2025-01-10T13:23:47.9373504Z 
2025-01-10T13:23:47.9373785Z Packets:   ████████████████████████████████▏                                               201355/500000 [00:05<00:08, 34090.26it/s][A
2025-01-10T13:23:47.9373790Z 
2025-01-10T13:23:47.9374068Z Packets:   ████████████████████████████████▊                                               204850/500000 [00:05<00:08, 34340.78it/s][A
2025-01-10T13:23:47.9374072Z 
2025-01-10T13:23:47.9374350Z Packets:   █████████████████████████████████▎                                              208369/500000 [00:06<00:08, 34589.23it/s][A
2025-01-10T13:23:47.9374354Z 
2025-01-10T13:23:47.9374639Z Packets:   █████████████████████████████████▉                                              211841/500000 [00:06<00:08, 34628.04it/s][A
2025-01-10T13:23:47.9374653Z 
2025-01-10T13:23:47.9375112Z Packets:   ██████████████████████████████████▍                                             215308/500000 [00:06<00:08, 34602.54it/s][A
2025-01-10T13:23:47.9375120Z 
2025-01-10T13:23:47.9375502Z Packets:   ███████████████████████████████████                                             218834/500000 [00:06<00:08, 34797.28it/s][A
2025-01-10T13:23:47.9375508Z 
2025-01-10T13:23:47.9375785Z Packets:   ███████████████████████████████████▌                                            222316/500000 [00:06<00:07, 34772.73it/s][A
2025-01-10T13:23:47.9375790Z 
2025-01-10T13:23:47.9376068Z Packets:   ████████████████████████████████████▏                                           225797/500000 [00:06<00:07, 34782.69it/s][A
2025-01-10T13:23:47.9376073Z 
2025-01-10T13:23:47.9376350Z Packets:   ████████████████████████████████████▋                                           229277/500000 [00:06<00:08, 33377.50it/s][A
2025-01-10T13:23:47.9376521Z 
2025-01-10T13:23:47.9376811Z Packets:   █████████████████████████████████████▏                                          232797/500000 [00:06<00:07, 33906.92it/s][A
2025-01-10T13:23:47.9376816Z 
2025-01-10T13:23:47.9377090Z Packets:   █████████████████████████████████████▊                                          236318/500000 [00:06<00:07, 34288.39it/s][A
2025-01-10T13:23:47.9377102Z 
2025-01-10T13:23:47.9377382Z Packets:   ██████████████████████████████████████▎                                         239803/500000 [00:07<00:07, 34446.58it/s][A
2025-01-10T13:23:47.9377387Z 
2025-01-10T13:23:47.9377667Z Packets:   ██████████████████████████████████████▉                                         243278/500000 [00:07<00:07, 34535.81it/s][A
2025-01-10T13:23:47.9377671Z 
2025-01-10T13:23:47.9377949Z Packets:   ███████████████████████████████████████▍                                        246736/500000 [00:07<00:07, 34540.05it/s][A
2025-01-10T13:23:47.9377965Z 
2025-01-10T13:23:47.9378361Z Packets:   ████████████████████████████████████████                                        250194/500000 [00:07<00:07, 34551.68it/s][A
2025-01-10T13:23:47.9378367Z 
2025-01-10T13:23:47.9378658Z Packets:   ████████████████████████████████████████▌                                       253652/500000 [00:07<00:07, 34526.68it/s][A
2025-01-10T13:23:47.9378663Z 
2025-01-10T13:23:47.9378944Z Packets:   █████████████████████████████████████████▏                                      257165/500000 [00:07<00:06, 34705.29it/s][A
2025-01-10T13:23:47.9378948Z 
2025-01-10T13:23:47.9379232Z Packets:   █████████████████████████████████████████▋                                      260702/500000 [00:07<00:06, 34903.14it/s][A
2025-01-10T13:23:47.9379237Z 
2025-01-10T13:23:47.9379515Z Packets:   ██████████████████████████████████████████▎                                     264194/500000 [00:07<00:07, 33414.24it/s][A
2025-01-10T13:23:47.9379526Z 
2025-01-10T13:23:47.9379820Z Packets:   ██████████████████████████████████████████▊                                     267709/500000 [00:07<00:06, 33918.33it/s][A
2025-01-10T13:23:47.9379835Z 
2025-01-10T13:23:47.9380123Z Packets:   ███████████████████████████████████████████▍                                    271179/500000 [00:07<00:06, 34146.69it/s][A
2025-01-10T13:23:47.9380128Z 
2025-01-10T13:23:47.9380410Z Packets:   ███████████████████████████████████████████▉                                    274603/500000 [00:08<00:06, 34153.28it/s][A
2025-01-10T13:23:47.9380415Z 
2025-01-10T13:23:47.9380703Z Packets:   ████████████████████████████████████████████▍                                   278025/500000 [00:08<00:06, 34128.49it/s][A
2025-01-10T13:23:47.9380708Z 
2025-01-10T13:23:47.9381001Z Packets:   █████████████████████████████████████████████                                   281545/500000 [00:08<00:06, 34445.33it/s][A
2025-01-10T13:23:47.9381006Z 
2025-01-10T13:23:47.9381303Z Packets:   █████████████████████████████████████████████▌                                  285051/500000 [00:08<00:06, 34628.13it/s][A
2025-01-10T13:23:47.9381418Z 
2025-01-10T13:23:47.9381713Z Packets:   ██████████████████████████████████████████████▏                                 288565/500000 [00:08<00:06, 34779.48it/s][A
2025-01-10T13:23:47.9381718Z 
2025-01-10T13:23:47.9382003Z Packets:   ██████████████████████████████████████████████▋                                 292045/500000 [00:08<00:05, 34752.97it/s][A
2025-01-10T13:23:47.9382011Z 
2025-01-10T13:23:47.9382299Z Packets:   ███████████████████████████████████████████████▎                                295522/500000 [00:08<00:05, 34602.11it/s][A
2025-01-10T13:23:47.9382303Z 
2025-01-10T13:23:47.9382592Z Packets:   ███████████████████████████████████████████████▊                                298984/500000 [00:08<00:06, 33345.33it/s][A
2025-01-10T13:23:47.9382597Z 
2025-01-10T13:23:47.9382884Z Packets:   ████████████████████████████████████████████████▍                               302502/500000 [00:08<00:05, 33878.33it/s][A
2025-01-10T13:23:47.9382984Z 
2025-01-10T13:23:47.9383483Z Packets:   ████████████████████████████████████████████████▉                               306066/500000 [00:08<00:05, 34395.41it/s][A
2025-01-10T13:23:47.9383488Z 
2025-01-10T13:23:47.9383783Z Packets:   █████████████████████████████████████████████████▌                              309561/500000 [00:09<00:05, 34557.90it/s][A
2025-01-10T13:23:47.9383788Z 
2025-01-10T13:23:47.9384077Z Packets:   ██████████████████████████████████████████████████                              313033/500000 [00:09<00:05, 34605.89it/s][A
2025-01-10T13:23:47.9384082Z 
2025-01-10T13:23:47.9384379Z Packets:   ██████████████████████████████████████████████████▋                             316564/500000 [00:09<00:05, 34806.93it/s][A
2025-01-10T13:23:47.9384383Z 
2025-01-10T13:23:47.9384674Z Packets:   ███████████████████████████████████████████████████▏                            320048/500000 [00:09<00:05, 34697.74it/s][A
2025-01-10T13:23:47.9384694Z 
2025-01-10T13:23:47.9384999Z Packets:   ███████████████████████████████████████████████████▊                            323578/500000 [00:09<00:05, 34874.58it/s][A
2025-01-10T13:23:47.9385003Z 
2025-01-10T13:23:47.9385304Z Packets:   ████████████████████████████████████████████████████▎                           327067/500000 [00:09<00:04, 34829.93it/s][A
2025-01-10T13:23:47.9385309Z 
2025-01-10T13:23:47.9385609Z Packets:   ████████████████████████████████████████████████████▉                           330565/500000 [00:09<00:04, 34867.98it/s][A
2025-01-10T13:23:47.9385613Z 
2025-01-10T13:23:47.9385914Z Packets:   █████████████████████████████████████████████████████▍                          334095/500000 [00:09<00:04, 34994.04it/s][A
2025-01-10T13:23:47.9385919Z 
2025-01-10T13:23:47.9386220Z Packets:   ██████████████████████████████████████████████████████                          337595/500000 [00:09<00:04, 33381.04it/s][A
2025-01-10T13:23:47.9386224Z 
2025-01-10T13:23:47.9386676Z Packets:   ██████████████████████████████████████████████████████▌                         341112/500000 [00:09<00:04, 33897.69it/s][A
2025-01-10T13:23:47.9386784Z 
2025-01-10T13:23:47.9387092Z Packets:   ███████████████████████████████████████████████████████▏                        344647/500000 [00:10<00:04, 34321.47it/s][A
2025-01-10T13:23:47.9387096Z 
2025-01-10T13:23:47.9387389Z Packets:   ███████████████████████████████████████████████████████▋                        348150/500000 [00:10<00:04, 34524.74it/s][A
2025-01-10T13:23:47.9387393Z 
2025-01-10T13:23:47.9387691Z Packets:   ████████████████████████████████████████████████████████▎                       351626/500000 [00:10<00:04, 34593.62it/s][A
2025-01-10T13:23:47.9387695Z 
2025-01-10T13:23:47.9387993Z Packets:   ████████████████████████████████████████████████████████▊                       355158/500000 [00:10<00:04, 34807.90it/s][A
2025-01-10T13:23:47.9387997Z 
2025-01-10T13:23:47.9388309Z Packets:   █████████████████████████████████████████████████████████▍                      358687/500000 [00:10<00:04, 34950.67it/s][A
2025-01-10T13:23:47.9388326Z 
2025-01-10T13:23:47.9388625Z Packets:   █████████████████████████████████████████████████████████▉                      362185/500000 [00:10<00:03, 34894.93it/s][A
2025-01-10T13:23:47.9388629Z 
2025-01-10T13:23:47.9388929Z Packets:   ██████████████████████████████████████████████████████████▌                     365677/500000 [00:10<00:03, 34756.45it/s][A
2025-01-10T13:23:47.9388940Z 
2025-01-10T13:23:47.9389239Z Packets:   ███████████████████████████████████████████████████████████                     369214/500000 [00:10<00:03, 34935.36it/s][A
2025-01-10T13:23:47.9389243Z 
2025-01-10T13:23:47.9389548Z Packets:   ███████████████████████████████████████████████████████████▋                    372709/500000 [00:10<00:03, 32985.69it/s][A
2025-01-10T13:23:47.9389553Z 
2025-01-10T13:23:47.9389854Z Packets:   ████████████████████████████████████████████████████████████▏                   376190/500000 [00:10<00:03, 33509.55it/s][A
2025-01-10T13:23:47.9389964Z 
2025-01-10T13:23:47.9390275Z Packets:   ████████████████████████████████████████████████████████████▋                   379635/500000 [00:11<00:03, 33782.35it/s][A
2025-01-10T13:23:47.9390279Z 
2025-01-10T13:23:47.9390585Z Packets:   █████████████████████████████████████████████████████████████▎                  383109/500000 [00:11<00:03, 34057.80it/s][A
2025-01-10T13:23:47.9390589Z 
2025-01-10T13:23:47.9390891Z Packets:   █████████████████████████████████████████████████████████████▊                  386569/500000 [00:11<00:03, 34216.48it/s][A
2025-01-10T13:23:47.9390895Z 
2025-01-10T13:23:47.9391204Z Packets:   ██████████████████████████████████████████████████████████████▍                 390056/500000 [00:11<00:03, 34409.74it/s][A
2025-01-10T13:23:47.9391208Z 
2025-01-10T13:23:47.9391512Z Packets:   ██████████████████████████████████████████████████████████████▉                 393542/500000 [00:11<00:03, 34543.34it/s][A
2025-01-10T13:23:47.9391538Z 
2025-01-10T13:23:47.9391922Z Packets:   ███████████████████████████████████████████████████████████████▌                397052/500000 [00:11<00:02, 34708.50it/s][A
2025-01-10T13:23:47.9391926Z 
2025-01-10T13:23:47.9392237Z Packets:   ████████████████████████████████████████████████████████████████                400531/500000 [00:11<00:02, 34732.40it/s][A
2025-01-10T13:23:47.9392242Z 
2025-01-10T13:23:47.9392545Z Packets:   ████████████████████████████████████████████████████████████████▋               404007/500000 [00:11<00:02, 34703.43it/s][A
2025-01-10T13:23:47.9392549Z 
2025-01-10T13:23:47.9392857Z Packets:   █████████████████████████████████████████████████████████████████▏              407479/500000 [00:11<00:02, 33116.97it/s][A
2025-01-10T13:23:47.9392862Z 
2025-01-10T13:23:47.9393324Z Packets:   █████████████████████████████████████████████████████████████████▊              410984/500000 [00:11<00:02, 33664.80it/s][A
2025-01-10T13:23:47.9393330Z 
2025-01-10T13:23:47.9393655Z Packets:   ██████████████████████████████████████████████████████████████████▎             414453/500000 [00:12<00:02, 33962.55it/s][A
2025-01-10T13:23:47.9393673Z 
2025-01-10T13:23:47.9393984Z Packets:   ██████████████████████████████████████████████████████████████████▊             417940/500000 [00:12<00:02, 34227.91it/s][A
2025-01-10T13:23:47.9393989Z 
2025-01-10T13:23:47.9394296Z Packets:   ███████████████████████████████████████████████████████████████████▍            421456/500000 [00:12<00:02, 34502.32it/s][A
2025-01-10T13:23:47.9394300Z 
2025-01-10T13:23:47.9394613Z Packets:   ███████████████████████████████████████████████████████████████████▉            424982/500000 [00:12<00:02, 34727.15it/s][A
2025-01-10T13:23:47.9394617Z 
2025-01-10T13:23:47.9394931Z Packets:   ████████████████████████████████████████████████████████████████████▌           428459/500000 [00:12<00:02, 34671.17it/s][A
2025-01-10T13:23:47.9394936Z 
2025-01-10T13:23:47.9395373Z Packets:   █████████████████████████████████████████████████████████████████████           431929/500000 [00:12<00:01, 34604.37it/s][A
2025-01-10T13:23:47.9395500Z 
2025-01-10T13:23:47.9395822Z Packets:   █████████████████████████████████████████████████████████████████████▋          435424/500000 [00:12<00:01, 34703.35it/s][A
2025-01-10T13:23:47.9395826Z 
2025-01-10T13:23:47.9396145Z Packets:   ██████████████████████████████████████████████████████████████████████▏         438896/500000 [00:12<00:01, 34542.88it/s][A
2025-01-10T13:23:47.9396149Z 
2025-01-10T13:23:47.9396462Z Packets:   ██████████████████████████████████████████████████████████████████████▊         442352/500000 [00:12<00:01, 33192.53it/s][A
2025-01-10T13:23:47.9396466Z 
2025-01-10T13:23:47.9396787Z Packets:   ███████████████████████████████████████████████████████████████████████▎        445777/500000 [00:13<00:01, 33499.52it/s][A
2025-01-10T13:23:47.9396792Z 
2025-01-10T13:23:47.9397100Z Packets:   ███████████████████████████████████████████████████████████████████████▊        449192/500000 [00:13<00:01, 33688.47it/s][A
2025-01-10T13:23:47.9397135Z 
2025-01-10T13:23:47.9397457Z Packets:   ████████████████████████████████████████████████████████████████████████▍       452695/500000 [00:13<00:01, 34081.54it/s][A
2025-01-10T13:23:47.9397461Z 
2025-01-10T13:23:47.9397783Z Packets:   ████████████████████████████████████████████████████████████████████████▉       456243/500000 [00:13<00:01, 34494.64it/s][A
2025-01-10T13:23:47.9397787Z 
2025-01-10T13:23:47.9398101Z Packets:   █████████████████████████████████████████████████████████████████████████▌      459752/500000 [00:13<00:01, 34669.35it/s][A
2025-01-10T13:23:47.9398105Z 
2025-01-10T13:23:47.9398424Z Packets:   ██████████████████████████████████████████████████████████████████████████      463223/500000 [00:13<00:01, 34663.73it/s][A
2025-01-10T13:23:47.9398428Z 
2025-01-10T13:23:47.9398746Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     466764/500000 [00:13<00:00, 34882.29it/s][A
2025-01-10T13:23:47.9398863Z 
2025-01-10T13:23:47.9399200Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    470276/500000 [00:13<00:00, 34943.32it/s][A
2025-01-10T13:23:47.9399205Z 
2025-01-10T13:23:47.9399528Z Packets:   ███████████████████████████████████████████████████████████████████████████▊    473772/500000 [00:13<00:00, 34805.77it/s][A
2025-01-10T13:23:47.9399532Z 
2025-01-10T13:23:47.9399852Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   477254/500000 [00:13<00:00, 33177.91it/s][A
2025-01-10T13:23:47.9399857Z 
2025-01-10T13:23:47.9400385Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   480738/500000 [00:14<00:00, 33657.96it/s][A
2025-01-10T13:23:47.9400393Z 
2025-01-10T13:23:47.9400797Z Packets:   █████████████████████████████████████████████████████████████████████████████▍  484230/500000 [00:14<00:00, 34023.62it/s][A
2025-01-10T13:23:47.9400803Z 
2025-01-10T13:23:47.9401228Z Packets:   ██████████████████████████████████████████████████████████████████████████████  487684/500000 [00:14<00:00, 34173.66it/s][A
2025-01-10T13:23:47.9401248Z 
2025-01-10T13:23:47.9401575Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 491187/500000 [00:14<00:00, 34427.14it/s][A
2025-01-10T13:23:47.9401580Z 
2025-01-10T13:23:47.9401945Z Packets:   ███████████████████████████████████████████████████████████████████████████████▏494729/500000 [00:14<00:00, 34720.14it/s][A
2025-01-10T13:23:47.9401956Z 
2025-01-10T13:23:47.9402272Z Packets:   ███████████████████████████████████████████████████████████████████████████████▋498228/500000 [00:14<00:00, 34798.99it/s][A
2025-01-10T13:23:47.9402430Z Iterations:                                                                                17/? [06:20<00:00,  9.40s/it]
2025-01-10T13:23:47.9402435Z 
2025-01-10T13:23:47.9402753Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 34798.99it/s][A
2025-01-10T13:23:47.9403185Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9403409Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-10T13:23:47.9403769Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-10T13:23:47.9404155Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-10T13:23:47.9404586Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-10T13:23:47.9405089Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:23:47.9405455Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:23:47.9405584Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:23:47.9405682Z 	Starting iteration 1 of 5
2025-01-10T13:23:47.9405799Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:23:47.9405897Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T13:23:47.9405997Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T13:23:47.9406096Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9406100Z 
2025-01-10T13:23:47.9406207Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:23:47.9406300Z 	Plasma stratification:
2025-01-10T13:23:47.9406406Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:23:47.9406522Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T13:23:47.9406610Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T13:23:47.9406703Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T13:23:47.9406791Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T13:23:47.9406890Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T13:23:47.9406894Z 
2025-01-10T13:23:47.9407000Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:23:47.9407095Z 	Current t_inner = 9974.969 K
2025-01-10T13:23:47.9407217Z 	Expected t_inner for next iteration = 10736.783 K
2025-01-10T13:23:47.9407227Z 
2025-01-10T13:23:47.9407336Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:23:47.9407430Z 	Starting iteration 2 of 5
2025-01-10T13:23:47.9407536Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:23:47.9407635Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T13:23:47.9407728Z 	Luminosity absorbed  = 3.624e+42 erg / s
2025-01-10T13:23:47.9407826Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9407831Z 
2025-01-10T13:23:47.9407933Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:23:47.9408026Z 	Plasma stratification:
2025-01-10T13:23:47.9408133Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:23:47.9408249Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:23:47.9408345Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-01-10T13:23:47.9408437Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T13:23:47.9408535Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-01-10T13:23:47.9408622Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T13:23:47.9408626Z 
2025-01-10T13:23:47.9408736Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:23:47.9408822Z 	Current t_inner = 10736.783 K
2025-01-10T13:23:47.9408945Z 	Expected t_inner for next iteration = 10718.619 K
2025-01-10T13:23:47.9408950Z 
2025-01-10T13:23:47.9409055Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:23:47.9409147Z 	Starting iteration 3 of 5
2025-01-10T13:23:47.9409253Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:23:47.9409352Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T13:23:47.9409445Z 	Luminosity absorbed  = 3.514e+42 erg / s
2025-01-10T13:23:47.9409544Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9409668Z 
2025-01-10T13:23:47.9409902Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-01-10T13:23:47.9410011Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:23:47.9410105Z 	Plasma stratification:
2025-01-10T13:23:47.9410214Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:23:47.9410328Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:23:47.9410420Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-01-10T13:23:47.9410514Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T13:23:47.9410601Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-01-10T13:23:47.9410695Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0921
2025-01-10T13:23:47.9410700Z 
2025-01-10T13:23:47.9410807Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:23:47.9410899Z 	Current t_inner = 10718.619 K
2025-01-10T13:23:47.9411015Z 	Expected t_inner for next iteration = 10696.651 K
2025-01-10T13:23:47.9411026Z 
2025-01-10T13:23:47.9411230Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:23:47.9411329Z 	Starting iteration 4 of 5
2025-01-10T13:23:47.9411434Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:23:47.9411533Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T13:23:47.9411627Z 	Luminosity absorbed  = 3.437e+42 erg / s
2025-01-10T13:23:47.9411725Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9411730Z 
2025-01-10T13:23:47.9411942Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-01-10T13:23:47.9412054Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:23:47.9412140Z 	Plasma stratification:
2025-01-10T13:23:47.9412251Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:23:47.9412362Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:23:47.9412452Z 	0         1.07e+04 K  1.09e+04 K  0.491    0.49
2025-01-10T13:23:47.9412537Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T13:23:47.9412636Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T13:23:47.9412727Z 	15        1.04e+04 K  1.05e+04 K 0.0921  0.0902
2025-01-10T13:23:47.9412731Z 
2025-01-10T13:23:47.9412834Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:23:47.9412924Z 	Current t_inner = 10696.651 K
2025-01-10T13:23:47.9413287Z 	Expected t_inner for next iteration = 10684.004 K
2025-01-10T13:23:47.9413293Z 
2025-01-10T13:23:47.9413405Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:23:47.9413501Z 	Simulation finished in 4 iterations 
2025-01-10T13:23:47.9413593Z 	Simulation took 12.80 s
2025-01-10T13:23:47.9413597Z 
2025-01-10T13:23:47.9413701Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:23:47.9413793Z 	Starting iteration 5 of 5
2025-01-10T13:23:47.9413897Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:23:47.9414000Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T13:23:47.9414098Z 	Luminosity absorbed  = 3.447e+42 erg / s
2025-01-10T13:23:47.9414189Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9414380Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-01-10T13:23:47.9414385Z 
2025-01-10T13:23:47.9414602Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7fef619481d0>
2025-01-10T13:23:47.9414806Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5382db80>
2025-01-10T13:23:47.9414810Z 
2025-01-10T13:23:47.9414907Z     def test_spectrum(self, simulation):
2025-01-10T13:23:47.9415088Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:23:47.9415191Z         expected = self.get_expected_data(key)
2025-01-10T13:23:47.9415269Z     
2025-01-10T13:23:47.9415384Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9415455Z     
2025-01-10T13:23:47.9415560Z >       assert_quantity_allclose(
2025-01-10T13:23:47.9415731Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-01-10T13:23:47.9415815Z             luminosity,
2025-01-10T13:23:47.9416028Z         )
2025-01-10T13:23:47.9416033Z 
2025-01-10T13:23:47.9416135Z tardis/tests/test_tardis_full.py:81: 
2025-01-10T13:23:47.9416255Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9416602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9416694Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9416813Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9416817Z 
2025-01-10T13:23:47.9417291Z args = (<function assert_allclose.<locals>.compare at 0x7fef561209a0>, array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39,...), array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, ...,
2025-01-10T13:23:47.9417399Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9417666Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9417800Z 
2025-01-10T13:23:47.9417885Z     @wraps(func)
2025-01-10T13:23:47.9417979Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9418068Z         with self._recreate_cm():
2025-01-10T13:23:47.9418164Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9418250Z E           AssertionError: 
2025-01-10T13:23:47.9418370Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9418445Z E           
2025-01-10T13:23:47.9418554Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-01-10T13:23:47.9418703Z E           Max absolute difference among violations: 1.38672909e+39
2025-01-10T13:23:47.9418838Z E           Max relative difference among violations: 5.17890748
2025-01-10T13:23:47.9419015Z E            ACTUAL: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9419107Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9419289Z E            DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9419382Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9419387Z 
2025-01-10T13:23:47.9419597Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9419781Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-01-10T13:23:47.9419785Z 
2025-01-10T13:23:47.9420004Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7fef61948410>
2025-01-10T13:23:47.9420206Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5382db80>
2025-01-10T13:23:47.9420211Z 
2025-01-10T13:23:47.9420329Z     def test_virtual_spectrum(self, simulation):
2025-01-10T13:23:47.9420515Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-01-10T13:23:47.9420618Z         expected = self.get_expected_data(key)
2025-01-10T13:23:47.9420700Z     
2025-01-10T13:23:47.9420807Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9420883Z     
2025-01-10T13:23:47.9420977Z >       assert_quantity_allclose(
2025-01-10T13:23:47.9421157Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-01-10T13:23:47.9421234Z             luminosity,
2025-01-10T13:23:47.9421314Z         )
2025-01-10T13:23:47.9421318Z 
2025-01-10T13:23:47.9421413Z tardis/tests/test_tardis_full.py:92: 
2025-01-10T13:23:47.9421534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9421869Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9421961Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9422076Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9422080Z 
2025-01-10T13:23:47.9422546Z args = (<function assert_allclose.<locals>.compare at 0x7fef31a722a0>, array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39,...), array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, ...,
2025-01-10T13:23:47.9422752Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9423008Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9423141Z 
2025-01-10T13:23:47.9423229Z     @wraps(func)
2025-01-10T13:23:47.9423320Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9423408Z         with self._recreate_cm():
2025-01-10T13:23:47.9423506Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9423592Z E           AssertionError: 
2025-01-10T13:23:47.9423706Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9423780Z E           
2025-01-10T13:23:47.9423890Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-01-10T13:23:47.9424031Z E           Max absolute difference among violations: 5.26760031e+38
2025-01-10T13:23:47.9424173Z E           Max relative difference among violations: 23978.84555943
2025-01-10T13:23:47.9424465Z E            ACTUAL: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9424565Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9424736Z E            DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9424828Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9424833Z 
2025-01-10T13:23:47.9425038Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9425470Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-01-10T13:23:47.9425478Z 
2025-01-10T13:23:47.9425928Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef61948d70>
2025-01-10T13:23:47.9426128Z simulation = <tardis.simulation.base.Simulation object at 0x7fef4d048230>
2025-01-10T13:23:47.9426333Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-01-10T13:23:47.9426344Z 
2025-01-10T13:23:47.9426483Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:23:47.9426597Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9426693Z         j_blue_estimator = (
2025-01-10T13:23:47.9426911Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:23:47.9426987Z         )
2025-01-10T13:23:47.9427134Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:23:47.9427261Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:23:47.9427266Z 
2025-01-10T13:23:47.9427404Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:23:47.9427523Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9427528Z 
2025-01-10T13:23:47.9427794Z args = (<function assert_allclose.<locals>.compare at 0x7fef31a727a0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9427874Z        [0., 0., .....,
2025-01-10T13:23:47.9427962Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9428047Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9428133Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:23:47.9428385Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9428390Z 
2025-01-10T13:23:47.9428473Z     @wraps(func)
2025-01-10T13:23:47.9428561Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9428656Z         with self._recreate_cm():
2025-01-10T13:23:47.9428747Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9428838Z E           AssertionError: 
2025-01-10T13:23:47.9428947Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9429027Z E           
2025-01-10T13:23:47.9429139Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:23:47.9429283Z E           Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:23:47.9429415Z E           Max relative difference among violations: 8.35741234
2025-01-10T13:23:47.9429674Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9429769Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9429861Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9429976Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9430063Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9430156Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9430161Z 
2025-01-10T13:23:47.9430361Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9430583Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-01-10T13:23:47.9430588Z 
2025-01-10T13:23:47.9430907Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef619493a0>
2025-01-10T13:23:47.9431187Z simulation = <tardis.simulation.base.Simulation object at 0x7fef4d048230>
2025-01-10T13:23:47.9431386Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-01-10T13:23:47.9431391Z 
2025-01-10T13:23:47.9431507Z     def test_spectrum(self, simulation, request):
2025-01-10T13:23:47.9431621Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9431817Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:23:47.9431986Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:23:47.9432089Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9432217Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:23:47.9432222Z 
2025-01-10T13:23:47.9432358Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:23:47.9432478Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9432822Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9432921Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9433158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9433163Z 
2025-01-10T13:23:47.9433633Z args = (<function assert_allclose.<locals>.compare at 0x7fef3da92e80>, array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39,...), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T13:23:47.9433744Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9433996Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9434001Z 
2025-01-10T13:23:47.9434081Z     @wraps(func)
2025-01-10T13:23:47.9434176Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9434264Z         with self._recreate_cm():
2025-01-10T13:23:47.9434359Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9434446Z E           AssertionError: 
2025-01-10T13:23:47.9434569Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9434643Z E           
2025-01-10T13:23:47.9434751Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:23:47.9434890Z E           Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:23:47.9435024Z E           Max relative difference among violations: 5.83764686
2025-01-10T13:23:47.9435192Z E            ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9435284Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9435453Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9435545Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9435550Z 
2025-01-10T13:23:47.9435757Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9435989Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-01-10T13:23:47.9436118Z 
2025-01-10T13:23:47.9436453Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef61949b20>
2025-01-10T13:23:47.9436646Z simulation = <tardis.simulation.base.Simulation object at 0x7fef4d048230>
2025-01-10T13:23:47.9436856Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-01-10T13:23:47.9436860Z 
2025-01-10T13:23:47.9437003Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:23:47.9437118Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9437313Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:23:47.9437476Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:23:47.9437586Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9437704Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:23:47.9437708Z 
2025-01-10T13:23:47.9437960Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:23:47.9438075Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9438410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9438502Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9438616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9438620Z 
2025-01-10T13:23:47.9439094Z args = (<function assert_allclose.<locals>.compare at 0x7fef2efee8e0>, array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39,...), array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, ...,
2025-01-10T13:23:47.9439200Z        2.25671263e+31, 2.27943572e+31, 2.24394350e+31]))
2025-01-10T13:23:47.9439457Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9439462Z 
2025-01-10T13:23:47.9439542Z     @wraps(func)
2025-01-10T13:23:47.9439636Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9439723Z         with self._recreate_cm():
2025-01-10T13:23:47.9439817Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9439904Z E           AssertionError: 
2025-01-10T13:23:47.9440016Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9440090Z E           
2025-01-10T13:23:47.9440198Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:23:47.9440344Z E           Max absolute difference among violations: 5.00661745e+37
2025-01-10T13:23:47.9440474Z E           Max relative difference among violations: 6.79985816
2025-01-10T13:23:47.9440646Z E            ACTUAL: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-10T13:23:47.9440735Z E                  2.292907e+31, 2.257206e+31])
2025-01-10T13:23:47.9440910Z E            DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T13:23:47.9441002Z E                  2.279436e+31, 2.243943e+31])
2025-01-10T13:23:47.9441009Z 
2025-01-10T13:23:47.9441217Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9441372Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:23:47.9441376Z 
2025-01-10T13:23:47.9441385Z 
2025-01-10T13:23:47.9441780Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:12<00:00, 111146.34it/s][A
2025-01-10T13:23:47.9442012Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-01-10T13:23:47.9442017Z 
2025-01-10T13:23:47.9442336Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef61949580>
2025-01-10T13:23:47.9442534Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5678dac0>
2025-01-10T13:23:47.9442731Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-01-10T13:23:47.9442858Z 
2025-01-10T13:23:47.9443008Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:23:47.9443240Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9443334Z         j_blue_estimator = (
2025-01-10T13:23:47.9443556Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:23:47.9443629Z         )
2025-01-10T13:23:47.9443788Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:23:47.9443909Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:23:47.9443913Z 
2025-01-10T13:23:47.9444052Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:23:47.9444164Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9444169Z 
2025-01-10T13:23:47.9444444Z args = (<function assert_allclose.<locals>.compare at 0x7fef34940180>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9444521Z        [0., 0., .....,
2025-01-10T13:23:47.9444729Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9444813Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9444900Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:23:47.9445162Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9445167Z 
2025-01-10T13:23:47.9445244Z     @wraps(func)
2025-01-10T13:23:47.9445333Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9445421Z         with self._recreate_cm():
2025-01-10T13:23:47.9445513Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9445600Z E           AssertionError: 
2025-01-10T13:23:47.9445714Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9445788Z E           
2025-01-10T13:23:47.9445903Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:23:47.9446042Z E           Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:23:47.9446177Z E           Max relative difference among violations: 4.08461732
2025-01-10T13:23:47.9446294Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9446385Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9446483Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9446593Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9446684Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9446772Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9446777Z 
2025-01-10T13:23:47.9446985Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9447206Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-01-10T13:23:47.9447211Z 
2025-01-10T13:23:47.9447545Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef61949cd0>
2025-01-10T13:23:47.9447751Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5678dac0>
2025-01-10T13:23:47.9447928Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-01-10T13:23:47.9447932Z 
2025-01-10T13:23:47.9448047Z     def test_spectrum(self, simulation, request):
2025-01-10T13:23:47.9448153Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9448353Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:23:47.9448513Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:23:47.9448622Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9448743Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:23:47.9448748Z 
2025-01-10T13:23:47.9448888Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:23:47.9449001Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9449343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9449566Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9449677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9449681Z 
2025-01-10T13:23:47.9450156Z args = (<function assert_allclose.<locals>.compare at 0x7fef3d7245e0>, array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39,...), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T13:23:47.9450339Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9450787Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9450793Z 
2025-01-10T13:23:47.9450874Z     @wraps(func)
2025-01-10T13:23:47.9450966Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9451060Z         with self._recreate_cm():
2025-01-10T13:23:47.9451149Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9451240Z E           AssertionError: 
2025-01-10T13:23:47.9451448Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9451530Z E           
2025-01-10T13:23:47.9451632Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:23:47.9451773Z E           Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:23:47.9451901Z E           Max relative difference among violations: 3.08310014
2025-01-10T13:23:47.9452077Z E            ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9452165Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9452340Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9452427Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9452438Z 
2025-01-10T13:23:47.9452637Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9452873Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-01-10T13:23:47.9452884Z 
2025-01-10T13:23:47.9453345Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef6194a300>
2025-01-10T13:23:47.9453545Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5678dac0>
2025-01-10T13:23:47.9453749Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-01-10T13:23:47.9453754Z 
2025-01-10T13:23:47.9453900Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:23:47.9454007Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9454202Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:23:47.9454367Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:23:47.9454470Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9454593Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:23:47.9454598Z 
2025-01-10T13:23:47.9454738Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:23:47.9454853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9455185Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9455283Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9455392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9455395Z 
2025-01-10T13:23:47.9455861Z args = (<function assert_allclose.<locals>.compare at 0x7fef3da93380>, array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39,...), array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, ...,
2025-01-10T13:23:47.9455969Z        1.35260736e+31, 1.33049749e+31, 1.29446216e+31]))
2025-01-10T13:23:47.9456221Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9456225Z 
2025-01-10T13:23:47.9456438Z     @wraps(func)
2025-01-10T13:23:47.9456526Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9456618Z         with self._recreate_cm():
2025-01-10T13:23:47.9456710Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9456803Z E           AssertionError: 
2025-01-10T13:23:47.9456912Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9456991Z E           
2025-01-10T13:23:47.9457091Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:23:47.9457235Z E           Max absolute difference among violations: 2.90101642e+37
2025-01-10T13:23:47.9457369Z E           Max relative difference among violations: 96.4428449
2025-01-10T13:23:47.9457537Z E            ACTUAL: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-10T13:23:47.9457629Z E                  1.375141e+31, 1.337928e+31])
2025-01-10T13:23:47.9457796Z E            DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T13:23:47.9458022Z E                  1.330497e+31, 1.294462e+31])
2025-01-10T13:23:47.9458027Z 
2025-01-10T13:23:47.9458230Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9458460Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-01-10T13:23:47.9458464Z 
2025-01-10T13:23:47.9458783Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef61949820>
2025-01-10T13:23:47.9458983Z simulation = <tardis.simulation.base.Simulation object at 0x7fef4c10d8b0>
2025-01-10T13:23:47.9459183Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-01-10T13:23:47.9459187Z 
2025-01-10T13:23:47.9459318Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:23:47.9459429Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9459513Z         j_blue_estimator = (
2025-01-10T13:23:47.9459736Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:23:47.9459818Z         )
2025-01-10T13:23:47.9459970Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:23:47.9460090Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:23:47.9460095Z 
2025-01-10T13:23:47.9460233Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:23:47.9460349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9460352Z 
2025-01-10T13:23:47.9460618Z args = (<function assert_allclose.<locals>.compare at 0x7fef80393380>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9460698Z        [0., 0., .....,
2025-01-10T13:23:47.9460778Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9460863Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9460941Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:23:47.9461198Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9461208Z 
2025-01-10T13:23:47.9461286Z     @wraps(func)
2025-01-10T13:23:47.9461376Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9461465Z         with self._recreate_cm():
2025-01-10T13:23:47.9461559Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9461649Z E           AssertionError: 
2025-01-10T13:23:47.9461756Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9461834Z E           
2025-01-10T13:23:47.9461943Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:23:47.9462084Z E           Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:23:47.9462211Z E           Max relative difference among violations: 4.08461732
2025-01-10T13:23:47.9462322Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9462412Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9462511Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9462726Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9462816Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9462905Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9462914Z 
2025-01-10T13:23:47.9463242Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9463466Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-01-10T13:23:47.9463471Z 
2025-01-10T13:23:47.9463789Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef61949f10>
2025-01-10T13:23:47.9463992Z simulation = <tardis.simulation.base.Simulation object at 0x7fef4c10d8b0>
2025-01-10T13:23:47.9464163Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-01-10T13:23:47.9464168Z 
2025-01-10T13:23:47.9464281Z     def test_spectrum(self, simulation, request):
2025-01-10T13:23:47.9464384Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9464700Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:23:47.9464867Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:23:47.9464970Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9465095Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:23:47.9465099Z 
2025-01-10T13:23:47.9465231Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:23:47.9465346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9465674Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9465771Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9465881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9465884Z 
2025-01-10T13:23:47.9466355Z args = (<function assert_allclose.<locals>.compare at 0x7fef4d0393a0>, array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39,...), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T13:23:47.9466467Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9466718Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9466722Z 
2025-01-10T13:23:47.9466803Z     @wraps(func)
2025-01-10T13:23:47.9466889Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9466986Z         with self._recreate_cm():
2025-01-10T13:23:47.9467077Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9467165Z E           AssertionError: 
2025-01-10T13:23:47.9467271Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9467350Z E           
2025-01-10T13:23:47.9467449Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:23:47.9467588Z E           Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:23:47.9467732Z E           Max relative difference among violations: 3.08310014
2025-01-10T13:23:47.9467903Z E            ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9467997Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9468166Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9468258Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9468262Z 
2025-01-10T13:23:47.9468458Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9468790Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-01-10T13:23:47.9468799Z 
2025-01-10T13:23:47.9469292Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef6194a510>
2025-01-10T13:23:47.9469496Z simulation = <tardis.simulation.base.Simulation object at 0x7fef4c10d8b0>
2025-01-10T13:23:47.9469861Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-01-10T13:23:47.9469866Z 
2025-01-10T13:23:47.9470006Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:23:47.9470117Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9470309Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:23:47.9470471Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:23:47.9470574Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9470697Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:23:47.9470701Z 
2025-01-10T13:23:47.9470831Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:23:47.9470947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9471277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9471453Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9471572Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9471577Z 
2025-01-10T13:23:47.9472033Z args = (<function assert_allclose.<locals>.compare at 0x7fef6c35c5e0>, array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39,...), array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, ...,
2025-01-10T13:23:47.9472143Z        1.27325829e+31, 1.26097974e+31, 1.22258748e+31]))
2025-01-10T13:23:47.9472391Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9472395Z 
2025-01-10T13:23:47.9472478Z     @wraps(func)
2025-01-10T13:23:47.9472569Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9472657Z         with self._recreate_cm():
2025-01-10T13:23:47.9472750Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9472835Z E           AssertionError: 
2025-01-10T13:23:47.9472951Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9473217Z E           
2025-01-10T13:23:47.9473406Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:23:47.9473558Z E           Max absolute difference among violations: 2.99183385e+37
2025-01-10T13:23:47.9473698Z E           Max relative difference among violations: 98.22574798
2025-01-10T13:23:47.9473868Z E            ACTUAL: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-10T13:23:47.9473963Z E                  1.193005e+31, 1.164854e+31])
2025-01-10T13:23:47.9474132Z E            DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T13:23:47.9474224Z E                  1.260980e+31, 1.222587e+31])
2025-01-10T13:23:47.9474228Z 
2025-01-10T13:23:47.9474430Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9474656Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-01-10T13:23:47.9474664Z 
2025-01-10T13:23:47.9474993Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef61949730>
2025-01-10T13:23:47.9475187Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5666cb30>
2025-01-10T13:23:47.9475389Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-01-10T13:23:47.9475394Z 
2025-01-10T13:23:47.9475524Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:23:47.9475635Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9475724Z         j_blue_estimator = (
2025-01-10T13:23:47.9475939Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:23:47.9476017Z         )
2025-01-10T13:23:47.9476164Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:23:47.9476287Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:23:47.9476293Z 
2025-01-10T13:23:47.9476428Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:23:47.9476680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9476684Z 
2025-01-10T13:23:47.9476948Z args = (<function assert_allclose.<locals>.compare at 0x7fef60ea1a80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9477029Z        [0., 0., .....,
2025-01-10T13:23:47.9477113Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9477197Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9477280Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:23:47.9477528Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9477533Z 
2025-01-10T13:23:47.9477615Z     @wraps(func)
2025-01-10T13:23:47.9477697Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9477791Z         with self._recreate_cm():
2025-01-10T13:23:47.9477879Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9477969Z E           AssertionError: 
2025-01-10T13:23:47.9478192Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9478275Z E           
2025-01-10T13:23:47.9478384Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:23:47.9478525Z E           Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:23:47.9478652Z E           Max relative difference among violations: 8.35741234
2025-01-10T13:23:47.9478763Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9478855Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9478944Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9479058Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9479144Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:47.9479238Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:47.9479243Z 
2025-01-10T13:23:47.9479443Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9479671Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-01-10T13:23:47.9479676Z 
2025-01-10T13:23:47.9479993Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef61949e50>
2025-01-10T13:23:47.9480188Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5666cb30>
2025-01-10T13:23:47.9480370Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-01-10T13:23:47.9480375Z 
2025-01-10T13:23:47.9480487Z     def test_spectrum(self, simulation, request):
2025-01-10T13:23:47.9480599Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9480791Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:23:47.9480954Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:23:47.9481058Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9481188Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:23:47.9481193Z 
2025-01-10T13:23:47.9481325Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:23:47.9481440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9481772Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9481867Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9481981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9481984Z 
2025-01-10T13:23:47.9482447Z args = (<function assert_allclose.<locals>.compare at 0x7fef3da92700>, array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39,...), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T13:23:47.9482555Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9482805Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9482897Z 
2025-01-10T13:23:47.9482981Z     @wraps(func)
2025-01-10T13:23:47.9483209Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9483297Z         with self._recreate_cm():
2025-01-10T13:23:47.9483391Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9483477Z E           AssertionError: 
2025-01-10T13:23:47.9483588Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9483665Z E           
2025-01-10T13:23:47.9483775Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:23:47.9483912Z E           Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:23:47.9484049Z E           Max relative difference among violations: 5.83764686
2025-01-10T13:23:47.9484220Z E            ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9484313Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9484630Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:23:47.9484733Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9484738Z 
2025-01-10T13:23:47.9484942Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9485175Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-01-10T13:23:47.9485179Z 
2025-01-10T13:23:47.9485504Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7fef6194a450>
2025-01-10T13:23:47.9485704Z simulation = <tardis.simulation.base.Simulation object at 0x7fef5666cb30>
2025-01-10T13:23:47.9485915Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-01-10T13:23:47.9485920Z 
2025-01-10T13:23:47.9486058Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:23:47.9486171Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9486369Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:23:47.9486532Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:23:47.9486642Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:23:47.9486761Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:23:47.9486766Z 
2025-01-10T13:23:47.9486904Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:23:47.9487015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9487349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:23:47.9487440Z     np.testing.assert_allclose(
2025-01-10T13:23:47.9487553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9487557Z 
2025-01-10T13:23:47.9488024Z args = (<function assert_allclose.<locals>.compare at 0x7fef561200e0>, array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39,...), array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, ...,
2025-01-10T13:23:47.9488131Z        2.08252810e+31, 2.08867593e+31, 2.06027793e+31]))
2025-01-10T13:23:47.9488392Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9488397Z 
2025-01-10T13:23:47.9488474Z     @wraps(func)
2025-01-10T13:23:47.9488563Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9488650Z         with self._recreate_cm():
2025-01-10T13:23:47.9488745Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9488834Z E           AssertionError: 
2025-01-10T13:23:47.9488950Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9489023Z E           
2025-01-10T13:23:47.9489133Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:23:47.9489276Z E           Max absolute difference among violations: 5.0153284e+37
2025-01-10T13:23:47.9489409Z E           Max relative difference among violations: 5.96359613
2025-01-10T13:23:47.9489708Z E            ACTUAL: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-10T13:23:47.9489797Z E                  2.124305e+31, 2.101081e+31])
2025-01-10T13:23:47.9489968Z E            DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T13:23:47.9490056Z E                  2.088676e+31, 2.060278e+31])
2025-01-10T13:23:47.9490060Z 
2025-01-10T13:23:47.9490261Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9490412Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-10T13:23:47.9490417Z 
2025-01-10T13:23:47.9491110Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:23:47.9491488Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef0fef4110>
2025-01-10T13:23:47.9491842Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:23:47.9491847Z 
2025-01-10T13:23:47.9491944Z     def test_montecarlo_main_loop(
2025-01-10T13:23:47.9492036Z         montecarlo_main_loop_config,
2025-01-10T13:23:47.9492124Z         regression_data,
2025-01-10T13:23:47.9492204Z         atomic_dataset,
2025-01-10T13:23:47.9492282Z     ):
2025-01-10T13:23:47.9492390Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:23:47.9492545Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T13:23:47.9492644Z             montecarlo_main_loop_config,
2025-01-10T13:23:47.9492733Z             atom_data=atomic_dataset,
2025-01-10T13:23:47.9492833Z             virtual_packet_logging=False,
2025-01-10T13:23:47.9492920Z             legacy_mode_enabled=True,
2025-01-10T13:23:47.9493005Z         )
2025-01-10T13:23:47.9493245Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T13:23:47.9493361Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T13:23:47.9493432Z     
2025-01-10T13:23:47.9493565Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T13:23:47.9493661Z             montecarlo_main_loop_simulation
2025-01-10T13:23:47.9493740Z         )
2025-01-10T13:23:47.9493810Z     
2025-01-10T13:23:47.9493969Z         # Load compare data from refdata
2025-01-10T13:23:47.9494098Z     
2025-01-10T13:23:47.9494269Z         expected_nu = expected_hdf_store[
2025-01-10T13:23:47.9494459Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:23:47.9494539Z         ]
2025-01-10T13:23:47.9494647Z         expected_energy = expected_hdf_store[
2025-01-10T13:23:47.9494783Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:23:47.9494862Z         ]
2025-01-10T13:23:47.9494987Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:23:47.9495143Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:23:47.9495214Z         ]
2025-01-10T13:23:47.9495327Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:23:47.9495455Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:23:47.9495533Z         ]
2025-01-10T13:23:47.9495625Z         expected_hdf_store.close()
2025-01-10T13:23:47.9495836Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-01-10T13:23:47.9496008Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:23:47.9496152Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:23:47.9496248Z         actual_nu_bar_estimator = (
2025-01-10T13:23:47.9496394Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T13:23:47.9496472Z         )
2025-01-10T13:23:47.9496658Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T13:23:47.9496872Z     
2025-01-10T13:23:47.9496953Z         # Compare
2025-01-10T13:23:47.9497043Z >       npt.assert_allclose(
2025-01-10T13:23:47.9497200Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-01-10T13:23:47.9497277Z         )
2025-01-10T13:23:47.9497282Z 
2025-01-10T13:23:47.9497466Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-01-10T13:23:47.9497586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9497590Z 
2025-01-10T13:23:47.9498031Z args = (<function assert_allclose.<locals>.compare at 0x7fef5671f880>, array([9.40997647e+28, 8.06632443e+28, 7.20256533e+28,....88449508e+28, 3.76156653e+28, 3.64401717e+28,
2025-01-10T13:23:47.9498171Z        3.53517538e+28, 3.45355503e+28, 3.34541304e+28, 3.26838651e+28]))
2025-01-10T13:23:47.9498537Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9498545Z 
2025-01-10T13:23:47.9498625Z     @wraps(func)
2025-01-10T13:23:47.9498715Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9498802Z         with self._recreate_cm():
2025-01-10T13:23:47.9498896Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9498981Z E           AssertionError: 
2025-01-10T13:23:47.9499094Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T13:23:47.9499169Z E           
2025-01-10T13:23:47.9499273Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T13:23:47.9499416Z E           Max absolute difference among violations: 2.25821059e+25
2025-01-10T13:23:47.9499543Z E           Max relative difference among violations: 0.00054397
2025-01-10T13:23:47.9499708Z E            ACTUAL: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-10T13:23:47.9499829Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-10T13:23:47.9499965Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-10T13:23:47.9500128Z E            DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T13:23:47.9500254Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T13:23:47.9500377Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T13:23:47.9500382Z 
2025-01-10T13:23:47.9500588Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9500747Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:23:47.9501037Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:23:47.9501486Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:23:47.9501670Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9501929Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:23:47.9502102Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9502179Z 	
2025-01-10T13:23:47.9502275Z 	Simulation finished in 0 iterations 
2025-01-10T13:23:47.9502366Z 	Simulation took 0.00 s
2025-01-10T13:23:47.9502474Z  ([1mbase.py[0m:542)
2025-01-10T13:23:47.9502642Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9502713Z 	
2025-01-10T13:23:47.9502874Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:23:47.9503170Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9503248Z 	
2025-01-10T13:23:47.9503349Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:23:47.9503443Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:23:47.9503540Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9503652Z  ([1mbase.py[0m:657)
2025-01-10T13:23:47.9503811Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:23:47.9503940Z 
2025-01-10T13:23:47.9503948Z 
2025-01-10T13:23:47.9504193Z Packets:                                                                                   11144/? [00:11<00:00, 1009.80it/s][A
2025-01-10T13:23:47.9504198Z 
2025-01-10T13:23:47.9504430Z Packets:                                                                                   21722/? [00:11<00:00, 2348.71it/s][A
2025-01-10T13:23:47.9504434Z 
2025-01-10T13:23:47.9504659Z Packets:                                                                                   32493/? [00:11<00:00, 4237.73it/s][A
2025-01-10T13:23:47.9504663Z 
2025-01-10T13:23:47.9504880Z Packets:                                                                                   43376/? [00:11<00:00, 6849.74it/s][A
2025-01-10T13:23:47.9504885Z 
2025-01-10T13:23:47.9505115Z Packets:                                                                                   54210/? [00:11<00:00, 10345.77it/s][A
2025-01-10T13:23:47.9505119Z 
2025-01-10T13:23:47.9505449Z Packets:                                                                                   65216/? [00:11<00:00, 15022.48it/s][A
2025-01-10T13:23:47.9505454Z 
2025-01-10T13:23:47.9505684Z Packets:                                                                                   76091/? [00:11<00:00, 20901.25it/s][A
2025-01-10T13:23:47.9505688Z 
2025-01-10T13:23:47.9505913Z Packets:                                                                                   86999/? [00:11<00:00, 28158.11it/s][A
2025-01-10T13:23:47.9505918Z 
2025-01-10T13:23:47.9506145Z Packets:                                                                                   98001/? [00:11<00:00, 36769.59it/s][A
2025-01-10T13:23:47.9506302Z Iterations:                                                                                40/? [07:59<00:00,  5.69s/it]
2025-01-10T13:23:47.9506306Z 
2025-01-10T13:23:47.9506532Z Packets:                                                                                   104009/? [00:11<00:00, 36769.59it/s][A
2025-01-10T13:23:47.9506701Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:23:47.9507210Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:23:47.9507431Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:23:47.9507546Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:23:47.9507645Z 	Simulation finished in 0 iterations 
2025-01-10T13:23:47.9507734Z 	Simulation took 0.00 s
2025-01-10T13:23:47.9507738Z 
2025-01-10T13:23:47.9507846Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:23:47.9507943Z 	Starting iteration 1 of 1
2025-01-10T13:23:47.9508049Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:23:47.9508147Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:23:47.9508244Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:23:47.9508345Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9508514Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-10T13:23:47.9508518Z 
2025-01-10T13:23:47.9509194Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:23:47.9509472Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef4b4577d0>
2025-01-10T13:23:47.9509817Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:23:47.9509822Z 
2025-01-10T13:23:47.9509934Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-10T13:23:47.9510032Z         montecarlo_main_loop_config,
2025-01-10T13:23:47.9510114Z         regression_data,
2025-01-10T13:23:47.9510291Z         atomic_dataset,
2025-01-10T13:23:47.9510364Z     ):
2025-01-10T13:23:47.9510480Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:23:47.9510655Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-10T13:23:47.9510731Z     
2025-01-10T13:23:47.9510883Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T13:23:47.9510985Z             montecarlo_main_loop_config,
2025-01-10T13:23:47.9511076Z             atom_data=atomic_dataset,
2025-01-10T13:23:47.9511174Z             virtual_packet_logging=True,
2025-01-10T13:23:47.9511262Z             legacy_mode_enabled=True,
2025-01-10T13:23:47.9511340Z         )
2025-01-10T13:23:47.9511470Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T13:23:47.9511587Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T13:23:47.9511657Z     
2025-01-10T13:23:47.9511800Z         transport = montecarlo_main_loop_simulation.transport
2025-01-10T13:23:47.9511879Z     
2025-01-10T13:23:47.9512183Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-01-10T13:23:47.9512326Z     
2025-01-10T13:23:47.9512564Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T13:23:47.9512738Z             montecarlo_main_loop_simulation
2025-01-10T13:23:47.9512814Z         )
2025-01-10T13:23:47.9512889Z     
2025-01-10T13:23:47.9512986Z         expected_nu = expected_hdf_store[
2025-01-10T13:23:47.9513300Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:23:47.9513376Z         ]
2025-01-10T13:23:47.9513488Z         expected_energy = expected_hdf_store[
2025-01-10T13:23:47.9513629Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:23:47.9513706Z         ]
2025-01-10T13:23:47.9513830Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:23:47.9513981Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:23:47.9514057Z         ]
2025-01-10T13:23:47.9514179Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:23:47.9514314Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:23:47.9514385Z         ]
2025-01-10T13:23:47.9514508Z         expected_vpacket_log_nus = expected_hdf_store[
2025-01-10T13:23:47.9514648Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-01-10T13:23:47.9514724Z         ]
2025-01-10T13:23:47.9514849Z         expected_vpacket_log_energies = expected_hdf_store[
2025-01-10T13:23:47.9515011Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-01-10T13:23:47.9515082Z         ]
2025-01-10T13:23:47.9515158Z     
2025-01-10T13:23:47.9515271Z         transport_state = transport.transport_state
2025-01-10T13:23:47.9515347Z     
2025-01-10T13:23:47.9515520Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:23:47.9515675Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:23:47.9515832Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-01-10T13:23:47.9515953Z         actual_j_estimator = transport_state.j_estimator
2025-01-10T13:23:47.9516114Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-01-10T13:23:47.9516291Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-01-10T13:23:47.9516368Z     
2025-01-10T13:23:47.9516460Z         expected_hdf_store.close()
2025-01-10T13:23:47.9516540Z         # Compare
2025-01-10T13:23:47.9516632Z >       npt.assert_allclose(
2025-01-10T13:23:47.9516727Z             actual_nu_bar_estimator,
2025-01-10T13:23:47.9516817Z             expected_nu_bar_estimator,
2025-01-10T13:23:47.9516904Z             rtol=1e-12,
2025-01-10T13:23:47.9516982Z             atol=1e-15,
2025-01-10T13:23:47.9517059Z         )
2025-01-10T13:23:47.9517064Z 
2025-01-10T13:23:47.9517257Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-01-10T13:23:47.9517379Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9517520Z 
2025-01-10T13:23:47.9517966Z args = (<function assert_allclose.<locals>.compare at 0x7fef3d820c20>, array([9.39540882e+28, 8.06337668e+28, 7.18835599e+28,....86491193e+28, 3.76603462e+28, 3.65184134e+28,
2025-01-10T13:23:47.9518108Z        3.55625311e+28, 3.45809153e+28, 3.35093337e+28, 3.25549805e+28]))
2025-01-10T13:23:47.9518387Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'strict': False, ...}
2025-01-10T13:23:47.9518392Z 
2025-01-10T13:23:47.9518469Z     @wraps(func)
2025-01-10T13:23:47.9518560Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9518648Z         with self._recreate_cm():
2025-01-10T13:23:47.9518743Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9518834Z E           AssertionError: 
2025-01-10T13:23:47.9518954Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T13:23:47.9519032Z E           
2025-01-10T13:23:47.9519262Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T13:23:47.9519409Z E           Max absolute difference among violations: 1.93283629e+25
2025-01-10T13:23:47.9519539Z E           Max relative difference among violations: 0.00029157
2025-01-10T13:23:47.9519704Z E            ACTUAL: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-10T13:23:47.9519825Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-10T13:23:47.9519954Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-10T13:23:47.9520118Z E            DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T13:23:47.9520240Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T13:23:47.9520367Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T13:23:47.9520371Z 
2025-01-10T13:23:47.9520576Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9520744Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:23:47.9521022Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:23:47.9521472Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:23:47.9521652Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9521870Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:23:47.9522037Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9522113Z 	
2025-01-10T13:23:47.9522210Z 	Simulation finished in 0 iterations 
2025-01-10T13:23:47.9522299Z 	Simulation took 0.00 s
2025-01-10T13:23:47.9522413Z  ([1mbase.py[0m:542)
2025-01-10T13:23:47.9522580Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9522654Z 	
2025-01-10T13:23:47.9522810Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:23:47.9522979Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9523187Z 	
2025-01-10T13:23:47.9523290Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T13:23:47.9523383Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T13:23:47.9523481Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9523594Z  ([1mbase.py[0m:657)
2025-01-10T13:23:47.9523754Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:23:47.9523758Z 
2025-01-10T13:23:47.9523761Z 
2025-01-10T13:23:47.9524000Z Packets:                                                                                   108915/? [00:14<00:00, 10313.35it/s][A
2025-01-10T13:23:47.9524010Z 
2025-01-10T13:23:47.9524237Z Packets:                                                                                   116541/? [00:14<00:00, 12376.48it/s][A
2025-01-10T13:23:47.9524242Z 
2025-01-10T13:23:47.9524474Z Packets:                                                                                   122903/? [00:14<00:00, 14416.83it/s][A
2025-01-10T13:23:47.9524600Z 
2025-01-10T13:23:47.9524832Z Packets:                                                                                   128388/? [00:15<00:00, 16487.46it/s][A
2025-01-10T13:23:47.9524837Z 
2025-01-10T13:23:47.9525065Z Packets:                                                                                   133277/? [00:15<00:00, 18562.22it/s][A
2025-01-10T13:23:47.9525070Z 
2025-01-10T13:23:47.9525298Z Packets:                                                                                   137736/? [00:15<00:00, 20674.55it/s][A
2025-01-10T13:23:47.9525302Z 
2025-01-10T13:23:47.9525520Z Packets:                                                                                   141907/? [00:15<00:00, 22786.90it/s][A
2025-01-10T13:23:47.9525525Z 
2025-01-10T13:23:47.9525753Z Packets:                                                                                   145881/? [00:15<00:00, 24829.64it/s][A
2025-01-10T13:23:47.9525886Z 
2025-01-10T13:23:47.9526118Z Packets:                                                                                   149716/? [00:15<00:00, 26780.25it/s][A
2025-01-10T13:23:47.9526128Z 
2025-01-10T13:23:47.9526349Z Packets:                                                                                   153462/? [00:15<00:00, 28479.97it/s][A
2025-01-10T13:23:47.9526353Z 
2025-01-10T13:23:47.9526580Z Packets:                                                                                   157134/? [00:15<00:00, 29892.09it/s][A
2025-01-10T13:23:47.9526584Z 
2025-01-10T13:23:47.9526805Z Packets:                                                                                   160746/? [00:16<00:00, 31110.83it/s][A
2025-01-10T13:23:47.9526808Z 
2025-01-10T13:23:47.9527033Z Packets:                                                                                   164324/? [00:16<00:00, 32105.29it/s][A
2025-01-10T13:23:47.9527037Z 
2025-01-10T13:23:47.9527269Z Packets:                                                                                   167898/? [00:16<00:00, 33055.10it/s][A
2025-01-10T13:23:47.9527273Z 
2025-01-10T13:23:47.9527492Z Packets:                                                                                   171460/? [00:16<00:00, 33209.08it/s][A
2025-01-10T13:23:47.9527497Z 
2025-01-10T13:23:47.9527722Z Packets:                                                                                   174961/? [00:16<00:00, 33627.73it/s][A
2025-01-10T13:23:47.9527726Z 
2025-01-10T13:23:47.9527944Z Packets:                                                                                   178463/? [00:16<00:00, 34015.97it/s][A
2025-01-10T13:23:47.9527948Z 
2025-01-10T13:23:47.9528173Z Packets:                                                                                   181992/? [00:16<00:00, 34376.24it/s][A
2025-01-10T13:23:47.9528178Z 
2025-01-10T13:23:47.9528407Z Packets:                                                                                   185497/? [00:16<00:00, 34560.18it/s][A
2025-01-10T13:23:47.9528414Z 
2025-01-10T13:23:47.9528636Z Packets:                                                                                   189014/? [00:16<00:00, 34738.96it/s][A
2025-01-10T13:23:47.9528641Z 
2025-01-10T13:23:47.9528864Z Packets:                                                                                   192567/? [00:16<00:00, 34963.80it/s][A
2025-01-10T13:23:47.9528868Z 
2025-01-10T13:23:47.9529094Z Packets:                                                                                   196088/? [00:17<00:00, 34808.73it/s][A
2025-01-10T13:23:47.9529098Z 
2025-01-10T13:23:47.9529318Z Packets:                                                                                   199586/? [00:17<00:00, 34693.21it/s][A
2025-01-10T13:23:47.9529323Z 
2025-01-10T13:23:47.9529548Z Packets:                                                                                   203108/? [00:17<00:00, 34847.72it/s][A
2025-01-10T13:23:47.9529788Z Iterations:                                                                                41/? [08:05<00:00,  5.62s/it]
2025-01-10T13:23:47.9529793Z 
2025-01-10T13:23:47.9530022Z Packets:                                                                                   204009/? [00:17<00:00, 34847.72it/s][A
2025-01-10T13:23:47.9530178Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:23:47.9530682Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:23:47.9530911Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:23:47.9531026Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:23:47.9531131Z 	Simulation finished in 0 iterations 
2025-01-10T13:23:47.9531216Z 	Simulation took 0.00 s
2025-01-10T13:23:47.9531221Z 
2025-01-10T13:23:47.9531406Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:23:47.9531502Z 	Starting iteration 1 of 1
2025-01-10T13:23:47.9531611Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:23:47.9531704Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T13:23:47.9531803Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T13:23:47.9531898Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9532056Z __________________________ test_boundary_interactions __________________________
2025-01-10T13:23:47.9532061Z 
2025-01-10T13:23:47.9532845Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7fef6bf74ef0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7fef535c1de0>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7fef535c1c00>])
2025-01-10T13:23:47.9533235Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef59078e30>
2025-01-10T13:23:47.9533241Z 
2025-01-10T13:23:47.9533418Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-01-10T13:23:47.9533522Z         no_of_packets = len(rpacket_tracker)
2025-01-10T13:23:47.9533597Z     
2025-01-10T13:23:47.9533695Z         # Hard coding the number of columns
2025-01-10T13:23:47.9533852Z         # Based on the largest size of boundary_interaction array (60)
2025-01-10T13:23:47.9533965Z         obtained_boundary_interaction = np.full(
2025-01-10T13:23:47.9534052Z             (no_of_packets, 64),
2025-01-10T13:23:47.9534131Z             [-1],
2025-01-10T13:23:47.9534269Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-01-10T13:23:47.9534346Z         )
2025-01-10T13:23:47.9534416Z     
2025-01-10T13:23:47.9534536Z         for i, tracker in enumerate(rpacket_tracker):
2025-01-10T13:23:47.9534635Z             obtained_boundary_interaction[
2025-01-10T13:23:47.9534752Z                 i, : tracker.boundary_interaction.size
2025-01-10T13:23:47.9534850Z             ] = tracker.boundary_interaction
2025-01-10T13:23:47.9534927Z     
2025-01-10T13:23:47.9535095Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-01-10T13:23:47.9535198Z             obtained_boundary_interaction
2025-01-10T13:23:47.9535271Z         )
2025-01-10T13:23:47.9535365Z >       npt.assert_array_equal(
2025-01-10T13:23:47.9535533Z             obtained_boundary_interaction, expected_boundary_interaction
2025-01-10T13:23:47.9535606Z         )
2025-01-10T13:23:47.9535610Z 
2025-01-10T13:23:47.9535790Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-01-10T13:23:47.9535911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9536190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/numpy/_utils/__init__.py:85: in wrapper
2025-01-10T13:23:47.9536277Z     return fun(*args, **kwargs)
2025-01-10T13:23:47.9536396Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9536400Z 
2025-01-10T13:23:47.9536619Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:23:47.9536863Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-01-10T13:23:47.9537140Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-01-10T13:23:47.9537772Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-01-10T13:23:47.9537782Z 
2025-01-10T13:23:47.9537947Z     @wraps(func)
2025-01-10T13:23:47.9538158Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9538340Z         with self._recreate_cm():
2025-01-10T13:23:47.9538519Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9538640Z E           AssertionError: 
2025-01-10T13:23:47.9538812Z E           Arrays are not equal
2025-01-10T13:23:47.9538918Z E           
2025-01-10T13:23:47.9539127Z E           Mismatched elements: 11291 / 256000 (4.41%)
2025-01-10T13:23:47.9539340Z E            ACTUAL: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:23:47.9539658Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:23:47.9539847Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:23:47.9540041Z E            DESIRED: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:23:47.9540231Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:23:47.9540385Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:23:47.9540390Z 
2025-01-10T13:23:47.9540684Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9540880Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-10T13:23:47.9540885Z 
2025-01-10T13:23:47.9541632Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:23:47.9542007Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7fef2fc847d0>
2025-01-10T13:23:47.9542404Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:23:47.9549917Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7fef2fc868d0>
2025-01-10T13:23:47.9549934Z 
2025-01-10T13:23:47.9550078Z     def test_montecarlo_main_loop_weighted(
2025-01-10T13:23:47.9550182Z         montecarlo_main_loop_config,
2025-01-10T13:23:47.9550265Z         regression_data,
2025-01-10T13:23:47.9550351Z         atomic_dataset,
2025-01-10T13:23:47.9550452Z         simple_weighted_packet_source,
2025-01-10T13:23:47.9550530Z     ):
2025-01-10T13:23:47.9550645Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:23:47.9550841Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-10T13:23:47.9550945Z             montecarlo_main_loop_config,
2025-01-10T13:23:47.9551042Z             atom_data=atomic_dataset,
2025-01-10T13:23:47.9551138Z             virtual_packet_logging=False,
2025-01-10T13:23:47.9551233Z             legacy_mode_enabled=True,
2025-01-10T13:23:47.9551311Z         )
2025-01-10T13:23:47.9551477Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-10T13:23:47.9551579Z             simple_weighted_packet_source
2025-01-10T13:23:47.9551650Z         )
2025-01-10T13:23:47.9551806Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-10T13:23:47.9551940Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-01-10T13:23:47.9552015Z     
2025-01-10T13:23:47.9552126Z         # Get the montecarlo simple regression data
2025-01-10T13:23:47.9552217Z         regression_data_dir = (
2025-01-10T13:23:47.9552398Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-01-10T13:23:47.9552759Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-01-10T13:23:47.9552830Z         )
2025-01-10T13:23:47.9552996Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-01-10T13:23:47.9553246Z     
2025-01-10T13:23:47.9553352Z         # Load compare data from refdata
2025-01-10T13:23:47.9553426Z     
2025-01-10T13:23:47.9553520Z         expected_nu = expected_hdf_store[
2025-01-10T13:23:47.9553653Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:23:47.9553724Z         ]
2025-01-10T13:23:47.9553828Z         expected_energy = expected_hdf_store[
2025-01-10T13:23:47.9553960Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:23:47.9554036Z         ]
2025-01-10T13:23:47.9554155Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:23:47.9554302Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:23:47.9554380Z         ]
2025-01-10T13:23:47.9554637Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:23:47.9554768Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:23:47.9554844Z         ]
2025-01-10T13:23:47.9554938Z         expected_hdf_store.close()
2025-01-10T13:23:47.9555028Z         transport_state = (
2025-01-10T13:23:47.9555215Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-01-10T13:23:47.9555286Z         )
2025-01-10T13:23:47.9555468Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:23:47.9555608Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:23:47.9555744Z         actual_nu_bar_estimator = (
2025-01-10T13:23:47.9556001Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T13:23:47.9556130Z         )
2025-01-10T13:23:47.9556418Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T13:23:47.9556500Z     
2025-01-10T13:23:47.9556580Z         # Compare
2025-01-10T13:23:47.9556675Z         npt.assert_allclose(
2025-01-10T13:23:47.9556832Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-01-10T13:23:47.9556907Z         )
2025-01-10T13:23:47.9557092Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-01-10T13:23:47.9557256Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-01-10T13:23:47.9557261Z 
2025-01-10T13:23:47.9557501Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-01-10T13:23:47.9557615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9557620Z 
2025-01-10T13:23:47.9558091Z args = (<function assert_allclose.<locals>.compare at 0x7fef3d9c5c60>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-01-10T13:23:47.9558206Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-01-10T13:23:47.9558472Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9558477Z 
2025-01-10T13:23:47.9558560Z     @wraps(func)
2025-01-10T13:23:47.9558646Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9558737Z         with self._recreate_cm():
2025-01-10T13:23:47.9558827Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9558917Z E           AssertionError: 
2025-01-10T13:23:47.9559026Z E           Not equal to tolerance rtol=0.01, atol=0
2025-01-10T13:23:47.9559107Z E           
2025-01-10T13:23:47.9559212Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-01-10T13:23:47.9559359Z E           Max absolute difference among violations: 2.00640487e-05
2025-01-10T13:23:47.9559489Z E           Max relative difference among violations: 2.11614526
2025-01-10T13:23:47.9559675Z E            ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:23:47.9559922Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T13:23:47.9560105Z E            DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:23:47.9560206Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T13:23:47.9560210Z 
2025-01-10T13:23:47.9560418Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9560581Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:23:47.9560897Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:23:47.9561345Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:23:47.9561534Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9561756Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:23:47.9562004Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9562087Z 	
2025-01-10T13:23:47.9562188Z 	Simulation finished in 0 iterations 
2025-01-10T13:23:47.9562283Z 	Simulation took 0.00 s
2025-01-10T13:23:47.9562399Z  ([1mbase.py[0m:542)
2025-01-10T13:23:47.9562569Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9562645Z 	
2025-01-10T13:23:47.9562804Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:23:47.9562973Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9563199Z 	
2025-01-10T13:23:47.9563306Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:23:47.9563399Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:23:47.9563496Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9563609Z  ([1mbase.py[0m:657)
2025-01-10T13:23:47.9563770Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:23:47.9563774Z 
2025-01-10T13:23:47.9563778Z 
2025-01-10T13:23:47.9564022Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-01-10T13:23:47.9564034Z 
2025-01-10T13:23:47.9564252Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-01-10T13:23:47.9564257Z 
2025-01-10T13:23:47.9564526Z Packets:   ████████▌                                                                       10640/100000 [00:00<00:00, 106394.27it/s][A
2025-01-10T13:23:47.9564531Z 
2025-01-10T13:23:47.9564789Z Packets:   █████████████████▏                                                              21470/100000 [00:00<00:00, 107513.06it/s][A
2025-01-10T13:23:47.9564794Z 
2025-01-10T13:23:47.9565063Z Packets:   █████████████████████████▊                                                      32256/100000 [00:00<00:00, 107670.59it/s][A
2025-01-10T13:23:47.9565067Z 
2025-01-10T13:23:47.9565353Z Packets:   ██████████████████████████████████▍                                             43111/100000 [00:00<00:00, 108014.24it/s][A
2025-01-10T13:23:47.9565365Z 
2025-01-10T13:23:47.9565643Z Packets:   ███████████████████████████████████████████▏                                    53985/100000 [00:00<00:00, 108275.33it/s][A
2025-01-10T13:23:47.9565648Z 
2025-01-10T13:23:47.9565948Z Packets:   ███████████████████████████████████████████████████▊                            64839/100000 [00:00<00:00, 108361.93it/s][A
2025-01-10T13:23:47.9565953Z 
2025-01-10T13:23:47.9566263Z Packets:   ████████████████████████████████████████████████████████████▌                   75734/100000 [00:00<00:00, 108552.18it/s][A
2025-01-10T13:23:47.9566272Z 
2025-01-10T13:23:47.9566586Z Packets:   █████████████████████████████████████████████████████████████████████▎          86691/100000 [00:00<00:00, 108874.65it/s][A
2025-01-10T13:23:47.9566590Z 
2025-01-10T13:23:47.9566912Z Packets:   ██████████████████████████████████████████████████████████████████████████████  97612/100000 [00:00<00:00, 108977.32it/s][A
2025-01-10T13:23:47.9567310Z Iterations:                                                                                45/? [08:55<00:00,  8.16s/it]
2025-01-10T13:23:47.9567315Z 
2025-01-10T13:23:47.9567669Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 108977.32it/s][A
2025-01-10T13:23:47.9567832Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:23:47.9568345Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:23:47.9568574Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:23:47.9568687Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:23:47.9568791Z 	Simulation finished in 0 iterations 
2025-01-10T13:23:47.9568875Z 	Simulation took 0.00 s
2025-01-10T13:23:47.9568880Z 
2025-01-10T13:23:47.9569006Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:23:47.9569095Z 	Starting iteration 1 of 1
2025-01-10T13:23:47.9569204Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:23:47.9569299Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:23:47.9569399Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:23:47.9569491Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:23:47.9569710Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-01-10T13:23:47.9569715Z 
2025-01-10T13:23:47.9569982Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170e960>
2025-01-10T13:23:47.9570264Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>
2025-01-10T13:23:47.9570535Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-01-10T13:23:47.9570618Z attribute = 'plot_data'
2025-01-10T13:23:47.9570622Z 
2025-01-10T13:23:47.9570728Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9570810Z         "attribute",
2025-01-10T13:23:47.9570885Z         [
2025-01-10T13:23:47.9570964Z             "plot_data",
2025-01-10T13:23:47.9571048Z             "plot_colors",
2025-01-10T13:23:47.9571129Z             "new_bin_edges",
2025-01-10T13:23:47.9571206Z         ],
2025-01-10T13:23:47.9571282Z     )
2025-01-10T13:23:47.9571373Z     def test_prepare_plot_data(
2025-01-10T13:23:47.9571451Z         self,
2025-01-10T13:23:47.9571543Z         plotter_prepare_plot_data,
2025-01-10T13:23:47.9571623Z         request,
2025-01-10T13:23:47.9571698Z         attribute,
2025-01-10T13:23:47.9571774Z     ):
2025-01-10T13:23:47.9571846Z         """
2025-01-10T13:23:47.9571991Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:23:47.9572062Z     
2025-01-10T13:23:47.9572476Z         Parameters:
2025-01-10T13:23:47.9572553Z         -----------
2025-01-10T13:23:47.9572736Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:23:47.9572932Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9573222Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:23:47.9573297Z         """
2025-01-10T13:23:47.9573411Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9573556Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:23:47.9573704Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:23:47.9573870Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:23:47.9574021Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:23:47.9574162Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:23:47.9574383Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:23:47.9574584Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:23:47.9574599Z 
2025-01-10T13:23:47.9575038Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:23:47.9575178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9575184Z 
2025-01-10T13:23:47.9575634Z args = (<function assert_allclose.<locals>.compare at 0x7fef34964b80>, array([11843.96225504, 11843.96225504, 11843.96225504,...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T13:23:47.9575776Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T13:23:47.9576040Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9576045Z 
2025-01-10T13:23:47.9576125Z     @wraps(func)
2025-01-10T13:23:47.9576217Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9576306Z         with self._recreate_cm():
2025-01-10T13:23:47.9576401Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9576487Z E           AssertionError: 
2025-01-10T13:23:47.9576614Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9576689Z E           
2025-01-10T13:23:47.9576789Z E           (shapes (515,), (508,) mismatch)
2025-01-10T13:23:47.9576954Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:23:47.9577072Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:23:47.9577202Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:23:47.9577359Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:23:47.9577482Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:23:47.9577603Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:23:47.9577608Z 
2025-01-10T13:23:47.9577818Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9577979Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9578245Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9578519Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9578670Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9578978Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9579189Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-01-10T13:23:47.9579194Z 
2025-01-10T13:23:47.9579461Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170ede0>
2025-01-10T13:23:47.9579743Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>
2025-01-10T13:23:47.9580015Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-01-10T13:23:47.9580241Z attribute = 'plot_data'
2025-01-10T13:23:47.9580246Z 
2025-01-10T13:23:47.9580339Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9580421Z         "attribute",
2025-01-10T13:23:47.9580496Z         [
2025-01-10T13:23:47.9580580Z             "plot_data",
2025-01-10T13:23:47.9580660Z             "plot_colors",
2025-01-10T13:23:47.9580746Z             "new_bin_edges",
2025-01-10T13:23:47.9580815Z         ],
2025-01-10T13:23:47.9580891Z     )
2025-01-10T13:23:47.9580980Z     def test_prepare_plot_data(
2025-01-10T13:23:47.9581057Z         self,
2025-01-10T13:23:47.9581147Z         plotter_prepare_plot_data,
2025-01-10T13:23:47.9581227Z         request,
2025-01-10T13:23:47.9581303Z         attribute,
2025-01-10T13:23:47.9581379Z     ):
2025-01-10T13:23:47.9581451Z         """
2025-01-10T13:23:47.9581595Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:23:47.9581666Z     
2025-01-10T13:23:47.9581750Z         Parameters:
2025-01-10T13:23:47.9581919Z         -----------
2025-01-10T13:23:47.9582105Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:23:47.9582208Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9582374Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:23:47.9582449Z         """
2025-01-10T13:23:47.9582557Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9582699Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:23:47.9582850Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:23:47.9583189Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:23:47.9583427Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:23:47.9583563Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:23:47.9583685Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:23:47.9583820Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:23:47.9583825Z 
2025-01-10T13:23:47.9583977Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:23:47.9584091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9584096Z 
2025-01-10T13:23:47.9584442Z args = (<function assert_allclose.<locals>.compare at 0x7fef5b747560>, array([11843.96225504, 11843.96225504, 11843.96225504,...47464 ,
2025-01-10T13:23:47.9584580Z        12229.96880815, 12113.40540961, 12605.43283975, 12605.43283975,
2025-01-10T13:23:47.9584667Z        11152.96259546, 11172.04481521]))
2025-01-10T13:23:47.9584921Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9584926Z 
2025-01-10T13:23:47.9585007Z     @wraps(func)
2025-01-10T13:23:47.9585100Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9585189Z         with self._recreate_cm():
2025-01-10T13:23:47.9585289Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9585377Z E           AssertionError: 
2025-01-10T13:23:47.9585491Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9585566Z E           
2025-01-10T13:23:47.9585665Z E           (shapes (560,), (558,) mismatch)
2025-01-10T13:23:47.9585821Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:23:47.9585950Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:23:47.9586073Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:23:47.9586236Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:23:47.9586352Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:23:47.9586478Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:23:47.9586482Z 
2025-01-10T13:23:47.9586846Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9587060Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-01-10T13:23:47.9587064Z 
2025-01-10T13:23:47.9587329Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170f020>
2025-01-10T13:23:47.9587608Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>
2025-01-10T13:23:47.9587882Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-01-10T13:23:47.9587965Z attribute = 'plot_data'
2025-01-10T13:23:47.9587970Z 
2025-01-10T13:23:47.9588067Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9588153Z         "attribute",
2025-01-10T13:23:47.9588224Z         [
2025-01-10T13:23:47.9588313Z             "plot_data",
2025-01-10T13:23:47.9588393Z             "plot_colors",
2025-01-10T13:23:47.9588480Z             "new_bin_edges",
2025-01-10T13:23:47.9588661Z         ],
2025-01-10T13:23:47.9588742Z     )
2025-01-10T13:23:47.9588839Z     def test_prepare_plot_data(
2025-01-10T13:23:47.9588914Z         self,
2025-01-10T13:23:47.9589008Z         plotter_prepare_plot_data,
2025-01-10T13:23:47.9589087Z         request,
2025-01-10T13:23:47.9589163Z         attribute,
2025-01-10T13:23:47.9589237Z     ):
2025-01-10T13:23:47.9589308Z         """
2025-01-10T13:23:47.9589453Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:23:47.9589524Z     
2025-01-10T13:23:47.9589611Z         Parameters:
2025-01-10T13:23:47.9589687Z         -----------
2025-01-10T13:23:47.9589869Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:23:47.9589969Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9590139Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:23:47.9590216Z         """
2025-01-10T13:23:47.9590327Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9590537Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:23:47.9590802Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:23:47.9591044Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:23:47.9591196Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:23:47.9591327Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:23:47.9591448Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:23:47.9591576Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:23:47.9591580Z 
2025-01-10T13:23:47.9591731Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:23:47.9591845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9591850Z 
2025-01-10T13:23:47.9592340Z args = (<function assert_allclose.<locals>.compare at 0x7fef4ccda700>, array([11202.14920452, 13552.38987987, 11630.95782059,...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T13:23:47.9592448Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T13:23:47.9592712Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9592717Z 
2025-01-10T13:23:47.9592798Z     @wraps(func)
2025-01-10T13:23:47.9592883Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9592976Z         with self._recreate_cm():
2025-01-10T13:23:47.9593225Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9593318Z E           AssertionError: 
2025-01-10T13:23:47.9593429Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9593508Z E           
2025-01-10T13:23:47.9593600Z E           (shapes (136,), (147,) mismatch)
2025-01-10T13:23:47.9593761Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:23:47.9594029Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:23:47.9594158Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:23:47.9594321Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:23:47.9594434Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:23:47.9594559Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:23:47.9594564Z 
2025-01-10T13:23:47.9594762Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9594979Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-01-10T13:23:47.9594983Z 
2025-01-10T13:23:47.9595245Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170f260>
2025-01-10T13:23:47.9595636Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>
2025-01-10T13:23:47.9595918Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-01-10T13:23:47.9596002Z attribute = 'plot_data'
2025-01-10T13:23:47.9596007Z 
2025-01-10T13:23:47.9596107Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9596184Z         "attribute",
2025-01-10T13:23:47.9596261Z         [
2025-01-10T13:23:47.9596340Z             "plot_data",
2025-01-10T13:23:47.9596424Z             "plot_colors",
2025-01-10T13:23:47.9596504Z             "new_bin_edges",
2025-01-10T13:23:47.9596579Z         ],
2025-01-10T13:23:47.9596651Z     )
2025-01-10T13:23:47.9596746Z     def test_prepare_plot_data(
2025-01-10T13:23:47.9596818Z         self,
2025-01-10T13:23:47.9596915Z         plotter_prepare_plot_data,
2025-01-10T13:23:47.9596989Z         request,
2025-01-10T13:23:47.9597069Z         attribute,
2025-01-10T13:23:47.9597140Z     ):
2025-01-10T13:23:47.9597216Z         """
2025-01-10T13:23:47.9597356Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:23:47.9597436Z     
2025-01-10T13:23:47.9597517Z         Parameters:
2025-01-10T13:23:47.9597593Z         -----------
2025-01-10T13:23:47.9597773Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:23:47.9597871Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9598037Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:23:47.9598108Z         """
2025-01-10T13:23:47.9598222Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9598361Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:23:47.9598513Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:23:47.9598672Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:23:47.9598822Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:23:47.9598950Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:23:47.9599080Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:23:47.9599199Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:23:47.9599205Z 
2025-01-10T13:23:47.9599348Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:23:47.9599463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9599467Z 
2025-01-10T13:23:47.9599937Z args = (<function assert_allclose.<locals>.compare at 0x7fef4ccd99e0>, array([11202.14920452, 13552.38987987, 11630.95782059,...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T13:23:47.9600041Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T13:23:47.9600295Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9600303Z 
2025-01-10T13:23:47.9600380Z     @wraps(func)
2025-01-10T13:23:47.9600587Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9600676Z         with self._recreate_cm():
2025-01-10T13:23:47.9600768Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9600853Z E           AssertionError: 
2025-01-10T13:23:47.9600968Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9601040Z E           
2025-01-10T13:23:47.9601136Z E           (shapes (153,), (159,) mismatch)
2025-01-10T13:23:47.9601293Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:23:47.9601414Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:23:47.9601536Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:23:47.9601697Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:23:47.9601842Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:23:47.9602072Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:23:47.9602080Z 
2025-01-10T13:23:47.9602286Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9602496Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-01-10T13:23:47.9602501Z 
2025-01-10T13:23:47.9602764Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170f4d0>
2025-01-10T13:23:47.9603145Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>
2025-01-10T13:23:47.9603422Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-01-10T13:23:47.9603506Z attribute = 'plot_data'
2025-01-10T13:23:47.9603511Z 
2025-01-10T13:23:47.9603609Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9603691Z         "attribute",
2025-01-10T13:23:47.9603761Z         [
2025-01-10T13:23:47.9603846Z             "plot_data",
2025-01-10T13:23:47.9603932Z             "plot_colors",
2025-01-10T13:23:47.9604021Z             "new_bin_edges",
2025-01-10T13:23:47.9604092Z         ],
2025-01-10T13:23:47.9604167Z     )
2025-01-10T13:23:47.9604256Z     def test_prepare_plot_data(
2025-01-10T13:23:47.9604337Z         self,
2025-01-10T13:23:47.9604427Z         plotter_prepare_plot_data,
2025-01-10T13:23:47.9604504Z         request,
2025-01-10T13:23:47.9604578Z         attribute,
2025-01-10T13:23:47.9604654Z     ):
2025-01-10T13:23:47.9604726Z         """
2025-01-10T13:23:47.9604867Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:23:47.9604936Z     
2025-01-10T13:23:47.9605018Z         Parameters:
2025-01-10T13:23:47.9605094Z         -----------
2025-01-10T13:23:47.9605277Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:23:47.9605382Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9605545Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:23:47.9605630Z         """
2025-01-10T13:23:47.9605739Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9605883Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:23:47.9606030Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:23:47.9606196Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:23:47.9606344Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:23:47.9606472Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:23:47.9606593Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:23:47.9606716Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:23:47.9606721Z 
2025-01-10T13:23:47.9606871Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:23:47.9606985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9607115Z 
2025-01-10T13:23:47.9607563Z args = (<function assert_allclose.<locals>.compare at 0x7fef4ccda020>, array([11843.96225504, 11843.96225504, 11843.96225504,...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T13:23:47.9607701Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T13:23:47.9607960Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9607965Z 
2025-01-10T13:23:47.9608040Z     @wraps(func)
2025-01-10T13:23:47.9608129Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9608220Z         with self._recreate_cm():
2025-01-10T13:23:47.9608314Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9608403Z E           AssertionError: 
2025-01-10T13:23:47.9608514Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9608590Z E           
2025-01-10T13:23:47.9608685Z E           (shapes (515,), (508,) mismatch)
2025-01-10T13:23:47.9608952Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:23:47.9609075Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:23:47.9609205Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:23:47.9609362Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:23:47.9609483Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:23:47.9609604Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:23:47.9609608Z 
2025-01-10T13:23:47.9609814Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9609975Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9610232Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9610489Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9610643Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9610948Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9611157Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-01-10T13:23:47.9611162Z 
2025-01-10T13:23:47.9611425Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170f710>
2025-01-10T13:23:47.9611709Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>
2025-01-10T13:23:47.9611975Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-01-10T13:23:47.9612064Z attribute = 'plot_data'
2025-01-10T13:23:47.9612068Z 
2025-01-10T13:23:47.9612158Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9612243Z         "attribute",
2025-01-10T13:23:47.9612317Z         [
2025-01-10T13:23:47.9612401Z             "plot_data",
2025-01-10T13:23:47.9612481Z             "plot_colors",
2025-01-10T13:23:47.9612565Z             "new_bin_edges",
2025-01-10T13:23:47.9612637Z         ],
2025-01-10T13:23:47.9612713Z     )
2025-01-10T13:23:47.9612800Z     def test_prepare_plot_data(
2025-01-10T13:23:47.9612877Z         self,
2025-01-10T13:23:47.9612968Z         plotter_prepare_plot_data,
2025-01-10T13:23:47.9613165Z         request,
2025-01-10T13:23:47.9613240Z         attribute,
2025-01-10T13:23:47.9613317Z     ):
2025-01-10T13:23:47.9613396Z         """
2025-01-10T13:23:47.9613531Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:23:47.9613605Z     
2025-01-10T13:23:47.9613682Z         Parameters:
2025-01-10T13:23:47.9613760Z         -----------
2025-01-10T13:23:47.9613935Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:23:47.9614037Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9614328Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:23:47.9614404Z         """
2025-01-10T13:23:47.9614512Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9614653Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:23:47.9614800Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:23:47.9614965Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:23:47.9615112Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:23:47.9615241Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:23:47.9615366Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:23:47.9615487Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:23:47.9615491Z 
2025-01-10T13:23:47.9615639Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:23:47.9615861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9615866Z 
2025-01-10T13:23:47.9616342Z args = (<function assert_allclose.<locals>.compare at 0x7fef4ccd8220>, array([12467.89648692, 12467.89648692, 12357.74827994,...), array([13692.75973672, 11362.93720064, 12466.53861691, ...,
2025-01-10T13:23:47.9616442Z        12605.43283975, 11152.96259546, 11172.04481521]))
2025-01-10T13:23:47.9616698Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9616703Z 
2025-01-10T13:23:47.9616779Z     @wraps(func)
2025-01-10T13:23:47.9616861Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9616954Z         with self._recreate_cm():
2025-01-10T13:23:47.9617043Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9617133Z E           AssertionError: 
2025-01-10T13:23:47.9617241Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9617324Z E           
2025-01-10T13:23:47.9617418Z E           (shapes (1481,), (1466,) mismatch)
2025-01-10T13:23:47.9617591Z E            ACTUAL: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-10T13:23:47.9617679Z E                  11398.237865, 11111.204868])
2025-01-10T13:23:47.9617852Z E            DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T13:23:47.9617938Z E                  11152.962595, 11172.044815])
2025-01-10T13:23:47.9617947Z 
2025-01-10T13:23:47.9618145Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9618300Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9618533Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9618875Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9619031Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9619390Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9619600Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-01-10T13:23:47.9619609Z 
2025-01-10T13:23:47.9619871Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170f950>
2025-01-10T13:23:47.9620152Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>
2025-01-10T13:23:47.9620419Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-01-10T13:23:47.9620506Z attribute = 'plot_data'
2025-01-10T13:23:47.9620511Z 
2025-01-10T13:23:47.9620602Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9620682Z         "attribute",
2025-01-10T13:23:47.9620847Z         [
2025-01-10T13:23:47.9620931Z             "plot_data",
2025-01-10T13:23:47.9621011Z             "plot_colors",
2025-01-10T13:23:47.9621096Z             "new_bin_edges",
2025-01-10T13:23:47.9621168Z         ],
2025-01-10T13:23:47.9621244Z     )
2025-01-10T13:23:47.9621332Z     def test_prepare_plot_data(
2025-01-10T13:23:47.9621410Z         self,
2025-01-10T13:23:47.9621505Z         plotter_prepare_plot_data,
2025-01-10T13:23:47.9621581Z         request,
2025-01-10T13:23:47.9621660Z         attribute,
2025-01-10T13:23:47.9621730Z     ):
2025-01-10T13:23:47.9621806Z         """
2025-01-10T13:23:47.9621941Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:23:47.9622015Z     
2025-01-10T13:23:47.9622091Z         Parameters:
2025-01-10T13:23:47.9622171Z         -----------
2025-01-10T13:23:47.9622348Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:23:47.9622450Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9622698Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:23:47.9622778Z         """
2025-01-10T13:23:47.9622883Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9623124Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:23:47.9623275Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:23:47.9623439Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:23:47.9623593Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:23:47.9623716Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:23:47.9623840Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:23:47.9623958Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:23:47.9623962Z 
2025-01-10T13:23:47.9624110Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:23:47.9624229Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9624233Z 
2025-01-10T13:23:47.9624712Z args = (<function assert_allclose.<locals>.compare at 0x7fef33f5d4e0>, array([11202.14920452, 13552.38987987, 11630.95782059,...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T13:23:47.9624819Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T13:23:47.9625076Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9625080Z 
2025-01-10T13:23:47.9625163Z     @wraps(func)
2025-01-10T13:23:47.9625245Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9625336Z         with self._recreate_cm():
2025-01-10T13:23:47.9625424Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9625514Z E           AssertionError: 
2025-01-10T13:23:47.9625623Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9625702Z E           
2025-01-10T13:23:47.9625801Z E           (shapes (136,), (147,) mismatch)
2025-01-10T13:23:47.9625962Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:23:47.9626087Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:23:47.9626215Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:23:47.9626377Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:23:47.9626494Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:23:47.9626620Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:23:47.9626626Z 
2025-01-10T13:23:47.9626823Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9627038Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-01-10T13:23:47.9627042Z 
2025-01-10T13:23:47.9627448Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170fb30>
2025-01-10T13:23:47.9627731Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>
2025-01-10T13:23:47.9628001Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-01-10T13:23:47.9628087Z attribute = 'plot_data'
2025-01-10T13:23:47.9628091Z 
2025-01-10T13:23:47.9628187Z     @pytest.mark.parametrize(
2025-01-10T13:23:47.9628264Z         "attribute",
2025-01-10T13:23:47.9628339Z         [
2025-01-10T13:23:47.9628418Z             "plot_data",
2025-01-10T13:23:47.9628501Z             "plot_colors",
2025-01-10T13:23:47.9628580Z             "new_bin_edges",
2025-01-10T13:23:47.9628657Z         ],
2025-01-10T13:23:47.9628730Z     )
2025-01-10T13:23:47.9628824Z     def test_prepare_plot_data(
2025-01-10T13:23:47.9628897Z         self,
2025-01-10T13:23:47.9628992Z         plotter_prepare_plot_data,
2025-01-10T13:23:47.9629178Z         request,
2025-01-10T13:23:47.9629262Z         attribute,
2025-01-10T13:23:47.9629334Z     ):
2025-01-10T13:23:47.9629415Z         """
2025-01-10T13:23:47.9629557Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:23:47.9629628Z     
2025-01-10T13:23:47.9629710Z         Parameters:
2025-01-10T13:23:47.9629784Z         -----------
2025-01-10T13:23:47.9629965Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:23:47.9630063Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9630232Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:23:47.9630304Z         """
2025-01-10T13:23:47.9630415Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9630556Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:23:47.9630709Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:23:47.9630875Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:23:47.9631032Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:23:47.9631162Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:23:47.9631281Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:23:47.9631406Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:23:47.9631411Z 
2025-01-10T13:23:47.9631553Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:23:47.9631673Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9631677Z 
2025-01-10T13:23:47.9632149Z args = (<function assert_allclose.<locals>.compare at 0x7fef4ccd99e0>, array([12467.89648692, 12357.74827994, 11118.74739262,...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T13:23:47.9632256Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T13:23:47.9632525Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9632530Z 
2025-01-10T13:23:47.9632608Z     @wraps(func)
2025-01-10T13:23:47.9632699Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9632788Z         with self._recreate_cm():
2025-01-10T13:23:47.9632883Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9632969Z E           AssertionError: 
2025-01-10T13:23:47.9633186Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9633261Z E           
2025-01-10T13:23:47.9633361Z E           (shapes (381,), (379,) mismatch)
2025-01-10T13:23:47.9633515Z E            ACTUAL: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-10T13:23:47.9633639Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-10T13:23:47.9633763Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-10T13:23:47.9633929Z E            DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T13:23:47.9634174Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T13:23:47.9634295Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T13:23:47.9634299Z 
2025-01-10T13:23:47.9634503Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9634658Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9634900Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9635154Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9635308Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9635615Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9635935Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-01-10T13:23:47.9635940Z 
2025-01-10T13:23:47.9636216Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef6170e690>
2025-01-10T13:23:47.9636518Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef0e9679e0>
2025-01-10T13:23:47.9637006Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9637250Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-01-10T13:23:47.9637254Z 
2025-01-10T13:23:47.9637349Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9637509Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:23:47.9637586Z     ):
2025-01-10T13:23:47.9637702Z         """
2025-01-10T13:23:47.9637939Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9638082Z     
2025-01-10T13:23:47.9638307Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9638437Z     
2025-01-10T13:23:47.9638563Z         Parameters:
2025-01-10T13:23:47.9638709Z         -----------
2025-01-10T13:23:47.9638992Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:23:47.9639264Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:23:47.9639436Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9639564Z         """
2025-01-10T13:23:47.9639740Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:23:47.9639923Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9640210Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:23:47.9640479Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9640661Z             expected_values = expected.get(
2025-01-10T13:23:47.9640823Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9640974Z             ).values.flatten()
2025-01-10T13:23:47.9641213Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:23:47.9641338Z     
2025-01-10T13:23:47.9641574Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9641747Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9641893Z                     expected_values,
2025-01-10T13:23:47.9642042Z                     actual_values,
2025-01-10T13:23:47.9642177Z                     rtol=0.3,
2025-01-10T13:23:47.9642286Z                     atol=3,
2025-01-10T13:23:47.9642414Z                 )
2025-01-10T13:23:47.9642422Z 
2025-01-10T13:23:47.9642678Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:23:47.9642884Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9642893Z 
2025-01-10T13:23:47.9643765Z args = (<function assert_allclose.<locals>.compare at 0x7fef567f4ae0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9644110Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:23:47.9644552Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9644561Z 
2025-01-10T13:23:47.9644706Z     @wraps(func)
2025-01-10T13:23:47.9644860Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9645016Z         with self._recreate_cm():
2025-01-10T13:23:47.9645176Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9645304Z E           AssertionError: 
2025-01-10T13:23:47.9645423Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9645558Z E           
2025-01-10T13:23:47.9645731Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:47.9645941Z E           Max absolute difference among violations: 26
2025-01-10T13:23:47.9646362Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:23:47.9646642Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:47.9646814Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:47.9647085Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9647200Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:47.9647205Z 
2025-01-10T13:23:47.9647428Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9647589Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9647855Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9648286Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-01-10T13:23:47.9648459Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9648904Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T13:23:47.9649116Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-01-10T13:23:47.9649121Z 
2025-01-10T13:23:47.9649390Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e55e0>
2025-01-10T13:23:47.9649692Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef33fa21b0>
2025-01-10T13:23:47.9650177Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9650418Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-01-10T13:23:47.9650426Z 
2025-01-10T13:23:47.9650522Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9650683Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:23:47.9650763Z     ):
2025-01-10T13:23:47.9650838Z         """
2025-01-10T13:23:47.9650974Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9651046Z     
2025-01-10T13:23:47.9651182Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9651261Z     
2025-01-10T13:23:47.9651342Z         Parameters:
2025-01-10T13:23:47.9651423Z         -----------
2025-01-10T13:23:47.9651589Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:23:47.9651749Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:23:47.9651847Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9651926Z         """
2025-01-10T13:23:47.9652023Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:23:47.9652139Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9652431Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:23:47.9652584Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9652685Z             expected_values = expected.get(
2025-01-10T13:23:47.9652778Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9652864Z             ).values.flatten()
2025-01-10T13:23:47.9653002Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:23:47.9653239Z     
2025-01-10T13:23:47.9653376Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9653477Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9653561Z                     expected_values,
2025-01-10T13:23:47.9653651Z                     actual_values,
2025-01-10T13:23:47.9653730Z                     rtol=0.3,
2025-01-10T13:23:47.9653812Z                     atol=3,
2025-01-10T13:23:47.9653885Z                 )
2025-01-10T13:23:47.9653893Z 
2025-01-10T13:23:47.9654171Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:23:47.9654291Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9654295Z 
2025-01-10T13:23:47.9654702Z args = (<function assert_allclose.<locals>.compare at 0x7fef31a70680>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9654790Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:23:47.9655047Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9655051Z 
2025-01-10T13:23:47.9655133Z     @wraps(func)
2025-01-10T13:23:47.9655219Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9655311Z         with self._recreate_cm():
2025-01-10T13:23:47.9655449Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9655606Z E           AssertionError: 
2025-01-10T13:23:47.9655801Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9655913Z E           
2025-01-10T13:23:47.9656014Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:47.9656140Z E           Max absolute difference among violations: 26
2025-01-10T13:23:47.9656277Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:23:47.9656440Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:47.9656539Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:47.9656693Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9656786Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:47.9656791Z 
2025-01-10T13:23:47.9656999Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9657205Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-01-10T13:23:47.9657217Z 
2025-01-10T13:23:47.9657477Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e4260>
2025-01-10T13:23:47.9657781Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef33fa2270>
2025-01-10T13:23:47.9658274Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9658512Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-01-10T13:23:47.9658517Z 
2025-01-10T13:23:47.9658613Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9658773Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:23:47.9658851Z     ):
2025-01-10T13:23:47.9658923Z         """
2025-01-10T13:23:47.9659059Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9659301Z     
2025-01-10T13:23:47.9659440Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9659511Z     
2025-01-10T13:23:47.9659596Z         Parameters:
2025-01-10T13:23:47.9659680Z         -----------
2025-01-10T13:23:47.9659839Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:23:47.9659993Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:23:47.9660092Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9660172Z         """
2025-01-10T13:23:47.9660268Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:23:47.9660384Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9660548Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:23:47.9660704Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9660866Z             expected_values = expected.get(
2025-01-10T13:23:47.9661020Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9661255Z             ).values.flatten()
2025-01-10T13:23:47.9661401Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:23:47.9661478Z     
2025-01-10T13:23:47.9661611Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9661713Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9661798Z                     expected_values,
2025-01-10T13:23:47.9661889Z                     actual_values,
2025-01-10T13:23:47.9661969Z                     rtol=0.3,
2025-01-10T13:23:47.9662050Z                     atol=3,
2025-01-10T13:23:47.9662123Z                 )
2025-01-10T13:23:47.9662127Z 
2025-01-10T13:23:47.9662277Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:23:47.9662395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9662399Z 
2025-01-10T13:23:47.9662817Z args = (<function assert_allclose.<locals>.compare at 0x7fef30cbc4a0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:23:47.9662910Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-10T13:23:47.9663417Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9663428Z 
2025-01-10T13:23:47.9663525Z     @wraps(func)
2025-01-10T13:23:47.9663612Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9663707Z         with self._recreate_cm():
2025-01-10T13:23:47.9663797Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9663888Z E           AssertionError: 
2025-01-10T13:23:47.9663995Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9664074Z E           
2025-01-10T13:23:47.9664172Z E           Mismatched elements: 4 / 20 (20%)
2025-01-10T13:23:47.9664294Z E           Max absolute difference among violations: 24
2025-01-10T13:23:47.9664412Z E           Max relative difference among violations: 0.65
2025-01-10T13:23:47.9664585Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:23:47.9664682Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:23:47.9664843Z E            DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:23:47.9664939Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:23:47.9664943Z 
2025-01-10T13:23:47.9665149Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9665312Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9665575Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9665830Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9665982Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9666431Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9666634Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-01-10T13:23:47.9666639Z 
2025-01-10T13:23:47.9666899Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e4320>
2025-01-10T13:23:47.9667205Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef3bd15dc0>
2025-01-10T13:23:47.9667686Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9667997Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-01-10T13:23:47.9668003Z 
2025-01-10T13:23:47.9668156Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9668370Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:23:47.9668576Z     ):
2025-01-10T13:23:47.9668653Z         """
2025-01-10T13:23:47.9668796Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9668865Z     
2025-01-10T13:23:47.9669004Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9669075Z     
2025-01-10T13:23:47.9669161Z         Parameters:
2025-01-10T13:23:47.9669239Z         -----------
2025-01-10T13:23:47.9669404Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:23:47.9669553Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:23:47.9669654Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9669728Z         """
2025-01-10T13:23:47.9669830Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:23:47.9669940Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9670110Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:23:47.9670269Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9670368Z             expected_values = expected.get(
2025-01-10T13:23:47.9670462Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9670549Z             ).values.flatten()
2025-01-10T13:23:47.9670687Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:23:47.9670758Z     
2025-01-10T13:23:47.9670894Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9670990Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9671079Z                     expected_values,
2025-01-10T13:23:47.9671163Z                     actual_values,
2025-01-10T13:23:47.9671252Z                     rtol=0.3,
2025-01-10T13:23:47.9671329Z                     atol=3,
2025-01-10T13:23:47.9671407Z                 )
2025-01-10T13:23:47.9671411Z 
2025-01-10T13:23:47.9671565Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:23:47.9671686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9671690Z 
2025-01-10T13:23:47.9672250Z args = (<function assert_allclose.<locals>.compare at 0x7fef4caaa200>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9672344Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:23:47.9672605Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9672609Z 
2025-01-10T13:23:47.9672687Z     @wraps(func)
2025-01-10T13:23:47.9672777Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9672863Z         with self._recreate_cm():
2025-01-10T13:23:47.9672956Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9673174Z E           AssertionError: 
2025-01-10T13:23:47.9673282Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9673361Z E           
2025-01-10T13:23:47.9673648Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:47.9673772Z E           Max absolute difference among violations: 26
2025-01-10T13:23:47.9673902Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:23:47.9674062Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:47.9674153Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:47.9674313Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9674401Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:47.9674406Z 
2025-01-10T13:23:47.9674615Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9674779Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9675035Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9675504Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9675665Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9676022Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9676389Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _______
2025-01-10T13:23:47.9676396Z 
2025-01-10T13:23:47.9676672Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e44a0>
2025-01-10T13:23:47.9676977Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef4b5e1b20>
2025-01-10T13:23:47.9677463Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9677712Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl7]>>
2025-01-10T13:23:47.9677717Z 
2025-01-10T13:23:47.9677805Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9677968Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:23:47.9678040Z     ):
2025-01-10T13:23:47.9678117Z         """
2025-01-10T13:23:47.9678249Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9678324Z     
2025-01-10T13:23:47.9678451Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9678527Z     
2025-01-10T13:23:47.9678605Z         Parameters:
2025-01-10T13:23:47.9678688Z         -----------
2025-01-10T13:23:47.9678853Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:23:47.9679003Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:23:47.9679105Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9679184Z         """
2025-01-10T13:23:47.9679285Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:23:47.9679392Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9679559Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:23:47.9679705Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9679807Z             expected_values = expected.get(
2025-01-10T13:23:47.9679896Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9679986Z             ).values.flatten()
2025-01-10T13:23:47.9680117Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:23:47.9680196Z     
2025-01-10T13:23:47.9680332Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9680428Z                 np.testing.assert_allclose(
2025-01-10T13:23:47.9680517Z                     expected_values,
2025-01-10T13:23:47.9680599Z                     actual_values,
2025-01-10T13:23:47.9680787Z                     rtol=0.3,
2025-01-10T13:23:47.9680865Z                     atol=3,
2025-01-10T13:23:47.9680948Z                 )
2025-01-10T13:23:47.9681022Z             else:
2025-01-10T13:23:47.9681163Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T13:23:47.9681234Z     
2025-01-10T13:23:47.9681351Z         labels = expected["plot_data_hdf/scalars"]
2025-01-10T13:23:47.9681472Z         for index1, data in enumerate(fig.get_children()):
2025-01-10T13:23:47.9681578Z             if isinstance(data.get_label(), str):
2025-01-10T13:23:47.9681655Z                 assert (
2025-01-10T13:23:47.9681880Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-10T13:23:47.9682029Z                     == data.get_label()
2025-01-10T13:23:47.9682105Z                 )
2025-01-10T13:23:47.9682204Z             if isinstance(data, Line2D):
2025-01-10T13:23:47.9682301Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9682508Z                     data.get_xydata(),
2025-01-10T13:23:47.9682657Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-10T13:23:47.9682745Z                     rtol=0.3,
2025-01-10T13:23:47.9682821Z                     atol=3,
2025-01-10T13:23:47.9682897Z                 )
2025-01-10T13:23:47.9682902Z 
2025-01-10T13:23:47.9683206Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-10T13:23:47.9683337Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9683341Z 
2025-01-10T13:23:47.9683593Z args = (<function assert_allclose.<locals>.compare at 0x7fef5377dbc0>, array([[1.10e+04, 9.00e+00],
2025-01-10T13:23:47.9683686Z        [1.19e+04, 9.00e+0...,
2025-01-10T13:23:47.9683776Z        [1.82e+04, 0.00e+00],
2025-01-10T13:23:47.9683854Z        [1.91e+04, 0.00e+00],
2025-01-10T13:23:47.9683936Z        [1.91e+04, 0.00e+00],
2025-01-10T13:23:47.9684016Z        [2.00e+04, 0.00e+00]]))
2025-01-10T13:23:47.9684281Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9684286Z 
2025-01-10T13:23:47.9684367Z     @wraps(func)
2025-01-10T13:23:47.9684459Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9684546Z         with self._recreate_cm():
2025-01-10T13:23:47.9684644Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9684731Z E           AssertionError: 
2025-01-10T13:23:47.9684843Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9684918Z E           
2025-01-10T13:23:47.9685022Z E           Mismatched elements: 2 / 40 (5%)
2025-01-10T13:23:47.9685149Z E           Max absolute difference among violations: 4.
2025-01-10T13:23:47.9685279Z E           Max relative difference among violations: 1.33333333
2025-01-10T13:23:47.9685382Z E            ACTUAL: array([[1.10e+04, 9.00e+00],
2025-01-10T13:23:47.9685468Z E                  [1.19e+04, 9.00e+00],
2025-01-10T13:23:47.9685561Z E                  [1.19e+04, 5.00e+00],...
2025-01-10T13:23:47.9685666Z E            DESIRED: array([[1.10e+04, 1.10e+01],
2025-01-10T13:23:47.9685753Z E                  [1.19e+04, 1.10e+01],
2025-01-10T13:23:47.9685837Z E                  [1.19e+04, 5.00e+00],...
2025-01-10T13:23:47.9685841Z 
2025-01-10T13:23:47.9686050Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9686206Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9686457Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9686718Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9686903Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9687355Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9687564Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-01-10T13:23:47.9687715Z 
2025-01-10T13:23:47.9687991Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e5160>
2025-01-10T13:23:47.9688306Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef4cc56ab0>
2025-01-10T13:23:47.9688408Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9688559Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:23:47.9688699Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:23:47.9688906Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9689148Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-01-10T13:23:47.9689153Z 
2025-01-10T13:23:47.9689250Z     def test_generate_plot_ply(
2025-01-10T13:23:47.9689418Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9689603Z     ):
2025-01-10T13:23:47.9689678Z         """
2025-01-10T13:23:47.9689817Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9689887Z     
2025-01-10T13:23:47.9690023Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9690094Z     
2025-01-10T13:23:47.9690178Z         Parameters:
2025-01-10T13:23:47.9690254Z         ----------
2025-01-10T13:23:47.9690421Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:23:47.9690566Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:23:47.9690732Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9690870Z         """
2025-01-10T13:23:47.9690996Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9691112Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9691287Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9691369Z     
2025-01-10T13:23:47.9691520Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9691623Z             expected_values = expected.get(
2025-01-10T13:23:47.9691712Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9691804Z             ).values.flatten()
2025-01-10T13:23:47.9691944Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:23:47.9692021Z     
2025-01-10T13:23:47.9692154Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9692256Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9692348Z                     expected_values,
2025-01-10T13:23:47.9692431Z                     actual_values,
2025-01-10T13:23:47.9692517Z                     rtol=0.3,
2025-01-10T13:23:47.9692594Z                     atol=3,
2025-01-10T13:23:47.9692674Z                 )
2025-01-10T13:23:47.9692679Z 
2025-01-10T13:23:47.9692824Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:23:47.9692950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9692954Z 
2025-01-10T13:23:47.9693507Z args = (<function assert_allclose.<locals>.compare at 0x7fef4c9fe8e0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9693598Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:23:47.9693857Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9693862Z 
2025-01-10T13:23:47.9693939Z     @wraps(func)
2025-01-10T13:23:47.9694033Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9694121Z         with self._recreate_cm():
2025-01-10T13:23:47.9694215Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9694300Z E           AssertionError: 
2025-01-10T13:23:47.9694412Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9694624Z E           
2025-01-10T13:23:47.9694733Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:47.9694850Z E           Max absolute difference among violations: 26
2025-01-10T13:23:47.9694988Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:23:47.9695148Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:47.9695247Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:47.9695413Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9695504Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:47.9695510Z 
2025-01-10T13:23:47.9695852Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9696023Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9696277Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9696834Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-01-10T13:23:47.9696997Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9697425Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T13:23:47.9697631Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-01-10T13:23:47.9697636Z 
2025-01-10T13:23:47.9697902Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e5250>
2025-01-10T13:23:47.9698215Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef535febd0>
2025-01-10T13:23:47.9698320Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9698470Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:23:47.9698619Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:23:47.9698823Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9699069Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-01-10T13:23:47.9699075Z 
2025-01-10T13:23:47.9699171Z     def test_generate_plot_ply(
2025-01-10T13:23:47.9699338Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9699415Z     ):
2025-01-10T13:23:47.9699486Z         """
2025-01-10T13:23:47.9699621Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9699691Z     
2025-01-10T13:23:47.9699822Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9699892Z     
2025-01-10T13:23:47.9699977Z         Parameters:
2025-01-10T13:23:47.9700054Z         ----------
2025-01-10T13:23:47.9700220Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:23:47.9700362Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:23:47.9700464Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9700536Z         """
2025-01-10T13:23:47.9700636Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9700751Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9700921Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9700997Z     
2025-01-10T13:23:47.9701155Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9701325Z             expected_values = expected.get(
2025-01-10T13:23:47.9701471Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9701598Z             ).values.flatten()
2025-01-10T13:23:47.9701743Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:23:47.9701819Z     
2025-01-10T13:23:47.9701988Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9702205Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9702291Z                     expected_values,
2025-01-10T13:23:47.9702382Z                     actual_values,
2025-01-10T13:23:47.9702461Z                     rtol=0.3,
2025-01-10T13:23:47.9702543Z                     atol=3,
2025-01-10T13:23:47.9702623Z                 )
2025-01-10T13:23:47.9702628Z 
2025-01-10T13:23:47.9702774Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:23:47.9702893Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9702897Z 
2025-01-10T13:23:47.9703528Z args = (<function assert_allclose.<locals>.compare at 0x7fef4c947880>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9703623Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:23:47.9704005Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9704015Z 
2025-01-10T13:23:47.9704103Z     @wraps(func)
2025-01-10T13:23:47.9704187Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9704284Z         with self._recreate_cm():
2025-01-10T13:23:47.9704379Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9704466Z E           AssertionError: 
2025-01-10T13:23:47.9704577Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9704650Z E           
2025-01-10T13:23:47.9704753Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:47.9704872Z E           Max absolute difference among violations: 26
2025-01-10T13:23:47.9705009Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:23:47.9705165Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:47.9705262Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:47.9705427Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9705522Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:47.9705526Z 
2025-01-10T13:23:47.9705734Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9705936Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-01-10T13:23:47.9705940Z 
2025-01-10T13:23:47.9706206Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e56a0>
2025-01-10T13:23:47.9706516Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef53823200>
2025-01-10T13:23:47.9706619Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9706767Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:23:47.9706961Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:23:47.9707285Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9707540Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-01-10T13:23:47.9707545Z 
2025-01-10T13:23:47.9707641Z     def test_generate_plot_ply(
2025-01-10T13:23:47.9707811Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9707889Z     ):
2025-01-10T13:23:47.9707964Z         """
2025-01-10T13:23:47.9708099Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9708170Z     
2025-01-10T13:23:47.9708307Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9708380Z     
2025-01-10T13:23:47.9708468Z         Parameters:
2025-01-10T13:23:47.9708547Z         ----------
2025-01-10T13:23:47.9708714Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:23:47.9708854Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:23:47.9709113Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9709187Z         """
2025-01-10T13:23:47.9709289Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9709402Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9709574Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9709654Z     
2025-01-10T13:23:47.9709801Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9709905Z             expected_values = expected.get(
2025-01-10T13:23:47.9709997Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9710089Z             ).values.flatten()
2025-01-10T13:23:47.9710231Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:23:47.9710309Z     
2025-01-10T13:23:47.9710441Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9710544Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9710739Z                     expected_values,
2025-01-10T13:23:47.9710830Z                     actual_values,
2025-01-10T13:23:47.9710915Z                     rtol=0.3,
2025-01-10T13:23:47.9710992Z                     atol=3,
2025-01-10T13:23:47.9711071Z                 )
2025-01-10T13:23:47.9711075Z 
2025-01-10T13:23:47.9711220Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:23:47.9711339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9711343Z 
2025-01-10T13:23:47.9711750Z args = (<function assert_allclose.<locals>.compare at 0x7fef4c9ffba0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:23:47.9711837Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-10T13:23:47.9712087Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9712092Z 
2025-01-10T13:23:47.9712183Z     @wraps(func)
2025-01-10T13:23:47.9712275Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9712364Z         with self._recreate_cm():
2025-01-10T13:23:47.9712456Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9712577Z E           AssertionError: 
2025-01-10T13:23:47.9712774Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9712884Z E           
2025-01-10T13:23:47.9712993Z E           Mismatched elements: 4 / 20 (20%)
2025-01-10T13:23:47.9713261Z E           Max absolute difference among violations: 24
2025-01-10T13:23:47.9713442Z E           Max relative difference among violations: 0.65
2025-01-10T13:23:47.9713605Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:23:47.9713701Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:23:47.9713863Z E            DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:23:47.9713957Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:23:47.9713971Z 
2025-01-10T13:23:47.9714182Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9714337Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9714596Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9714849Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9715007Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9715309Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9715513Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-01-10T13:23:47.9715518Z 
2025-01-10T13:23:47.9715784Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e5760>
2025-01-10T13:23:47.9716277Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef338c82c0>
2025-01-10T13:23:47.9716384Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9716581Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:23:47.9716818Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:23:47.9717026Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9717273Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-01-10T13:23:47.9717278Z 
2025-01-10T13:23:47.9717369Z     def test_generate_plot_ply(
2025-01-10T13:23:47.9717540Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9717613Z     ):
2025-01-10T13:23:47.9717694Z         """
2025-01-10T13:23:47.9717831Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9717908Z     
2025-01-10T13:23:47.9718164Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9718240Z     
2025-01-10T13:23:47.9718326Z         Parameters:
2025-01-10T13:23:47.9718404Z         ----------
2025-01-10T13:23:47.9718569Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:23:47.9718707Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:23:47.9718810Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9718884Z         """
2025-01-10T13:23:47.9718989Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9719098Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9719277Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9719349Z     
2025-01-10T13:23:47.9719505Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9719610Z             expected_values = expected.get(
2025-01-10T13:23:47.9719707Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9719801Z             ).values.flatten()
2025-01-10T13:23:47.9719943Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:23:47.9720022Z     
2025-01-10T13:23:47.9720155Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9720257Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9720344Z                     expected_values,
2025-01-10T13:23:47.9720434Z                     actual_values,
2025-01-10T13:23:47.9720516Z                     rtol=0.3,
2025-01-10T13:23:47.9720602Z                     atol=3,
2025-01-10T13:23:47.9720677Z                 )
2025-01-10T13:23:47.9720681Z 
2025-01-10T13:23:47.9720834Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:23:47.9720949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9720961Z 
2025-01-10T13:23:47.9721363Z args = (<function assert_allclose.<locals>.compare at 0x7fef4c947420>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9721455Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:23:47.9721709Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9721714Z 
2025-01-10T13:23:47.9721799Z     @wraps(func)
2025-01-10T13:23:47.9721885Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9721980Z         with self._recreate_cm():
2025-01-10T13:23:47.9722070Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9722164Z E           AssertionError: 
2025-01-10T13:23:47.9722269Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9722384Z E           
2025-01-10T13:23:47.9722561Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:47.9722733Z E           Max absolute difference among violations: 26
2025-01-10T13:23:47.9722874Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:23:47.9723321Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:47.9723423Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:47.9723580Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:47.9723674Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:47.9723679Z 
2025-01-10T13:23:47.9723879Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9724037Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9724292Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9724630Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9724922Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9725292Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9725496Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _______
2025-01-10T13:23:47.9725500Z 
2025-01-10T13:23:47.9725760Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7fef617e5910>
2025-01-10T13:23:47.9726077Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7fef535509e0>
2025-01-10T13:23:47.9726175Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9726331Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:23:47.9726471Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:23:47.9726677Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7fef2f2ff920>)
2025-01-10T13:23:47.9726926Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply7]>>
2025-01-10T13:23:47.9726931Z 
2025-01-10T13:23:47.9727021Z     def test_generate_plot_ply(
2025-01-10T13:23:47.9727194Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9727266Z     ):
2025-01-10T13:23:47.9727345Z         """
2025-01-10T13:23:47.9727475Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:23:47.9727553Z     
2025-01-10T13:23:47.9727679Z         Compares generated plot data with regression data.
2025-01-10T13:23:47.9727757Z     
2025-01-10T13:23:47.9727845Z         Parameters:
2025-01-10T13:23:47.9727923Z         ----------
2025-01-10T13:23:47.9728134Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:23:47.9728385Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:23:47.9728510Z         request: Pytest's request fixture.
2025-01-10T13:23:47.9728593Z         """
2025-01-10T13:23:47.9728697Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9728805Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9728983Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9729053Z     
2025-01-10T13:23:47.9729209Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:23:47.9729309Z             expected_values = expected.get(
2025-01-10T13:23:47.9729405Z                 "plot_data_hdf/" + item
2025-01-10T13:23:47.9729491Z             ).values.flatten()
2025-01-10T13:23:47.9729637Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:23:47.9729715Z     
2025-01-10T13:23:47.9729849Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:23:47.9729953Z                 np.testing.assert_allclose(
2025-01-10T13:23:47.9730040Z                     expected_values,
2025-01-10T13:23:47.9730261Z                     actual_values,
2025-01-10T13:23:47.9730342Z                     rtol=0.3,
2025-01-10T13:23:47.9730425Z                     atol=3,
2025-01-10T13:23:47.9730498Z                 )
2025-01-10T13:23:47.9730578Z             else:
2025-01-10T13:23:47.9730716Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T13:23:47.9730826Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9730936Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9731029Z             if data.stackgroup:
2025-01-10T13:23:47.9731108Z                 assert (
2025-01-10T13:23:47.9731201Z                     data.stackgroup
2025-01-10T13:23:47.9731287Z                     == getattr(
2025-01-10T13:23:47.9731403Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9731512Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9731592Z                     ).decode()
2025-01-10T13:23:47.9731683Z                 )
2025-01-10T13:23:47.9731845Z             if data.name:
2025-01-10T13:23:47.9731935Z                 assert (
2025-01-10T13:23:47.9732013Z                     data.name
2025-01-10T13:23:47.9732097Z                     == getattr(
2025-01-10T13:23:47.9732206Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9732307Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9732386Z                     ).decode()
2025-01-10T13:23:47.9732472Z                 )
2025-01-10T13:23:47.9732571Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9732656Z                 data.x,
2025-01-10T13:23:47.9732769Z                 expected.get(group + "x").values.flatten(),
2025-01-10T13:23:47.9732858Z                 rtol=0.3,
2025-01-10T13:23:47.9732942Z                 atol=3,
2025-01-10T13:23:47.9733156Z             )
2025-01-10T13:23:47.9733262Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9733339Z                 data.y,
2025-01-10T13:23:47.9733463Z                 expected.get(group + "y").values.flatten(),
2025-01-10T13:23:47.9733542Z                 rtol=0.3,
2025-01-10T13:23:47.9733624Z                 atol=3,
2025-01-10T13:23:47.9733696Z             )
2025-01-10T13:23:47.9733700Z 
2025-01-10T13:23:47.9733852Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-10T13:23:47.9733969Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9733973Z 
2025-01-10T13:23:47.9734492Z args = (<function assert_allclose.<locals>.compare at 0x7fef4c9454e0>, array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]), array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9734636Z         0,  0,  0]))
2025-01-10T13:23:47.9735078Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:23:47.9735086Z 
2025-01-10T13:23:47.9735202Z     @wraps(func)
2025-01-10T13:23:47.9735535Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9735682Z         with self._recreate_cm():
2025-01-10T13:23:47.9735847Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9735970Z E           AssertionError: 
2025-01-10T13:23:47.9736133Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:47.9736360Z E           
2025-01-10T13:23:47.9736493Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:47.9736681Z E           Max absolute difference among violations: 4
2025-01-10T13:23:47.9736849Z E           Max relative difference among violations: 1.33333333
2025-01-10T13:23:47.9737052Z E            ACTUAL: array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T13:23:47.9737290Z E            DESIRED: array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:47.9737455Z E                   0,  0,  0])
2025-01-10T13:23:47.9737460Z 
2025-01-10T13:23:47.9748891Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9749383Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:23:47.9749690Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:23:47.9749958Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:23:47.9750124Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:23:47.9750443Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:23:47.9750677Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-10T13:23:47.9750683Z 
2025-01-10T13:23:47.9750952Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178cf50>
2025-01-10T13:23:47.9751273Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9751938Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef3c832de0>
2025-01-10T13:23:47.9752231Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-01-10T13:23:47.9752236Z 
2025-01-10T13:23:47.9752337Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9752412Z         self,
2025-01-10T13:23:47.9752514Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9752607Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9752691Z         request,
2025-01-10T13:23:47.9752763Z     ):
2025-01-10T13:23:47.9752881Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9753200Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9753298Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9753476Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9753570Z             plot_object = getattr(
2025-01-10T13:23:47.9753712Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9753786Z             )
2025-01-10T13:23:47.9753896Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9754058Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9754172Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9754270Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9754406Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9754481Z                 )
2025-01-10T13:23:47.9754485Z 
2025-01-10T13:23:47.9754645Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9754763Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9754767Z 
2025-01-10T13:23:47.9755246Z args = (<function assert_allclose.<locals>.compare at 0x7fef4b5b5620>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:23:47.9755364Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9755622Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9755626Z 
2025-01-10T13:23:47.9755711Z     @wraps(func)
2025-01-10T13:23:47.9755799Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9755892Z         with self._recreate_cm():
2025-01-10T13:23:47.9755982Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9756078Z E           AssertionError: 
2025-01-10T13:23:47.9756189Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9756277Z E           
2025-01-10T13:23:47.9756379Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:47.9756528Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:23:47.9756665Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:23:47.9756968Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9757067Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9757377Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9757494Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9757499Z 
2025-01-10T13:23:47.9757713Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9757941Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-10T13:23:47.9757946Z 
2025-01-10T13:23:47.9758217Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178d670>
2025-01-10T13:23:47.9758530Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9758984Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef5386eed0>
2025-01-10T13:23:47.9759270Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-01-10T13:23:47.9759275Z 
2025-01-10T13:23:47.9759377Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9759452Z         self,
2025-01-10T13:23:47.9759554Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9759645Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9759728Z         request,
2025-01-10T13:23:47.9759800Z     ):
2025-01-10T13:23:47.9759914Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9760096Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9760189Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9760370Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9760457Z             plot_object = getattr(
2025-01-10T13:23:47.9760596Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9760671Z             )
2025-01-10T13:23:47.9760778Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9760939Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9761094Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9761264Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9761432Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9761509Z                 )
2025-01-10T13:23:47.9761513Z 
2025-01-10T13:23:47.9761671Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9761791Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9761796Z 
2025-01-10T13:23:47.9762266Z args = (<function assert_allclose.<locals>.compare at 0x7fef50d5fa60>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:23:47.9762377Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9762633Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9762637Z 
2025-01-10T13:23:47.9762719Z     @wraps(func)
2025-01-10T13:23:47.9762803Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9762897Z         with self._recreate_cm():
2025-01-10T13:23:47.9762985Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9763193Z E           AssertionError: 
2025-01-10T13:23:47.9763311Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9763385Z E           
2025-01-10T13:23:47.9763492Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:47.9763629Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:23:47.9763762Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:23:47.9764069Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9764164Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9764329Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9764423Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9764427Z 
2025-01-10T13:23:47.9764630Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9764855Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-10T13:23:47.9764859Z 
2025-01-10T13:23:47.9765231Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178da90>
2025-01-10T13:23:47.9765602Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9766088Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2d173c20>
2025-01-10T13:23:47.9766382Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-01-10T13:23:47.9766388Z 
2025-01-10T13:23:47.9766490Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9766564Z         self,
2025-01-10T13:23:47.9766666Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9766757Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9766835Z         request,
2025-01-10T13:23:47.9766912Z     ):
2025-01-10T13:23:47.9767020Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9767206Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9767295Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9767476Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9767564Z             plot_object = getattr(
2025-01-10T13:23:47.9767698Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9767777Z             )
2025-01-10T13:23:47.9767882Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9768042Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9768156Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9768252Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9768387Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9768470Z                 )
2025-01-10T13:23:47.9768475Z 
2025-01-10T13:23:47.9768625Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9768746Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9768750Z 
2025-01-10T13:23:47.9769370Z args = (<function assert_allclose.<locals>.compare at 0x7fef2d1460c0>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:23:47.9769491Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9769745Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9769750Z 
2025-01-10T13:23:47.9769833Z     @wraps(func)
2025-01-10T13:23:47.9769918Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9770014Z         with self._recreate_cm():
2025-01-10T13:23:47.9770107Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9770193Z E           AssertionError: 
2025-01-10T13:23:47.9770306Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9770379Z E           
2025-01-10T13:23:47.9770484Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:47.9770625Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:23:47.9770758Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:23:47.9770928Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9771119Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9771285Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9771376Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9771380Z 
2025-01-10T13:23:47.9771587Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9771809Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-10T13:23:47.9771813Z 
2025-01-10T13:23:47.9772087Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178db50>
2025-01-10T13:23:47.9772392Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9772717Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef30c2b560>
2025-01-10T13:23:47.9773227Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-01-10T13:23:47.9773233Z 
2025-01-10T13:23:47.9773347Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9773428Z         self,
2025-01-10T13:23:47.9773528Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9773623Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9773698Z         request,
2025-01-10T13:23:47.9773774Z     ):
2025-01-10T13:23:47.9773885Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9774073Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9774164Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9774407Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9774561Z             plot_object = getattr(
2025-01-10T13:23:47.9774708Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9774790Z             )
2025-01-10T13:23:47.9774902Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9775063Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9775174Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9775274Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9775404Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9775482Z                 )
2025-01-10T13:23:47.9775486Z 
2025-01-10T13:23:47.9775633Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9775751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9775755Z 
2025-01-10T13:23:47.9776214Z args = (<function assert_allclose.<locals>.compare at 0x7fef50d5c9a0>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:23:47.9776324Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9776576Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9776586Z 
2025-01-10T13:23:47.9776664Z     @wraps(func)
2025-01-10T13:23:47.9776757Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9776845Z         with self._recreate_cm():
2025-01-10T13:23:47.9776940Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9777026Z E           AssertionError: 
2025-01-10T13:23:47.9777142Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9777216Z E           
2025-01-10T13:23:47.9777321Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:47.9777457Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:23:47.9777591Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:23:47.9777758Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9777988Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9778162Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9778247Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9778251Z 
2025-01-10T13:23:47.9778458Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9778680Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-10T13:23:47.9778684Z 
2025-01-10T13:23:47.9778952Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178dc40>
2025-01-10T13:23:47.9779255Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9779582Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2d171f70>
2025-01-10T13:23:47.9779947Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-01-10T13:23:47.9779960Z 
2025-01-10T13:23:47.9780059Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9780138Z         self,
2025-01-10T13:23:47.9780239Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9780336Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9780409Z         request,
2025-01-10T13:23:47.9780486Z     ):
2025-01-10T13:23:47.9780594Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9780783Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9780871Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9781051Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9781139Z             plot_object = getattr(
2025-01-10T13:23:47.9781270Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9781342Z             )
2025-01-10T13:23:47.9781457Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9781687Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9781855Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9781964Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9782094Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9782174Z                 )
2025-01-10T13:23:47.9782178Z 
2025-01-10T13:23:47.9782326Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9782445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9782449Z 
2025-01-10T13:23:47.9782920Z args = (<function assert_allclose.<locals>.compare at 0x7fef3d6ecfe0>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:23:47.9783188Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9783535Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9783542Z 
2025-01-10T13:23:47.9783621Z     @wraps(func)
2025-01-10T13:23:47.9783712Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9783800Z         with self._recreate_cm():
2025-01-10T13:23:47.9783896Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9783984Z E           AssertionError: 
2025-01-10T13:23:47.9784100Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9784173Z E           
2025-01-10T13:23:47.9784279Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:47.9784420Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:23:47.9784557Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:23:47.9784733Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9784826Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9785146Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9785237Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9785241Z 
2025-01-10T13:23:47.9785458Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9785681Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-10T13:23:47.9785685Z 
2025-01-10T13:23:47.9785960Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178dd30>
2025-01-10T13:23:47.9786273Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9786606Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2d170890>
2025-01-10T13:23:47.9786994Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-01-10T13:23:47.9787003Z 
2025-01-10T13:23:47.9787101Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9787179Z         self,
2025-01-10T13:23:47.9787302Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9787456Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9787585Z         request,
2025-01-10T13:23:47.9787705Z     ):
2025-01-10T13:23:47.9787816Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9788002Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9788090Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9788269Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9788360Z             plot_object = getattr(
2025-01-10T13:23:47.9788485Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9788560Z             )
2025-01-10T13:23:47.9788661Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9788835Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9788941Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9789042Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9789171Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9789250Z                 )
2025-01-10T13:23:47.9789255Z 
2025-01-10T13:23:47.9789407Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9789537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9789541Z 
2025-01-10T13:23:47.9790011Z args = (<function assert_allclose.<locals>.compare at 0x7fef4b5b6660>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:23:47.9790116Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9790381Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9790389Z 
2025-01-10T13:23:47.9790474Z     @wraps(func)
2025-01-10T13:23:47.9790562Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9790657Z         with self._recreate_cm():
2025-01-10T13:23:47.9790748Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9790844Z E           AssertionError: 
2025-01-10T13:23:47.9790954Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9791037Z E           
2025-01-10T13:23:47.9791140Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:47.9791286Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:23:47.9791471Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:23:47.9791731Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9791832Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9792104Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9792200Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9792204Z 
2025-01-10T13:23:47.9792408Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9792638Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-10T13:23:47.9792642Z 
2025-01-10T13:23:47.9792912Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178ddf0>
2025-01-10T13:23:47.9793385Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9793710Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2d133350>
2025-01-10T13:23:47.9793993Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-01-10T13:23:47.9794001Z 
2025-01-10T13:23:47.9794244Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9794326Z         self,
2025-01-10T13:23:47.9794429Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9794520Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9794599Z         request,
2025-01-10T13:23:47.9794670Z     ):
2025-01-10T13:23:47.9794784Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9794963Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9795057Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9795231Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9795323Z             plot_object = getattr(
2025-01-10T13:23:47.9795454Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9795526Z             )
2025-01-10T13:23:47.9795632Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9795793Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9795909Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9796008Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9796144Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9796218Z                 )
2025-01-10T13:23:47.9796222Z 
2025-01-10T13:23:47.9796376Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9796489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9796493Z 
2025-01-10T13:23:47.9796958Z args = (<function assert_allclose.<locals>.compare at 0x7fef4b5b65c0>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:23:47.9797074Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9797480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9797494Z 
2025-01-10T13:23:47.9797579Z     @wraps(func)
2025-01-10T13:23:47.9797667Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9797761Z         with self._recreate_cm():
2025-01-10T13:23:47.9797852Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9797944Z E           AssertionError: 
2025-01-10T13:23:47.9798051Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9798130Z E           
2025-01-10T13:23:47.9798229Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:47.9798373Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:23:47.9798515Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:23:47.9798682Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9798778Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9798950Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9799182Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9799186Z 
2025-01-10T13:23:47.9799387Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9799612Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-10T13:23:47.9799616Z 
2025-01-10T13:23:47.9799881Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178deb0>
2025-01-10T13:23:47.9800189Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9800518Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b546ff0>
2025-01-10T13:23:47.9800793Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-01-10T13:23:47.9800798Z 
2025-01-10T13:23:47.9800979Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9801058Z         self,
2025-01-10T13:23:47.9801161Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9801307Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9801449Z         request,
2025-01-10T13:23:47.9801542Z     ):
2025-01-10T13:23:47.9801658Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9801839Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9801965Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9802143Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9802231Z             plot_object = getattr(
2025-01-10T13:23:47.9802362Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9802435Z             )
2025-01-10T13:23:47.9802539Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9802705Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9802821Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9802919Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9803159Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9803235Z                 )
2025-01-10T13:23:47.9803240Z 
2025-01-10T13:23:47.9803395Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9803516Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9803520Z 
2025-01-10T13:23:47.9803981Z args = (<function assert_allclose.<locals>.compare at 0x7fef4b5b5080>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:23:47.9804092Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9804345Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9804356Z 
2025-01-10T13:23:47.9804446Z     @wraps(func)
2025-01-10T13:23:47.9804530Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9804624Z         with self._recreate_cm():
2025-01-10T13:23:47.9804715Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9804808Z E           AssertionError: 
2025-01-10T13:23:47.9804916Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9804996Z E           
2025-01-10T13:23:47.9805102Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:47.9805244Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:23:47.9805382Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:23:47.9805551Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9805645Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9805814Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:23:47.9806041Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9806045Z 
2025-01-10T13:23:47.9806245Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9806472Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-10T13:23:47.9806477Z 
2025-01-10T13:23:47.9806813Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178df70>
2025-01-10T13:23:47.9807207Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9807537Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef53853b60>
2025-01-10T13:23:47.9807820Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-01-10T13:23:47.9807825Z 
2025-01-10T13:23:47.9807930Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9808139Z         self,
2025-01-10T13:23:47.9808247Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9808338Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9808418Z         request,
2025-01-10T13:23:47.9808488Z     ):
2025-01-10T13:23:47.9808606Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9808796Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9808883Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9809065Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9809151Z             plot_object = getattr(
2025-01-10T13:23:47.9809287Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9809360Z             )
2025-01-10T13:23:47.9809468Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9809631Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9809753Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9809851Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9809984Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9810059Z                 )
2025-01-10T13:23:47.9810069Z 
2025-01-10T13:23:47.9810219Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9810340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9810344Z 
2025-01-10T13:23:47.9810810Z args = (<function assert_allclose.<locals>.compare at 0x7fef4b5b5da0>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:23:47.9810920Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9811177Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9811184Z 
2025-01-10T13:23:47.9811272Z     @wraps(func)
2025-01-10T13:23:47.9811359Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9811525Z         with self._recreate_cm():
2025-01-10T13:23:47.9811692Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9811781Z E           AssertionError: 
2025-01-10T13:23:47.9811898Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9811972Z E           
2025-01-10T13:23:47.9812083Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:47.9812223Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:23:47.9812358Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:23:47.9812527Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9812622Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9812793Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9812984Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9812988Z 
2025-01-10T13:23:47.9813311Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9813535Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-10T13:23:47.9813539Z 
2025-01-10T13:23:47.9813813Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178e030>
2025-01-10T13:23:47.9814121Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9814452Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef3c831400>
2025-01-10T13:23:47.9814731Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-01-10T13:23:47.9814736Z 
2025-01-10T13:23:47.9814840Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9814923Z         self,
2025-01-10T13:23:47.9815143Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9815247Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9815322Z         request,
2025-01-10T13:23:47.9815401Z     ):
2025-01-10T13:23:47.9815511Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9815698Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9815800Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9816111Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9816206Z             plot_object = getattr(
2025-01-10T13:23:47.9816339Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9816412Z             )
2025-01-10T13:23:47.9816520Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9816684Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9816813Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9816924Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9817056Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9817138Z                 )
2025-01-10T13:23:47.9817143Z 
2025-01-10T13:23:47.9817291Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9817417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9817422Z 
2025-01-10T13:23:47.9817889Z args = (<function assert_allclose.<locals>.compare at 0x7fef4b5b49a0>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:23:47.9818001Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9818259Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9818269Z 
2025-01-10T13:23:47.9818350Z     @wraps(func)
2025-01-10T13:23:47.9818450Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9818539Z         with self._recreate_cm():
2025-01-10T13:23:47.9818636Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9818725Z E           AssertionError: 
2025-01-10T13:23:47.9818842Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9818919Z E           
2025-01-10T13:23:47.9819023Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:47.9819161Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:23:47.9819298Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:23:47.9819469Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9819564Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9819738Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9819824Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9819983Z 
2025-01-10T13:23:47.9820197Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9820423Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-10T13:23:47.9820427Z 
2025-01-10T13:23:47.9820713Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178e0f0>
2025-01-10T13:23:47.9821019Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9821488Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2d1708c0>
2025-01-10T13:23:47.9821776Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-01-10T13:23:47.9821789Z 
2025-01-10T13:23:47.9821886Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9821964Z         self,
2025-01-10T13:23:47.9822189Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9822289Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9822363Z         request,
2025-01-10T13:23:47.9822439Z     ):
2025-01-10T13:23:47.9822548Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9822736Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9822822Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9822999Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9823233Z             plot_object = getattr(
2025-01-10T13:23:47.9823366Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9823438Z             )
2025-01-10T13:23:47.9823546Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9823712Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9823821Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9823931Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9824059Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9824138Z                 )
2025-01-10T13:23:47.9824142Z 
2025-01-10T13:23:47.9824289Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9824411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9824415Z 
2025-01-10T13:23:47.9824881Z args = (<function assert_allclose.<locals>.compare at 0x7fef50d5c360>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:23:47.9824991Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9825250Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9825255Z 
2025-01-10T13:23:47.9825331Z     @wraps(func)
2025-01-10T13:23:47.9825427Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9825518Z         with self._recreate_cm():
2025-01-10T13:23:47.9825613Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9825698Z E           AssertionError: 
2025-01-10T13:23:47.9825813Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9825887Z E           
2025-01-10T13:23:47.9825996Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:47.9826130Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:23:47.9826264Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:23:47.9826446Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9826535Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9826829Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9826953Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9827091Z 
2025-01-10T13:23:47.9827316Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9827547Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-10T13:23:47.9827552Z 
2025-01-10T13:23:47.9827822Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178e1b0>
2025-01-10T13:23:47.9828130Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9828460Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b500a70>
2025-01-10T13:23:47.9828745Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-01-10T13:23:47.9828750Z 
2025-01-10T13:23:47.9828843Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9828923Z         self,
2025-01-10T13:23:47.9829026Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9829238Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9829318Z         request,
2025-01-10T13:23:47.9829398Z     ):
2025-01-10T13:23:47.9829506Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9829694Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9829780Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9829959Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9830054Z             plot_object = getattr(
2025-01-10T13:23:47.9830180Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9830258Z             )
2025-01-10T13:23:47.9830359Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9830523Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9830632Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9830733Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9830870Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9830950Z                 )
2025-01-10T13:23:47.9830955Z 
2025-01-10T13:23:47.9831100Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9831221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9831225Z 
2025-01-10T13:23:47.9831693Z args = (<function assert_allclose.<locals>.compare at 0x7fef2d144d60>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:23:47.9831795Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9832091Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9832100Z 
2025-01-10T13:23:47.9832237Z     @wraps(func)
2025-01-10T13:23:47.9832368Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9832468Z         with self._recreate_cm():
2025-01-10T13:23:47.9832563Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9832649Z E           AssertionError: 
2025-01-10T13:23:47.9832764Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9832839Z E           
2025-01-10T13:23:47.9832945Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:47.9833192Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:23:47.9833323Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:23:47.9833495Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9833583Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9833754Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9833839Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9833844Z 
2025-01-10T13:23:47.9834189Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9834413Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-10T13:23:47.9834417Z 
2025-01-10T13:23:47.9834685Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178e270>
2025-01-10T13:23:47.9834994Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9835317Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b500890>
2025-01-10T13:23:47.9835600Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-01-10T13:23:47.9835605Z 
2025-01-10T13:23:47.9835699Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9835778Z         self,
2025-01-10T13:23:47.9835911Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9836082Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9836353Z         request,
2025-01-10T13:23:47.9836436Z     ):
2025-01-10T13:23:47.9836547Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9836735Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9836827Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9836998Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9837093Z             plot_object = getattr(
2025-01-10T13:23:47.9837217Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9837297Z             )
2025-01-10T13:23:47.9837401Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9837568Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9837674Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9837774Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9837909Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9837991Z                 )
2025-01-10T13:23:47.9837995Z 
2025-01-10T13:23:47.9838142Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9838261Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9838265Z 
2025-01-10T13:23:47.9838736Z args = (<function assert_allclose.<locals>.compare at 0x7fef2d144900>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:23:47.9838839Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9839100Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9839104Z 
2025-01-10T13:23:47.9839181Z     @wraps(func)
2025-01-10T13:23:47.9839272Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9839360Z         with self._recreate_cm():
2025-01-10T13:23:47.9839462Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9839553Z E           AssertionError: 
2025-01-10T13:23:47.9839690Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9839825Z E           
2025-01-10T13:23:47.9839989Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:47.9840142Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:23:47.9840277Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:23:47.9840456Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9840546Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9840720Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9840807Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9840811Z 
2025-01-10T13:23:47.9841026Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9841376Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-10T13:23:47.9841380Z 
2025-01-10T13:23:47.9841660Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178e330>
2025-01-10T13:23:47.9841982Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9842307Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5ef140>
2025-01-10T13:23:47.9842593Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-01-10T13:23:47.9842597Z 
2025-01-10T13:23:47.9842693Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9842771Z         self,
2025-01-10T13:23:47.9842869Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9842963Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9843197Z         request,
2025-01-10T13:23:47.9843412Z     ):
2025-01-10T13:23:47.9843535Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9843716Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9843808Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9843983Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9844074Z             plot_object = getattr(
2025-01-10T13:23:47.9844198Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9844274Z             )
2025-01-10T13:23:47.9844374Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9844541Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9844647Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9844749Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9844881Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9844963Z                 )
2025-01-10T13:23:47.9844967Z 
2025-01-10T13:23:47.9845121Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9845246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9845253Z 
2025-01-10T13:23:47.9845872Z args = (<function assert_allclose.<locals>.compare at 0x7fef4b5b6840>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:23:47.9845979Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9846241Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9846247Z 
2025-01-10T13:23:47.9846323Z     @wraps(func)
2025-01-10T13:23:47.9846414Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9846505Z         with self._recreate_cm():
2025-01-10T13:23:47.9846606Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9846697Z E           AssertionError: 
2025-01-10T13:23:47.9846807Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9846886Z E           
2025-01-10T13:23:47.9846987Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:47.9847133Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:23:47.9847266Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:23:47.9847438Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9847528Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9847700Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9847787Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9847797Z 
2025-01-10T13:23:47.9848000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9848395Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-10T13:23:47.9848399Z 
2025-01-10T13:23:47.9848664Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178e4b0>
2025-01-10T13:23:47.9848987Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9849456Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2cd9ee10>
2025-01-10T13:23:47.9849741Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-01-10T13:23:47.9849746Z 
2025-01-10T13:23:47.9849847Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9849919Z         self,
2025-01-10T13:23:47.9850022Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9850114Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9850193Z         request,
2025-01-10T13:23:47.9850269Z     ):
2025-01-10T13:23:47.9850481Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9850665Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9850758Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9850931Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9851025Z             plot_object = getattr(
2025-01-10T13:23:47.9851150Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9851226Z             )
2025-01-10T13:23:47.9851326Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9851492Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9851604Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9851702Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9851834Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9851913Z                 )
2025-01-10T13:23:47.9851917Z 
2025-01-10T13:23:47.9852067Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9852180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9852185Z 
2025-01-10T13:23:47.9852650Z args = (<function assert_allclose.<locals>.compare at 0x7fef4b5b5760>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:23:47.9852752Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9853133Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9853140Z 
2025-01-10T13:23:47.9853227Z     @wraps(func)
2025-01-10T13:23:47.9853312Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9853403Z         with self._recreate_cm():
2025-01-10T13:23:47.9853491Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9853592Z E           AssertionError: 
2025-01-10T13:23:47.9853701Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9853779Z E           
2025-01-10T13:23:47.9853882Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:47.9854025Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:23:47.9854224Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:23:47.9854463Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9854560Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9854728Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9854820Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9854825Z 
2025-01-10T13:23:47.9855028Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9855260Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-10T13:23:47.9855393Z 
2025-01-10T13:23:47.9855663Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178e5d0>
2025-01-10T13:23:47.9855974Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>
2025-01-10T13:23:47.9856294Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2d171340>
2025-01-10T13:23:47.9856577Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-01-10T13:23:47.9856582Z 
2025-01-10T13:23:47.9856682Z     def test_calculate_plotting_data(
2025-01-10T13:23:47.9856756Z         self,
2025-01-10T13:23:47.9856857Z         plotter_calculate_plotting_data,
2025-01-10T13:23:47.9856946Z         calculate_plotting_data_hdf,
2025-01-10T13:23:47.9857024Z         request,
2025-01-10T13:23:47.9857096Z     ):
2025-01-10T13:23:47.9857319Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9857502Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:23:47.9857595Z         group = "plot_data_hdf/"
2025-01-10T13:23:47.9857769Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:23:47.9857859Z             plot_object = getattr(
2025-01-10T13:23:47.9858076Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:23:47.9858181Z             )
2025-01-10T13:23:47.9858292Z             if attribute_type == "attributes_np":
2025-01-10T13:23:47.9858452Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:23:47.9858563Z                     plot_object = plot_object.cgs.value
2025-01-10T13:23:47.9858658Z >               np.testing.assert_allclose(
2025-01-10T13:23:47.9858789Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:23:47.9858864Z                 )
2025-01-10T13:23:47.9858877Z 
2025-01-10T13:23:47.9859028Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:23:47.9859141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9859146Z 
2025-01-10T13:23:47.9859613Z args = (<function assert_allclose.<locals>.compare at 0x7fef2d144040>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:23:47.9859720Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9859971Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9859975Z 
2025-01-10T13:23:47.9860057Z     @wraps(func)
2025-01-10T13:23:47.9860142Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9860234Z         with self._recreate_cm():
2025-01-10T13:23:47.9860323Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9860414Z E           AssertionError: 
2025-01-10T13:23:47.9860529Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9860610Z E           
2025-01-10T13:23:47.9860712Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:47.9860854Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:23:47.9860991Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:23:47.9861157Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9861249Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9861469Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:23:47.9861612Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9861618Z 
2025-01-10T13:23:47.9861922Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9862309Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-01-10T13:23:47.9862417Z 
2025-01-10T13:23:47.9862705Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178d5b0>
2025-01-10T13:23:47.9863213Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2fa74620>
2025-01-10T13:23:47.9863370Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9863467Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9863580Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9863722Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:23:47.9863941Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9864185Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-01-10T13:23:47.9864190Z 
2025-01-10T13:23:47.9864287Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9864589Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9864679Z     ):
2025-01-10T13:23:47.9864780Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9864893Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9865073Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9865143Z     
2025-01-10T13:23:47.9865259Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9865357Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9865507Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9865617Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9865696Z             )
2025-01-10T13:23:47.9865771Z     
2025-01-10T13:23:47.9865880Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9865988Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9866082Z             if data.stackgroup:
2025-01-10T13:23:47.9866169Z                 assert (
2025-01-10T13:23:47.9866262Z                     data.stackgroup
2025-01-10T13:23:47.9866340Z                     == getattr(
2025-01-10T13:23:47.9866458Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9866564Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9866643Z                     ).decode()
2025-01-10T13:23:47.9866721Z                 )
2025-01-10T13:23:47.9866803Z             if data.name:
2025-01-10T13:23:47.9866888Z                 assert (
2025-01-10T13:23:47.9866967Z                     data.name
2025-01-10T13:23:47.9867052Z                     == getattr(
2025-01-10T13:23:47.9867215Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9867393Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9867479Z                     ).decode()
2025-01-10T13:23:47.9867560Z                 )
2025-01-10T13:23:47.9867655Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9867804Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9867877Z             )
2025-01-10T13:23:47.9867974Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9868102Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9868175Z             )
2025-01-10T13:23:47.9868179Z 
2025-01-10T13:23:47.9868335Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9868451Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9868456Z 
2025-01-10T13:23:47.9868927Z args = (<function assert_allclose.<locals>.compare at 0x7fef2fa02340>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:23:47.9869032Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9869297Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9869432Z 
2025-01-10T13:23:47.9869513Z     @wraps(func)
2025-01-10T13:23:47.9869604Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9869699Z         with self._recreate_cm():
2025-01-10T13:23:47.9869789Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9869880Z E           AssertionError: 
2025-01-10T13:23:47.9869992Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9870072Z E           
2025-01-10T13:23:47.9870173Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:47.9870318Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:23:47.9870448Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:23:47.9870625Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9870714Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9870989Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9871085Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9871096Z 
2025-01-10T13:23:47.9871303Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9871513Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-01-10T13:23:47.9871517Z 
2025-01-10T13:23:47.9871787Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178e9c0>
2025-01-10T13:23:47.9872111Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2fa74f80>
2025-01-10T13:23:47.9872208Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9872303Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9872408Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9872514Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:23:47.9872722Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9872977Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-01-10T13:23:47.9872982Z 
2025-01-10T13:23:47.9873235Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9873407Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9873484Z     ):
2025-01-10T13:23:47.9873581Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9873696Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9873873Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9873949Z     
2025-01-10T13:23:47.9874060Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9874163Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9874306Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9874422Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9874510Z             )
2025-01-10T13:23:47.9874582Z     
2025-01-10T13:23:47.9874690Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9874798Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9874890Z             if data.stackgroup:
2025-01-10T13:23:47.9874967Z                 assert (
2025-01-10T13:23:47.9875057Z                     data.stackgroup
2025-01-10T13:23:47.9875134Z                     == getattr(
2025-01-10T13:23:47.9875251Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9875352Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9875434Z                     ).decode()
2025-01-10T13:23:47.9875509Z                 )
2025-01-10T13:23:47.9875595Z             if data.name:
2025-01-10T13:23:47.9875672Z                 assert (
2025-01-10T13:23:47.9875758Z                     data.name
2025-01-10T13:23:47.9875836Z                     == getattr(
2025-01-10T13:23:47.9876073Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9876172Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9876251Z                     ).decode()
2025-01-10T13:23:47.9876330Z                 )
2025-01-10T13:23:47.9876424Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9876558Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9876630Z             )
2025-01-10T13:23:47.9876728Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9876848Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9876930Z             )
2025-01-10T13:23:47.9876934Z 
2025-01-10T13:23:47.9877082Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9877201Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9877205Z 
2025-01-10T13:23:47.9877802Z args = (<function assert_allclose.<locals>.compare at 0x7fef3d6ecfe0>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:23:47.9877916Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9878181Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9878185Z 
2025-01-10T13:23:47.9878262Z     @wraps(func)
2025-01-10T13:23:47.9878351Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9878440Z         with self._recreate_cm():
2025-01-10T13:23:47.9878535Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9878619Z E           AssertionError: 
2025-01-10T13:23:47.9878731Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9878804Z E           
2025-01-10T13:23:47.9878908Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:47.9879052Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:23:47.9879186Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:23:47.9879362Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9879450Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9879627Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9879712Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9879717Z 
2025-01-10T13:23:47.9879921Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9880124Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-01-10T13:23:47.9880128Z 
2025-01-10T13:23:47.9880398Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178ee10>
2025-01-10T13:23:47.9880719Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2fa2f9b0>
2025-01-10T13:23:47.9880822Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9880916Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9881018Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9881125Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:23:47.9881329Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9881573Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-01-10T13:23:47.9881578Z 
2025-01-10T13:23:47.9881666Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9881840Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9881911Z     ):
2025-01-10T13:23:47.9882011Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9882123Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9882294Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9882460Z     
2025-01-10T13:23:47.9882572Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9882672Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9882814Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9882927Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9882998Z             )
2025-01-10T13:23:47.9883178Z     
2025-01-10T13:23:47.9883281Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9883390Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9883476Z             if data.stackgroup:
2025-01-10T13:23:47.9883560Z                 assert (
2025-01-10T13:23:47.9883645Z                     data.stackgroup
2025-01-10T13:23:47.9883728Z                     == getattr(
2025-01-10T13:23:47.9883840Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9883936Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9884137Z                     ).decode()
2025-01-10T13:23:47.9884213Z                 )
2025-01-10T13:23:47.9884298Z             if data.name:
2025-01-10T13:23:47.9884374Z                 assert (
2025-01-10T13:23:47.9884456Z                     data.name
2025-01-10T13:23:47.9884533Z                     == getattr(
2025-01-10T13:23:47.9884643Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9884736Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9884820Z                     ).decode()
2025-01-10T13:23:47.9884893Z                 )
2025-01-10T13:23:47.9884993Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9885121Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9885199Z             )
2025-01-10T13:23:47.9885294Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9885415Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9885492Z             )
2025-01-10T13:23:47.9885499Z 
2025-01-10T13:23:47.9885648Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9885767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9885772Z 
2025-01-10T13:23:47.9886535Z args = (<function assert_allclose.<locals>.compare at 0x7fef2fa03420>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:23:47.9886717Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9887104Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9887120Z 
2025-01-10T13:23:47.9887208Z     @wraps(func)
2025-01-10T13:23:47.9887300Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9887388Z         with self._recreate_cm():
2025-01-10T13:23:47.9887482Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9887567Z E           AssertionError: 
2025-01-10T13:23:47.9887700Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9887774Z E           
2025-01-10T13:23:47.9887878Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:47.9888019Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:23:47.9888154Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:23:47.9888324Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9888419Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9888592Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9888684Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9888688Z 
2025-01-10T13:23:47.9888896Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9889099Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-01-10T13:23:47.9889292Z 
2025-01-10T13:23:47.9889584Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178eed0>
2025-01-10T13:23:47.9889898Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef2d171670>
2025-01-10T13:23:47.9890000Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9890087Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9890198Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9890304Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:23:47.9890511Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9890756Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-01-10T13:23:47.9890761Z 
2025-01-10T13:23:47.9890850Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9891024Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9891179Z     ):
2025-01-10T13:23:47.9891291Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9891399Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9891578Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9891648Z     
2025-01-10T13:23:47.9891768Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9891867Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9892015Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9892131Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9892203Z             )
2025-01-10T13:23:47.9892277Z     
2025-01-10T13:23:47.9892378Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9892488Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9892577Z             if data.stackgroup:
2025-01-10T13:23:47.9892663Z                 assert (
2025-01-10T13:23:47.9892755Z                     data.stackgroup
2025-01-10T13:23:47.9892837Z                     == getattr(
2025-01-10T13:23:47.9892946Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9893236Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9893367Z                     ).decode()
2025-01-10T13:23:47.9893448Z                 )
2025-01-10T13:23:47.9893530Z             if data.name:
2025-01-10T13:23:47.9893611Z                 assert (
2025-01-10T13:23:47.9893695Z                     data.name
2025-01-10T13:23:47.9893772Z                     == getattr(
2025-01-10T13:23:47.9893883Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9893976Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9894059Z                     ).decode()
2025-01-10T13:23:47.9894130Z                 )
2025-01-10T13:23:47.9894229Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9894369Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9894445Z             )
2025-01-10T13:23:47.9894536Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9894662Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9894735Z             )
2025-01-10T13:23:47.9894739Z 
2025-01-10T13:23:47.9894893Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9895011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9895020Z 
2025-01-10T13:23:47.9895490Z args = (<function assert_allclose.<locals>.compare at 0x7fef2fa03380>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:23:47.9895594Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9895852Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9895990Z 
2025-01-10T13:23:47.9896074Z     @wraps(func)
2025-01-10T13:23:47.9896161Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9896253Z         with self._recreate_cm():
2025-01-10T13:23:47.9896342Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9896435Z E           AssertionError: 
2025-01-10T13:23:47.9896544Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9896622Z E           
2025-01-10T13:23:47.9896727Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:47.9896869Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:23:47.9897002Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:23:47.9897175Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9897267Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9897435Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9897658Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9897664Z 
2025-01-10T13:23:47.9897877Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9898084Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-01-10T13:23:47.9898088Z 
2025-01-10T13:23:47.9898363Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178d370>
2025-01-10T13:23:47.9898678Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef566eb530>
2025-01-10T13:23:47.9898778Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9898866Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9898976Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9899076Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:23:47.9899289Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9899532Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-01-10T13:23:47.9899537Z 
2025-01-10T13:23:47.9899628Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9899800Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9899872Z     ):
2025-01-10T13:23:47.9899973Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9900080Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9900258Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9900329Z     
2025-01-10T13:23:47.9900443Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9900542Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9900689Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9900795Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9900878Z             )
2025-01-10T13:23:47.9900949Z     
2025-01-10T13:23:47.9901055Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9901160Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9901252Z             if data.stackgroup:
2025-01-10T13:23:47.9901334Z                 assert (
2025-01-10T13:23:47.9901418Z                     data.stackgroup
2025-01-10T13:23:47.9901503Z                     == getattr(
2025-01-10T13:23:47.9901610Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9901713Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9901793Z                     ).decode()
2025-01-10T13:23:47.9901906Z                 )
2025-01-10T13:23:47.9901987Z             if data.name:
2025-01-10T13:23:47.9902067Z                 assert (
2025-01-10T13:23:47.9902145Z                     data.name
2025-01-10T13:23:47.9902226Z                     == getattr(
2025-01-10T13:23:47.9902336Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9902531Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9902608Z                     ).decode()
2025-01-10T13:23:47.9902689Z                 )
2025-01-10T13:23:47.9902784Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9902915Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9902991Z             )
2025-01-10T13:23:47.9903256Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9903386Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9903460Z             )
2025-01-10T13:23:47.9903464Z 
2025-01-10T13:23:47.9903620Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9903733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9903737Z 
2025-01-10T13:23:47.9904325Z args = (<function assert_allclose.<locals>.compare at 0x7fef566fdd00>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:23:47.9904435Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9904692Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9904697Z 
2025-01-10T13:23:47.9904778Z     @wraps(func)
2025-01-10T13:23:47.9904861Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9904952Z         with self._recreate_cm():
2025-01-10T13:23:47.9905044Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9905135Z E           AssertionError: 
2025-01-10T13:23:47.9905243Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9905320Z E           
2025-01-10T13:23:47.9905421Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:47.9905567Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:23:47.9905704Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:23:47.9905882Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9905971Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9906147Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9906238Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9906243Z 
2025-01-10T13:23:47.9906445Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9906650Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-01-10T13:23:47.9906655Z 
2025-01-10T13:23:47.9906923Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178c8f0>
2025-01-10T13:23:47.9907239Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5037a0>
2025-01-10T13:23:47.9907337Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9907435Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9907542Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9907642Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:23:47.9907854Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9908095Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-01-10T13:23:47.9908099Z 
2025-01-10T13:23:47.9908194Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9908362Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9908442Z     ):
2025-01-10T13:23:47.9908537Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9908650Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9908823Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9908899Z     
2025-01-10T13:23:47.9909139Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9909243Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9909391Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9909500Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9909578Z             )
2025-01-10T13:23:47.9909650Z     
2025-01-10T13:23:47.9909760Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9909864Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9909957Z             if data.stackgroup:
2025-01-10T13:23:47.9910034Z                 assert (
2025-01-10T13:23:47.9910123Z                     data.stackgroup
2025-01-10T13:23:47.9910201Z                     == getattr(
2025-01-10T13:23:47.9910313Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9910412Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9910496Z                     ).decode()
2025-01-10T13:23:47.9910653Z                 )
2025-01-10T13:23:47.9910744Z             if data.name:
2025-01-10T13:23:47.9910825Z                 assert (
2025-01-10T13:23:47.9910905Z                     data.name
2025-01-10T13:23:47.9910989Z                     == getattr(
2025-01-10T13:23:47.9911093Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9911194Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9911271Z                     ).decode()
2025-01-10T13:23:47.9911347Z                 )
2025-01-10T13:23:47.9911439Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9911572Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9911646Z             )
2025-01-10T13:23:47.9911740Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9911861Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9911939Z             )
2025-01-10T13:23:47.9911943Z 
2025-01-10T13:23:47.9912097Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9912216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9912220Z 
2025-01-10T13:23:47.9912687Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f2518a0>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:23:47.9912787Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9913218Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9913227Z 
2025-01-10T13:23:47.9913315Z     @wraps(func)
2025-01-10T13:23:47.9913405Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9913494Z         with self._recreate_cm():
2025-01-10T13:23:47.9913588Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9913673Z E           AssertionError: 
2025-01-10T13:23:47.9913799Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9913878Z E           
2025-01-10T13:23:47.9913980Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:47.9914124Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:23:47.9914257Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:23:47.9914432Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9914520Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9914694Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9914779Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9914783Z 
2025-01-10T13:23:47.9914988Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9915194Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-01-10T13:23:47.9915319Z 
2025-01-10T13:23:47.9915592Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f200>
2025-01-10T13:23:47.9915914Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5ec4a0>
2025-01-10T13:23:47.9916012Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9916105Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9916208Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9916312Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:23:47.9916517Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9916760Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-01-10T13:23:47.9916764Z 
2025-01-10T13:23:47.9916859Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9917026Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9917211Z     ):
2025-01-10T13:23:47.9917312Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9917423Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9917595Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9917670Z     
2025-01-10T13:23:47.9917780Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9917881Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9918024Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9918136Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9918207Z             )
2025-01-10T13:23:47.9918284Z     
2025-01-10T13:23:47.9918384Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9918493Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9918584Z             if data.stackgroup:
2025-01-10T13:23:47.9918662Z                 assert (
2025-01-10T13:23:47.9918759Z                     data.stackgroup
2025-01-10T13:23:47.9918836Z                     == getattr(
2025-01-10T13:23:47.9918947Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9919046Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9919129Z                     ).decode()
2025-01-10T13:23:47.9919202Z                 )
2025-01-10T13:23:47.9919287Z             if data.name:
2025-01-10T13:23:47.9919361Z                 assert (
2025-01-10T13:23:47.9919444Z                     data.name
2025-01-10T13:23:47.9919521Z                     == getattr(
2025-01-10T13:23:47.9919628Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9919720Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9919804Z                     ).decode()
2025-01-10T13:23:47.9919875Z                 )
2025-01-10T13:23:47.9919972Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9920107Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9920182Z             )
2025-01-10T13:23:47.9920279Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9920399Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9920477Z             )
2025-01-10T13:23:47.9920481Z 
2025-01-10T13:23:47.9920626Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9920745Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9920749Z 
2025-01-10T13:23:47.9921214Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f250680>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:23:47.9921319Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9921584Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9921703Z 
2025-01-10T13:23:47.9921790Z     @wraps(func)
2025-01-10T13:23:47.9921878Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9921965Z         with self._recreate_cm():
2025-01-10T13:23:47.9922058Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9922143Z E           AssertionError: 
2025-01-10T13:23:47.9922255Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9922327Z E           
2025-01-10T13:23:47.9922433Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:47.9922573Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:23:47.9922713Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:23:47.9922881Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9922975Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9923330Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9923547Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9923553Z 
2025-01-10T13:23:47.9923761Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9923963Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-01-10T13:23:47.9923967Z 
2025-01-10T13:23:47.9924236Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f2c0>
2025-01-10T13:23:47.9924548Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5e8800>
2025-01-10T13:23:47.9924649Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9924742Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9924844Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9924947Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:23:47.9925152Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9925403Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-01-10T13:23:47.9925407Z 
2025-01-10T13:23:47.9925494Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9925665Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9925735Z     ):
2025-01-10T13:23:47.9925837Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9925943Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9926121Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9926195Z     
2025-01-10T13:23:47.9926304Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9926404Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9926545Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9926660Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9926735Z             )
2025-01-10T13:23:47.9926816Z     
2025-01-10T13:23:47.9926918Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9927026Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9927112Z             if data.stackgroup:
2025-01-10T13:23:47.9927195Z                 assert (
2025-01-10T13:23:47.9927279Z                     data.stackgroup
2025-01-10T13:23:47.9927361Z                     == getattr(
2025-01-10T13:23:47.9927466Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9927568Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9927648Z                     ).decode()
2025-01-10T13:23:47.9927727Z                 )
2025-01-10T13:23:47.9927810Z             if data.name:
2025-01-10T13:23:47.9927886Z                 assert (
2025-01-10T13:23:47.9927969Z                     data.name
2025-01-10T13:23:47.9928045Z                     == getattr(
2025-01-10T13:23:47.9928159Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9928401Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9928484Z                     ).decode()
2025-01-10T13:23:47.9928557Z                 )
2025-01-10T13:23:47.9928655Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9928781Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9928859Z             )
2025-01-10T13:23:47.9928949Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9929075Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9929148Z             )
2025-01-10T13:23:47.9929158Z 
2025-01-10T13:23:47.9929302Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9929423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9929428Z 
2025-01-10T13:23:47.9929966Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f252020>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:23:47.9930082Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9930342Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9930347Z 
2025-01-10T13:23:47.9930429Z     @wraps(func)
2025-01-10T13:23:47.9930512Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9930605Z         with self._recreate_cm():
2025-01-10T13:23:47.9930699Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9930783Z E           AssertionError: 
2025-01-10T13:23:47.9930897Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9930970Z E           
2025-01-10T13:23:47.9931076Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:47.9931215Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:23:47.9931355Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:23:47.9931529Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9931623Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9931790Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:23:47.9931881Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9931885Z 
2025-01-10T13:23:47.9932092Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9932293Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-01-10T13:23:47.9932297Z 
2025-01-10T13:23:47.9932575Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f380>
2025-01-10T13:23:47.9932891Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b53a1e0>
2025-01-10T13:23:47.9932997Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9933329Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9933448Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9933555Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:23:47.9933775Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9934015Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-01-10T13:23:47.9934027Z 
2025-01-10T13:23:47.9934117Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9934290Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9934365Z     ):
2025-01-10T13:23:47.9934467Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9934574Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9934751Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9934821Z     
2025-01-10T13:23:47.9935075Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9935173Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9935326Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9935434Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9935515Z             )
2025-01-10T13:23:47.9935586Z     
2025-01-10T13:23:47.9935694Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9935808Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9935896Z             if data.stackgroup:
2025-01-10T13:23:47.9935977Z                 assert (
2025-01-10T13:23:47.9936063Z                     data.stackgroup
2025-01-10T13:23:47.9936144Z                     == getattr(
2025-01-10T13:23:47.9936251Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9936354Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9936433Z                     ).decode()
2025-01-10T13:23:47.9936632Z                 )
2025-01-10T13:23:47.9936719Z             if data.name:
2025-01-10T13:23:47.9936802Z                 assert (
2025-01-10T13:23:47.9936880Z                     data.name
2025-01-10T13:23:47.9936964Z                     == getattr(
2025-01-10T13:23:47.9937069Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9937168Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9937252Z                     ).decode()
2025-01-10T13:23:47.9937324Z                 )
2025-01-10T13:23:47.9937529Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9937712Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9937856Z             )
2025-01-10T13:23:47.9938125Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9938303Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9938448Z             )
2025-01-10T13:23:47.9938452Z 
2025-01-10T13:23:47.9938697Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9938847Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9938851Z 
2025-01-10T13:23:47.9939425Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f251ee0>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:23:47.9939576Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9939899Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9939905Z 
2025-01-10T13:23:47.9940032Z     @wraps(func)
2025-01-10T13:23:47.9940184Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9940368Z         with self._recreate_cm():
2025-01-10T13:23:47.9940505Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9940672Z E           AssertionError: 
2025-01-10T13:23:47.9940826Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9940974Z E           
2025-01-10T13:23:47.9941092Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:47.9941355Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:23:47.9941519Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:23:47.9942412Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9942535Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9942755Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9942974Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9942979Z 
2025-01-10T13:23:47.9943570Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9943857Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-01-10T13:23:47.9944001Z 
2025-01-10T13:23:47.9944322Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f440>
2025-01-10T13:23:47.9944696Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5449b0>
2025-01-10T13:23:47.9944896Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9945091Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9945267Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9945401Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:23:47.9945662Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9945985Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-01-10T13:23:47.9945990Z 
2025-01-10T13:23:47.9946182Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9946384Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9946535Z     ):
2025-01-10T13:23:47.9946840Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9955188Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9955424Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9955503Z     
2025-01-10T13:23:47.9955630Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9955735Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9955888Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9956007Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9956080Z             )
2025-01-10T13:23:47.9956156Z     
2025-01-10T13:23:47.9956264Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9956379Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9956467Z             if data.stackgroup:
2025-01-10T13:23:47.9956551Z                 assert (
2025-01-10T13:23:47.9956660Z                     data.stackgroup
2025-01-10T13:23:47.9956738Z                     == getattr(
2025-01-10T13:23:47.9956858Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9956961Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9957046Z                     ).decode()
2025-01-10T13:23:47.9957119Z                 )
2025-01-10T13:23:47.9957203Z             if data.name:
2025-01-10T13:23:47.9957278Z                 assert (
2025-01-10T13:23:47.9957363Z                     data.name
2025-01-10T13:23:47.9957440Z                     == getattr(
2025-01-10T13:23:47.9957550Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9957643Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9957726Z                     ).decode()
2025-01-10T13:23:47.9957798Z                 )
2025-01-10T13:23:47.9957899Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9958043Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9958121Z             )
2025-01-10T13:23:47.9958219Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9958343Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9958423Z             )
2025-01-10T13:23:47.9958429Z 
2025-01-10T13:23:47.9958584Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9958711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9958715Z 
2025-01-10T13:23:47.9959191Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f251da0>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:23:47.9959302Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9959569Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9959761Z 
2025-01-10T13:23:47.9959851Z     @wraps(func)
2025-01-10T13:23:47.9959950Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9960039Z         with self._recreate_cm():
2025-01-10T13:23:47.9960135Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9960220Z E           AssertionError: 
2025-01-10T13:23:47.9960338Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9960413Z E           
2025-01-10T13:23:47.9960519Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:47.9960659Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:23:47.9960795Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:23:47.9960966Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9961064Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9961239Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9961442Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9961448Z 
2025-01-10T13:23:47.9961663Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9961871Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-01-10T13:23:47.9961875Z 
2025-01-10T13:23:47.9962148Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f500>
2025-01-10T13:23:47.9962467Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5ed5e0>
2025-01-10T13:23:47.9962572Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9962660Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9962773Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9962883Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:23:47.9963219Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9963481Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-01-10T13:23:47.9963486Z 
2025-01-10T13:23:47.9963574Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9963749Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9963821Z     ):
2025-01-10T13:23:47.9963923Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9964031Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9964213Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9964283Z     
2025-01-10T13:23:47.9964399Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9964502Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9964645Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9964760Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9964833Z             )
2025-01-10T13:23:47.9964913Z     
2025-01-10T13:23:47.9965016Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9965126Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9965213Z             if data.stackgroup:
2025-01-10T13:23:47.9965296Z                 assert (
2025-01-10T13:23:47.9965381Z                     data.stackgroup
2025-01-10T13:23:47.9965464Z                     == getattr(
2025-01-10T13:23:47.9965571Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9965675Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9965755Z                     ).decode()
2025-01-10T13:23:47.9965833Z                 )
2025-01-10T13:23:47.9965918Z             if data.name:
2025-01-10T13:23:47.9965995Z                 assert (
2025-01-10T13:23:47.9966078Z                     data.name
2025-01-10T13:23:47.9966155Z                     == getattr(
2025-01-10T13:23:47.9966263Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9966523Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9966606Z                     ).decode()
2025-01-10T13:23:47.9966679Z                 )
2025-01-10T13:23:47.9966777Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9966917Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9966995Z             )
2025-01-10T13:23:47.9967085Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9967209Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9967282Z             )
2025-01-10T13:23:47.9967287Z 
2025-01-10T13:23:47.9967445Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9967569Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9967574Z 
2025-01-10T13:23:47.9968147Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f253920>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:23:47.9968266Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9968526Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9968531Z 
2025-01-10T13:23:47.9968614Z     @wraps(func)
2025-01-10T13:23:47.9968700Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9968792Z         with self._recreate_cm():
2025-01-10T13:23:47.9968881Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9968972Z E           AssertionError: 
2025-01-10T13:23:47.9969086Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9969161Z E           
2025-01-10T13:23:47.9969264Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:47.9969404Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:23:47.9969539Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:23:47.9969716Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9969813Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9969985Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9970076Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9970081Z 
2025-01-10T13:23:47.9970287Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9970497Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-01-10T13:23:47.9970502Z 
2025-01-10T13:23:47.9970775Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f5c0>
2025-01-10T13:23:47.9971089Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5625a0>
2025-01-10T13:23:47.9971193Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9971287Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9971400Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9971505Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:23:47.9971718Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9971960Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-01-10T13:23:47.9971970Z 
2025-01-10T13:23:47.9972060Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9972233Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9972307Z     ):
2025-01-10T13:23:47.9972411Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9972521Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9972701Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9972771Z     
2025-01-10T13:23:47.9972890Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9973202Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9973352Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9973463Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9973541Z             )
2025-01-10T13:23:47.9973612Z     
2025-01-10T13:23:47.9973719Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9973831Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9973918Z             if data.stackgroup:
2025-01-10T13:23:47.9974000Z                 assert (
2025-01-10T13:23:47.9974085Z                     data.stackgroup
2025-01-10T13:23:47.9974170Z                     == getattr(
2025-01-10T13:23:47.9974280Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9974382Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9974463Z                     ).decode()
2025-01-10T13:23:47.9974666Z                 )
2025-01-10T13:23:47.9974753Z             if data.name:
2025-01-10T13:23:47.9974837Z                 assert (
2025-01-10T13:23:47.9974916Z                     data.name
2025-01-10T13:23:47.9974996Z                     == getattr(
2025-01-10T13:23:47.9975107Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9975207Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9975285Z                     ).decode()
2025-01-10T13:23:47.9975365Z                 )
2025-01-10T13:23:47.9975465Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9975598Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9975674Z             )
2025-01-10T13:23:47.9975767Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9975892Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9975963Z             )
2025-01-10T13:23:47.9975967Z 
2025-01-10T13:23:47.9976132Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9976251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9976256Z 
2025-01-10T13:23:47.9976730Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f252c00>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:23:47.9976839Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9977100Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9977105Z 
2025-01-10T13:23:47.9977189Z     @wraps(func)
2025-01-10T13:23:47.9977277Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9977369Z         with self._recreate_cm():
2025-01-10T13:23:47.9977456Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9977547Z E           AssertionError: 
2025-01-10T13:23:47.9977655Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9977740Z E           
2025-01-10T13:23:47.9977841Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:47.9977987Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:23:47.9978119Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:23:47.9978294Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9978390Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9978559Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9978653Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9978657Z 
2025-01-10T13:23:47.9978863Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9979075Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-01-10T13:23:47.9979080Z 
2025-01-10T13:23:47.9979500Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f680>
2025-01-10T13:23:47.9979828Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b59d2e0>
2025-01-10T13:23:47.9979931Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9980020Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9980131Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9980232Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:23:47.9980448Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9980692Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-01-10T13:23:47.9980697Z 
2025-01-10T13:23:47.9980791Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9980959Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9981038Z     ):
2025-01-10T13:23:47.9981240Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9981356Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9981528Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9981603Z     
2025-01-10T13:23:47.9981718Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9981812Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9981962Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9982069Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9982146Z             )
2025-01-10T13:23:47.9982216Z     
2025-01-10T13:23:47.9982323Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9982429Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9982522Z             if data.stackgroup:
2025-01-10T13:23:47.9982597Z                 assert (
2025-01-10T13:23:47.9982689Z                     data.stackgroup
2025-01-10T13:23:47.9982773Z                     == getattr(
2025-01-10T13:23:47.9982886Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9982986Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9983291Z                     ).decode()
2025-01-10T13:23:47.9983407Z                 )
2025-01-10T13:23:47.9983490Z             if data.name:
2025-01-10T13:23:47.9983571Z                 assert (
2025-01-10T13:23:47.9983650Z                     data.name
2025-01-10T13:23:47.9983730Z                     == getattr(
2025-01-10T13:23:47.9983836Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9983933Z                         "_" + str(index) + "name",
2025-01-10T13:23:47.9984011Z                     ).decode()
2025-01-10T13:23:47.9984087Z                 )
2025-01-10T13:23:47.9984180Z             np.testing.assert_allclose(
2025-01-10T13:23:47.9984312Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:47.9984391Z             )
2025-01-10T13:23:47.9984487Z >           np.testing.assert_allclose(
2025-01-10T13:23:47.9984608Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:47.9984684Z             )
2025-01-10T13:23:47.9984689Z 
2025-01-10T13:23:47.9984842Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:47.9984956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:47.9984960Z 
2025-01-10T13:23:47.9985437Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f23c540>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:23:47.9985539Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:47.9985803Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:47.9985809Z 
2025-01-10T13:23:47.9986018Z     @wraps(func)
2025-01-10T13:23:47.9986110Z     def inner(*args, **kwds):
2025-01-10T13:23:47.9986197Z         with self._recreate_cm():
2025-01-10T13:23:47.9986292Z >           return func(*args, **kwds)
2025-01-10T13:23:47.9986383Z E           AssertionError: 
2025-01-10T13:23:47.9986491Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:47.9986568Z E           
2025-01-10T13:23:47.9986678Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:47.9986823Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:23:47.9986957Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:23:47.9987129Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9987218Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9987394Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:23:47.9987588Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:47.9987595Z 
2025-01-10T13:23:47.9987809Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:47.9988015Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-01-10T13:23:47.9988029Z 
2025-01-10T13:23:47.9988295Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f740>
2025-01-10T13:23:47.9988617Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5219d0>
2025-01-10T13:23:47.9988713Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:47.9988807Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:47.9988910Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:47.9989014Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:23:47.9989221Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:47.9989477Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-01-10T13:23:47.9989482Z 
2025-01-10T13:23:47.9989575Z     def test_generate_plot_mpl(
2025-01-10T13:23:47.9989812Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:47.9989935Z     ):
2025-01-10T13:23:47.9990089Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:47.9990206Z         regression_data = RegressionData(request)
2025-01-10T13:23:47.9990379Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:47.9990453Z     
2025-01-10T13:23:47.9990565Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:47.9990669Z             np.testing.assert_array_equal(
2025-01-10T13:23:47.9990811Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:47.9990927Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:47.9990998Z             )
2025-01-10T13:23:47.9991080Z     
2025-01-10T13:23:47.9991185Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:47.9991298Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:47.9991392Z             if data.stackgroup:
2025-01-10T13:23:47.9991468Z                 assert (
2025-01-10T13:23:47.9991556Z                     data.stackgroup
2025-01-10T13:23:47.9991633Z                     == getattr(
2025-01-10T13:23:47.9991746Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:47.9991844Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:47.9991927Z                     ).decode()
2025-01-10T13:23:47.9991998Z                 )
2025-01-10T13:23:47.9992083Z             if data.name:
2025-01-10T13:23:47.9992158Z                 assert (
2025-01-10T13:23:47.9992240Z                     data.name
2025-01-10T13:23:47.9992316Z                     == getattr(
2025-01-10T13:23:47.9993200Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:47.9993339Z 
2025-01-10T13:23:47.9994006Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-01-10T13:23:47.9994011Z 
2025-01-10T13:23:47.9994334Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:47.9994338Z 
2025-01-10T13:23:47.9995035Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-01-10T13:23:47.9995040Z 
2025-01-10T13:23:47.9995353Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:47.9995357Z 
2025-01-10T13:23:47.9996148Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-01-10T13:23:47.9996156Z 
2025-01-10T13:23:47.9996467Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:47.9996471Z 
2025-01-10T13:23:47.9997128Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-01-10T13:23:47.9997133Z 
2025-01-10T13:23:47.9997443Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:47.9997447Z 
2025-01-10T13:23:47.9998085Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-01-10T13:23:47.9998097Z 
2025-01-10T13:23:47.9998409Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:47.9998413Z 
2025-01-10T13:23:47.9999092Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-01-10T13:23:47.9999101Z 
2025-01-10T13:23:47.9999403Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:47.9999407Z 
2025-01-10T13:23:48.0000050Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-01-10T13:23:48.0000055Z 
2025-01-10T13:23:48.0000358Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0000368Z 
2025-01-10T13:23:48.0001018Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-01-10T13:23:48.0001022Z 
2025-01-10T13:23:48.0001331Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0001335Z 
2025-01-10T13:23:48.0002011Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-01-10T13:23:48.0002016Z 
2025-01-10T13:23:48.0002326Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0002333Z 
2025-01-10T13:23:48.0002972Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5
2025-01-10T13:23:48.0003194Z 
2025-01-10T13:23:48.0003516Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0003521Z 
2025-01-10T13:23:48.0004215Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-01-10T13:23:48.0004220Z 
2025-01-10T13:23:48.0004527Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0004532Z 
2025-01-10T13:23:48.0005180Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-01-10T13:23:48.0005184Z 
2025-01-10T13:23:48.0005604Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0005609Z 
2025-01-10T13:23:48.0006256Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-01-10T13:23:48.0006260Z 
2025-01-10T13:23:48.0006573Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0006577Z 
2025-01-10T13:23:48.0007228Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-01-10T13:23:48.0007232Z 
2025-01-10T13:23:48.0007539Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0007544Z 
2025-01-10T13:23:48.0008190Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-01-10T13:23:48.0008194Z 
2025-01-10T13:23:48.0008497Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0008511Z 
2025-01-10T13:23:48.0009191Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-01-10T13:23:48.0009196Z 
2025-01-10T13:23:48.0009507Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0009512Z 
2025-01-10T13:23:48.0010157Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-01-10T13:23:48.0010163Z 
2025-01-10T13:23:48.0010471Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0010475Z 
2025-01-10T13:23:48.0011113Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-01-10T13:23:48.0011117Z 
2025-01-10T13:23:48.0011421Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0011425Z 
2025-01-10T13:23:48.0012113Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-01-10T13:23:48.0012117Z 
2025-01-10T13:23:48.0012430Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0012533Z 
2025-01-10T13:23:48.0013339Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-01-10T13:23:48.0013344Z 
2025-01-10T13:23:48.0013652Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0013656Z 
2025-01-10T13:23:48.0014335Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-01-10T13:23:48.0014344Z 
2025-01-10T13:23:48.0014646Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0014650Z 
2025-01-10T13:23:48.0015433Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-01-10T13:23:48.0015439Z 
2025-01-10T13:23:48.0015748Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0015752Z 
2025-01-10T13:23:48.0016387Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5
2025-01-10T13:23:48.0016392Z 
2025-01-10T13:23:48.0016703Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0016707Z 
2025-01-10T13:23:48.0017358Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-01-10T13:23:48.0017366Z 
2025-01-10T13:23:48.0017679Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0017683Z 
2025-01-10T13:23:48.0018367Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-01-10T13:23:48.0018377Z 
2025-01-10T13:23:48.0018680Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0018684Z 
2025-01-10T13:23:48.0019333Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-01-10T13:23:48.0019337Z 
2025-01-10T13:23:48.0019644Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0019650Z 
2025-01-10T13:23:48.0020342Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-01-10T13:23:48.0020346Z 
2025-01-10T13:23:48.0020660Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0020664Z 
2025-01-10T13:23:48.0021305Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-01-10T13:23:48.0021309Z 
2025-01-10T13:23:48.0021618Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0021622Z 
2025-01-10T13:23:48.0022265Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-01-10T13:23:48.0022386Z 
2025-01-10T13:23:48.0022697Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0022701Z 
2025-01-10T13:23:48.0023631Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-01-10T13:23:48.0023638Z 
2025-01-10T13:23:48.0023946Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0023957Z 
2025-01-10T13:23:48.0024597Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-01-10T13:23:48.0024734Z 
2025-01-10T13:23:48.0025049Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0025053Z 
2025-01-10T13:23:48.0025694Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-01-10T13:23:48.0025698Z 
2025-01-10T13:23:48.0026006Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0026011Z 
2025-01-10T13:23:48.0026659Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-01-10T13:23:48.0026663Z 
2025-01-10T13:23:48.0026968Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0026980Z 
2025-01-10T13:23:48.0027670Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-01-10T13:23:48.0027674Z 
2025-01-10T13:23:48.0027978Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0027988Z 
2025-01-10T13:23:48.0028665Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-01-10T13:23:48.0028669Z 
2025-01-10T13:23:48.0028979Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0028984Z 
2025-01-10T13:23:48.0029628Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-01-10T13:23:48.0029636Z 
2025-01-10T13:23:48.0029945Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0029949Z 
2025-01-10T13:23:48.0030636Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-01-10T13:23:48.0030640Z 
2025-01-10T13:23:48.0030942Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0030947Z 
2025-01-10T13:23:48.0031586Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-01-10T13:23:48.0031707Z 
2025-01-10T13:23:48.0032023Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0032027Z 
2025-01-10T13:23:48.0032709Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-01-10T13:23:48.0032714Z 
2025-01-10T13:23:48.0033154Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0033160Z 
2025-01-10T13:23:48.0033796Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-01-10T13:23:48.0033807Z 
2025-01-10T13:23:48.0034110Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0034229Z 
2025-01-10T13:23:48.0034918Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-01-10T13:23:48.0034922Z 
2025-01-10T13:23:48.0035224Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:23:48.0035228Z 
2025-01-10T13:23:48.0035875Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-01-10T13:23:48.0035879Z 
2025-01-10T13:23:48.0035996Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:48.0036091Z                         "_" + str(index) + "name",
2025-01-10T13:23:48.0036177Z                     ).decode()
2025-01-10T13:23:48.0036252Z                 )
2025-01-10T13:23:48.0036360Z             np.testing.assert_allclose(
2025-01-10T13:23:48.0036494Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:48.0036572Z             )
2025-01-10T13:23:48.0036664Z >           np.testing.assert_allclose(
2025-01-10T13:23:48.0036795Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:48.0036867Z             )
2025-01-10T13:23:48.0036871Z 
2025-01-10T13:23:48.0037027Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:48.0037152Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:48.0037156Z 
2025-01-10T13:23:48.0037623Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f23c680>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:23:48.0037733Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:48.0037996Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:48.0038004Z 
2025-01-10T13:23:48.0038087Z     @wraps(func)
2025-01-10T13:23:48.0038171Z     def inner(*args, **kwds):
2025-01-10T13:23:48.0038265Z         with self._recreate_cm():
2025-01-10T13:23:48.0038355Z >           return func(*args, **kwds)
2025-01-10T13:23:48.0038448Z E           AssertionError: 
2025-01-10T13:23:48.0038567Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0038641Z E           
2025-01-10T13:23:48.0038747Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0038889Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:23:48.0039030Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:23:48.0039200Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0039295Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0039591Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0039687Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0039691Z 
2025-01-10T13:23:48.0039895Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:48.0040106Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-01-10T13:23:48.0040110Z 
2025-01-10T13:23:48.0040385Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f800>
2025-01-10T13:23:48.0040703Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4b5ecfe0>
2025-01-10T13:23:48.0040809Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:48.0040898Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:48.0041009Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:48.0041114Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:23:48.0041446Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:48.0041695Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-01-10T13:23:48.0041705Z 
2025-01-10T13:23:48.0041794Z     def test_generate_plot_mpl(
2025-01-10T13:23:48.0041968Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:48.0042040Z     ):
2025-01-10T13:23:48.0042146Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:48.0042254Z         regression_data = RegressionData(request)
2025-01-10T13:23:48.0042432Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:48.0042503Z     
2025-01-10T13:23:48.0042619Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:48.0042715Z             np.testing.assert_array_equal(
2025-01-10T13:23:48.0042862Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:48.0042978Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:48.0043164Z             )
2025-01-10T13:23:48.0043237Z     
2025-01-10T13:23:48.0043344Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:48.0043458Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:48.0043546Z             if data.stackgroup:
2025-01-10T13:23:48.0043628Z                 assert (
2025-01-10T13:23:48.0043714Z                     data.stackgroup
2025-01-10T13:23:48.0043798Z                     == getattr(
2025-01-10T13:23:48.0043905Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:48.0044009Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:48.0044087Z                     ).decode()
2025-01-10T13:23:48.0044165Z                 )
2025-01-10T13:23:48.0044245Z             if data.name:
2025-01-10T13:23:48.0044327Z                 assert (
2025-01-10T13:23:48.0044407Z                     data.name
2025-01-10T13:23:48.0044496Z                     == getattr(
2025-01-10T13:23:48.0044602Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:48.0044700Z                         "_" + str(index) + "name",
2025-01-10T13:23:48.0044778Z                     ).decode()
2025-01-10T13:23:48.0044856Z                 )
2025-01-10T13:23:48.0044956Z             np.testing.assert_allclose(
2025-01-10T13:23:48.0045086Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:48.0045163Z             )
2025-01-10T13:23:48.0045254Z >           np.testing.assert_allclose(
2025-01-10T13:23:48.0045379Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:48.0045451Z             )
2025-01-10T13:23:48.0045455Z 
2025-01-10T13:23:48.0045605Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:48.0045726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:48.0045730Z 
2025-01-10T13:23:48.0046360Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f23ccc0>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:23:48.0046473Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:48.0046733Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:48.0046738Z 
2025-01-10T13:23:48.0046820Z     @wraps(func)
2025-01-10T13:23:48.0046905Z     def inner(*args, **kwds):
2025-01-10T13:23:48.0046998Z         with self._recreate_cm():
2025-01-10T13:23:48.0047087Z >           return func(*args, **kwds)
2025-01-10T13:23:48.0047177Z E           AssertionError: 
2025-01-10T13:23:48.0047286Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0047366Z E           
2025-01-10T13:23:48.0047468Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0047722Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:23:48.0047867Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:23:48.0048042Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0048136Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0048306Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0048400Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0048404Z 
2025-01-10T13:23:48.0048606Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:48.0048815Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-01-10T13:23:48.0048820Z 
2025-01-10T13:23:48.0049086Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fef6178f8c0>
2025-01-10T13:23:48.0049411Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7fef4c4ec440>
2025-01-10T13:23:48.0049517Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:23:48.0049608Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:23:48.0049716Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:23:48.0049816Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:23:48.0050028Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7fef50d76e40>)
2025-01-10T13:23:48.0050271Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-01-10T13:23:48.0050276Z 
2025-01-10T13:23:48.0050368Z     def test_generate_plot_mpl(
2025-01-10T13:23:48.0050536Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:23:48.0050614Z     ):
2025-01-10T13:23:48.0050711Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:23:48.0050822Z         regression_data = RegressionData(request)
2025-01-10T13:23:48.0050997Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:23:48.0051076Z     
2025-01-10T13:23:48.0051192Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:23:48.0051288Z             np.testing.assert_array_equal(
2025-01-10T13:23:48.0051435Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:23:48.0051543Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:23:48.0051622Z             )
2025-01-10T13:23:48.0051691Z     
2025-01-10T13:23:48.0051801Z         for index, data in enumerate(fig.data):
2025-01-10T13:23:48.0051909Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:23:48.0052001Z             if data.stackgroup:
2025-01-10T13:23:48.0052078Z                 assert (
2025-01-10T13:23:48.0052167Z                     data.stackgroup
2025-01-10T13:23:48.0052244Z                     == getattr(
2025-01-10T13:23:48.0052356Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:48.0052553Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:23:48.0052638Z                     ).decode()
2025-01-10T13:23:48.0052716Z                 )
2025-01-10T13:23:48.0052797Z             if data.name:
2025-01-10T13:23:48.0052877Z                 assert (
2025-01-10T13:23:48.0052957Z                     data.name
2025-01-10T13:23:48.0053154Z                     == getattr(
2025-01-10T13:23:48.0053261Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:23:48.0053358Z                         "_" + str(index) + "name",
2025-01-10T13:23:48.0053433Z                     ).decode()
2025-01-10T13:23:48.0053510Z                 )
2025-01-10T13:23:48.0053605Z             np.testing.assert_allclose(
2025-01-10T13:23:48.0053737Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:23:48.0053809Z             )
2025-01-10T13:23:48.0053908Z >           np.testing.assert_allclose(
2025-01-10T13:23:48.0054031Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:23:48.0054234Z             )
2025-01-10T13:23:48.0054239Z 
2025-01-10T13:23:48.0054392Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:23:48.0054507Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:23:48.0054511Z 
2025-01-10T13:23:48.0054982Z args = (<function assert_allclose.<locals>.compare at 0x7fef1f23c220>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:23:48.0055082Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:23:48.0055344Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:23:48.0055348Z 
2025-01-10T13:23:48.0055424Z     @wraps(func)
2025-01-10T13:23:48.0055512Z     def inner(*args, **kwds):
2025-01-10T13:23:48.0055601Z         with self._recreate_cm():
2025-01-10T13:23:48.0055694Z >           return func(*args, **kwds)
2025-01-10T13:23:48.0055791Z E           AssertionError: 
2025-01-10T13:23:48.0055901Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0055980Z E           
2025-01-10T13:23:48.0056083Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0056231Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:23:48.0056369Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:23:48.0056545Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0056637Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0056815Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0056903Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0056907Z 
2025-01-10T13:23:48.0057116Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:23:48.0057247Z =============================== warnings summary ===============================
2025-01-10T13:23:48.0057367Z tardis/io/configuration/config_validator.py:6
2025-01-10T13:23:48.0057489Z tardis/io/configuration/config_validator.py:6
2025-01-10T13:23:48.0057795Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-10T13:23:48.0057876Z   
2025-01-10T13:23:48.0058994Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-10T13:23:48.0058999Z 
2025-01-10T13:23:48.0059240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-10T13:23:48.0059608Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-10T13:23:48.0059803Z   
2025-01-10T13:23:48.0059962Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-10T13:23:48.0060116Z   given by the platformdirs library.  To remove this warning and
2025-01-10T13:23:48.0060285Z   see the appropriate new directories, set the environment variable
2025-01-10T13:23:48.0060438Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-10T13:23:48.0060598Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-10T13:23:48.0060603Z 
2025-01-10T13:23:48.0060704Z tardis/plasma/properties/__init__.py:17
2025-01-10T13:23:48.0060987Z   /home/runner/work/tardis/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
2025-01-10T13:23:48.0061057Z   
2025-01-10T13:23:48.0061700Z   The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.
2025-01-10T13:23:48.0061709Z 
2025-01-10T13:23:48.0066831Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-10T13:23:48.0067129Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:23:48.0067369Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-10T13:23:48.0067442Z   
2025-01-10T13:23:48.0067516Z   
2025-01-10T13:23:48.0067732Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:23:48.0067995Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T13:23:48.0068001Z 
2025-01-10T13:23:48.0068213Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-10T13:23:48.0068433Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-10T13:23:48.0068672Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-10T13:23:48.0068871Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-10T13:23:48.0069193Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-10T13:23:48.0069264Z   
2025-01-10T13:23:48.0069387Z   The current CMFGEN model parser is deprecated
2025-01-10T13:23:48.0069392Z 
2025-01-10T13:23:48.0069505Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-10T13:23:48.0069688Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-10T13:23:48.0069999Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-10T13:23:48.0070073Z   
2025-01-10T13:23:48.0070189Z   The current CMFGEN model parser is deprecated
2025-01-10T13:23:48.0070193Z 
2025-01-10T13:23:48.0070400Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-10T13:23:48.0070788Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-10T13:23:48.0070860Z   
2025-01-10T13:23:48.0071312Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-10T13:23:48.0071317Z 
2025-01-10T13:23:48.0071422Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T13:23:48.0071548Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T13:23:48.0071727Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T13:23:48.0071998Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-10T13:23:48.0072072Z   
2025-01-10T13:23:48.0072179Z   v_inner_boundary < 0, assuming default value
2025-01-10T13:23:48.0072183Z 
2025-01-10T13:23:48.0072289Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T13:23:48.0072403Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T13:23:48.0072584Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T13:23:48.0073290Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-10T13:23:48.0073425Z   
2025-01-10T13:23:48.0073583Z   v_outer_boundary < 0, assuming default value
2025-01-10T13:23:48.0073588Z 
2025-01-10T13:23:48.0073934Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:23:48.0074251Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:23:48.0074570Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:23:48.0074879Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:23:48.0075420Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_simple[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:23:48.0076086Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_empty[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:23:48.0076619Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_zeros[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:23:48.0077062Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:23:48.0077428Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:23:48.0077676Z   /home/runner/micromamba/envs/tardis/lib/python3.12/pickle.py:323: DeprecationWarning:
2025-01-10T13:23:48.0077749Z   
2025-01-10T13:23:48.0079145Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T13:23:48.0079157Z 
2025-01-10T13:23:48.0079602Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:23:48.0079903Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-10T13:23:48.0079972Z   
2025-01-10T13:23:48.0080251Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-10T13:23:48.0080691Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-10T13:23:48.0080771Z   
2025-01-10T13:23:48.0081284Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-10T13:23:48.0081289Z 
2025-01-10T13:23:48.0081658Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:23:48.0081982Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1374: DeprecationWarning:
2025-01-10T13:23:48.0082050Z   
2025-01-10T13:23:48.0083577Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T13:23:48.0083705Z 
2025-01-10T13:23:48.0083864Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-10T13:23:48.0084151Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:23:48.0084228Z   
2025-01-10T13:23:48.0084320Z   Property "atomic_mass" not found
2025-01-10T13:23:48.0084324Z 
2025-01-10T13:23:48.0084754Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-10T13:23:48.0085124Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-10T13:23:48.0085402Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:23:48.0085474Z   
2025-01-10T13:23:48.0085687Z   Property "j_blues_norm_factor" not found
2025-01-10T13:23:48.0085692Z 
2025-01-10T13:23:48.0086110Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-10T13:23:48.0086479Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-10T13:23:48.0086752Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:23:48.0086820Z   
2025-01-10T13:23:48.0086927Z   Property "j_blue_estimator" not found
2025-01-10T13:23:48.0086931Z 
2025-01-10T13:23:48.0087309Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-10T13:23:48.0087644Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-10T13:23:48.0087923Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:23:48.0087998Z   
2025-01-10T13:23:48.0088087Z   Property "volume" not found
2025-01-10T13:23:48.0088097Z 
2025-01-10T13:23:48.0088480Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-10T13:23:48.0088818Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-10T13:23:48.0089087Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:23:48.0089162Z   
2025-01-10T13:23:48.0089249Z   Property "r_inner" not found
2025-01-10T13:23:48.0089253Z 
2025-01-10T13:23:48.0089476Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-10T13:23:48.0089685Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-10T13:23:48.0089896Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-10T13:23:48.0090135Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-10T13:23:48.0090204Z   
2025-01-10T13:23:48.0090401Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-10T13:23:48.0090406Z 
2025-01-10T13:23:48.0090637Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100.0]
2025-01-10T13:23:48.0090874Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[1000.0]
2025-01-10T13:23:48.0091106Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[10000.0]
2025-01-10T13:23:48.0091348Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100000.0]
2025-01-10T13:23:48.0091676Z   /home/runner/work/tardis/tardis/tardis/spectrum/tests/test_numba_formal_integral.py:35: DeprecationWarning:
2025-01-10T13:23:48.0091836Z   
2025-01-10T13:23:48.0092137Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T13:23:48.0092142Z 
2025-01-10T13:23:48.0092353Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T13:23:48.0092554Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-10T13:23:48.0092625Z   
2025-01-10T13:23:48.0092946Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-10T13:23:48.0092951Z 
2025-01-10T13:23:48.0093267Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T13:23:48.0093474Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-10T13:23:48.0093543Z   
2025-01-10T13:23:48.0093889Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-10T13:23:48.0093898Z 
2025-01-10T13:23:48.0094215Z tardis/tests/test_util.py::test_calculate_luminosity[string_io0-100 km-result0]
2025-01-10T13:23:48.0094414Z tardis/tests/test_util.py::test_calculate_luminosity[string_io1-500 km-result1]
2025-01-10T13:23:48.0094628Z   /home/runner/work/tardis/tardis/tardis/util/base.py:188: DeprecationWarning:
2025-01-10T13:23:48.0094697Z   
2025-01-10T13:23:48.0094986Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T13:23:48.0094991Z 
2025-01-10T13:23:48.0095159Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:23:48.0095454Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:736: DeprecationWarning:
2025-01-10T13:23:48.0095522Z   
2025-01-10T13:23:48.0095632Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:23:48.0095637Z 
2025-01-10T13:23:48.0095805Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:23:48.0096095Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:758: DeprecationWarning:
2025-01-10T13:23:48.0096168Z   
2025-01-10T13:23:48.0096268Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:23:48.0096273Z 
2025-01-10T13:23:48.0096436Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:23:48.0096717Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:779: DeprecationWarning:
2025-01-10T13:23:48.0096790Z   
2025-01-10T13:23:48.0096888Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:23:48.0096893Z 
2025-01-10T13:23:48.0097227Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-01-10T13:23:48.0097507Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-01-10T13:23:48.0097576Z   
2025-01-10T13:23:48.0098425Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-01-10T13:23:48.0098432Z 
2025-01-10T13:23:48.0098779Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0099126Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0099459Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0099798Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0100139Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0100476Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0100998Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:23:48.0101067Z   
2025-01-10T13:23:48.0101265Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-10T13:23:48.0101439Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:23:48.0101676Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:23:48.0101681Z 
2025-01-10T13:23:48.0102061Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0102396Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0102821Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:23:48.0102896Z   
2025-01-10T13:23:48.0103182Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-10T13:23:48.0103355Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:23:48.0103590Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:23:48.0103595Z 
2025-01-10T13:23:48.0103934Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:23:48.0104277Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:23:48.0104352Z   
2025-01-10T13:23:48.0104526Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-10T13:23:48.0104701Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:23:48.0104931Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:23:48.0104940Z 
2025-01-10T13:23:48.0105365Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-10T13:23:48.0105679Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-10T13:23:48.0105752Z   
2025-01-10T13:23:48.0106021Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-10T13:23:48.0106030Z 
2025-01-10T13:23:48.0106283Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:23:48.0106491Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-10T13:23:48.0106559Z   
2025-01-10T13:23:48.0106631Z   
2025-01-10T13:23:48.0106834Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:23:48.0107097Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T13:23:48.0107102Z 
2025-01-10T13:23:48.0107352Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:23:48.0107561Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-10T13:23:48.0107630Z   
2025-01-10T13:23:48.0107703Z   
2025-01-10T13:23:48.0107907Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:23:48.0108084Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-10T13:23:48.0108088Z 
2025-01-10T13:23:48.0108344Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:23:48.0108582Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-10T13:23:48.0108657Z   
2025-01-10T13:23:48.0108842Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-10T13:23:48.0108978Z 
2025-01-10T13:23:48.0109188Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-10T13:23:48.0109192Z 
2025-01-10T13:23:48.0109359Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-10T13:23:48.0109486Z Coverage HTML written to dir coverage_html_report
2025-01-10T13:23:48.0109592Z Coverage XML written to file coverage.xml
2025-01-10T13:23:48.0109596Z 
2025-01-10T13:23:48.0109722Z =========================== short test summary info ============================
2025-01-10T13:23:48.0110129Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-01-10T13:23:48.0110134Z 
2025-01-10T13:23:48.0110268Z MultiIndex level [0] values are different (0.09581 %)
2025-01-10T13:23:48.0110387Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:23:48.0110460Z        ...
2025-01-10T13:23:48.0110661Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:23:48.0110788Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:23:48.0110906Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:23:48.0110981Z        ...
2025-01-10T13:23:48.0111065Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:23:48.0111185Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:23:48.0111288Z At positional index 54, first diff: 12 != 14
2025-01-10T13:23:48.0111569Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-01-10T13:23:48.0111667Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0111672Z 
2025-01-10T13:23:48.0111772Z Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:23:48.0111897Z Max absolute difference among violations: 0.99984222
2025-01-10T13:23:48.0112026Z Max relative difference among violations: 6337.12154973
2025-01-10T13:23:48.0112122Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:48.0112217Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:48.0112297Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:23:48.0112401Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:48.0112484Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:48.0112560Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:23:48.0113257Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0113265Z 
2025-01-10T13:23:48.0113477Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0113653Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0113756Z        ...
2025-01-10T13:23:48.0113849Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0113976Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0114092Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0114172Z        ...
2025-01-10T13:23:48.0114258Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0114389Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0114491Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0115000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0115006Z 
2025-01-10T13:23:48.0115099Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0115466Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0115945Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0116268Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0116769Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0116774Z 
2025-01-10T13:23:48.0116972Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0117338Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0117704Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0118076Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0118548Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0118554Z 
2025-01-10T13:23:48.0118684Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0118791Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0118867Z        ...
2025-01-10T13:23:48.0118951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0119080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0119190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0119274Z        ...
2025-01-10T13:23:48.0119365Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0119488Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0119594Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0120104Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0120109Z 
2025-01-10T13:23:48.0120238Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0120343Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0120419Z        ...
2025-01-10T13:23:48.0120499Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0120624Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0120731Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0120807Z        ...
2025-01-10T13:23:48.0121004Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0121130Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0121239Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0121718Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0121723Z 
2025-01-10T13:23:48.0121850Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0121954Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0122029Z        ...
2025-01-10T13:23:48.0122110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0122236Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0122344Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0122425Z        ...
2025-01-10T13:23:48.0122512Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0122755Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0122864Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0123518Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0123527Z 
2025-01-10T13:23:48.0123655Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0123759Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0123835Z        ...
2025-01-10T13:23:48.0123917Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0124041Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0124149Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0124223Z        ...
2025-01-10T13:23:48.0124312Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0124437Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0124552Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0125054Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0125058Z 
2025-01-10T13:23:48.0125186Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0125290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0125365Z        ...
2025-01-10T13:23:48.0125445Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0125574Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0125683Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0125760Z        ...
2025-01-10T13:23:48.0125847Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0125973Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0126085Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0126582Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0126587Z 
2025-01-10T13:23:48.0126712Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0126817Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0126893Z        ...
2025-01-10T13:23:48.0126977Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0127101Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0127216Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0127291Z        ...
2025-01-10T13:23:48.0127373Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0127496Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0127598Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0128255Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0128260Z 
2025-01-10T13:23:48.0128388Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0128492Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0128566Z        ...
2025-01-10T13:23:48.0128647Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0128770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0128878Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0128952Z        ...
2025-01-10T13:23:48.0129032Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0129156Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0129258Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0129847Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0129855Z 
2025-01-10T13:23:48.0129957Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0130321Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0130660Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0130990Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0131468Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0131472Z 
2025-01-10T13:23:48.0131569Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0131935Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0132297Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0132667Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0133341Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0133347Z 
2025-01-10T13:23:48.0133472Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0133582Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0133652Z        ...
2025-01-10T13:23:48.0133741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0133863Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0133977Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0134052Z        ...
2025-01-10T13:23:48.0134134Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0134259Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0134360Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0134973Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0134982Z 
2025-01-10T13:23:48.0135106Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0135218Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0135289Z        ...
2025-01-10T13:23:48.0135375Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0135494Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0135610Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0135685Z        ...
2025-01-10T13:23:48.0135765Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0135889Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0135985Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0136453Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0136460Z 
2025-01-10T13:23:48.0136583Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0136694Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0136762Z        ...
2025-01-10T13:23:48.0136851Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0136969Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0137089Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0137158Z        ...
2025-01-10T13:23:48.0137246Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0137369Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0137467Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0137957Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0137968Z 
2025-01-10T13:23:48.0138091Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0138199Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0138268Z        ...
2025-01-10T13:23:48.0138354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0138475Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0138587Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0138656Z        ...
2025-01-10T13:23:48.0138742Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0138865Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0138962Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0139463Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0139468Z 
2025-01-10T13:23:48.0139723Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0139838Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0139911Z        ...
2025-01-10T13:23:48.0139998Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0140119Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0140235Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0140311Z        ...
2025-01-10T13:23:48.0140398Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0140523Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0140622Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0141102Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0141107Z 
2025-01-10T13:23:48.0141228Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0141431Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0141505Z        ...
2025-01-10T13:23:48.0141596Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0141715Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0141830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0141901Z        ...
2025-01-10T13:23:48.0141992Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0142119Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0142216Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0142683Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0142688Z 
2025-01-10T13:23:48.0142810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0142922Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0142998Z        ...
2025-01-10T13:23:48.0143202Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0143325Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0143438Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0143507Z        ...
2025-01-10T13:23:48.0143595Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0143721Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0143818Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0144301Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0144305Z 
2025-01-10T13:23:48.0144397Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0144771Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0145105Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0145432Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0146039Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0146043Z 
2025-01-10T13:23:48.0146137Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0146499Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0146990Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0147366Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0147819Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0147823Z 
2025-01-10T13:23:48.0147949Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0148053Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0148137Z        ...
2025-01-10T13:23:48.0148220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0148348Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0148457Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0148535Z        ...
2025-01-10T13:23:48.0148624Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0148746Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0148850Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0149337Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0149342Z 
2025-01-10T13:23:48.0149469Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0149575Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0149651Z        ...
2025-01-10T13:23:48.0149740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0149867Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0149976Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0150055Z        ...
2025-01-10T13:23:48.0150144Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0150261Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0150364Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0150818Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0150823Z 
2025-01-10T13:23:48.0150950Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0151053Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0151132Z        ...
2025-01-10T13:23:48.0151214Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0151430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0151537Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0151614Z        ...
2025-01-10T13:23:48.0151699Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0151818Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0151920Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0152403Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0152408Z 
2025-01-10T13:23:48.0152536Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0152641Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0152718Z        ...
2025-01-10T13:23:48.0152799Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0153008Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0153363Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0153493Z        ...
2025-01-10T13:23:48.0153591Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0153719Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0153829Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0154318Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0154323Z 
2025-01-10T13:23:48.0154454Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0154560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0154638Z        ...
2025-01-10T13:23:48.0154722Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0154852Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0154970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0155049Z        ...
2025-01-10T13:23:48.0155137Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0155257Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0155363Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0155834Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0155839Z 
2025-01-10T13:23:48.0155968Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0156074Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0156148Z        ...
2025-01-10T13:23:48.0156231Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0156358Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0156466Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0156549Z        ...
2025-01-10T13:23:48.0156633Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0156759Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0156865Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0157358Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0157364Z 
2025-01-10T13:23:48.0157493Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0157598Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0157675Z        ...
2025-01-10T13:23:48.0157758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0157882Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0157989Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0158063Z        ...
2025-01-10T13:23:48.0158293Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0158420Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0158528Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0159044Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0159049Z 
2025-01-10T13:23:48.0159149Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0159507Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0159935Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0160270Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0160779Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0160784Z 
2025-01-10T13:23:48.0160881Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0161248Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0161610Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0161984Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0162469Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0162474Z 
2025-01-10T13:23:48.0162598Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0162710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0162780Z        ...
2025-01-10T13:23:48.0162870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0162991Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0163248Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0163332Z        ...
2025-01-10T13:23:48.0163537Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0163665Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0163763Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0164296Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0164301Z 
2025-01-10T13:23:48.0164424Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0164537Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0164606Z        ...
2025-01-10T13:23:48.0164694Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0164815Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0164928Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0165003Z        ...
2025-01-10T13:23:48.0165085Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0165317Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0165421Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0165907Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0165912Z 
2025-01-10T13:23:48.0166033Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0166146Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0166216Z        ...
2025-01-10T13:23:48.0166303Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0166422Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0166537Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0166613Z        ...
2025-01-10T13:23:48.0166694Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0166824Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0166929Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0167452Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0167457Z 
2025-01-10T13:23:48.0167579Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0167690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0167760Z        ...
2025-01-10T13:23:48.0167853Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0167974Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0168090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0168165Z        ...
2025-01-10T13:23:48.0168245Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0168372Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0168476Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0168994Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0168998Z 
2025-01-10T13:23:48.0169121Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0169235Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0169306Z        ...
2025-01-10T13:23:48.0169395Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0169515Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0169629Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0169703Z        ...
2025-01-10T13:23:48.0169791Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0169918Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0170017Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0170605Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0170610Z 
2025-01-10T13:23:48.0170730Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0170842Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0170911Z        ...
2025-01-10T13:23:48.0170999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0171120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0171239Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0171309Z        ...
2025-01-10T13:23:48.0171397Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0171519Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0171618Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0172300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0172309Z 
2025-01-10T13:23:48.0172433Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0172545Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0172614Z        ...
2025-01-10T13:23:48.0172702Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0172819Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0172930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0172998Z        ...
2025-01-10T13:23:48.0173187Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0173312Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0173414Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0173996Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0174004Z 
2025-01-10T13:23:48.0174095Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0174461Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0174792Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0175114Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0175691Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0175696Z 
2025-01-10T13:23:48.0175794Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0176153Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0176642Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0177109Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0177662Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0177667Z 
2025-01-10T13:23:48.0177796Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0177901Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0177977Z        ...
2025-01-10T13:23:48.0178059Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0178187Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0178300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0178369Z        ...
2025-01-10T13:23:48.0178459Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0178578Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0178682Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0179272Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0179278Z 
2025-01-10T13:23:48.0179405Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0179510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0179588Z        ...
2025-01-10T13:23:48.0179670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0179796Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0179908Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0179980Z        ...
2025-01-10T13:23:48.0180067Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0180189Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0180296Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0180843Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0180848Z 
2025-01-10T13:23:48.0180977Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0181081Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0181158Z        ...
2025-01-10T13:23:48.0181239Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0181365Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0181480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0181551Z        ...
2025-01-10T13:23:48.0181637Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0181756Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0181862Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0182441Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0182586Z 
2025-01-10T13:23:48.0182726Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0182831Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0182909Z        ...
2025-01-10T13:23:48.0182990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0183220Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0183338Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0183408Z        ...
2025-01-10T13:23:48.0183497Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0183617Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0183721Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0184416Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0184424Z 
2025-01-10T13:23:48.0184559Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0184665Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0184744Z        ...
2025-01-10T13:23:48.0184832Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0184952Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0185064Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0185134Z        ...
2025-01-10T13:23:48.0185219Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0185338Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0185440Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0186004Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0186012Z 
2025-01-10T13:23:48.0186139Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0186245Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0186320Z        ...
2025-01-10T13:23:48.0186411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0186529Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0186641Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0186711Z        ...
2025-01-10T13:23:48.0186795Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0186915Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0187017Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0187534Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0187541Z 
2025-01-10T13:23:48.0187669Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0187773Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0187848Z        ...
2025-01-10T13:23:48.0187934Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0188053Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0188165Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0188234Z        ...
2025-01-10T13:23:48.0188322Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0188440Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0188543Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0189071Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0189195Z 
2025-01-10T13:23:48.0189295Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0189657Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0189979Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0190380Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0190920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0190925Z 
2025-01-10T13:23:48.0191020Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0191386Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0191757Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0192126Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0192632Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0192639Z 
2025-01-10T13:23:48.0192761Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0192873Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0192948Z        ...
2025-01-10T13:23:48.0193126Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0193257Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0193373Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0193449Z        ...
2025-01-10T13:23:48.0193531Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0193656Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0193756Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0194309Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0194452Z 
2025-01-10T13:23:48.0194579Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0194691Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0194768Z        ...
2025-01-10T13:23:48.0194850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0194975Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0195085Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0195163Z        ...
2025-01-10T13:23:48.0195243Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0195368Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0195466Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0195977Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0196090Z 
2025-01-10T13:23:48.0196217Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0196341Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0196419Z        ...
2025-01-10T13:23:48.0196499Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0196629Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0196737Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0196813Z        ...
2025-01-10T13:23:48.0196895Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0197023Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0197120Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0197658Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0197663Z 
2025-01-10T13:23:48.0197793Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0197904Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0197981Z        ...
2025-01-10T13:23:48.0198061Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0198189Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0198298Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0198373Z        ...
2025-01-10T13:23:48.0198454Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0198578Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0198679Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0199220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0199224Z 
2025-01-10T13:23:48.0199348Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0199466Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0199540Z        ...
2025-01-10T13:23:48.0199621Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0199747Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0199853Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0199930Z        ...
2025-01-10T13:23:48.0200010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0200133Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0200230Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0200748Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0200752Z 
2025-01-10T13:23:48.0200875Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0201083Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0201159Z        ...
2025-01-10T13:23:48.0201241Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0201366Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0201476Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0201553Z        ...
2025-01-10T13:23:48.0201633Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0201756Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0201854Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0202407Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0202412Z 
2025-01-10T13:23:48.0202535Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0202645Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0202801Z        ...
2025-01-10T13:23:48.0202884Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0203007Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0203215Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0203293Z        ...
2025-01-10T13:23:48.0203375Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0203500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0203598Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0204133Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0204138Z 
2025-01-10T13:23:48.0204230Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0204599Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0204926Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0205248Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0205790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0205795Z 
2025-01-10T13:23:48.0205896Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0206253Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0206624Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0207118Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0207619Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0207630Z 
2025-01-10T13:23:48.0207752Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0207972Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0208046Z        ...
2025-01-10T13:23:48.0208136Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0208260Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0208375Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0208451Z        ...
2025-01-10T13:23:48.0208540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0208660Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0208765Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0209309Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0209320Z 
2025-01-10T13:23:48.0209443Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0209855Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0209992Z        ...
2025-01-10T13:23:48.0217235Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0217428Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0217559Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0217634Z        ...
2025-01-10T13:23:48.0217729Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0217857Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0217970Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0218510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0218520Z 
2025-01-10T13:23:48.0218657Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0218774Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0218846Z        ...
2025-01-10T13:23:48.0218953Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0219080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0219193Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0219263Z        ...
2025-01-10T13:23:48.0219347Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0219466Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0219570Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0220124Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0220134Z 
2025-01-10T13:23:48.0220263Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0220373Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0220443Z        ...
2025-01-10T13:23:48.0220530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0220838Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0220948Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0221017Z        ...
2025-01-10T13:23:48.0221099Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0221216Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0221320Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0221867Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0221877Z 
2025-01-10T13:23:48.0222002Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0222112Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0222184Z        ...
2025-01-10T13:23:48.0222270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0222500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0222617Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0222690Z        ...
2025-01-10T13:23:48.0222776Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0222896Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0223001Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0223703Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0223713Z 
2025-01-10T13:23:48.0223837Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0223948Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0224018Z        ...
2025-01-10T13:23:48.0224105Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0224229Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0224345Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0224416Z        ...
2025-01-10T13:23:48.0224503Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0224621Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0224724Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0225264Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0225273Z 
2025-01-10T13:23:48.0225395Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0225506Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0225578Z        ...
2025-01-10T13:23:48.0225667Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0225785Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0225904Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0225976Z        ...
2025-01-10T13:23:48.0226065Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0226183Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0226285Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0226847Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0226857Z 
2025-01-10T13:23:48.0226952Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0227334Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0227789Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0228115Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0228789Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0228797Z 
2025-01-10T13:23:48.0228899Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0229267Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0229640Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0230014Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0230554Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0230559Z 
2025-01-10T13:23:48.0230701Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0230817Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0230896Z        ...
2025-01-10T13:23:48.0230985Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0231124Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0231239Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0231316Z        ...
2025-01-10T13:23:48.0231403Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0231530Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0231636Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0232231Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0232236Z 
2025-01-10T13:23:48.0232371Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0232481Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0232556Z        ...
2025-01-10T13:23:48.0232641Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0232770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0232970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0233161Z        ...
2025-01-10T13:23:48.0233248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0233373Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0233479Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0234028Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0234033Z 
2025-01-10T13:23:48.0234162Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0234269Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0234345Z        ...
2025-01-10T13:23:48.0234426Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0234550Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0234781Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0234860Z        ...
2025-01-10T13:23:48.0234944Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0235076Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0235178Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0235758Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0235763Z 
2025-01-10T13:23:48.0235890Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0235995Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0236072Z        ...
2025-01-10T13:23:48.0236153Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0236278Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0236385Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0236469Z        ...
2025-01-10T13:23:48.0236551Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0236674Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0236779Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0237351Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0237356Z 
2025-01-10T13:23:48.0237481Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0237586Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0237661Z        ...
2025-01-10T13:23:48.0237743Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0237869Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0237976Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0238060Z        ...
2025-01-10T13:23:48.0238142Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0238267Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0238371Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0238917Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0238922Z 
2025-01-10T13:23:48.0239049Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0239154Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0239231Z        ...
2025-01-10T13:23:48.0239313Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0239440Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0239547Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0239623Z        ...
2025-01-10T13:23:48.0239830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0239956Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0240060Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0240579Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0240584Z 
2025-01-10T13:23:48.0240711Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0240815Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0240891Z        ...
2025-01-10T13:23:48.0240971Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0241096Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0241202Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0241278Z        ...
2025-01-10T13:23:48.0241361Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0241590Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0241695Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0242226Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0242231Z 
2025-01-10T13:23:48.0242330Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0242691Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0243147Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0243480Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0244005Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0244010Z 
2025-01-10T13:23:48.0244108Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0244478Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0244843Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0245216Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0245848Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0245852Z 
2025-01-10T13:23:48.0245977Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0246087Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0246158Z        ...
2025-01-10T13:23:48.0246246Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0246369Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0246482Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0246554Z        ...
2025-01-10T13:23:48.0246746Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0246876Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0246976Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0247519Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0247524Z 
2025-01-10T13:23:48.0247647Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0247758Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0247829Z        ...
2025-01-10T13:23:48.0247917Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0248036Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0248148Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0248219Z        ...
2025-01-10T13:23:48.0248305Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0248437Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0248538Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0249046Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0249050Z 
2025-01-10T13:23:48.0249173Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0249282Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0249352Z        ...
2025-01-10T13:23:48.0249439Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0249559Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0249672Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0249742Z        ...
2025-01-10T13:23:48.0249828Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0249958Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0250063Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0250597Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0250602Z 
2025-01-10T13:23:48.0250728Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0250841Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0250912Z        ...
2025-01-10T13:23:48.0251002Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0251128Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0251244Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0251315Z        ...
2025-01-10T13:23:48.0251405Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0251529Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0251748Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0252268Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0252272Z 
2025-01-10T13:23:48.0252395Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0252504Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0252576Z        ...
2025-01-10T13:23:48.0252662Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0252783Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0252896Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0252966Z        ...
2025-01-10T13:23:48.0253265Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0253463Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0253569Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0254247Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0254253Z 
2025-01-10T13:23:48.0254381Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0254492Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0254563Z        ...
2025-01-10T13:23:48.0254652Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0254774Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0254886Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0254957Z        ...
2025-01-10T13:23:48.0255044Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0255169Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0255268Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0255811Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0255817Z 
2025-01-10T13:23:48.0255912Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0256277Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0256611Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0256937Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0257473Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0257477Z 
2025-01-10T13:23:48.0257576Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0257936Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0258421Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0258862Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0259373Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0259377Z 
2025-01-10T13:23:48.0259508Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0259614Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0259690Z        ...
2025-01-10T13:23:48.0259773Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0259901Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0260014Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0260085Z        ...
2025-01-10T13:23:48.0260174Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0260295Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0260398Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0260951Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0260956Z 
2025-01-10T13:23:48.0261085Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0261191Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0261267Z        ...
2025-01-10T13:23:48.0261350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0261476Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0261593Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0261665Z        ...
2025-01-10T13:23:48.0261752Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0261872Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0261975Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0262490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0262495Z 
2025-01-10T13:23:48.0262623Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0262727Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0262803Z        ...
2025-01-10T13:23:48.0262885Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0263010Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0263267Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0263346Z        ...
2025-01-10T13:23:48.0263431Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0263551Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0263653Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0264194Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0264357Z 
2025-01-10T13:23:48.0264489Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0264593Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0264669Z        ...
2025-01-10T13:23:48.0264750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0264873Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0264981Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0265056Z        ...
2025-01-10T13:23:48.0265143Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0265264Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0265366Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0266013Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0266038Z 
2025-01-10T13:23:48.0266169Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0266287Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0266361Z        ...
2025-01-10T13:23:48.0266451Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0266573Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0266688Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0266760Z        ...
2025-01-10T13:23:48.0266852Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0266973Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0267082Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0267605Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0267620Z 
2025-01-10T13:23:48.0267747Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0267857Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0267929Z        ...
2025-01-10T13:23:48.0268018Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0268142Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0268256Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0268330Z        ...
2025-01-10T13:23:48.0268419Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0268538Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0268645Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0269168Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0269184Z 
2025-01-10T13:23:48.0269308Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0269417Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0269489Z        ...
2025-01-10T13:23:48.0269575Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0269695Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0269808Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0269881Z        ...
2025-01-10T13:23:48.0269966Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0270084Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0270189Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0270726Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0270838Z 
2025-01-10T13:23:48.0270940Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0271306Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0271637Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0272047Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0272597Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0272601Z 
2025-01-10T13:23:48.0272696Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0273186Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0273567Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0273936Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0274457Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0274464Z 
2025-01-10T13:23:48.0274595Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0274701Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0274781Z        ...
2025-01-10T13:23:48.0274865Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0274994Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0275101Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0275177Z        ...
2025-01-10T13:23:48.0275264Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0275390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0275490Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0276047Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0276173Z 
2025-01-10T13:23:48.0276306Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0276412Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0276491Z        ...
2025-01-10T13:23:48.0276573Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0276700Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0276809Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0276886Z        ...
2025-01-10T13:23:48.0276968Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0277091Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0277192Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0277714Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0277721Z 
2025-01-10T13:23:48.0277954Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0278062Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0278143Z        ...
2025-01-10T13:23:48.0278225Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0278352Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0278459Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0278538Z        ...
2025-01-10T13:23:48.0278621Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0278746Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0278845Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0279396Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0279400Z 
2025-01-10T13:23:48.0279534Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0279645Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0279724Z        ...
2025-01-10T13:23:48.0279805Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0279932Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0280041Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0280118Z        ...
2025-01-10T13:23:48.0280201Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0280329Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0280428Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0280977Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0280981Z 
2025-01-10T13:23:48.0281109Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0281221Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0281298Z        ...
2025-01-10T13:23:48.0281383Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0281512Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0281619Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0281699Z        ...
2025-01-10T13:23:48.0281783Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0281909Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0282010Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0282541Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0282545Z 
2025-01-10T13:23:48.0282675Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0282783Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0282953Z        ...
2025-01-10T13:23:48.0283150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0283275Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0283382Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0283458Z        ...
2025-01-10T13:23:48.0283539Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0283665Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0283763Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0284291Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0284295Z 
2025-01-10T13:23:48.0284423Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0284527Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0284728Z        ...
2025-01-10T13:23:48.0284814Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0284943Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0285051Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0285127Z        ...
2025-01-10T13:23:48.0285209Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0285332Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0285432Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0285971Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0285976Z 
2025-01-10T13:23:48.0286074Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0286439Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0286771Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0287104Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0287639Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0287644Z 
2025-01-10T13:23:48.0287743Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0288106Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0288475Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0288989Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0289503Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0289508Z 
2025-01-10T13:23:48.0289632Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0289817Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0289894Z        ...
2025-01-10T13:23:48.0289983Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0290109Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0290225Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0290297Z        ...
2025-01-10T13:23:48.0290385Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0290511Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0290612Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0291170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0291175Z 
2025-01-10T13:23:48.0291298Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0291412Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0291490Z        ...
2025-01-10T13:23:48.0291581Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0291702Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0291818Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0291891Z        ...
2025-01-10T13:23:48.0291983Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0292108Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0292209Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0292736Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0292743Z 
2025-01-10T13:23:48.0292867Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0292984Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0293235Z        ...
2025-01-10T13:23:48.0293346Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0293472Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0293591Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0293663Z        ...
2025-01-10T13:23:48.0293752Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0293880Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0293983Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0294538Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0294543Z 
2025-01-10T13:23:48.0294671Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0294787Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0294860Z        ...
2025-01-10T13:23:48.0294951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0295205Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0295325Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0295397Z        ...
2025-01-10T13:23:48.0295490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0295616Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0295717Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0296275Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0296280Z 
2025-01-10T13:23:48.0296405Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0296519Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0296592Z        ...
2025-01-10T13:23:48.0296680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0296912Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0297034Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0297108Z        ...
2025-01-10T13:23:48.0297199Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0297330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0297431Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0297961Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0297966Z 
2025-01-10T13:23:48.0298089Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0298200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0298272Z        ...
2025-01-10T13:23:48.0298362Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0298489Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0298607Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0298679Z        ...
2025-01-10T13:23:48.0298767Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0298895Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0298993Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0299523Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0299527Z 
2025-01-10T13:23:48.0299648Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0299757Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0299830Z        ...
2025-01-10T13:23:48.0299920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0300041Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0300164Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0300236Z        ...
2025-01-10T13:23:48.0300329Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0300459Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0300565Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0301116Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0301121Z 
2025-01-10T13:23:48.0301218Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0301588Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0302046Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0302370Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0302997Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0303006Z 
2025-01-10T13:23:48.0303211Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0303571Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0303945Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0304322Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0304844Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0304849Z 
2025-01-10T13:23:48.0304981Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0305089Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0305170Z        ...
2025-01-10T13:23:48.0305253Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0305385Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0305508Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0305581Z        ...
2025-01-10T13:23:48.0305673Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0305794Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0305900Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0306454Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0306459Z 
2025-01-10T13:23:48.0306590Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0306698Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0306781Z        ...
2025-01-10T13:23:48.0306865Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0306997Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0307242Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0307316Z        ...
2025-01-10T13:23:48.0307413Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0307535Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0307642Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0308162Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0308167Z 
2025-01-10T13:23:48.0308298Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0308403Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0308481Z        ...
2025-01-10T13:23:48.0308563Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0308691Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0308802Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0309050Z        ...
2025-01-10T13:23:48.0309148Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0309271Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0309378Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0309925Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0309930Z 
2025-01-10T13:23:48.0310058Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0310164Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0310245Z        ...
2025-01-10T13:23:48.0310328Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0310457Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0310568Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0310657Z        ...
2025-01-10T13:23:48.0310746Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0310868Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0310975Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0311522Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0311526Z 
2025-01-10T13:23:48.0311654Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0311760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0311840Z        ...
2025-01-10T13:23:48.0311923Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0312049Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0312156Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0312236Z        ...
2025-01-10T13:23:48.0312331Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0312451Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0312555Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0313186Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0313192Z 
2025-01-10T13:23:48.0313322Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0313427Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0313503Z        ...
2025-01-10T13:23:48.0313586Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0313714Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0313823Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0313904Z        ...
2025-01-10T13:23:48.0313993Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0314240Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0314345Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0314913Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0314918Z 
2025-01-10T13:23:48.0315045Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0315150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0315228Z        ...
2025-01-10T13:23:48.0315313Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0315437Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0315551Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0315622Z        ...
2025-01-10T13:23:48.0315712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0315939Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0316048Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0316621Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0316626Z 
2025-01-10T13:23:48.0316728Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0317088Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0317428Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0317759Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0318336Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0318340Z 
2025-01-10T13:23:48.0318434Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0318803Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0319166Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0319541Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0320174Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0320179Z 
2025-01-10T13:23:48.0320303Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0320417Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0320496Z        ...
2025-01-10T13:23:48.0320582Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0320712Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0320822Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0320979Z        ...
2025-01-10T13:23:48.0321067Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0321198Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0321297Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0321885Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0321889Z 
2025-01-10T13:23:48.0322012Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0322126Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0322205Z        ...
2025-01-10T13:23:48.0322289Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0322418Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0322528Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0322610Z        ...
2025-01-10T13:23:48.0322697Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0322827Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0322928Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0323589Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0323595Z 
2025-01-10T13:23:48.0323720Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0323839Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0323915Z        ...
2025-01-10T13:23:48.0323996Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0324123Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0324231Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0324307Z        ...
2025-01-10T13:23:48.0324395Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0324521Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0324619Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0325308Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:48.0325313Z 
2025-01-10T13:23:48.0325488Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-10T13:23:48.0325851Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0330612Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-10T13:23:48.0335277Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T13:23:48.0335468Z At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T13:23:48.0336079Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0336083Z 
2025-01-10T13:23:48.0336337Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0336446Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0336528Z        ...
2025-01-10T13:23:48.0336613Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0336742Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0336851Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0336928Z        ...
2025-01-10T13:23:48.0337011Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0337138Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0337246Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0337822Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0337827Z 
2025-01-10T13:23:48.0338106Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0338218Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0338297Z        ...
2025-01-10T13:23:48.0338380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0338506Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0338615Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0338691Z        ...
2025-01-10T13:23:48.0338782Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0338900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0339004Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0339577Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0339581Z 
2025-01-10T13:23:48.0339713Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0339827Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0339903Z        ...
2025-01-10T13:23:48.0339987Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0340115Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0340226Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0340302Z        ...
2025-01-10T13:23:48.0340389Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0340508Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0340613Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0341170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0341175Z 
2025-01-10T13:23:48.0341303Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0341415Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0341493Z        ...
2025-01-10T13:23:48.0341578Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0341702Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0341811Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0341887Z        ...
2025-01-10T13:23:48.0341978Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0342097Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0342200Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0342743Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0342748Z 
2025-01-10T13:23:48.0342876Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0343203Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0343280Z        ...
2025-01-10T13:23:48.0343362Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0343490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0343598Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0343674Z        ...
2025-01-10T13:23:48.0343760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0343882Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0343988Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0344541Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0344546Z 
2025-01-10T13:23:48.0344645Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0345128Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0345464Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0345793Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0346347Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0346358Z 
2025-01-10T13:23:48.0346449Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0346811Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0347174Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0347546Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0348078Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0348188Z 
2025-01-10T13:23:48.0348318Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0348432Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0348504Z        ...
2025-01-10T13:23:48.0348592Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0348719Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0348827Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0348905Z        ...
2025-01-10T13:23:48.0348988Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0349112Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0349210Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0349780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0349785Z 
2025-01-10T13:23:48.0349993Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0350110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0350182Z        ...
2025-01-10T13:23:48.0350270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0350395Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0350507Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0350583Z        ...
2025-01-10T13:23:48.0350665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0350789Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0350887Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0351420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0351425Z 
2025-01-10T13:23:48.0351550Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0351663Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0351738Z        ...
2025-01-10T13:23:48.0351820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0351945Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0352051Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0352131Z        ...
2025-01-10T13:23:48.0352213Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0352336Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0352435Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0353270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:48.0353276Z 
2025-01-10T13:23:48.0353447Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:23:48.0353810Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0358781Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T13:23:48.0363836Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:23:48.0364019Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:23:48.0364626Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0364631Z 
2025-01-10T13:23:48.0364767Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0364878Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0364955Z        ...
2025-01-10T13:23:48.0365041Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0365172Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0365418Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0365496Z        ...
2025-01-10T13:23:48.0365587Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0365713Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0365820Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0366402Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0366407Z 
2025-01-10T13:23:48.0366536Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0366642Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0366720Z        ...
2025-01-10T13:23:48.0366803Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0366931Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0367146Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0367231Z        ...
2025-01-10T13:23:48.0367320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0367443Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0367549Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0368113Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0368118Z 
2025-01-10T13:23:48.0368247Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0368354Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0368430Z        ...
2025-01-10T13:23:48.0368513Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0368640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0368747Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0368830Z        ...
2025-01-10T13:23:48.0368919Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0369040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0369144Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0369691Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0369696Z 
2025-01-10T13:23:48.0369823Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0369928Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0370004Z        ...
2025-01-10T13:23:48.0370085Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0370210Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0370319Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0370401Z        ...
2025-01-10T13:23:48.0370492Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0370613Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0370717Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0371191Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0371196Z 
2025-01-10T13:23:48.0371323Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0371428Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0371503Z        ...
2025-01-10T13:23:48.0371585Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0371710Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0371817Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0371894Z        ...
2025-01-10T13:23:48.0372075Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0372195Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0372298Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0372786Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0372791Z 
2025-01-10T13:23:48.0372891Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0373361Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0373806Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0374149Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0374633Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0374643Z 
2025-01-10T13:23:48.0374735Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0375110Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0375475Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0375849Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0376313Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0376317Z 
2025-01-10T13:23:48.0376440Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0376551Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0376624Z        ...
2025-01-10T13:23:48.0376712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0376923Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0377104Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0377404Z        ...
2025-01-10T13:23:48.0377498Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0377633Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0377736Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0378250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0378255Z 
2025-01-10T13:23:48.0378381Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0378493Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0378565Z        ...
2025-01-10T13:23:48.0378655Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0378783Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0378893Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0378969Z        ...
2025-01-10T13:23:48.0379179Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0379312Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0379413Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0379887Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0379892Z 
2025-01-10T13:23:48.0380018Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0380129Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0380200Z        ...
2025-01-10T13:23:48.0380286Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0380416Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0380526Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0380605Z        ...
2025-01-10T13:23:48.0380687Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0380820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0380920Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0381526Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:48.0381530Z 
2025-01-10T13:23:48.0381695Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:23:48.0382062Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0387044Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T13:23:48.0392469Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:23:48.0392667Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:23:48.0393349Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0393362Z 
2025-01-10T13:23:48.0393497Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0393604Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0393681Z        ...
2025-01-10T13:23:48.0393772Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0393903Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0394010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0394086Z        ...
2025-01-10T13:23:48.0394169Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0394296Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0394404Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0394904Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0394910Z 
2025-01-10T13:23:48.0395180Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0395286Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0395363Z        ...
2025-01-10T13:23:48.0395446Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0395573Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0395681Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0395759Z        ...
2025-01-10T13:23:48.0395840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0395964Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0396067Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0396554Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0396559Z 
2025-01-10T13:23:48.0396687Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0396904Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0396984Z        ...
2025-01-10T13:23:48.0397068Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0397193Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0397299Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0397376Z        ...
2025-01-10T13:23:48.0397458Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0397585Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0397689Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0398160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0398166Z 
2025-01-10T13:23:48.0398292Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0398401Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0398482Z        ...
2025-01-10T13:23:48.0398564Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0398689Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0398797Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0398873Z        ...
2025-01-10T13:23:48.0398955Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0399081Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0399184Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0399675Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0399680Z 
2025-01-10T13:23:48.0399807Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0399912Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0399992Z        ...
2025-01-10T13:23:48.0400077Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0400202Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0400310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0400385Z        ...
2025-01-10T13:23:48.0400467Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0400591Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0400694Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0401192Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0401197Z 
2025-01-10T13:23:48.0401295Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0401662Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0402124Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0402533Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0403165Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0403170Z 
2025-01-10T13:23:48.0403273Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0403640Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0404008Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0404388Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0404866Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0404871Z 
2025-01-10T13:23:48.0404994Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0405106Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0405184Z        ...
2025-01-10T13:23:48.0405274Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0405400Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0405514Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0405586Z        ...
2025-01-10T13:23:48.0405680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0405806Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0405906Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0406424Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0406429Z 
2025-01-10T13:23:48.0406551Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0406662Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0406734Z        ...
2025-01-10T13:23:48.0406954Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0407085Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0407201Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0407275Z        ...
2025-01-10T13:23:48.0407365Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0407499Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0407600Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0408084Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0408089Z 
2025-01-10T13:23:48.0408213Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0408326Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0408397Z        ...
2025-01-10T13:23:48.0408488Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0408724Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0408844Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0408917Z        ...
2025-01-10T13:23:48.0409004Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0409129Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0409228Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0409742Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0409747Z 
2025-01-10T13:23:48.0409870Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0409994Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0410066Z        ...
2025-01-10T13:23:48.0410154Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0410278Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0410396Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0410466Z        ...
2025-01-10T13:23:48.0410557Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0410683Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0410782Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0411292Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0411297Z 
2025-01-10T13:23:48.0411421Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0411531Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0411603Z        ...
2025-01-10T13:23:48.0411691Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0411813Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0411935Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0412007Z        ...
2025-01-10T13:23:48.0412094Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0412222Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0412322Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0412815Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0412821Z 
2025-01-10T13:23:48.0412944Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0413181Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0413255Z        ...
2025-01-10T13:23:48.0413342Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0413463Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0413580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0413788Z        ...
2025-01-10T13:23:48.0413881Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0414010Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0414109Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0414597Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0414602Z 
2025-01-10T13:23:48.0414726Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0414839Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0414911Z        ...
2025-01-10T13:23:48.0414999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0415120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0415232Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0415306Z        ...
2025-01-10T13:23:48.0415520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0415648Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0415753Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0416249Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0416254Z 
2025-01-10T13:23:48.0416347Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0416715Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0417047Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0417375Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0417878Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0417883Z 
2025-01-10T13:23:48.0417977Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0418344Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0418710Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0419087Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0419636Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0419641Z 
2025-01-10T13:23:48.0419770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0419878Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0419957Z        ...
2025-01-10T13:23:48.0420042Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0420171Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0420279Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0420360Z        ...
2025-01-10T13:23:48.0420524Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0420649Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0420755Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0421257Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0421262Z 
2025-01-10T13:23:48.0421389Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0421501Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0421578Z        ...
2025-01-10T13:23:48.0421662Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0421787Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0421896Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0421973Z        ...
2025-01-10T13:23:48.0422068Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0422190Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0422296Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0422765Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0422770Z 
2025-01-10T13:23:48.0422897Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0423002Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0423183Z        ...
2025-01-10T13:23:48.0423267Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0423397Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0423505Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0423583Z        ...
2025-01-10T13:23:48.0423671Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0423799Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0423903Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0424398Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0424403Z 
2025-01-10T13:23:48.0424530Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0424635Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0424711Z        ...
2025-01-10T13:23:48.0424794Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0424921Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0425028Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0425109Z        ...
2025-01-10T13:23:48.0425198Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0425317Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0425552Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0426047Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0426052Z 
2025-01-10T13:23:48.0426176Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0426281Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0426357Z        ...
2025-01-10T13:23:48.0426443Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0426570Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0426678Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0426755Z        ...
2025-01-10T13:23:48.0426837Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0426962Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0427176Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0427670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0427675Z 
2025-01-10T13:23:48.0427801Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0427907Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0427986Z        ...
2025-01-10T13:23:48.0428067Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0428192Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0428301Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0428378Z        ...
2025-01-10T13:23:48.0428460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0428585Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0428688Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0429203Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0429208Z 
2025-01-10T13:23:48.0429335Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0429440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0429517Z        ...
2025-01-10T13:23:48.0429599Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0429724Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0429833Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0429910Z        ...
2025-01-10T13:23:48.0429992Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0430116Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0430222Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0430754Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0430761Z 
2025-01-10T13:23:48.0430860Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0431218Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0431548Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0431971Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0432497Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0432502Z 
2025-01-10T13:23:48.0432600Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0433144Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0433525Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0433897Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0434421Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0434427Z 
2025-01-10T13:23:48.0434553Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0434669Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0434741Z        ...
2025-01-10T13:23:48.0434833Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0434959Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0435077Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0435156Z        ...
2025-01-10T13:23:48.0435241Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0435367Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0435471Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0436030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0436035Z 
2025-01-10T13:23:48.0436162Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0436273Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0436345Z        ...
2025-01-10T13:23:48.0436437Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0436558Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0436674Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0436750Z        ...
2025-01-10T13:23:48.0436834Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0436960Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0437060Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0437571Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0437693Z 
2025-01-10T13:23:48.0437839Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0437953Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0438024Z        ...
2025-01-10T13:23:48.0438114Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0438239Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0438357Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0438433Z        ...
2025-01-10T13:23:48.0438516Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0438644Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0438746Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0439409Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0439419Z 
2025-01-10T13:23:48.0439548Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0439666Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0439737Z        ...
2025-01-10T13:23:48.0439827Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0439948Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0440065Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0440140Z        ...
2025-01-10T13:23:48.0440223Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0440347Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0440447Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0440986Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0440993Z 
2025-01-10T13:23:48.0441116Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0441227Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0441297Z        ...
2025-01-10T13:23:48.0441390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0441510Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0441622Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0441697Z        ...
2025-01-10T13:23:48.0441779Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0441904Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0442003Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0442523Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0442531Z 
2025-01-10T13:23:48.0442659Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0442770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0442842Z        ...
2025-01-10T13:23:48.0442930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0443162Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0443279Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0443355Z        ...
2025-01-10T13:23:48.0443438Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0443567Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0443666Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0444249Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0444414Z 
2025-01-10T13:23:48.0444546Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0444656Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0444727Z        ...
2025-01-10T13:23:48.0444813Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0444932Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0445045Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0445122Z        ...
2025-01-10T13:23:48.0445205Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0445330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0445428Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0446019Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0446024Z 
2025-01-10T13:23:48.0446226Z Series values are different (4.04858 %)
2025-01-10T13:23:48.0446596Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0446925Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0447252Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:23:48.0447843Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:23:48.0447848Z 
2025-01-10T13:23:48.0447946Z Series values are different (6.47773 %)
2025-01-10T13:23:48.0448304Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0448677Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0449048Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:23:48.0449605Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0449689Z 
2025-01-10T13:23:48.0449820Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0449932Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0450008Z        ...
2025-01-10T13:23:48.0450097Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0450219Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0450333Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0450404Z        ...
2025-01-10T13:23:48.0450491Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0450611Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0450715Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0451388Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0451397Z 
2025-01-10T13:23:48.0451529Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0451635Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0451713Z        ...
2025-01-10T13:23:48.0451801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0451923Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0452037Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0452108Z        ...
2025-01-10T13:23:48.0452198Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0452318Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0452422Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0452983Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0452994Z 
2025-01-10T13:23:48.0453218Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0453324Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0453400Z        ...
2025-01-10T13:23:48.0453486Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0453608Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0453721Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0453791Z        ...
2025-01-10T13:23:48.0453878Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0453998Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0454101Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0454699Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0454708Z 
2025-01-10T13:23:48.0454838Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0454943Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0455018Z        ...
2025-01-10T13:23:48.0455104Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0455225Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0455337Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0455408Z        ...
2025-01-10T13:23:48.0455493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0455612Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0455715Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0456303Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0456308Z 
2025-01-10T13:23:48.0456560Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0456667Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0456743Z        ...
2025-01-10T13:23:48.0456833Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0456953Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0457066Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0457137Z        ...
2025-01-10T13:23:48.0457224Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0457342Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0457445Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0458028Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:23:48.0458033Z 
2025-01-10T13:23:48.0458263Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:23:48.0458376Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0458452Z        ...
2025-01-10T13:23:48.0458539Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0458658Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0458772Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0458845Z        ...
2025-01-10T13:23:48.0458934Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:23:48.0459052Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:23:48.0459156Z At positional index 75, first diff: 7 != 6
2025-01-10T13:23:48.0459462Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-01-10T13:23:48.0459568Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0459573Z 
2025-01-10T13:23:48.0459669Z Mismatched elements: 120 / 584480 (0.0205%)
2025-01-10T13:23:48.0459787Z Max absolute difference among violations: 1.
2025-01-10T13:23:48.0459898Z Max relative difference among violations: 1.
2025-01-10T13:23:48.0460041Z  ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:23:48.0460153Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:23:48.0460257Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:23:48.0460406Z  DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:23:48.0460504Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:23:48.0460606Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:23:48.0460895Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-01-10T13:23:48.0461001Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0461005Z 
2025-01-10T13:23:48.0461104Z Mismatched elements: 748 / 29224 (2.56%)
2025-01-10T13:23:48.0461223Z Max absolute difference among violations: 4005
2025-01-10T13:23:48.0461355Z Max relative difference among violations: 26.00649351
2025-01-10T13:23:48.0461479Z  ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:23:48.0461610Z  DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:23:48.0461893Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-01-10T13:23:48.0461995Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0461999Z 
2025-01-10T13:23:48.0462091Z Mismatched elements: 1847 / 29224 (6.32%)
2025-01-10T13:23:48.0462207Z Max absolute difference among violations: 4046
2025-01-10T13:23:48.0462333Z Max relative difference among violations: 24.82208589
2025-01-10T13:23:48.0462457Z  ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:23:48.0462578Z  DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:23:48.0462954Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-01-10T13:23:48.0463156Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0463161Z 
2025-01-10T13:23:48.0463259Z Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:23:48.0463389Z Max absolute difference among violations: 0.99984222
2025-01-10T13:23:48.0463517Z Max relative difference among violations: 6337.12154973
2025-01-10T13:23:48.0463619Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:48.0463702Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:48.0463785Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:23:48.0463885Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:48.0463968Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:23:48.0464046Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:23:48.0464300Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-01-10T13:23:48.0464522Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0464527Z 
2025-01-10T13:23:48.0464628Z Mismatched elements: 13335 / 263016 (5.07%)
2025-01-10T13:23:48.0464769Z Max absolute difference among violations: 4.25260542e+12
2025-01-10T13:23:48.0464897Z Max relative difference among violations: 18196.0085861
2025-01-10T13:23:48.0465072Z  ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:23:48.0465154Z         4.043917e+10, 6.677200e-07],
2025-01-10T13:23:48.0465303Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:23:48.0465468Z  DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:23:48.0465555Z         4.043917e+10, 6.677200e-07],
2025-01-10T13:23:48.0465687Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:23:48.0465932Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-01-10T13:23:48.0466044Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0466048Z 
2025-01-10T13:23:48.0466142Z Mismatched elements: 2221 / 29224 (7.6%)
2025-01-10T13:23:48.0466273Z Max absolute difference among violations: 2.92713618
2025-01-10T13:23:48.0466401Z Max relative difference among violations: 18196.0085861
2025-01-10T13:23:48.0466571Z  ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:23:48.0466652Z        1.126883e+00, 4.414472e-04])
2025-01-10T13:23:48.0466822Z  DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:23:48.0466903Z        1.126883e+00, 4.414472e-04])
2025-01-10T13:23:48.0467165Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-01-10T13:23:48.0467262Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0467272Z 
2025-01-10T13:23:48.0467369Z Mismatched elements: 39620 / 584480 (6.78%)
2025-01-10T13:23:48.0467512Z Max absolute difference among violations: 282815.33818472
2025-01-10T13:23:48.0467650Z Max relative difference among violations: 4.12352828e+47
2025-01-10T13:23:48.0467817Z  ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:23:48.0467897Z         0.000000e+00, 0.000000e+00],
2025-01-10T13:23:48.0468034Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:23:48.0468196Z  DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:23:48.0468279Z         0.000000e+00, 0.000000e+00],
2025-01-10T13:23:48.0468408Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:23:48.0468900Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:48.0468906Z 
2025-01-10T13:23:48.0469076Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:23:48.0469155Z [index]: [0, 1]
2025-01-10T13:23:48.0469385Z [left]:  [0.40039163797855976, 0.45013644671958974]
2025-01-10T13:23:48.0469489Z [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T13:23:48.0469663Z At positional index 1, first diff: 0.45013644671958974 != 0.4500690173218345
2025-01-10T13:23:48.0470146Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:48.0470150Z 
2025-01-10T13:23:48.0470315Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:23:48.0470392Z [index]: [0, 1]
2025-01-10T13:23:48.0470494Z [left]:  [9967.488442185557, 10090.925208074616]
2025-01-10T13:23:48.0470590Z [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T13:23:48.0470765Z At positional index 1, first diff: 10090.925208074616 != 10091.396322818851
2025-01-10T13:23:48.0471375Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:23:48.0471383Z 
2025-01-10T13:23:48.0471542Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:23:48.0471623Z [index]: [0, 1]
2025-01-10T13:23:48.0471719Z [left]:  [2869544645.3209715, 2880986026.9779425]
2025-01-10T13:23:48.0471820Z [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T13:23:48.0478124Z At positional index 1, first diff: 2880986026.9779425 != 2881024886.0882792
2025-01-10T13:23:48.0478574Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-01-10T13:23:48.0478580Z 
2025-01-10T13:23:48.0478682Z Series values are different (100.0 %)
2025-01-10T13:23:48.0478825Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:23:48.0480025Z [left]:  [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-10T13:23:48.0481226Z [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T13:23:48.0481429Z At positional index 0, first diff: 1.0190851489144414e+29 != 1.0202042777991753e+29
2025-01-10T13:23:48.0481800Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-01-10T13:23:48.0481807Z 
2025-01-10T13:23:48.0481908Z Series values are different (100.0 %)
2025-01-10T13:23:48.0482037Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:23:48.0482987Z [left]:  [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-10T13:23:48.0484067Z [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T13:23:48.0484405Z At positional index 0, first diff: 116548101693134.0 != 116635492761989.08
2025-01-10T13:23:48.0484772Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-01-10T13:23:48.0484777Z 
2025-01-10T13:23:48.0484877Z Series values are different (90.0 %)
2025-01-10T13:23:48.0484999Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:23:48.0485994Z [left]:  [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-10T13:23:48.0487091Z [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T13:23:48.0487265Z At positional index 0, first diff: 10090.925208074616 != 10091.396322818851
2025-01-10T13:23:48.0487639Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-01-10T13:23:48.0487643Z 
2025-01-10T13:23:48.0487736Z Series values are different (95.0 %)
2025-01-10T13:23:48.0487863Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:23:48.0488946Z [left]:  [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-10T13:23:48.0490026Z [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T13:23:48.0490207Z At positional index 0, first diff: 0.45013644671958974 != 0.4500690173218345
2025-01-10T13:23:48.0490565Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-01-10T13:23:48.0490572Z 
2025-01-10T13:23:48.0490677Z Series values are different (5.1125 %)
2025-01-10T13:23:48.0491042Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0496359Z [left]:  [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-10T13:23:48.0501555Z [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T13:23:48.0501739Z At positional index 56, first diff: 657025184715239.1 != 657003154645147.8
2025-01-10T13:23:48.0502160Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-01-10T13:23:48.0502165Z 
2025-01-10T13:23:48.0502260Z Series values are different (1.3025 %)
2025-01-10T13:23:48.0502628Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:23:48.0509126Z [left]:  [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:23:48.0515658Z [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:23:48.0516086Z At positional index 414, first diff: 2.5347525852067693e-05 != 2.5657552576608082e-05
2025-01-10T13:23:48.0516459Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-01-10T13:23:48.0516561Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0516566Z 
2025-01-10T13:23:48.0516664Z Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:23:48.0516802Z Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:23:48.0516917Z Max relative difference among violations: 1.
2025-01-10T13:23:48.0517085Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0517175Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0517341Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0517426Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0517820Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-01-10T13:23:48.0517929Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0517933Z 
2025-01-10T13:23:48.0518033Z Mismatched elements: 252 / 10000 (2.52%)
2025-01-10T13:23:48.0518168Z Max absolute difference among violations: 4.15247374e+37
2025-01-10T13:23:48.0518301Z Max relative difference among violations: 1.03027212
2025-01-10T13:23:48.0518461Z  ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0518546Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0518706Z  DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0518789Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0519088Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-01-10T13:23:48.0519192Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0519196Z 
2025-01-10T13:23:48.0519294Z Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:23:48.0519432Z Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:23:48.0519547Z Max relative difference among violations: 1.
2025-01-10T13:23:48.0519707Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0519789Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0519949Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0520031Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0520324Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-01-10T13:23:48.0520426Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0520430Z 
2025-01-10T13:23:48.0520531Z Mismatched elements: 491895 / 584480 (84.2%)
2025-01-10T13:23:48.0520667Z Max absolute difference among violations: 5.32418652e-19
2025-01-10T13:23:48.0520800Z Max relative difference among violations: 8.78746214
2025-01-10T13:23:48.0520901Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0521085Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0521166Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0521273Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0521350Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0521434Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0521695Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-01-10T13:23:48.0521797Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0521801Z 
2025-01-10T13:23:48.0521893Z Mismatched elements: 4832 / 10000 (48.3%)
2025-01-10T13:23:48.0522029Z Max absolute difference among violations: 1.38672909e+39
2025-01-10T13:23:48.0522150Z Max relative difference among violations: 5.17890748
2025-01-10T13:23:48.0522317Z  ACTUAL: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0522408Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0522690Z  DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0522793Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0523224Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-01-10T13:23:48.0523326Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0523330Z 
2025-01-10T13:23:48.0523422Z Mismatched elements: 5933 / 10000 (59.3%)
2025-01-10T13:23:48.0523555Z Max absolute difference among violations: 5.26760031e+38
2025-01-10T13:23:48.0523681Z Max relative difference among violations: 23978.84555943
2025-01-10T13:23:48.0523848Z  ACTUAL: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0523927Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0524093Z  DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0524180Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0524632Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-01-10T13:23:48.0524739Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0524742Z 
2025-01-10T13:23:48.0524843Z Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:23:48.0524977Z Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:23:48.0525100Z Max relative difference among violations: 8.35741234
2025-01-10T13:23:48.0525203Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0525285Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0525371Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0525469Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0525552Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0525635Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0526057Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-01-10T13:23:48.0526164Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0526168Z 
2025-01-10T13:23:48.0526260Z Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:23:48.0526393Z Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:23:48.0526512Z Max relative difference among violations: 5.83764686
2025-01-10T13:23:48.0526677Z  ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0526756Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0526922Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0526999Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0527450Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-01-10T13:23:48.0527552Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0527556Z 
2025-01-10T13:23:48.0527801Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:23:48.0527935Z Max absolute difference among violations: 5.00661745e+37
2025-01-10T13:23:48.0528056Z Max relative difference among violations: 6.79985816
2025-01-10T13:23:48.0528218Z  ACTUAL: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-10T13:23:48.0528295Z        2.292907e+31, 2.257206e+31])
2025-01-10T13:23:48.0528460Z  DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T13:23:48.0528537Z        2.279436e+31, 2.243943e+31])
2025-01-10T13:23:48.0528973Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-01-10T13:23:48.0529074Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0529078Z 
2025-01-10T13:23:48.0529176Z Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:23:48.0529310Z Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:23:48.0529561Z Max relative difference among violations: 4.08461732
2025-01-10T13:23:48.0529668Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0529746Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0529830Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0529930Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0530011Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0530089Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0530507Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-01-10T13:23:48.0530610Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0530614Z 
2025-01-10T13:23:48.0530705Z Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:23:48.0530841Z Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:23:48.0530962Z Max relative difference among violations: 3.08310014
2025-01-10T13:23:48.0531133Z  ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0531211Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0531374Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0531452Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0531894Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-01-10T13:23:48.0531990Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0531994Z 
2025-01-10T13:23:48.0532090Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:23:48.0532224Z Max absolute difference among violations: 2.90101642e+37
2025-01-10T13:23:48.0532344Z Max relative difference among violations: 96.4428449
2025-01-10T13:23:48.0532505Z  ACTUAL: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-10T13:23:48.0532581Z        1.375141e+31, 1.337928e+31])
2025-01-10T13:23:48.0532750Z  DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T13:23:48.0532828Z        1.330497e+31, 1.294462e+31])
2025-01-10T13:23:48.0533374Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-01-10T13:23:48.0533471Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0533476Z 
2025-01-10T13:23:48.0533580Z Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:23:48.0533711Z Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:23:48.0533835Z Max relative difference among violations: 4.08461732
2025-01-10T13:23:48.0533938Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0534016Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0534099Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0534196Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0534278Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0534483Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0534902Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-01-10T13:23:48.0534998Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0535002Z 
2025-01-10T13:23:48.0535100Z Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:23:48.0535225Z Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:23:48.0535353Z Max relative difference among violations: 3.08310014
2025-01-10T13:23:48.0535517Z  ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0535595Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0535758Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0535834Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0536381Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-01-10T13:23:48.0536488Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0536493Z 
2025-01-10T13:23:48.0536589Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:23:48.0536717Z Max absolute difference among violations: 2.99183385e+37
2025-01-10T13:23:48.0536849Z Max relative difference among violations: 98.22574798
2025-01-10T13:23:48.0537003Z  ACTUAL: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-10T13:23:48.0537086Z        1.193005e+31, 1.164854e+31])
2025-01-10T13:23:48.0537249Z  DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T13:23:48.0537325Z        1.260980e+31, 1.222587e+31])
2025-01-10T13:23:48.0537765Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-01-10T13:23:48.0537862Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0537869Z 
2025-01-10T13:23:48.0537976Z Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:23:48.0538105Z Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:23:48.0538232Z Max relative difference among violations: 8.35741234
2025-01-10T13:23:48.0538327Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0538410Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0538489Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0538591Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0538675Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:23:48.0538752Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:23:48.0539168Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-01-10T13:23:48.0539265Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0539270Z 
2025-01-10T13:23:48.0539371Z Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:23:48.0539505Z Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:23:48.0539630Z Max relative difference among violations: 5.83764686
2025-01-10T13:23:48.0539786Z  ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0539869Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0540028Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:23:48.0540112Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0540557Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-01-10T13:23:48.0540653Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0540657Z 
2025-01-10T13:23:48.0540758Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:23:48.0540886Z Max absolute difference among violations: 5.0153284e+37
2025-01-10T13:23:48.0541010Z Max relative difference among violations: 5.96359613
2025-01-10T13:23:48.0541267Z  ACTUAL: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-10T13:23:48.0541350Z        2.124305e+31, 2.101081e+31])
2025-01-10T13:23:48.0541509Z  DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T13:23:48.0541591Z        2.088676e+31, 2.060278e+31])
2025-01-10T13:23:48.0541939Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-01-10T13:23:48.0542033Z Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T13:23:48.0542037Z 
2025-01-10T13:23:48.0542128Z Mismatched elements: 20 / 20 (100%)
2025-01-10T13:23:48.0542257Z Max absolute difference among violations: 2.25821059e+25
2025-01-10T13:23:48.0542383Z Max relative difference among violations: 0.00054397
2025-01-10T13:23:48.0542538Z  ACTUAL: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-10T13:23:48.0542662Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-10T13:23:48.0542867Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-10T13:23:48.0543151Z  DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T13:23:48.0543268Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T13:23:48.0543395Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T13:23:48.0543782Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-01-10T13:23:48.0543893Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T13:23:48.0543898Z 
2025-01-10T13:23:48.0543990Z Mismatched elements: 20 / 20 (100%)
2025-01-10T13:23:48.0544118Z Max absolute difference among violations: 1.93283629e+25
2025-01-10T13:23:48.0544244Z Max relative difference among violations: 0.00029157
2025-01-10T13:23:48.0544394Z  ACTUAL: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-10T13:23:48.0544515Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-10T13:23:48.0544636Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-10T13:23:48.0544792Z  DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T13:23:48.0544908Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T13:23:48.0545028Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T13:23:48.0545363Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-01-10T13:23:48.0545445Z Arrays are not equal
2025-01-10T13:23:48.0545449Z 
2025-01-10T13:23:48.0545551Z Mismatched elements: 11291 / 256000 (4.41%)
2025-01-10T13:23:48.0545698Z  ACTUAL: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:23:48.0545787Z         (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:23:48.0545890Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:23:48.0546046Z  DESIRED: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:23:48.0546127Z         (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:23:48.0546231Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:23:48.0546651Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-01-10T13:23:48.0546746Z Not equal to tolerance rtol=0.01, atol=0
2025-01-10T13:23:48.0546751Z 
2025-01-10T13:23:48.0546849Z Mismatched elements: 33 / 100000 (0.033%)
2025-01-10T13:23:48.0546979Z Max absolute difference among violations: 2.00640487e-05
2025-01-10T13:23:48.0547105Z Max relative difference among violations: 2.11614526
2025-01-10T13:23:48.0547278Z  ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:23:48.0547369Z        -9.757136e-06,  1.019764e-05])
2025-01-10T13:23:48.0547542Z  DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:23:48.0547766Z        -9.757136e-06,  1.019764e-05])
2025-01-10T13:23:48.0548227Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-01-10T13:23:48.0548328Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0548332Z 
2025-01-10T13:23:48.0548422Z (shapes (515,), (508,) mismatch)
2025-01-10T13:23:48.0548570Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:23:48.0548688Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:23:48.0548805Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:23:48.0548960Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:23:48.0549070Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:23:48.0549192Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:23:48.0549750Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-01-10T13:23:48.0549855Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0549859Z 
2025-01-10T13:23:48.0549947Z (shapes (560,), (558,) mismatch)
2025-01-10T13:23:48.0550092Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:23:48.0550207Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:23:48.0550322Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:23:48.0550473Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:23:48.0550584Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:23:48.0550704Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:23:48.0551154Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-01-10T13:23:48.0551258Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0551262Z 
2025-01-10T13:23:48.0551349Z (shapes (136,), (147,) mismatch)
2025-01-10T13:23:48.0551493Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:23:48.0551607Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:23:48.0551721Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:23:48.0551873Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:23:48.0551980Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:23:48.0552102Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:23:48.0552549Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-01-10T13:23:48.0552655Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0552659Z 
2025-01-10T13:23:48.0552751Z (shapes (153,), (159,) mismatch)
2025-01-10T13:23:48.0552895Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:23:48.0553010Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:23:48.0553233Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:23:48.0553384Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:23:48.0553496Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:23:48.0553609Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:23:48.0554057Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-01-10T13:23:48.0554154Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0554158Z 
2025-01-10T13:23:48.0554367Z (shapes (515,), (508,) mismatch)
2025-01-10T13:23:48.0554513Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:23:48.0554629Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:23:48.0554747Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:23:48.0554902Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:23:48.0555012Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:23:48.0555132Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:23:48.0555579Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-01-10T13:23:48.0555679Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0555683Z 
2025-01-10T13:23:48.0555774Z (shapes (1481,), (1466,) mismatch)
2025-01-10T13:23:48.0556061Z  ACTUAL: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-10T13:23:48.0556153Z        11398.237865, 11111.204868])
2025-01-10T13:23:48.0556316Z  DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T13:23:48.0556396Z        11152.962595, 11172.044815])
2025-01-10T13:23:48.0556838Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-01-10T13:23:48.0556940Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0556944Z 
2025-01-10T13:23:48.0557033Z (shapes (136,), (147,) mismatch)
2025-01-10T13:23:48.0557179Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:23:48.0557295Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:23:48.0557412Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:23:48.0557564Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:23:48.0557684Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:23:48.0557820Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:23:48.0558269Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-01-10T13:23:48.0558373Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0558377Z 
2025-01-10T13:23:48.0558467Z (shapes (381,), (379,) mismatch)
2025-01-10T13:23:48.0558618Z  ACTUAL: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-10T13:23:48.0558736Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-10T13:23:48.0558856Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-10T13:23:48.0559016Z  DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T13:23:48.0559132Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T13:23:48.0559264Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T13:23:48.0559689Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-01-10T13:23:48.0559790Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0559795Z 
2025-01-10T13:23:48.0559889Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:48.0559998Z Max absolute difference among violations: 26
2025-01-10T13:23:48.0560130Z Max relative difference among violations: 0.44067797
2025-01-10T13:23:48.0560283Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:48.0560375Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:48.0560529Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:48.0560616Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:48.0561033Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-01-10T13:23:48.0561235Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0561239Z 
2025-01-10T13:23:48.0561329Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:48.0561440Z Max absolute difference among violations: 26
2025-01-10T13:23:48.0561568Z Max relative difference among violations: 0.44067797
2025-01-10T13:23:48.0561714Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:48.0561799Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:48.0561946Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:48.0562030Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:48.0562440Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-01-10T13:23:48.0562538Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0562545Z 
2025-01-10T13:23:48.0562711Z Mismatched elements: 4 / 20 (20%)
2025-01-10T13:23:48.0562824Z Max absolute difference among violations: 24
2025-01-10T13:23:48.0562935Z Max relative difference among violations: 0.65
2025-01-10T13:23:48.0563222Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:23:48.0563312Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:23:48.0563462Z  DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:23:48.0563547Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:23:48.0563957Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-01-10T13:23:48.0564058Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0564062Z 
2025-01-10T13:23:48.0564150Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:48.0564260Z Max absolute difference among violations: 26
2025-01-10T13:23:48.0564389Z Max relative difference among violations: 0.44067797
2025-01-10T13:23:48.0564540Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:48.0564625Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:48.0564769Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:48.0564854Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:48.0565264Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - AssertionError: 
2025-01-10T13:23:48.0565360Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0565364Z 
2025-01-10T13:23:48.0565456Z Mismatched elements: 2 / 40 (5%)
2025-01-10T13:23:48.0565564Z Max absolute difference among violations: 4.
2025-01-10T13:23:48.0565685Z Max relative difference among violations: 1.33333333
2025-01-10T13:23:48.0565781Z  ACTUAL: array([[1.10e+04, 9.00e+00],
2025-01-10T13:23:48.0565862Z        [1.19e+04, 9.00e+00],
2025-01-10T13:23:48.0565954Z        [1.19e+04, 5.00e+00],...
2025-01-10T13:23:48.0566043Z  DESIRED: array([[1.10e+04, 1.10e+01],
2025-01-10T13:23:48.0566127Z        [1.19e+04, 1.10e+01],
2025-01-10T13:23:48.0566210Z        [1.19e+04, 5.00e+00],...
2025-01-10T13:23:48.0566622Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T13:23:48.0566720Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0566725Z 
2025-01-10T13:23:48.0566811Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:48.0566923Z Max absolute difference among violations: 26
2025-01-10T13:23:48.0567043Z Max relative difference among violations: 0.44067797
2025-01-10T13:23:48.0567192Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:48.0567273Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:48.0567424Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:48.0567632Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:48.0568060Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T13:23:48.0568159Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0568163Z 
2025-01-10T13:23:48.0568250Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:48.0568359Z Max absolute difference among violations: 26
2025-01-10T13:23:48.0568480Z Max relative difference among violations: 0.44067797
2025-01-10T13:23:48.0568628Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:48.0568708Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:48.0568857Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:48.0568936Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:48.0569455Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T13:23:48.0569559Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0569563Z 
2025-01-10T13:23:48.0569650Z Mismatched elements: 4 / 20 (20%)
2025-01-10T13:23:48.0569759Z Max absolute difference among violations: 24
2025-01-10T13:23:48.0569869Z Max relative difference among violations: 0.65
2025-01-10T13:23:48.0570021Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:23:48.0570101Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:23:48.0570254Z  DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:23:48.0570333Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:23:48.0570745Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T13:23:48.0570838Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0570851Z 
2025-01-10T13:23:48.0570941Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:48.0571051Z Max absolute difference among violations: 26
2025-01-10T13:23:48.0571173Z Max relative difference among violations: 0.44067797
2025-01-10T13:23:48.0571320Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:23:48.0571400Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:23:48.0571549Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:23:48.0571628Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:23:48.0572042Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T13:23:48.0572135Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:23:48.0572140Z 
2025-01-10T13:23:48.0572232Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:23:48.0572342Z Max absolute difference among violations: 4
2025-01-10T13:23:48.0572468Z Max relative difference among violations: 1.33333333
2025-01-10T13:23:48.0572609Z  ACTUAL: array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T13:23:48.0572757Z  DESIRED: array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:23:48.0572837Z         0,  0,  0])
2025-01-10T13:23:48.0573440Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-01-10T13:23:48.0573546Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0573550Z 
2025-01-10T13:23:48.0573642Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:48.0573782Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:23:48.0573903Z Max relative difference among violations: 4.03140103
2025-01-10T13:23:48.0574072Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0574158Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0574450Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0574535Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0574997Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-01-10T13:23:48.0575101Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0575105Z 
2025-01-10T13:23:48.0575195Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:48.0575330Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:23:48.0575450Z Max relative difference among violations: 4.03140103
2025-01-10T13:23:48.0575611Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0575690Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0575856Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0575938Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0576509Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-01-10T13:23:48.0576617Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0576621Z 
2025-01-10T13:23:48.0576711Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:48.0576842Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:23:48.0576961Z Max relative difference among violations: 4.03140103
2025-01-10T13:23:48.0577123Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0577202Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0577364Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0577445Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0577916Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-01-10T13:23:48.0578023Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0578027Z 
2025-01-10T13:23:48.0578115Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:48.0578247Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:23:48.0578367Z Max relative difference among violations: 4.03140103
2025-01-10T13:23:48.0578530Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0578607Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0578771Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0578849Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0579313Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-01-10T13:23:48.0579415Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0579422Z 
2025-01-10T13:23:48.0579514Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:48.0579651Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:23:48.0579782Z Max relative difference among violations: 53038.42648305
2025-01-10T13:23:48.0579942Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0580020Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0580186Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0580265Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0580727Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-01-10T13:23:48.0580828Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0580832Z 
2025-01-10T13:23:48.0580921Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:48.0581053Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:23:48.0581299Z Max relative difference among violations: 53038.42648305
2025-01-10T13:23:48.0581460Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0581539Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0581703Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0581781Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0582242Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-01-10T13:23:48.0582338Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0582348Z 
2025-01-10T13:23:48.0582436Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:48.0582569Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:23:48.0582697Z Max relative difference among violations: 53038.42648305
2025-01-10T13:23:48.0582934Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0583126Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0583291Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0583368Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0583830Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-01-10T13:23:48.0583928Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0583932Z 
2025-01-10T13:23:48.0584027Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:48.0584160Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:23:48.0584286Z Max relative difference among violations: 53038.42648305
2025-01-10T13:23:48.0584446Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0584525Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0584692Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:23:48.0584775Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0585241Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-01-10T13:23:48.0585337Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0585341Z 
2025-01-10T13:23:48.0585436Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:48.0585565Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:23:48.0585689Z Max relative difference among violations: 4.03140103
2025-01-10T13:23:48.0585851Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0585930Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0586095Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0586173Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0586641Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-01-10T13:23:48.0586737Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0586742Z 
2025-01-10T13:23:48.0586834Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:48.0586959Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:23:48.0587084Z Max relative difference among violations: 4.03140103
2025-01-10T13:23:48.0587241Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0587323Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0587491Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0587569Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0588035Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-01-10T13:23:48.0588273Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0588278Z 
2025-01-10T13:23:48.0588376Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:48.0588505Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:23:48.0588630Z Max relative difference among violations: 4.03140103
2025-01-10T13:23:48.0588786Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0588870Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0589035Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0589112Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0589582Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-01-10T13:23:48.0589680Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0589684Z 
2025-01-10T13:23:48.0589780Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:23:48.0590040Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:23:48.0590171Z Max relative difference among violations: 4.03140103
2025-01-10T13:23:48.0590325Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0590407Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0590565Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0590648Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0591116Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-01-10T13:23:48.0591214Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0591218Z 
2025-01-10T13:23:48.0591312Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:48.0591442Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:23:48.0591578Z Max relative difference among violations: 53038.42648305
2025-01-10T13:23:48.0591738Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0591822Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0591980Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0592063Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0592529Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-01-10T13:23:48.0592626Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0592630Z 
2025-01-10T13:23:48.0592724Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:48.0592852Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:23:48.0592988Z Max relative difference among violations: 53038.42648305
2025-01-10T13:23:48.0593274Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0593369Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0593527Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0593609Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0594069Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-01-10T13:23:48.0594171Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0594175Z 
2025-01-10T13:23:48.0594268Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:48.0594395Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:23:48.0594526Z Max relative difference among violations: 53038.42648305
2025-01-10T13:23:48.0594685Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0594768Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0594927Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0595140Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0595608Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-01-10T13:23:48.0595713Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0595717Z 
2025-01-10T13:23:48.0595812Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:23:48.0595943Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:23:48.0596075Z Max relative difference among violations: 53038.42648305
2025-01-10T13:23:48.0596232Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0596315Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0596476Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:23:48.0596559Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0597095Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T13:23:48.0597205Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0597209Z 
2025-01-10T13:23:48.0597300Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:48.0597436Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:23:48.0597563Z Max relative difference among violations: 3.03053629
2025-01-10T13:23:48.0597723Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0597806Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0597965Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0598046Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0598468Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T13:23:48.0598573Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0598585Z 
2025-01-10T13:23:48.0598674Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:48.0598808Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:23:48.0598928Z Max relative difference among violations: 3.03053629
2025-01-10T13:23:48.0599094Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0599186Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0599345Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0599429Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0599844Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-01-10T13:23:48.0599946Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0599950Z 
2025-01-10T13:23:48.0600039Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:48.0600171Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:23:48.0600298Z Max relative difference among violations: 3.03053629
2025-01-10T13:23:48.0600459Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0600543Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0600700Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0600784Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0601201Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-01-10T13:23:48.0601304Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0601308Z 
2025-01-10T13:23:48.0601400Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:48.0601533Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:23:48.0601653Z Max relative difference among violations: 3.03053629
2025-01-10T13:23:48.0601817Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0602042Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0602209Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0602292Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0602707Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T13:23:48.0602809Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0602813Z 
2025-01-10T13:23:48.0602903Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0603137Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:23:48.0603266Z Max relative difference among violations: 21416.68434824
2025-01-10T13:23:48.0603428Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0603505Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0603787Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0603870Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0604291Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T13:23:48.0604393Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0604397Z 
2025-01-10T13:23:48.0604486Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0604620Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:23:48.0604747Z Max relative difference among violations: 21416.68434824
2025-01-10T13:23:48.0604908Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0604986Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0605150Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0605232Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0605657Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-01-10T13:23:48.0605761Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0605766Z 
2025-01-10T13:23:48.0605855Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0605987Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:23:48.0606113Z Max relative difference among violations: 21416.68434824
2025-01-10T13:23:48.0606279Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0606357Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0606518Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0606594Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0607016Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T13:23:48.0607116Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0607131Z 
2025-01-10T13:23:48.0607221Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0607352Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:23:48.0607479Z Max relative difference among violations: 21416.68434824
2025-01-10T13:23:48.0607639Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0607717Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0607880Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:23:48.0607958Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0608376Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-01-10T13:23:48.0608472Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0608476Z 
2025-01-10T13:23:48.0608573Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:48.0608708Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:23:48.0608979Z Max relative difference among violations: 3.03053629
2025-01-10T13:23:48.0609141Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0609220Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0609383Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0609461Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0609884Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-01-10T13:23:48.0609980Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0609984Z 
2025-01-10T13:23:48.0610079Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:48.0610207Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:23:48.0610332Z Max relative difference among violations: 3.03053629
2025-01-10T13:23:48.0610579Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0610668Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0610838Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0610915Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0611352Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-01-10T13:23:48.0611450Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0611454Z 
2025-01-10T13:23:48.0611548Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:48.0611676Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:23:48.0611803Z Max relative difference among violations: 3.03053629
2025-01-10T13:23:48.0611959Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0612043Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0612210Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0612291Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0612716Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-01-10T13:23:48.0612814Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0612818Z 
2025-01-10T13:23:48.0612915Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:23:48.0613171Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:23:48.0613301Z Max relative difference among violations: 3.03053629
2025-01-10T13:23:48.0613459Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0613544Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0613708Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0613786Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0614213Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-01-10T13:23:48.0614312Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0614316Z 
2025-01-10T13:23:48.0614412Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0614540Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:23:48.0614672Z Max relative difference among violations: 21416.6843355
2025-01-10T13:23:48.0614829Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0614914Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0615073Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0615155Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0615579Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-01-10T13:23:48.0615804Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0615809Z 
2025-01-10T13:23:48.0615905Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0616034Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:23:48.0616164Z Max relative difference among violations: 21416.6843355
2025-01-10T13:23:48.0616321Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0616404Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0616563Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0616646Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0617062Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-01-10T13:23:48.0617163Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0617167Z 
2025-01-10T13:23:48.0617263Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0617510Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:23:48.0617643Z Max relative difference among violations: 21416.6843355
2025-01-10T13:23:48.0617798Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0617882Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0618041Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0618123Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0618542Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-01-10T13:23:48.0618644Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:23:48.0618648Z 
2025-01-10T13:23:48.0618741Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:23:48.0618869Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:23:48.0619000Z Max relative difference among violations: 21416.6843355
2025-01-10T13:23:48.0619165Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0619247Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0619407Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:23:48.0619492Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:23:48.0619764Z = 275 failed, 1163 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 251 warnings in 757.55s (0:12:37) =
2025-01-10T13:23:50.2840793Z ##[error]Process completed with exit code 1.
2025-01-10T13:23:50.2916354Z Post job cleanup.
2025-01-10T13:23:50.2947712Z Post job cleanup.
2025-01-10T13:23:50.4286856Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-01-10T13:23:50.4293599Z Removing micromamba run shell ...
2025-01-10T13:23:50.4297162Z ##[group]Deinitialize micromamba for bash
2025-01-10T13:23:50.4316274Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:23:50.4415511Z Resetting RC file "/home/runner/.bashrc"
2025-01-10T13:23:50.4416247Z Deleting config for root prefix 
2025-01-10T13:23:50.4416720Z Clearing mamba executable environment variable
2025-01-10T13:23:50.4418705Z Removing the following in your "/home/runner/.bashrc" file
2025-01-10T13:23:50.4419259Z # >>> mamba initialize >>>
2025-01-10T13:23:50.4419624Z ...
2025-01-10T13:23:50.4419886Z # <<< mamba initialize <<<
2025-01-10T13:23:50.4450146Z Removing mamba initialize block from .bash_profile
2025-01-10T13:23:50.4466289Z ##[endgroup]
2025-01-10T13:23:50.4470833Z Removing environment tardis from auto-activate bash ...
2025-01-10T13:23:50.4596800Z Post job cleanup.
2025-01-10T13:23:50.4647022Z Post job cleanup.
2025-01-10T13:23:50.5665702Z [command]/usr/bin/git version
2025-01-10T13:23:50.5705635Z git version 2.47.1
2025-01-10T13:23:50.5749072Z Temporarily overriding HOME='/home/runner/work/_temp/bf88aef5-86fc-4c2d-b593-ccbb259f1b89' before making global git config changes
2025-01-10T13:23:50.5750544Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:23:50.5762634Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:23:50.5798477Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:23:50.5832326Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:23:50.6069383Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:23:50.6094303Z http.https://github.com/.extraheader
2025-01-10T13:23:50.6107919Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-10T13:23:50.6140320Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:23:50.6481679Z Post job cleanup.
2025-01-10T13:23:50.7446316Z [command]/usr/bin/git version
2025-01-10T13:23:50.7483736Z git version 2.47.1
2025-01-10T13:23:50.7536311Z Temporarily overriding HOME='/home/runner/work/_temp/09fdf431-416e-4744-a748-2094bd392d38' before making global git config changes
2025-01-10T13:23:50.7537660Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:23:50.7542835Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-10T13:23:50.7579047Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:23:50.7611926Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:23:50.7853463Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:23:50.7876813Z http.https://github.com/.extraheader
2025-01-10T13:23:50.7890617Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-10T13:23:50.7925997Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:23:50.8311662Z Cleaning up orphan processes
