2025-02-24T15:39:52.0640361Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T15:39:52.0642169Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T15:39:52.0697677Z shell: /usr/bin/bash -l {0}
2025-02-24T15:39:52.0697944Z env:
2025-02-24T15:39:52.0698141Z   CACHE_NUMBER: 0
2025-02-24T15:39:52.0698830Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:39:52.0699558Z   CODECOV_TOKEN: 
2025-02-24T15:39:52.0699803Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T15:39:52.0700141Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T15:39:52.0700530Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:39:52.0701090Z ##[endgroup]
2025-02-24T15:40:01.4691895Z ============================= test session starts ==============================
2025-02-24T15:40:01.4692659Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T15:40:01.4693270Z rootdir: /home/runner/work/tardis/tardis
2025-02-24T15:40:01.4693773Z configfile: pyproject.toml
2025-02-24T15:40:01.4694370Z plugins: metadata-3.1.1, anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1
2025-02-24T15:40:01.4695065Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T15:40:01.4695409Z 
2025-02-24T15:40:06.4124697Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T15:40:09.3826034Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T15:40:11.0304371Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T15:40:12.8473538Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T15:40:12.8566281Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T15:40:14.1205903Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T15:40:14.4646699Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T15:40:14.4662304Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T15:40:17.8783470Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T15:40:17.8908842Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T15:40:17.9174672Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T15:40:55.4486880Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T15:40:55.4628438Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T15:40:55.4734429Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T15:40:55.5032716Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T15:40:55.5236427Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T15:40:55.8205068Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T15:40:56.1447951Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T15:40:56.1641485Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T15:40:56.3607699Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T15:40:56.3674733Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T15:41:54.0180044Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T15:41:55.0192598Z ............                                                             [ 10%]
2025-02-24T15:41:58.0698853Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T15:41:58.1179405Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T15:41:59.4248750Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T15:42:00.7412696Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T15:42:02.5898463Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T15:42:05.6709957Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T15:42:52.1715161Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T15:43:03.9357632Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T15:43:05.5938480Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T15:43:08.9848271Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T15:43:11.2518222Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T15:43:14.6418066Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T15:43:18.0164920Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T15:43:19.2309305Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T15:43:22.6721808Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T15:43:26.5882192Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T15:43:30.2312607Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T15:43:32.7695192Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T15:43:36.0992515Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T15:43:39.8071515Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T15:43:40.4324694Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T15:43:40.6617333Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T15:43:40.6732589Z ......                                                                   [ 62%]
2025-02-24T15:43:40.8089493Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T15:45:57.1549258Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T15:45:57.1574278Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T15:46:20.1196670Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T15:46:33.7668565Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T15:46:34.5214818Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T15:46:43.2480100Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T15:46:43.2691681Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T15:46:43.7526918Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T15:46:43.7599346Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T15:46:45.3519555Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T15:46:45.3715450Z ..........                                                               [ 69%]
2025-02-24T15:46:45.5471167Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T15:46:45.5802841Z .........                                                                [ 72%]
2025-02-24T15:47:04.7960548Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T15:48:06.6233709Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T15:49:31.2083787Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T15:49:31.2811361Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T15:49:33.9002018Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T15:49:41.6674002Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T15:49:41.8811731Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T15:49:41.8989565Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T15:49:41.9395724Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T15:49:50.8078086Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T15:49:50.8143856Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T15:49:56.6085015Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T15:49:57.1057806Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T15:49:58.1273812Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T15:49:58.2633708Z XX.........                                                              [ 84%]
2025-02-24T15:49:58.2930018Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T15:49:58.5910436Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T15:49:59.0035427Z .....                                                                    [ 85%]
2025-02-24T15:50:35.0426205Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T15:50:35.0708450Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T15:50:35.0741296Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T15:50:37.9843979Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T15:50:38.0040254Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T15:50:41.5074314Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T15:50:41.5075725Z                                                                          [ 86%]
2025-02-24T15:50:42.2381781Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T15:50:43.5994029Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T15:50:45.7778433Z ......                                                                   [ 88%]
2025-02-24T15:50:50.6497112Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T15:50:54.2899212Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T15:50:57.1809332Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T15:51:04.2357926Z ....                                                                     [ 92%]
2025-02-24T15:51:10.4174245Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T15:51:19.4917590Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T15:51:19.9271967Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T15:51:20.0002019Z ....                                                                     [ 96%]
2025-02-24T15:51:21.0652037Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T15:51:21.7085932Z ..................                                                       [ 98%]
2025-02-24T15:52:25.2895754Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T15:52:32.3650624Z ......                                                                   [100%]
2025-02-24T15:52:32.3651905Z 
2025-02-24T15:52:32.3652174Z =================================== FAILURES ===================================
2025-02-24T15:52:32.3653005Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T15:52:32.3653585Z 
2025-02-24T15:52:32.3653838Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T15:52:32.3654587Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T15:52:32.3655103Z 
2025-02-24T15:52:32.3655401Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3656070Z         if err_msg is None:
2025-02-24T15:52:32.3656602Z             if left.shape != right.shape:
2025-02-24T15:52:32.3657133Z                 raise_assert_detail(
2025-02-24T15:52:32.3657749Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3658289Z                 )
2025-02-24T15:52:32.3658525Z     
2025-02-24T15:52:32.3658745Z             diff = 0
2025-02-24T15:52:32.3659045Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3659424Z                 # count up differences
2025-02-24T15:52:32.3659862Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3660310Z                     diff += 1
2025-02-24T15:52:32.3660583Z     
2025-02-24T15:52:32.3660815Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3661460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3661977Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3662464Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3662816Z E           
2025-02-24T15:52:32.3663096Z E           numpy array values are different (0.09581 %)
2025-02-24T15:52:32.3663878Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T15:52:32.3665046Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T15:52:32.3665677Z 
2025-02-24T15:52:32.3666091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3666624Z 
2025-02-24T15:52:32.3666798Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3667187Z 
2025-02-24T15:52:32.3667579Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f885bd9c7d0>
2025-02-24T15:52:32.3668639Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885e635f10>
2025-02-24T15:52:32.3669287Z 
2025-02-24T15:52:32.3669464Z     def test_calculate_sobolev_line_opacity(
2025-02-24T15:52:32.3669953Z         nb_simulation_verysimple, regression_data
2025-02-24T15:52:32.3670405Z     ):
2025-02-24T15:52:32.3670777Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T15:52:32.3671415Z     
2025-02-24T15:52:32.3671745Z         actual = calculate_sobolev_line_opacity(
2025-02-24T15:52:32.3672207Z             legacy_plasma.lines,
2025-02-24T15:52:32.3672574Z             legacy_plasma.level_number_density,
2025-02-24T15:52:32.3673081Z             legacy_plasma.time_explosion,
2025-02-24T15:52:32.3673385Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T15:52:32.3673772Z         )
2025-02-24T15:52:32.3673995Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.3674318Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3674514Z 
2025-02-24T15:52:32.3674634Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T15:52:32.3674946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3675302Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3675608Z     ???
2025-02-24T15:52:32.3675817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3676024Z 
2025-02-24T15:52:32.3676094Z >   ???
2025-02-24T15:52:32.3676318Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T15:52:32.3676596Z E   
2025-02-24T15:52:32.3676830Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T15:52:32.3677163Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:52:32.3677437Z E          ...
2025-02-24T15:52:32.3677638Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:52:32.3677943Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:52:32.3678277Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:52:32.3678556Z E          ...
2025-02-24T15:52:32.3678750Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:52:32.3679045Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:52:32.3679366Z E   At positional index 54, first diff: 14 != 12
2025-02-24T15:52:32.3679570Z 
2025-02-24T15:52:32.3679664Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3679985Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.3680663Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.3681687Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.3682318Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:52:32.3682573Z 
2025-02-24T15:52:32.3682908Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.69s/it]
2025-02-24T15:52:32.3683185Z 
2025-02-24T15:52:32.3683424Z Packets:                                                                                   4030/? [00:12<00:00, 34206.44it/s][A
2025-02-24T15:52:32.3683811Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.3684575Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.3685511Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T15:52:32.3685957Z 
2025-02-24T15:52:32.3686366Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f885bd9c7d0>
2025-02-24T15:52:32.3687131Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885e635970>
2025-02-24T15:52:32.3687501Z 
2025-02-24T15:52:32.3687698Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T15:52:32.3688108Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T15:52:32.3688392Z     
2025-02-24T15:52:32.3688604Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T15:52:32.3688894Z             legacy_plasma.lines,
2025-02-24T15:52:32.3689157Z             legacy_plasma.level_number_density,
2025-02-24T15:52:32.3689447Z             legacy_plasma.time_explosion,
2025-02-24T15:52:32.3689737Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T15:52:32.3690163Z         )
2025-02-24T15:52:32.3690372Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T15:52:32.3690690Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.3691314Z >       npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.3691503Z 
2025-02-24T15:52:32.3691620Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T15:52:32.3691935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3692143Z 
2025-02-24T15:52:32.3692413Z args = (<function assert_allclose.<locals>.compare at 0x7f888ae83740>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3692853Z        [1., 1., .....,
2025-02-24T15:52:32.3693057Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3693292Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3693528Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T15:52:32.3693937Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.3694281Z 
2025-02-24T15:52:32.3694363Z     @wraps(func)
2025-02-24T15:52:32.3694565Z     def inner(*args, **kwds):
2025-02-24T15:52:32.3694806Z         with self._recreate_cm():
2025-02-24T15:52:32.3695053Z >           return func(*args, **kwds)
2025-02-24T15:52:32.3695305Z E           AssertionError: 
2025-02-24T15:52:32.3695557Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.3695828Z E           
2025-02-24T15:52:32.3696043Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:52:32.3696333Z E           Max absolute difference: 0.99984222
2025-02-24T15:52:32.3696615Z E           Max relative difference: 6337.12154973
2025-02-24T15:52:32.3696896Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3697163Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3697425Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.3697690Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3697955Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3698212Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.3698395Z 
2025-02-24T15:52:32.3698605Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.3699099Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T15:52:32.3699393Z 
2025-02-24T15:52:32.3699617Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T15:52:32.3700731Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x7f886279a3f0>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x7f8850ec66f0>, 'electron')]
2025-02-24T15:52:32.3702029Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x7f88760e2ed0>
2025-02-24T15:52:32.3702640Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8885042960>
2025-02-24T15:52:32.3703020Z 
2025-02-24T15:52:32.3703111Z     def test_rate_matrix_solver(
2025-02-24T15:52:32.3703364Z         new_chianti_atomic_dataset_si,
2025-02-24T15:52:32.3703617Z         rate_solver_list,
2025-02-24T15:52:32.3703851Z         collisional_simulation_state,
2025-02-24T15:52:32.3704099Z         regression_data,
2025-02-24T15:52:32.3704326Z     ):
2025-02-24T15:52:32.3704658Z         rate_matrix_solver = RateMatrix(
2025-02-24T15:52:32.3705198Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T15:52:32.3705702Z         )
2025-02-24T15:52:32.3705934Z     
2025-02-24T15:52:32.3706149Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T15:52:32.3706462Z             collisional_simulation_state.t_radiative,
2025-02-24T15:52:32.3706842Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T15:52:32.3707194Z         )
2025-02-24T15:52:32.3707583Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T15:52:32.3707960Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T15:52:32.3708386Z         )
2025-02-24T15:52:32.3708555Z     
2025-02-24T15:52:32.3708794Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T15:52:32.3709098Z     
2025-02-24T15:52:32.3709317Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.3709533Z 
2025-02-24T15:52:32.3709749Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T15:52:32.3710094Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3710469Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T15:52:32.3710822Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T15:52:32.3711527Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T15:52:32.3711974Z     return store.select(
2025-02-24T15:52:32.3712374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T15:52:32.3712804Z     return it.get_result()
2025-02-24T15:52:32.3713221Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T15:52:32.3713703Z     results = self.func(self.start, self.stop, where)
2025-02-24T15:52:32.3714154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T15:52:32.3714660Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T15:52:32.3715173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T15:52:32.3715690Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T15:52:32.3716222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T15:52:32.3716683Z     ret = node[0][start:stop]
2025-02-24T15:52:32.3717089Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T15:52:32.3717536Z     return self.read(start, stop, step)[0]
2025-02-24T15:52:32.3717948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T15:52:32.3718410Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T15:52:32.3718742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3718949Z 
2025-02-24T15:52:32.3719035Z self = ObjectAtom()
2025-02-24T15:52:32.3719290Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T15:52:32.3719547Z 
2025-02-24T15:52:32.3719645Z     def fromarray(self, array):
2025-02-24T15:52:32.3719940Z         # We have to check for an empty array because of a possible
2025-02-24T15:52:32.3720297Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T15:52:32.3720613Z         # record when in fact it is empty.
2025-02-24T15:52:32.3720870Z         if array.size == 0:
2025-02-24T15:52:32.3721277Z             return None
2025-02-24T15:52:32.3721515Z >       return pickle.loads(array.tobytes())
2025-02-24T15:52:32.3721871Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T15:52:32.3722122Z 
2025-02-24T15:52:32.3722404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T15:52:32.3722922Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.3723458Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.3724746Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.3725788Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.3727318Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.3728261Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T15:52:32.3728550Z 
2025-02-24T15:52:32.3728685Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3729036Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3729364Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3729687Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3730045Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3730364Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3730620Z err_msg = None
2025-02-24T15:52:32.3730739Z 
2025-02-24T15:52:32.3730859Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3731460Z         if err_msg is None:
2025-02-24T15:52:32.3731711Z             if left.shape != right.shape:
2025-02-24T15:52:32.3731977Z                 raise_assert_detail(
2025-02-24T15:52:32.3732285Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3732594Z                 )
2025-02-24T15:52:32.3732777Z     
2025-02-24T15:52:32.3732946Z             diff = 0
2025-02-24T15:52:32.3733182Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3733473Z                 # count up differences
2025-02-24T15:52:32.3733812Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3734161Z                     diff += 1
2025-02-24T15:52:32.3734374Z     
2025-02-24T15:52:32.3734555Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3734867Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3735275Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3735656Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3735927Z E           
2025-02-24T15:52:32.3736146Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3736621Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3737245Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3737607Z 
2025-02-24T15:52:32.3737924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3738320Z 
2025-02-24T15:52:32.3738497Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3738755Z 
2025-02-24T15:52:32.3738987Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf32db0>
2025-02-24T15:52:32.3739473Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3739800Z attr = 'lines'
2025-02-24T15:52:32.3739911Z 
2025-02-24T15:52:32.3740060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3740529Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3740831Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3741167Z         try:
2025-02-24T15:52:32.3741415Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3741919Z         except KeyError:
2025-02-24T15:52:32.3742353Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3742900Z     
2025-02-24T15:52:32.3743212Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3743657Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3744111Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3744642Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3745159Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3745578Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3746056Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3746489Z             else:
2025-02-24T15:52:32.3746704Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3746990Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3747180Z 
2025-02-24T15:52:32.3747312Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3747645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3748002Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3748312Z     ???
2025-02-24T15:52:32.3748522Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3748734Z 
2025-02-24T15:52:32.3748804Z >   ???
2025-02-24T15:52:32.3749028Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3749309Z E   
2025-02-24T15:52:32.3749532Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3749873Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3750151Z E          ...
2025-02-24T15:52:32.3750351Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3750661Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3751119Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3751402Z E          ...
2025-02-24T15:52:32.3751596Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3751904Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3752224Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3752415Z 
2025-02-24T15:52:32.3752507Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3752873Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T15:52:32.3753184Z 
2025-02-24T15:52:32.3753409Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf32c30>
2025-02-24T15:52:32.3753891Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3754235Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.3754398Z 
2025-02-24T15:52:32.3754539Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3754880Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3755170Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3755391Z         try:
2025-02-24T15:52:32.3755638Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3755957Z         except KeyError:
2025-02-24T15:52:32.3756228Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3756520Z     
2025-02-24T15:52:32.3756700Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3756950Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3757213Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3757516Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3757859Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3758105Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3758390Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3758590Z 
2025-02-24T15:52:32.3758715Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3759190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3759398Z 
2025-02-24T15:52:32.3759540Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.3760034Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.3760311Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3760776Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.3761476Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.3762024Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.3762487Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3762950Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.3763349Z err_msg = None
2025-02-24T15:52:32.3763537Z 
2025-02-24T15:52:32.3763723Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3764161Z         if err_msg is None:
2025-02-24T15:52:32.3764401Z             if left.shape != right.shape:
2025-02-24T15:52:32.3764663Z                 raise_assert_detail(
2025-02-24T15:52:32.3764976Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3765285Z                 )
2025-02-24T15:52:32.3765469Z     
2025-02-24T15:52:32.3765639Z             diff = 0
2025-02-24T15:52:32.3765873Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3766161Z                 # count up differences
2025-02-24T15:52:32.3766498Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3766845Z                     diff += 1
2025-02-24T15:52:32.3767058Z     
2025-02-24T15:52:32.3767240Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3767548Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3767946Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3768313Z E           AssertionError: Series are different
2025-02-24T15:52:32.3768572Z E           
2025-02-24T15:52:32.3768792Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.3769356Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.3770144Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3770898Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3771465Z 
2025-02-24T15:52:32.3771785Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3772395Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T15:52:32.3772704Z 
2025-02-24T15:52:32.3772933Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf32390>
2025-02-24T15:52:32.3773415Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3773918Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.3774079Z 
2025-02-24T15:52:32.3774225Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3774567Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3775006Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3775244Z         try:
2025-02-24T15:52:32.3775502Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3775827Z         except KeyError:
2025-02-24T15:52:32.3776104Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3776402Z     
2025-02-24T15:52:32.3776586Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3776841Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3777109Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3777413Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3777722Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3777968Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3778258Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3778600Z 
2025-02-24T15:52:32.3778824Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3779419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3779774Z 
2025-02-24T15:52:32.3780014Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.3780552Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.3781159Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.3781641Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.3782158Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.3782522Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.3782793Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.3783077Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.3783312Z err_msg = None
2025-02-24T15:52:32.3783428Z 
2025-02-24T15:52:32.3783544Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3783835Z         if err_msg is None:
2025-02-24T15:52:32.3784076Z             if left.shape != right.shape:
2025-02-24T15:52:32.3784336Z                 raise_assert_detail(
2025-02-24T15:52:32.3784644Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3784956Z                 )
2025-02-24T15:52:32.3785138Z     
2025-02-24T15:52:32.3785306Z             diff = 0
2025-02-24T15:52:32.3785542Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3785834Z                 # count up differences
2025-02-24T15:52:32.3786175Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3786518Z                     diff += 1
2025-02-24T15:52:32.3786732Z     
2025-02-24T15:52:32.3786919Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3787228Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3787625Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3787998Z E           AssertionError: Series are different
2025-02-24T15:52:32.3788257Z E           
2025-02-24T15:52:32.3788464Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.3789029Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.3789873Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.3791091Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.3791564Z 
2025-02-24T15:52:32.3791886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3792466Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T15:52:32.3792754Z 
2025-02-24T15:52:32.3792888Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3793246Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3793563Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3793882Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3794238Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3794553Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3794813Z err_msg = None
2025-02-24T15:52:32.3794929Z 
2025-02-24T15:52:32.3795042Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3795315Z         if err_msg is None:
2025-02-24T15:52:32.3795552Z             if left.shape != right.shape:
2025-02-24T15:52:32.3795819Z                 raise_assert_detail(
2025-02-24T15:52:32.3796124Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3796434Z                 )
2025-02-24T15:52:32.3796616Z     
2025-02-24T15:52:32.3796893Z             diff = 0
2025-02-24T15:52:32.3797295Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3797789Z                 # count up differences
2025-02-24T15:52:32.3798362Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3798944Z                     diff += 1
2025-02-24T15:52:32.3799297Z     
2025-02-24T15:52:32.3799599Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3800112Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3800625Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3801121Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3801398Z E           
2025-02-24T15:52:32.3801615Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3802081Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3802698Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3803056Z 
2025-02-24T15:52:32.3803369Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3803903Z 
2025-02-24T15:52:32.3804081Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3804344Z 
2025-02-24T15:52:32.3804679Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf333e0>
2025-02-24T15:52:32.3805204Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>, attr = 'nu'
2025-02-24T15:52:32.3805496Z 
2025-02-24T15:52:32.3805635Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3805976Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3806265Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3806485Z         try:
2025-02-24T15:52:32.3806732Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3807043Z         except KeyError:
2025-02-24T15:52:32.3807317Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3807614Z     
2025-02-24T15:52:32.3807800Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3808057Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3808322Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3808630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3808939Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3809189Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3809473Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3809670Z 
2025-02-24T15:52:32.3809812Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3810133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3810483Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3810784Z     ???
2025-02-24T15:52:32.3811099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3811303Z 
2025-02-24T15:52:32.3811374Z >   ???
2025-02-24T15:52:32.3811600Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3811880Z E   
2025-02-24T15:52:32.3812105Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3812442Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3812719Z E          ...
2025-02-24T15:52:32.3812917Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3813228Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3813562Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3813835Z E          ...
2025-02-24T15:52:32.3814029Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3814331Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3814647Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3814838Z 
2025-02-24T15:52:32.3814931Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3815536Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T15:52:32.3816083Z 
2025-02-24T15:52:32.3816305Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3816908Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3817446Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3817984Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3818599Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3818960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3819223Z err_msg = None
2025-02-24T15:52:32.3819334Z 
2025-02-24T15:52:32.3819453Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3819731Z         if err_msg is None:
2025-02-24T15:52:32.3819966Z             if left.shape != right.shape:
2025-02-24T15:52:32.3820373Z                 raise_assert_detail(
2025-02-24T15:52:32.3820683Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3821242Z                 )
2025-02-24T15:52:32.3821431Z     
2025-02-24T15:52:32.3821597Z             diff = 0
2025-02-24T15:52:32.3821830Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3822114Z                 # count up differences
2025-02-24T15:52:32.3822452Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3822796Z                     diff += 1
2025-02-24T15:52:32.3823016Z     
2025-02-24T15:52:32.3823201Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3823517Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3823929Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3824310Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3824588Z E           
2025-02-24T15:52:32.3824811Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3825277Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3825901Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3826258Z 
2025-02-24T15:52:32.3826572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3826976Z 
2025-02-24T15:52:32.3827141Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3827404Z 
2025-02-24T15:52:32.3827642Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30350>
2025-02-24T15:52:32.3828128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3828460Z attr = 'wavelength_cm'
2025-02-24T15:52:32.3828589Z 
2025-02-24T15:52:32.3828734Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3829081Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3829370Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3829592Z         try:
2025-02-24T15:52:32.3829842Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3830154Z         except KeyError:
2025-02-24T15:52:32.3830426Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3830722Z     
2025-02-24T15:52:32.3831007Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3831263Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3831530Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3831839Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3832146Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3832405Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3832694Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3832894Z 
2025-02-24T15:52:32.3833027Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3833350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3833951Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3834354Z     ???
2025-02-24T15:52:32.3834638Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3834942Z 
2025-02-24T15:52:32.3835094Z >   ???
2025-02-24T15:52:32.3850607Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3851325Z E   
2025-02-24T15:52:32.3851723Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3852519Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3852979Z E          ...
2025-02-24T15:52:32.3853308Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3853822Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3854388Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3854729Z E          ...
2025-02-24T15:52:32.3854938Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3855253Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3855586Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3855781Z 
2025-02-24T15:52:32.3855879Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3856234Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T15:52:32.3856528Z 
2025-02-24T15:52:32.3856668Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3857029Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3857348Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3857665Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3858019Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3858334Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3858588Z err_msg = None
2025-02-24T15:52:32.3858704Z 
2025-02-24T15:52:32.3858821Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3859098Z         if err_msg is None:
2025-02-24T15:52:32.3859429Z             if left.shape != right.shape:
2025-02-24T15:52:32.3859892Z                 raise_assert_detail(
2025-02-24T15:52:32.3860415Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3861081Z                 )
2025-02-24T15:52:32.3861427Z     
2025-02-24T15:52:32.3861724Z             diff = 0
2025-02-24T15:52:32.3862119Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3862607Z                 # count up differences
2025-02-24T15:52:32.3863058Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3863407Z                     diff += 1
2025-02-24T15:52:32.3863628Z     
2025-02-24T15:52:32.3863816Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3864137Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3864544Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3864921Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3865199Z E           
2025-02-24T15:52:32.3865424Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3865898Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3866515Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3866867Z 
2025-02-24T15:52:32.3867189Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3867759Z 
2025-02-24T15:52:32.3867940Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3868304Z 
2025-02-24T15:52:32.3868542Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf33a10>
2025-02-24T15:52:32.3869210Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>, attr = 'f_lu'
2025-02-24T15:52:32.3869507Z 
2025-02-24T15:52:32.3869648Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3869998Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3870289Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3870514Z         try:
2025-02-24T15:52:32.3870768Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3871234Z         except KeyError:
2025-02-24T15:52:32.3871514Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3871814Z     
2025-02-24T15:52:32.3872010Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3872270Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3872540Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3872856Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3873170Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3873423Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3873714Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3873916Z 
2025-02-24T15:52:32.3874043Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3874371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3874727Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3875041Z     ???
2025-02-24T15:52:32.3875255Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3875455Z 
2025-02-24T15:52:32.3875533Z >   ???
2025-02-24T15:52:32.3875766Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3876050Z E   
2025-02-24T15:52:32.3876278Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3876616Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3876891Z E          ...
2025-02-24T15:52:32.3877095Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3877402Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3877734Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3878010Z E          ...
2025-02-24T15:52:32.3878211Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3878516Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3878835Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3879032Z 
2025-02-24T15:52:32.3879127Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3879701Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T15:52:32.3880232Z 
2025-02-24T15:52:32.3880465Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3881200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3881746Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3882280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3882879Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3883303Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3883565Z err_msg = None
2025-02-24T15:52:32.3883686Z 
2025-02-24T15:52:32.3883801Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3884082Z         if err_msg is None:
2025-02-24T15:52:32.3884317Z             if left.shape != right.shape:
2025-02-24T15:52:32.3884737Z                 raise_assert_detail(
2025-02-24T15:52:32.3885048Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3885467Z                 )
2025-02-24T15:52:32.3885654Z     
2025-02-24T15:52:32.3885824Z             diff = 0
2025-02-24T15:52:32.3886064Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3886352Z                 # count up differences
2025-02-24T15:52:32.3886694Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3887035Z                     diff += 1
2025-02-24T15:52:32.3887250Z     
2025-02-24T15:52:32.3887439Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3887756Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3888157Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3888536Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3888811Z E           
2025-02-24T15:52:32.3889034Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3889506Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3890120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3890466Z 
2025-02-24T15:52:32.3890783Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3891357Z 
2025-02-24T15:52:32.3891536Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3891803Z 
2025-02-24T15:52:32.3892036Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30e00>
2025-02-24T15:52:32.3892528Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3892865Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.3892999Z 
2025-02-24T15:52:32.3893143Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3893486Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3893777Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3894002Z         try:
2025-02-24T15:52:32.3894256Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3894579Z         except KeyError:
2025-02-24T15:52:32.3894857Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3895154Z     
2025-02-24T15:52:32.3895348Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3895605Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3895871Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3896191Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3896503Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3896753Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3897042Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3897315Z             else:
2025-02-24T15:52:32.3897529Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3897814Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3898011Z 
2025-02-24T15:52:32.3898223Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3898805Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3899403Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3900109Z     ???
2025-02-24T15:52:32.3900466Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3901100Z 
2025-02-24T15:52:32.3901231Z >   ???
2025-02-24T15:52:32.3901611Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3901936Z E   
2025-02-24T15:52:32.3902164Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3902498Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3902782Z E          ...
2025-02-24T15:52:32.3902986Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3903295Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3903641Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3903916Z E          ...
2025-02-24T15:52:32.3904117Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3904421Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3904755Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3904953Z 
2025-02-24T15:52:32.3905049Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3905416Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T15:52:32.3905712Z 
2025-02-24T15:52:32.3905851Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3906213Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3906537Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3906855Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3907217Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3907534Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3907796Z err_msg = None
2025-02-24T15:52:32.3907912Z 
2025-02-24T15:52:32.3908031Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3908315Z         if err_msg is None:
2025-02-24T15:52:32.3908560Z             if left.shape != right.shape:
2025-02-24T15:52:32.3908827Z                 raise_assert_detail(
2025-02-24T15:52:32.3909147Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3909464Z                 )
2025-02-24T15:52:32.3909653Z     
2025-02-24T15:52:32.3909827Z             diff = 0
2025-02-24T15:52:32.3910065Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3910358Z                 # count up differences
2025-02-24T15:52:32.3910701Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3911179Z                     diff += 1
2025-02-24T15:52:32.3911396Z     
2025-02-24T15:52:32.3911586Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3911903Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3912307Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3912691Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3912963Z E           
2025-02-24T15:52:32.3913186Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3913650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3914260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3914748Z 
2025-02-24T15:52:32.3915065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3915593Z 
2025-02-24T15:52:32.3915770Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3916027Z 
2025-02-24T15:52:32.3916255Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30680>
2025-02-24T15:52:32.3916998Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3917587Z attr = 'beta_sobolev'
2025-02-24T15:52:32.3917802Z 
2025-02-24T15:52:32.3918043Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3918616Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3919099Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3919469Z         try:
2025-02-24T15:52:32.3919884Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3920329Z         except KeyError:
2025-02-24T15:52:32.3920609Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3921026Z     
2025-02-24T15:52:32.3921218Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3921476Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3921744Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3922065Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3922383Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3922638Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3922924Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3923194Z             else:
2025-02-24T15:52:32.3923404Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3923696Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3923889Z 
2025-02-24T15:52:32.3924032Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3924360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3924726Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3925031Z     ???
2025-02-24T15:52:32.3925248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3925455Z 
2025-02-24T15:52:32.3925528Z >   ???
2025-02-24T15:52:32.3925759Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3926040Z E   
2025-02-24T15:52:32.3926270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3926605Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3926887Z E          ...
2025-02-24T15:52:32.3927089Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3927399Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3927735Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3928015Z E          ...
2025-02-24T15:52:32.3928213Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3928523Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3928840Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3929026Z 
2025-02-24T15:52:32.3929126Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3929479Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T15:52:32.3929769Z 
2025-02-24T15:52:32.3929903Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3930257Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3930576Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3930903Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3931553Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3931882Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3932253Z err_msg = None
2025-02-24T15:52:32.3932366Z 
2025-02-24T15:52:32.3932486Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3932765Z         if err_msg is None:
2025-02-24T15:52:32.3933007Z             if left.shape != right.shape:
2025-02-24T15:52:32.3933283Z                 raise_assert_detail(
2025-02-24T15:52:32.3933597Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3933907Z                 )
2025-02-24T15:52:32.3934091Z     
2025-02-24T15:52:32.3934301Z             diff = 0
2025-02-24T15:52:32.3934715Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3935221Z                 # count up differences
2025-02-24T15:52:32.3935797Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3936396Z                     diff += 1
2025-02-24T15:52:32.3936756Z     
2025-02-24T15:52:32.3937063Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3937593Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3938144Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3938533Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3938807Z E           
2025-02-24T15:52:32.3939030Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3939494Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3940099Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3940457Z 
2025-02-24T15:52:32.3940771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3941321Z 
2025-02-24T15:52:32.3941498Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3941760Z 
2025-02-24T15:52:32.3941991Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30ec0>
2025-02-24T15:52:32.3942472Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3942801Z attr = 'j_blues'
2025-02-24T15:52:32.3942919Z 
2025-02-24T15:52:32.3943069Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3943415Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3943705Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3943934Z         try:
2025-02-24T15:52:32.3944188Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3944495Z         except KeyError:
2025-02-24T15:52:32.3944772Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3945066Z     
2025-02-24T15:52:32.3945251Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3945506Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3945775Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3946084Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3946394Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3946643Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3946939Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3947212Z             else:
2025-02-24T15:52:32.3947564Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3947853Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3948149Z 
2025-02-24T15:52:32.3948283Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3948610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3948962Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3949265Z     ???
2025-02-24T15:52:32.3949479Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3949685Z 
2025-02-24T15:52:32.3949756Z >   ???
2025-02-24T15:52:32.3949981Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3950262Z E   
2025-02-24T15:52:32.3950489Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3950822Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3951222Z E          ...
2025-02-24T15:52:32.3951426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3951739Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3952083Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3952362Z E          ...
2025-02-24T15:52:32.3952650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3953181Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3953730Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3954051Z 
2025-02-24T15:52:32.3954213Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3954803Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T15:52:32.3955289Z 
2025-02-24T15:52:32.3955511Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3956111Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3956479Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3956796Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3957160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3957475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3957795Z err_msg = None
2025-02-24T15:52:32.3957906Z 
2025-02-24T15:52:32.3958021Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3958295Z         if err_msg is None:
2025-02-24T15:52:32.3958535Z             if left.shape != right.shape:
2025-02-24T15:52:32.3958797Z                 raise_assert_detail(
2025-02-24T15:52:32.3959109Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3959416Z                 )
2025-02-24T15:52:32.3959602Z     
2025-02-24T15:52:32.3959772Z             diff = 0
2025-02-24T15:52:32.3960013Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3960302Z                 # count up differences
2025-02-24T15:52:32.3960646Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3961100Z                     diff += 1
2025-02-24T15:52:32.3961317Z     
2025-02-24T15:52:32.3961529Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3961843Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3962241Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3962623Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3962891Z E           
2025-02-24T15:52:32.3963111Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3963598Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3964511Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3964874Z 
2025-02-24T15:52:32.3965187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3965601Z 
2025-02-24T15:52:32.3965772Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3966034Z 
2025-02-24T15:52:32.3966260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30740>
2025-02-24T15:52:32.3966745Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.3967083Z attr = 'lines'
2025-02-24T15:52:32.3967196Z 
2025-02-24T15:52:32.3967342Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3967688Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3967971Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3968194Z         try:
2025-02-24T15:52:32.3968444Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3968777Z         except KeyError:
2025-02-24T15:52:32.3969055Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3969351Z     
2025-02-24T15:52:32.3969537Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3969793Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3970064Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3970374Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3970686Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3971206Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3971705Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3972180Z             else:
2025-02-24T15:52:32.3972529Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3973012Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3973340Z 
2025-02-24T15:52:32.3973558Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3974110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3974672Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3974979Z     ???
2025-02-24T15:52:32.3975196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3975401Z 
2025-02-24T15:52:32.3975473Z >   ???
2025-02-24T15:52:32.3975698Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3975984Z E   
2025-02-24T15:52:32.3976213Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3976545Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3976823Z E          ...
2025-02-24T15:52:32.3977026Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3977337Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3977675Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3977957Z E          ...
2025-02-24T15:52:32.3978152Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3978457Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3978775Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3978962Z 
2025-02-24T15:52:32.3979062Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3979426Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T15:52:32.3979721Z 
2025-02-24T15:52:32.3980103Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf31100>
2025-02-24T15:52:32.3980583Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.3981182Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.3981349Z 
2025-02-24T15:52:32.3981491Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3981830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3982119Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3982343Z         try:
2025-02-24T15:52:32.3982594Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3982908Z         except KeyError:
2025-02-24T15:52:32.3983191Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3983490Z     
2025-02-24T15:52:32.3983677Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3983926Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3984191Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3984499Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3984808Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3985064Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3985352Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3985558Z 
2025-02-24T15:52:32.3985684Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3986011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3986220Z 
2025-02-24T15:52:32.3986359Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.3986680Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.3986961Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3987245Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.3987549Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.3987884Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.3988165Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3988456Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.3988703Z err_msg = None
2025-02-24T15:52:32.3988819Z 
2025-02-24T15:52:32.3988940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3989352Z         if err_msg is None:
2025-02-24T15:52:32.3989751Z             if left.shape != right.shape:
2025-02-24T15:52:32.3990213Z                 raise_assert_detail(
2025-02-24T15:52:32.3990732Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3991391Z                 )
2025-02-24T15:52:32.3991699Z     
2025-02-24T15:52:32.3991983Z             diff = 0
2025-02-24T15:52:32.3992372Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3992853Z                 # count up differences
2025-02-24T15:52:32.3993303Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3993652Z                     diff += 1
2025-02-24T15:52:32.3993880Z     
2025-02-24T15:52:32.3994065Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3994384Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3994788Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3995159Z E           AssertionError: Series are different
2025-02-24T15:52:32.3995423Z E           
2025-02-24T15:52:32.3995635Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.3996209Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.3997143Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3997995Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3998414Z 
2025-02-24T15:52:32.3998735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3999349Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T15:52:32.3999657Z 
2025-02-24T15:52:32.3999887Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30650>
2025-02-24T15:52:32.4000372Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4000719Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4000882Z 
2025-02-24T15:52:32.4001156Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4001499Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4001791Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4002016Z         try:
2025-02-24T15:52:32.4002269Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4002586Z         except KeyError:
2025-02-24T15:52:32.4002864Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4003169Z     
2025-02-24T15:52:32.4003356Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4003612Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4003888Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4004196Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4004506Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4004758Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4005046Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4005247Z 
2025-02-24T15:52:32.4005374Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4005699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4005908Z 
2025-02-24T15:52:32.4006047Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4006363Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4006648Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4006939Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4007252Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4007638Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4008127Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4008632Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4009039Z err_msg = None
2025-02-24T15:52:32.4009226Z 
2025-02-24T15:52:32.4009421Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4009885Z         if err_msg is None:
2025-02-24T15:52:32.4010279Z             if left.shape != right.shape:
2025-02-24T15:52:32.4010720Z                 raise_assert_detail(
2025-02-24T15:52:32.4011378Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4011877Z                 )
2025-02-24T15:52:32.4012065Z     
2025-02-24T15:52:32.4012237Z             diff = 0
2025-02-24T15:52:32.4012481Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4012890Z                 # count up differences
2025-02-24T15:52:32.4013237Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4013580Z                     diff += 1
2025-02-24T15:52:32.4013803Z     
2025-02-24T15:52:32.4013994Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4014308Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4014709Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4015080Z E           AssertionError: Series are different
2025-02-24T15:52:32.4015343Z E           
2025-02-24T15:52:32.4015555Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4016111Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4016966Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4017802Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4018267Z 
2025-02-24T15:52:32.4018582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4019165Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T15:52:32.4019445Z 
2025-02-24T15:52:32.4019580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4019935Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4020256Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4020581Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4021078Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4021403Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4021670Z err_msg = None
2025-02-24T15:52:32.4021782Z 
2025-02-24T15:52:32.4021899Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4022174Z         if err_msg is None:
2025-02-24T15:52:32.4022413Z             if left.shape != right.shape:
2025-02-24T15:52:32.4022680Z                 raise_assert_detail(
2025-02-24T15:52:32.4022996Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4023332Z                 )
2025-02-24T15:52:32.4023517Z     
2025-02-24T15:52:32.4023691Z             diff = 0
2025-02-24T15:52:32.4023929Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4024218Z                 # count up differences
2025-02-24T15:52:32.4024559Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4025033Z                     diff += 1
2025-02-24T15:52:32.4025248Z     
2025-02-24T15:52:32.4025518Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4026231Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4026921Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4027563Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4028017Z E           
2025-02-24T15:52:32.4028388Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4029141Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4029770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4030139Z 
2025-02-24T15:52:32.4030454Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4030867Z 
2025-02-24T15:52:32.4031240Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4031502Z 
2025-02-24T15:52:32.4031734Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf321e0>
2025-02-24T15:52:32.4032252Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>, attr = 'nu'
2025-02-24T15:52:32.4032545Z 
2025-02-24T15:52:32.4032690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4033028Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4033324Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4033551Z         try:
2025-02-24T15:52:32.4033801Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4034122Z         except KeyError:
2025-02-24T15:52:32.4034398Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4034693Z     
2025-02-24T15:52:32.4034881Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4035133Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4035399Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4035707Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4036016Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4036268Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4036565Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4036769Z 
2025-02-24T15:52:32.4036901Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4037234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4037589Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4037901Z     ???
2025-02-24T15:52:32.4038116Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4038317Z 
2025-02-24T15:52:32.4038394Z >   ???
2025-02-24T15:52:32.4038623Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4038903Z E   
2025-02-24T15:52:32.4039130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4039463Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4039737Z E          ...
2025-02-24T15:52:32.4039939Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4040249Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4040587Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4041125Z E          ...
2025-02-24T15:52:32.4041323Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4041783Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4042106Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4042294Z 
2025-02-24T15:52:32.4042393Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4042748Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T15:52:32.4043039Z 
2025-02-24T15:52:32.4043181Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4043539Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4044048Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4044632Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4045245Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4045777Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4046221Z err_msg = None
2025-02-24T15:52:32.4046411Z 
2025-02-24T15:52:32.4046593Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4047068Z         if err_msg is None:
2025-02-24T15:52:32.4047439Z             if left.shape != right.shape:
2025-02-24T15:52:32.4047708Z                 raise_assert_detail(
2025-02-24T15:52:32.4048018Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4048325Z                 )
2025-02-24T15:52:32.4048510Z     
2025-02-24T15:52:32.4048679Z             diff = 0
2025-02-24T15:52:32.4048917Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4049204Z                 # count up differences
2025-02-24T15:52:32.4049549Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4049643Z                     diff += 1
2025-02-24T15:52:32.4049714Z     
2025-02-24T15:52:32.4049809Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4049951Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4050126Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4050238Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4050317Z E           
2025-02-24T15:52:32.4050431Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4050703Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4051088Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4051104Z 
2025-02-24T15:52:32.4051419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4051423Z 
2025-02-24T15:52:32.4051601Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4051606Z 
2025-02-24T15:52:32.4051832Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf316a0>
2025-02-24T15:52:32.4052008Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4052097Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4052102Z 
2025-02-24T15:52:32.4052243Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4052509Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4052598Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4052678Z         try:
2025-02-24T15:52:32.4052928Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4053020Z         except KeyError:
2025-02-24T15:52:32.4053162Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4053243Z     
2025-02-24T15:52:32.4053333Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4053435Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4053531Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4053667Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4053765Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4053877Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4053995Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4053999Z 
2025-02-24T15:52:32.4054142Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4054272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4054426Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4054513Z     ???
2025-02-24T15:52:32.4054647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4054652Z 
2025-02-24T15:52:32.4054735Z >   ???
2025-02-24T15:52:32.4054870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4054949Z E   
2025-02-24T15:52:32.4055085Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4055207Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4055286Z E          ...
2025-02-24T15:52:32.4055377Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4055517Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4055647Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4055725Z E          ...
2025-02-24T15:52:32.4055819Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4055954Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4056067Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4056071Z 
2025-02-24T15:52:32.4056163Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4056360Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T15:52:32.4056364Z 
2025-02-24T15:52:32.4056493Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4056632Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4056732Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4056884Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4057019Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4057116Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4057203Z err_msg = None
2025-02-24T15:52:32.4057208Z 
2025-02-24T15:52:32.4057319Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4057409Z         if err_msg is None:
2025-02-24T15:52:32.4057509Z             if left.shape != right.shape:
2025-02-24T15:52:32.4057602Z                 raise_assert_detail(
2025-02-24T15:52:32.4057748Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4057833Z                 )
2025-02-24T15:52:32.4057911Z     
2025-02-24T15:52:32.4057986Z             diff = 0
2025-02-24T15:52:32.4058106Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4058197Z                 # count up differences
2025-02-24T15:52:32.4058374Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4058547Z                     diff += 1
2025-02-24T15:52:32.4058626Z     
2025-02-24T15:52:32.4058790Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4058952Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4059125Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4059244Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4059322Z E           
2025-02-24T15:52:32.4059437Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4059708Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4059978Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4059992Z 
2025-02-24T15:52:32.4060303Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4060309Z 
2025-02-24T15:52:32.4060485Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4060490Z 
2025-02-24T15:52:32.4060715Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30380>
2025-02-24T15:52:32.4061044Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>, attr = 'f_lu'
2025-02-24T15:52:32.4061050Z 
2025-02-24T15:52:32.4061188Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4061319Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4061429Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4061510Z         try:
2025-02-24T15:52:32.4061665Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4061750Z         except KeyError:
2025-02-24T15:52:32.4061893Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4061967Z     
2025-02-24T15:52:32.4062061Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4062156Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4062251Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4062385Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4062546Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4062706Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4062905Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4062912Z 
2025-02-24T15:52:32.4063145Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4063342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4063607Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4063729Z     ???
2025-02-24T15:52:32.4063926Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4063933Z 
2025-02-24T15:52:32.4064054Z >   ???
2025-02-24T15:52:32.4064277Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4064397Z E   
2025-02-24T15:52:32.4064621Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4064809Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4064940Z E          ...
2025-02-24T15:52:32.4065095Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4065314Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4065512Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4065813Z E          ...
2025-02-24T15:52:32.4065967Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4066269Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4066386Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4066391Z 
2025-02-24T15:52:32.4066485Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4066692Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T15:52:32.4066697Z 
2025-02-24T15:52:32.4066834Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4066966Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4067071Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4067207Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4067344Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4067440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4067529Z err_msg = None
2025-02-24T15:52:32.4067533Z 
2025-02-24T15:52:32.4067645Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4067734Z         if err_msg is None:
2025-02-24T15:52:32.4067836Z             if left.shape != right.shape:
2025-02-24T15:52:32.4067922Z                 raise_assert_detail(
2025-02-24T15:52:32.4068073Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4068146Z                 )
2025-02-24T15:52:32.4068222Z     
2025-02-24T15:52:32.4068297Z             diff = 0
2025-02-24T15:52:32.4068417Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4068506Z                 # count up differences
2025-02-24T15:52:32.4068687Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4068772Z                     diff += 1
2025-02-24T15:52:32.4068850Z     
2025-02-24T15:52:32.4068945Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4069088Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4069269Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4069382Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4069461Z E           
2025-02-24T15:52:32.4069577Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4069846Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4070112Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4070131Z 
2025-02-24T15:52:32.4070442Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4070447Z 
2025-02-24T15:52:32.4070624Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4070628Z 
2025-02-24T15:52:32.4070854Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf307d0>
2025-02-24T15:52:32.4071175Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4071265Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4071270Z 
2025-02-24T15:52:32.4071408Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4071673Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4071758Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4071836Z         try:
2025-02-24T15:52:32.4072082Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4072169Z         except KeyError:
2025-02-24T15:52:32.4072308Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4072385Z     
2025-02-24T15:52:32.4072474Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4072575Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4072671Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4072804Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4072897Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4072990Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4073108Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4073187Z             else:
2025-02-24T15:52:32.4073290Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4073402Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4073411Z 
2025-02-24T15:52:32.4073544Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4073659Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4073816Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4073895Z     ???
2025-02-24T15:52:32.4074008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4074012Z 
2025-02-24T15:52:32.4074087Z >   ???
2025-02-24T15:52:32.4074214Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4074289Z E   
2025-02-24T15:52:32.4074427Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4088966Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4089149Z E          ...
2025-02-24T15:52:32.4089327Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4089562Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4089793Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4089924Z E          ...
2025-02-24T15:52:32.4090078Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4090307Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4090488Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4090495Z 
2025-02-24T15:52:32.4090666Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4091165Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T15:52:32.4091174Z 
2025-02-24T15:52:32.4091416Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4091641Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4091824Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4092067Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4092288Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4092453Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4092588Z err_msg = None
2025-02-24T15:52:32.4092595Z 
2025-02-24T15:52:32.4092794Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4092882Z         if err_msg is None:
2025-02-24T15:52:32.4092988Z             if left.shape != right.shape:
2025-02-24T15:52:32.4093081Z                 raise_assert_detail(
2025-02-24T15:52:32.4093252Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4093333Z                 )
2025-02-24T15:52:32.4093408Z     
2025-02-24T15:52:32.4093489Z             diff = 0
2025-02-24T15:52:32.4093801Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4093899Z                 # count up differences
2025-02-24T15:52:32.4094191Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4094280Z                     diff += 1
2025-02-24T15:52:32.4094353Z     
2025-02-24T15:52:32.4094452Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4094597Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4094783Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4094904Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4094986Z E           
2025-02-24T15:52:32.4095110Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4095380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4095668Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4095674Z 
2025-02-24T15:52:32.4096013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4096019Z 
2025-02-24T15:52:32.4096196Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4096201Z 
2025-02-24T15:52:32.4096442Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30b30>
2025-02-24T15:52:32.4096618Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4096712Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4096716Z 
2025-02-24T15:52:32.4096870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4097003Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4097101Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4097177Z         try:
2025-02-24T15:52:32.4097333Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4097418Z         except KeyError:
2025-02-24T15:52:32.4097567Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4097639Z     
2025-02-24T15:52:32.4097736Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4097835Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4097934Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4098074Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4098176Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4098270Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4098393Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4098485Z             else:
2025-02-24T15:52:32.4098638Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4098837Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4098845Z 
2025-02-24T15:52:32.4099065Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4099274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4099527Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4099657Z     ???
2025-02-24T15:52:32.4099851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4099858Z 
2025-02-24T15:52:32.4099985Z >   ???
2025-02-24T15:52:32.4100211Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4100460Z E   
2025-02-24T15:52:32.4100687Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4100877Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4101303Z E          ...
2025-02-24T15:52:32.4101458Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4101686Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4101883Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4102015Z E          ...
2025-02-24T15:52:32.4102168Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4102314Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4102429Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4102434Z 
2025-02-24T15:52:32.4102527Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4102729Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T15:52:32.4102740Z 
2025-02-24T15:52:32.4102874Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4103018Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4103132Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4103277Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4103405Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4103510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4103594Z err_msg = None
2025-02-24T15:52:32.4103598Z 
2025-02-24T15:52:32.4103714Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4103808Z         if err_msg is None:
2025-02-24T15:52:32.4103910Z             if left.shape != right.shape:
2025-02-24T15:52:32.4104004Z                 raise_assert_detail(
2025-02-24T15:52:32.4104160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4104241Z                 )
2025-02-24T15:52:32.4104316Z     
2025-02-24T15:52:32.4104398Z             diff = 0
2025-02-24T15:52:32.4104515Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4104611Z                 # count up differences
2025-02-24T15:52:32.4104790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4104871Z                     diff += 1
2025-02-24T15:52:32.4104943Z     
2025-02-24T15:52:32.4105042Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4105183Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4105362Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4105482Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4105560Z E           
2025-02-24T15:52:32.4105685Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4105950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4106225Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4106231Z 
2025-02-24T15:52:32.4106548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4106553Z 
2025-02-24T15:52:32.4106858Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4106863Z 
2025-02-24T15:52:32.4107092Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf304a0>
2025-02-24T15:52:32.4107377Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4107462Z attr = 'j_blues'
2025-02-24T15:52:32.4107466Z 
2025-02-24T15:52:32.4107608Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4107736Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4107830Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4107905Z         try:
2025-02-24T15:52:32.4108056Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4108140Z         except KeyError:
2025-02-24T15:52:32.4108286Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4108358Z     
2025-02-24T15:52:32.4108454Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4108556Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4108656Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4108792Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4108896Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4108990Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4109112Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4109191Z             else:
2025-02-24T15:52:32.4109291Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4109408Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4109413Z 
2025-02-24T15:52:32.4109540Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4109663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4109813Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4109890Z     ???
2025-02-24T15:52:32.4110005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4110013Z 
2025-02-24T15:52:32.4110090Z >   ???
2025-02-24T15:52:32.4110224Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4110299Z E   
2025-02-24T15:52:32.4110435Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4110556Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4110638Z E          ...
2025-02-24T15:52:32.4110731Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4110874Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4111133Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4111216Z E          ...
2025-02-24T15:52:32.4111305Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4111437Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4111544Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4111559Z 
2025-02-24T15:52:32.4111652Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4111850Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T15:52:32.4111860Z 
2025-02-24T15:52:32.4111992Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4112133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4112234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4112376Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4112505Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4112607Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4112691Z err_msg = None
2025-02-24T15:52:32.4112695Z 
2025-02-24T15:52:32.4112809Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4113022Z         if err_msg is None:
2025-02-24T15:52:32.4113123Z             if left.shape != right.shape:
2025-02-24T15:52:32.4113323Z                 raise_assert_detail(
2025-02-24T15:52:32.4113472Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4113552Z                 )
2025-02-24T15:52:32.4113625Z     
2025-02-24T15:52:32.4113706Z             diff = 0
2025-02-24T15:52:32.4113821Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4113919Z                 # count up differences
2025-02-24T15:52:32.4114099Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4114181Z                     diff += 1
2025-02-24T15:52:32.4114258Z     
2025-02-24T15:52:32.4114353Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4114498Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4114677Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4114799Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4114883Z E           
2025-02-24T15:52:32.4115003Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4115267Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4115538Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4115548Z 
2025-02-24T15:52:32.4115862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4115872Z 
2025-02-24T15:52:32.4116044Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4116054Z 
2025-02-24T15:52:32.4116277Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7f080>
2025-02-24T15:52:32.4116448Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4116526Z attr = 'lines'
2025-02-24T15:52:32.4116531Z 
2025-02-24T15:52:32.4116678Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4116797Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4116921Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4117055Z         try:
2025-02-24T15:52:32.4117314Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4117457Z         except KeyError:
2025-02-24T15:52:32.4117708Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4117835Z     
2025-02-24T15:52:32.4117985Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4118161Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4118312Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4118524Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4118617Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4118715Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4118828Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4118909Z             else:
2025-02-24T15:52:32.4119006Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4119121Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4119125Z 
2025-02-24T15:52:32.4119259Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4119375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4119632Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4119784Z     ???
2025-02-24T15:52:32.4119901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4119906Z 
2025-02-24T15:52:32.4119977Z >   ???
2025-02-24T15:52:32.4120112Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4120185Z E   
2025-02-24T15:52:32.4120320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4120442Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4120517Z E          ...
2025-02-24T15:52:32.4120613Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4120744Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4120865Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4121054Z E          ...
2025-02-24T15:52:32.4121160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4121287Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4121409Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4121413Z 
2025-02-24T15:52:32.4121506Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4121720Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T15:52:32.4121725Z 
2025-02-24T15:52:32.4121957Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7cbc0>
2025-02-24T15:52:32.4122125Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4122222Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4122226Z 
2025-02-24T15:52:32.4122369Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4122500Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4122588Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4122672Z         try:
2025-02-24T15:52:32.4122815Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4122905Z         except KeyError:
2025-02-24T15:52:32.4123057Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4123130Z     
2025-02-24T15:52:32.4123227Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4123321Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4123414Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4123547Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4123643Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4123734Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4123852Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4123857Z 
2025-02-24T15:52:32.4123985Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4124105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4124115Z 
2025-02-24T15:52:32.4124257Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4124350Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4124466Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4124549Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4124696Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4124781Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4124896Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4124978Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4125065Z err_msg = None
2025-02-24T15:52:32.4125069Z 
2025-02-24T15:52:32.4125185Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4125270Z         if err_msg is None:
2025-02-24T15:52:32.4125503Z             if left.shape != right.shape:
2025-02-24T15:52:32.4125591Z                 raise_assert_detail(
2025-02-24T15:52:32.4125742Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4125940Z                 )
2025-02-24T15:52:32.4126017Z     
2025-02-24T15:52:32.4126096Z             diff = 0
2025-02-24T15:52:32.4126215Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4126307Z                 # count up differences
2025-02-24T15:52:32.4126486Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4126574Z                     diff += 1
2025-02-24T15:52:32.4126647Z     
2025-02-24T15:52:32.4126740Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4126876Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4127055Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4127162Z E           AssertionError: Series are different
2025-02-24T15:52:32.4127248Z E           
2025-02-24T15:52:32.4127353Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4127742Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4128082Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4128442Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4128457Z 
2025-02-24T15:52:32.4128770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4128985Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T15:52:32.4128989Z 
2025-02-24T15:52:32.4129216Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7d3a0>
2025-02-24T15:52:32.4129388Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4129482Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4129488Z 
2025-02-24T15:52:32.4129636Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4129753Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4129850Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4129929Z         try:
2025-02-24T15:52:32.4130075Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4130165Z         except KeyError:
2025-02-24T15:52:32.4130305Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4130383Z     
2025-02-24T15:52:32.4130473Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4130576Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4130668Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4130821Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4131014Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4131116Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4131229Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4131351Z 
2025-02-24T15:52:32.4131487Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4131725Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4131735Z 
2025-02-24T15:52:32.4131875Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4131967Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4132077Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4132165Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4132306Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4132395Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4132502Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4132588Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4132672Z err_msg = None
2025-02-24T15:52:32.4132676Z 
2025-02-24T15:52:32.4132794Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4132889Z         if err_msg is None:
2025-02-24T15:52:32.4132986Z             if left.shape != right.shape:
2025-02-24T15:52:32.4133078Z                 raise_assert_detail(
2025-02-24T15:52:32.4133220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4133296Z                 )
2025-02-24T15:52:32.4133366Z     
2025-02-24T15:52:32.4133447Z             diff = 0
2025-02-24T15:52:32.4133562Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4133660Z                 # count up differences
2025-02-24T15:52:32.4133833Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4133920Z                     diff += 1
2025-02-24T15:52:32.4133998Z     
2025-02-24T15:52:32.4134087Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4134233Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4134405Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4134520Z E           AssertionError: Series are different
2025-02-24T15:52:32.4134596Z E           
2025-02-24T15:52:32.4134707Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4135078Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4135462Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4135949Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4135962Z 
2025-02-24T15:52:32.4136519Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4136844Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T15:52:32.4136970Z 
2025-02-24T15:52:32.4137207Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4137372Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4137567Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4137705Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4137834Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4137936Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4138014Z err_msg = None
2025-02-24T15:52:32.4138019Z 
2025-02-24T15:52:32.4138138Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4138223Z         if err_msg is None:
2025-02-24T15:52:32.4138329Z             if left.shape != right.shape:
2025-02-24T15:52:32.4138419Z                 raise_assert_detail(
2025-02-24T15:52:32.4138581Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4138658Z                 )
2025-02-24T15:52:32.4138740Z     
2025-02-24T15:52:32.4138817Z             diff = 0
2025-02-24T15:52:32.4138938Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4139035Z                 # count up differences
2025-02-24T15:52:32.4139211Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4139299Z                     diff += 1
2025-02-24T15:52:32.4139371Z     
2025-02-24T15:52:32.4139472Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4139614Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4139794Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4139912Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4139992Z E           
2025-02-24T15:52:32.4140114Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4140386Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4140663Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4140668Z 
2025-02-24T15:52:32.4141127Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4141134Z 
2025-02-24T15:52:32.4141325Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4141330Z 
2025-02-24T15:52:32.4141562Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7ecc0>
2025-02-24T15:52:32.4141766Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>, attr = 'nu'
2025-02-24T15:52:32.4141771Z 
2025-02-24T15:52:32.4141916Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4142036Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4142129Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4142203Z         try:
2025-02-24T15:52:32.4142351Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4142436Z         except KeyError:
2025-02-24T15:52:32.4142582Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4142659Z     
2025-02-24T15:52:32.4142749Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4142851Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4143071Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4143212Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4143409Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4143507Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4143621Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4143625Z 
2025-02-24T15:52:32.4143758Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4143875Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4144029Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4144108Z     ???
2025-02-24T15:52:32.4144219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4144224Z 
2025-02-24T15:52:32.4144299Z >   ???
2025-02-24T15:52:32.4144429Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4144513Z E   
2025-02-24T15:52:32.4144645Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4144765Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4144849Z E          ...
2025-02-24T15:52:32.4144946Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4145079Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4145201Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4145280Z E          ...
2025-02-24T15:52:32.4145369Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4145501Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4145609Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4145613Z 
2025-02-24T15:52:32.4145710Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4145911Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T15:52:32.4145920Z 
2025-02-24T15:52:32.4146057Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4146189Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4146299Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4146702Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4146827Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4146927Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4147004Z err_msg = None
2025-02-24T15:52:32.4147008Z 
2025-02-24T15:52:32.4147125Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4147209Z         if err_msg is None:
2025-02-24T15:52:32.4147310Z             if left.shape != right.shape:
2025-02-24T15:52:32.4147402Z                 raise_assert_detail(
2025-02-24T15:52:32.4147556Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4147636Z                 )
2025-02-24T15:52:32.4147712Z     
2025-02-24T15:52:32.4147794Z             diff = 0
2025-02-24T15:52:32.4147907Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4148003Z                 # count up differences
2025-02-24T15:52:32.4148174Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4148259Z                     diff += 1
2025-02-24T15:52:32.4148331Z     
2025-02-24T15:52:32.4148429Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4148568Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4148746Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4148863Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4148938Z E           
2025-02-24T15:52:32.4149153Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4149414Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4149763Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4149769Z 
2025-02-24T15:52:32.4150080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4150085Z 
2025-02-24T15:52:32.4150254Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4150263Z 
2025-02-24T15:52:32.4150494Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7ea20>
2025-02-24T15:52:32.4150667Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4150759Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4150763Z 
2025-02-24T15:52:32.4151039Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4151161Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4151253Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4151329Z         try:
2025-02-24T15:52:32.4151476Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4151560Z         except KeyError:
2025-02-24T15:52:32.4151703Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4151774Z     
2025-02-24T15:52:32.4151867Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4151971Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4152068Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4152204Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4152306Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4152403Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4152516Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4152521Z 
2025-02-24T15:52:32.4152651Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4152768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4152918Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4152994Z     ???
2025-02-24T15:52:32.4153111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4153116Z 
2025-02-24T15:52:32.4153187Z >   ???
2025-02-24T15:52:32.4153321Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4153400Z E   
2025-02-24T15:52:32.4153533Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4153653Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4153733Z E          ...
2025-02-24T15:52:32.4153829Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4153960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4154079Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4154154Z E          ...
2025-02-24T15:52:32.4154247Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4154375Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4154488Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4154493Z 
2025-02-24T15:52:32.4154587Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4154775Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T15:52:32.4154923Z 
2025-02-24T15:52:32.4155062Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4155192Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4155429Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4155566Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4155697Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4155798Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4155877Z err_msg = None
2025-02-24T15:52:32.4155882Z 
2025-02-24T15:52:32.4155997Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4156081Z         if err_msg is None:
2025-02-24T15:52:32.4156182Z             if left.shape != right.shape:
2025-02-24T15:52:32.4156271Z                 raise_assert_detail(
2025-02-24T15:52:32.4156429Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4156502Z                 )
2025-02-24T15:52:32.4156586Z     
2025-02-24T15:52:32.4156662Z             diff = 0
2025-02-24T15:52:32.4156782Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4156873Z                 # count up differences
2025-02-24T15:52:32.4157050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4157137Z                     diff += 1
2025-02-24T15:52:32.4157209Z     
2025-02-24T15:52:32.4157307Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4157443Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4157623Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4157739Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4157824Z E           
2025-02-24T15:52:32.4157938Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4158203Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4158479Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4158484Z 
2025-02-24T15:52:32.4158789Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4158794Z 
2025-02-24T15:52:32.4158975Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4158980Z 
2025-02-24T15:52:32.4159207Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7ce00>
2025-02-24T15:52:32.4159413Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>, attr = 'f_lu'
2025-02-24T15:52:32.4159418Z 
2025-02-24T15:52:32.4159560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4159678Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4159773Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4159849Z         try:
2025-02-24T15:52:32.4159996Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4160080Z         except KeyError:
2025-02-24T15:52:32.4160225Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4160303Z     
2025-02-24T15:52:32.4160394Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4160494Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4160684Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4160823Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4161095Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4161193Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4161304Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4161309Z 
2025-02-24T15:52:32.4161468Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4161651Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4161909Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4162035Z     ???
2025-02-24T15:52:32.4162235Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4162243Z 
2025-02-24T15:52:32.4162372Z >   ???
2025-02-24T15:52:32.4162598Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4162736Z E   
2025-02-24T15:52:32.4162906Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4163024Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4163105Z E          ...
2025-02-24T15:52:32.4163201Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4163332Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4163454Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4163530Z E          ...
2025-02-24T15:52:32.4163617Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4163746Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4163855Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4163860Z 
2025-02-24T15:52:32.4163955Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4164152Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T15:52:32.4164160Z 
2025-02-24T15:52:32.4164297Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4164426Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4164533Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4164673Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4164798Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4164900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4164978Z err_msg = None
2025-02-24T15:52:32.4164982Z 
2025-02-24T15:52:32.4165098Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4165183Z         if err_msg is None:
2025-02-24T15:52:32.4165285Z             if left.shape != right.shape:
2025-02-24T15:52:32.4165374Z                 raise_assert_detail(
2025-02-24T15:52:32.4165529Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4165608Z                 )
2025-02-24T15:52:32.4165683Z     
2025-02-24T15:52:32.4165766Z             diff = 0
2025-02-24T15:52:32.4165880Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4165975Z                 # count up differences
2025-02-24T15:52:32.4166147Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4166236Z                     diff += 1
2025-02-24T15:52:32.4166307Z     
2025-02-24T15:52:32.4166404Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4166540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4166719Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4166838Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4166912Z E           
2025-02-24T15:52:32.4167189Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4167450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4167824Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4167829Z 
2025-02-24T15:52:32.4168137Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4168142Z 
2025-02-24T15:52:32.4168315Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4168320Z 
2025-02-24T15:52:32.4168548Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e1b0>
2025-02-24T15:52:32.4168721Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4168809Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4168814Z 
2025-02-24T15:52:32.4168953Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4169075Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4169167Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4169241Z         try:
2025-02-24T15:52:32.4169386Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4169470Z         except KeyError:
2025-02-24T15:52:32.4169614Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4169686Z     
2025-02-24T15:52:32.4169782Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4169883Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4169980Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4170113Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4170215Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4170312Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4170424Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4170503Z             else:
2025-02-24T15:52:32.4170602Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4170717Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4170722Z 
2025-02-24T15:52:32.4170849Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4171100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4171252Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4171331Z     ???
2025-02-24T15:52:32.4171448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4171461Z 
2025-02-24T15:52:32.4171532Z >   ???
2025-02-24T15:52:32.4171670Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4171743Z E   
2025-02-24T15:52:32.4171879Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4171991Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4172072Z E          ...
2025-02-24T15:52:32.4172161Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4172297Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4172413Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4172492Z E          ...
2025-02-24T15:52:32.4172581Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4172712Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4172825Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4172956Z 
2025-02-24T15:52:32.4173050Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4173253Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T15:52:32.4173361Z 
2025-02-24T15:52:32.4173493Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4173628Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4173724Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4173865Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4173995Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4174091Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4174183Z err_msg = None
2025-02-24T15:52:32.4174187Z 
2025-02-24T15:52:32.4174304Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4174393Z         if err_msg is None:
2025-02-24T15:52:32.4174490Z             if left.shape != right.shape:
2025-02-24T15:52:32.4174591Z                 raise_assert_detail(
2025-02-24T15:52:32.4174736Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4174818Z                 )
2025-02-24T15:52:32.4174890Z     
2025-02-24T15:52:32.4174974Z             diff = 0
2025-02-24T15:52:32.4175092Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4175182Z                 # count up differences
2025-02-24T15:52:32.4175360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4175442Z                     diff += 1
2025-02-24T15:52:32.4175518Z     
2025-02-24T15:52:32.4175613Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4175755Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4175932Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4176049Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4176128Z E           
2025-02-24T15:52:32.4176246Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4176512Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4176776Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4176785Z 
2025-02-24T15:52:32.4177100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4177110Z 
2025-02-24T15:52:32.4177284Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4177288Z 
2025-02-24T15:52:32.4177512Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e660>
2025-02-24T15:52:32.4177681Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4177763Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4177767Z 
2025-02-24T15:52:32.4177908Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4178025Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4178117Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4178195Z         try:
2025-02-24T15:52:32.4178342Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4178541Z         except KeyError:
2025-02-24T15:52:32.4178679Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4178756Z     
2025-02-24T15:52:32.4178923Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4179028Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4179116Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4179252Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4179340Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4179435Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4179547Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4179628Z             else:
2025-02-24T15:52:32.4179724Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4179838Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4179843Z 
2025-02-24T15:52:32.4179972Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4180091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4180243Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4180323Z     ???
2025-02-24T15:52:32.4180449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4180457Z 
2025-02-24T15:52:32.4180591Z >   ???
2025-02-24T15:52:32.4180823Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4181071Z E   
2025-02-24T15:52:32.4181303Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4181499Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4181623Z E          ...
2025-02-24T15:52:32.4181774Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4181992Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4182154Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4182238Z E          ...
2025-02-24T15:52:32.4182331Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4182458Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4182574Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4182579Z 
2025-02-24T15:52:32.4182677Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4182871Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T15:52:32.4182875Z 
2025-02-24T15:52:32.4183014Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4183146Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4183251Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4183387Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4183518Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4183619Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4183704Z err_msg = None
2025-02-24T15:52:32.4183712Z 
2025-02-24T15:52:32.4183828Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4183911Z         if err_msg is None:
2025-02-24T15:52:32.4184012Z             if left.shape != right.shape:
2025-02-24T15:52:32.4184099Z                 raise_assert_detail(
2025-02-24T15:52:32.4184252Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4184327Z                 )
2025-02-24T15:52:32.4184404Z     
2025-02-24T15:52:32.4184480Z             diff = 0
2025-02-24T15:52:32.4184603Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4184693Z                 # count up differences
2025-02-24T15:52:32.4184873Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4185126Z                     diff += 1
2025-02-24T15:52:32.4185199Z     
2025-02-24T15:52:32.4185294Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4185430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4185714Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4185829Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4185908Z E           
2025-02-24T15:52:32.4186026Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4186295Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4186565Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4186582Z 
2025-02-24T15:52:32.4186888Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4186893Z 
2025-02-24T15:52:32.4187067Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4187071Z 
2025-02-24T15:52:32.4187297Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e0f0>
2025-02-24T15:52:32.4187462Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4187546Z attr = 'j_blues'
2025-02-24T15:52:32.4187551Z 
2025-02-24T15:52:32.4187687Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4187809Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4187901Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4187982Z         try:
2025-02-24T15:52:32.4188124Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4188217Z         except KeyError:
2025-02-24T15:52:32.4188358Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4188436Z     
2025-02-24T15:52:32.4188531Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4188626Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4188722Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4188855Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4188948Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4189042Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4189160Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4189233Z             else:
2025-02-24T15:52:32.4189335Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4189447Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4189452Z 
2025-02-24T15:52:32.4189583Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4189709Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4189855Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4189933Z     ???
2025-02-24T15:52:32.4190047Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4190051Z 
2025-02-24T15:52:32.4190128Z >   ???
2025-02-24T15:52:32.4190255Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4190331Z E   
2025-02-24T15:52:32.4190460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4190580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4190654Z E          ...
2025-02-24T15:52:32.4190749Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4191118Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4191237Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4191433Z E          ...
2025-02-24T15:52:32.4191522Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4191654Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4191760Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4191765Z 
2025-02-24T15:52:32.4191862Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4192062Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T15:52:32.4192067Z 
2025-02-24T15:52:32.4192205Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4192338Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4192436Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4192580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4192708Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4192816Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4192898Z err_msg = None
2025-02-24T15:52:32.4192902Z 
2025-02-24T15:52:32.4193018Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4193103Z         if err_msg is None:
2025-02-24T15:52:32.4193206Z             if left.shape != right.shape:
2025-02-24T15:52:32.4193298Z                 raise_assert_detail(
2025-02-24T15:52:32.4193442Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4193518Z                 )
2025-02-24T15:52:32.4193588Z     
2025-02-24T15:52:32.4193664Z             diff = 0
2025-02-24T15:52:32.4193777Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4193875Z                 # count up differences
2025-02-24T15:52:32.4194048Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4194141Z                     diff += 1
2025-02-24T15:52:32.4194213Z     
2025-02-24T15:52:32.4194309Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4194451Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4194625Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4194743Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4194818Z E           
2025-02-24T15:52:32.4194937Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4195200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4195473Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4195483Z 
2025-02-24T15:52:32.4195793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4195798Z 
2025-02-24T15:52:32.4195967Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4195971Z 
2025-02-24T15:52:32.4196200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7d2e0>
2025-02-24T15:52:32.4196368Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4196572Z attr = 'lines'
2025-02-24T15:52:32.4196577Z 
2025-02-24T15:52:32.4196719Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4196835Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4197022Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4197097Z         try:
2025-02-24T15:52:32.4197242Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4197329Z         except KeyError:
2025-02-24T15:52:32.4197471Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4197544Z     
2025-02-24T15:52:32.4197640Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4197737Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4197834Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4197971Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4198061Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4198158Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4198276Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4198356Z             else:
2025-02-24T15:52:32.4198459Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4198573Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4198578Z 
2025-02-24T15:52:32.4198703Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4198824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4198972Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4199050Z     ???
2025-02-24T15:52:32.4199167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4199172Z 
2025-02-24T15:52:32.4199244Z >   ???
2025-02-24T15:52:32.4199407Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4199537Z E   
2025-02-24T15:52:32.4199770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4199975Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4200104Z E          ...
2025-02-24T15:52:32.4200262Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4200483Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4200672Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4200803Z E          ...
2025-02-24T15:52:32.4201065Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4201198Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4201309Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4201313Z 
2025-02-24T15:52:32.4201405Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4201643Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T15:52:32.4201648Z 
2025-02-24T15:52:32.4201867Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7f5c0>
2025-02-24T15:52:32.4202043Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4202136Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4202150Z 
2025-02-24T15:52:32.4202289Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4202410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4202497Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4202577Z         try:
2025-02-24T15:52:32.4202725Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4202815Z         except KeyError:
2025-02-24T15:52:32.4202956Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4203034Z     
2025-02-24T15:52:32.4203124Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4203226Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4203318Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4203458Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4203695Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4203788Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4204008Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4204013Z 
2025-02-24T15:52:32.4204139Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4204260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4204264Z 
2025-02-24T15:52:32.4204403Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4204496Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4204606Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4204698Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4204845Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4204937Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4205046Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4205139Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4205222Z err_msg = None
2025-02-24T15:52:32.4205226Z 
2025-02-24T15:52:32.4205336Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4205424Z         if err_msg is None:
2025-02-24T15:52:32.4205521Z             if left.shape != right.shape:
2025-02-24T15:52:32.4205614Z                 raise_assert_detail(
2025-02-24T15:52:32.4205762Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4205839Z                 )
2025-02-24T15:52:32.4205915Z     
2025-02-24T15:52:32.4205992Z             diff = 0
2025-02-24T15:52:32.4206107Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4206197Z                 # count up differences
2025-02-24T15:52:32.4206377Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4206466Z                     diff += 1
2025-02-24T15:52:32.4206542Z     
2025-02-24T15:52:32.4206636Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4206780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4206951Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4207061Z E           AssertionError: Series are different
2025-02-24T15:52:32.4207141Z E           
2025-02-24T15:52:32.4207244Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4207623Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4207967Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4208312Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4208318Z 
2025-02-24T15:52:32.4208636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4208961Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T15:52:32.4208973Z 
2025-02-24T15:52:32.4209270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7cd10>
2025-02-24T15:52:32.4209441Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4209537Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4209541Z 
2025-02-24T15:52:32.4209685Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4209802Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4209895Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4209970Z         try:
2025-02-24T15:52:32.4210118Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4210202Z         except KeyError:
2025-02-24T15:52:32.4210346Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4210428Z     
2025-02-24T15:52:32.4210519Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4210620Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4210712Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4210858Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4211073Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4211172Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4211285Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4211290Z 
2025-02-24T15:52:32.4211422Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4211539Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4211549Z 
2025-02-24T15:52:32.4211686Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4211780Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4211889Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4211987Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4212128Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4212226Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4212334Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4212422Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4212500Z err_msg = None
2025-02-24T15:52:32.4212509Z 
2025-02-24T15:52:32.4212618Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4212706Z         if err_msg is None:
2025-02-24T15:52:32.4212802Z             if left.shape != right.shape:
2025-02-24T15:52:32.4212895Z                 raise_assert_detail(
2025-02-24T15:52:32.4213042Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4213122Z                 )
2025-02-24T15:52:32.4213193Z     
2025-02-24T15:52:32.4213277Z             diff = 0
2025-02-24T15:52:32.4213390Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4213489Z                 # count up differences
2025-02-24T15:52:32.4213664Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4213749Z                     diff += 1
2025-02-24T15:52:32.4213826Z     
2025-02-24T15:52:32.4213933Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4214098Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4214271Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4214382Z E           AssertionError: Series are different
2025-02-24T15:52:32.4214460Z E           
2025-02-24T15:52:32.4214571Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4214940Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4215543Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4215926Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4215940Z 
2025-02-24T15:52:32.4216254Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4216450Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T15:52:32.4216455Z 
2025-02-24T15:52:32.4216591Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4216719Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4216824Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4216957Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4217088Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4217193Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4217272Z err_msg = None
2025-02-24T15:52:32.4217283Z 
2025-02-24T15:52:32.4217396Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4217479Z         if err_msg is None:
2025-02-24T15:52:32.4217581Z             if left.shape != right.shape:
2025-02-24T15:52:32.4217674Z                 raise_assert_detail(
2025-02-24T15:52:32.4217823Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4217897Z                 )
2025-02-24T15:52:32.4217974Z     
2025-02-24T15:52:32.4218049Z             diff = 0
2025-02-24T15:52:32.4218166Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4218261Z                 # count up differences
2025-02-24T15:52:32.4218569Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4218727Z                     diff += 1
2025-02-24T15:52:32.4218848Z     
2025-02-24T15:52:32.4219008Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4219234Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4219539Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4219731Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4219839Z E           
2025-02-24T15:52:32.4219957Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4220226Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4220498Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4220693Z 
2025-02-24T15:52:32.4221132Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4221139Z 
2025-02-24T15:52:32.4221321Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4221326Z 
2025-02-24T15:52:32.4221552Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e360>
2025-02-24T15:52:32.4221755Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>, attr = 'nu'
2025-02-24T15:52:32.4221760Z 
2025-02-24T15:52:32.4221902Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4222019Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4222117Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4222195Z         try:
2025-02-24T15:52:32.4222343Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4222433Z         except KeyError:
2025-02-24T15:52:32.4222580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4222659Z     
2025-02-24T15:52:32.4222749Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4222850Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4222941Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4223080Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4223169Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4223264Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4223377Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4223382Z 
2025-02-24T15:52:32.4223513Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4223633Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4223787Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4223872Z     ???
2025-02-24T15:52:32.4223983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4223988Z 
2025-02-24T15:52:32.4224063Z >   ???
2025-02-24T15:52:32.4224191Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4224269Z E   
2025-02-24T15:52:32.4224399Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4224520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4224594Z E          ...
2025-02-24T15:52:32.4224690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4224822Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4224943Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4225027Z E          ...
2025-02-24T15:52:32.4225116Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4225252Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4225363Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4225368Z 
2025-02-24T15:52:32.4225465Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4225675Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T15:52:32.4225680Z 
2025-02-24T15:52:32.4225815Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4225948Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4226051Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4226193Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4226318Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4226545Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4226625Z err_msg = None
2025-02-24T15:52:32.4226729Z 
2025-02-24T15:52:32.4226847Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4226933Z         if err_msg is None:
2025-02-24T15:52:32.4227035Z             if left.shape != right.shape:
2025-02-24T15:52:32.4227128Z                 raise_assert_detail(
2025-02-24T15:52:32.4227269Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4227351Z                 )
2025-02-24T15:52:32.4227421Z     
2025-02-24T15:52:32.4227502Z             diff = 0
2025-02-24T15:52:32.4227615Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4227710Z                 # count up differences
2025-02-24T15:52:32.4227880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4227971Z                     diff += 1
2025-02-24T15:52:32.4228043Z     
2025-02-24T15:52:32.4228139Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4228277Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4228460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4228578Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4228652Z E           
2025-02-24T15:52:32.4228770Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4229030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4229300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4229314Z 
2025-02-24T15:52:32.4229623Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4229627Z 
2025-02-24T15:52:32.4229797Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4229802Z 
2025-02-24T15:52:32.4230026Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e9c0>
2025-02-24T15:52:32.4230194Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4230286Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4230291Z 
2025-02-24T15:52:32.4230430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4230553Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4230649Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4230724Z         try:
2025-02-24T15:52:32.4230871Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4231084Z         except KeyError:
2025-02-24T15:52:32.4231235Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4231309Z     
2025-02-24T15:52:32.4231404Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4231500Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4231596Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4231728Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4231823Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4231920Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4232032Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4232036Z 
2025-02-24T15:52:32.4232167Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4232407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4232561Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4232734Z     ???
2025-02-24T15:52:32.4232851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4232856Z 
2025-02-24T15:52:32.4232927Z >   ???
2025-02-24T15:52:32.4233060Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4233137Z E   
2025-02-24T15:52:32.4233265Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4233384Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4233461Z E          ...
2025-02-24T15:52:32.4233556Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4233686Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4233807Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4233887Z E          ...
2025-02-24T15:52:32.4233982Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4234108Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4234225Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4234230Z 
2025-02-24T15:52:32.4234326Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4234524Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T15:52:32.4234528Z 
2025-02-24T15:52:32.4234662Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4234789Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4234893Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4235026Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4235159Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4235259Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4235347Z err_msg = None
2025-02-24T15:52:32.4235352Z 
2025-02-24T15:52:32.4235466Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4235551Z         if err_msg is None:
2025-02-24T15:52:32.4235652Z             if left.shape != right.shape:
2025-02-24T15:52:32.4235739Z                 raise_assert_detail(
2025-02-24T15:52:32.4235890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4235964Z                 )
2025-02-24T15:52:32.4236042Z     
2025-02-24T15:52:32.4236117Z             diff = 0
2025-02-24T15:52:32.4236237Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4236328Z                 # count up differences
2025-02-24T15:52:32.4236505Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4236597Z                     diff += 1
2025-02-24T15:52:32.4236669Z     
2025-02-24T15:52:32.4236766Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4236911Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4237087Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4237261Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4237401Z E           
2025-02-24T15:52:32.4237602Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4238075Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4238549Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4238747Z 
2025-02-24T15:52:32.4239070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4239075Z 
2025-02-24T15:52:32.4239252Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4239256Z 
2025-02-24T15:52:32.4239483Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7c380>
2025-02-24T15:52:32.4239686Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>, attr = 'f_lu'
2025-02-24T15:52:32.4239691Z 
2025-02-24T15:52:32.4239835Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4239952Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4240053Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4240127Z         try:
2025-02-24T15:52:32.4240273Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4240363Z         except KeyError:
2025-02-24T15:52:32.4240509Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4240588Z     
2025-02-24T15:52:32.4240680Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4240780Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4240872Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4241121Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4241212Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4241308Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4241420Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4241424Z 
2025-02-24T15:52:32.4241554Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4241674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4241828Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4241911Z     ???
2025-02-24T15:52:32.4242022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4242027Z 
2025-02-24T15:52:32.4242103Z >   ???
2025-02-24T15:52:32.4242230Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4242306Z E   
2025-02-24T15:52:32.4242437Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4242556Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4242631Z E          ...
2025-02-24T15:52:32.4242725Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4242855Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4242974Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4243057Z E          ...
2025-02-24T15:52:32.4243146Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4243277Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4243390Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4243394Z 
2025-02-24T15:52:32.4243491Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4243696Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T15:52:32.4243700Z 
2025-02-24T15:52:32.4243833Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4243961Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4244063Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4244203Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4244328Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4244589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4244769Z err_msg = None
2025-02-24T15:52:32.4244773Z 
2025-02-24T15:52:32.4244889Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4244975Z         if err_msg is None:
2025-02-24T15:52:32.4245077Z             if left.shape != right.shape:
2025-02-24T15:52:32.4245164Z                 raise_assert_detail(
2025-02-24T15:52:32.4245315Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4245397Z                 )
2025-02-24T15:52:32.4245469Z     
2025-02-24T15:52:32.4245548Z             diff = 0
2025-02-24T15:52:32.4245662Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4245757Z                 # count up differences
2025-02-24T15:52:32.4245928Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4246020Z                     diff += 1
2025-02-24T15:52:32.4246091Z     
2025-02-24T15:52:32.4246186Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4246331Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4246508Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4246628Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4246703Z E           
2025-02-24T15:52:32.4246822Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4247084Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4247351Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4247366Z 
2025-02-24T15:52:32.4247676Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4247680Z 
2025-02-24T15:52:32.4247848Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4247853Z 
2025-02-24T15:52:32.4248081Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7dc70>
2025-02-24T15:52:32.4248250Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4248341Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4248345Z 
2025-02-24T15:52:32.4248483Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4248608Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4248705Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4248781Z         try:
2025-02-24T15:52:32.4248928Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4249018Z         except KeyError:
2025-02-24T15:52:32.4249164Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4249236Z     
2025-02-24T15:52:32.4249332Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4249428Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4249524Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4249655Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4249749Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4249841Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4249957Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4250037Z             else:
2025-02-24T15:52:32.4250135Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4250341Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4250345Z 
2025-02-24T15:52:32.4250470Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4250672Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4250819Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4250900Z     ???
2025-02-24T15:52:32.4251146Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4251151Z 
2025-02-24T15:52:32.4251228Z >   ???
2025-02-24T15:52:32.4251363Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4251436Z E   
2025-02-24T15:52:32.4251570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4251684Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4251763Z E          ...
2025-02-24T15:52:32.4251851Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4251991Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4252107Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4252192Z E          ...
2025-02-24T15:52:32.4252278Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4252412Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4252525Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4252529Z 
2025-02-24T15:52:32.4252620Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4252832Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T15:52:32.4252837Z 
2025-02-24T15:52:32.4252968Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4253104Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4253211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4253353Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4253484Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4253586Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4253670Z err_msg = None
2025-02-24T15:52:32.4253674Z 
2025-02-24T15:52:32.4253785Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4253874Z         if err_msg is None:
2025-02-24T15:52:32.4253972Z             if left.shape != right.shape:
2025-02-24T15:52:32.4254064Z                 raise_assert_detail(
2025-02-24T15:52:32.4254207Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4254287Z                 )
2025-02-24T15:52:32.4254359Z     
2025-02-24T15:52:32.4254441Z             diff = 0
2025-02-24T15:52:32.4254558Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4254660Z                 # count up differences
2025-02-24T15:52:32.4254840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4254930Z                     diff += 1
2025-02-24T15:52:32.4255007Z     
2025-02-24T15:52:32.4255098Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4255244Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4255418Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4255546Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4255620Z E           
2025-02-24T15:52:32.4255752Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4256227Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4256893Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4257035Z 
2025-02-24T15:52:32.4257478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4257486Z 
2025-02-24T15:52:32.4257676Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4257680Z 
2025-02-24T15:52:32.4257913Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7c620>
2025-02-24T15:52:32.4258086Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4258175Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4258180Z 
2025-02-24T15:52:32.4258331Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4258459Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4258553Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4258627Z         try:
2025-02-24T15:52:32.4258775Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4258864Z         except KeyError:
2025-02-24T15:52:32.4259005Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4259083Z     
2025-02-24T15:52:32.4259175Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4259276Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4259367Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4259510Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4259602Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4259704Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4259816Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4259896Z             else:
2025-02-24T15:52:32.4260001Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4260116Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4260120Z 
2025-02-24T15:52:32.4260252Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4260369Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4260526Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4260600Z     ???
2025-02-24T15:52:32.4260716Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4260721Z 
2025-02-24T15:52:32.4260792Z >   ???
2025-02-24T15:52:32.4261038Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4261119Z E   
2025-02-24T15:52:32.4261264Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4261391Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4261495Z E          ...
2025-02-24T15:52:32.4261602Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4261735Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4261859Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4261935Z E          ...
2025-02-24T15:52:32.4262030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4262156Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4262273Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4262278Z 
2025-02-24T15:52:32.4262373Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4262587Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T15:52:32.4262592Z 
2025-02-24T15:52:32.4262731Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4262998Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4263211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4263349Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4263487Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4263586Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4263672Z err_msg = None
2025-02-24T15:52:32.4263676Z 
2025-02-24T15:52:32.4263797Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4263882Z         if err_msg is None:
2025-02-24T15:52:32.4263984Z             if left.shape != right.shape:
2025-02-24T15:52:32.4264073Z                 raise_assert_detail(
2025-02-24T15:52:32.4264227Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4264305Z                 )
2025-02-24T15:52:32.4264381Z     
2025-02-24T15:52:32.4264457Z             diff = 0
2025-02-24T15:52:32.4264581Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4272817Z                 # count up differences
2025-02-24T15:52:32.4273024Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4273115Z                     diff += 1
2025-02-24T15:52:32.4273194Z     
2025-02-24T15:52:32.4273292Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4273448Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4273633Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4273762Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4273855Z E           
2025-02-24T15:52:32.4274076Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4274574Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4274906Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4274913Z 
2025-02-24T15:52:32.4275253Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4275258Z 
2025-02-24T15:52:32.4275433Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4275448Z 
2025-02-24T15:52:32.4275677Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bee9070>
2025-02-24T15:52:32.4275853Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4275937Z attr = 'j_blues'
2025-02-24T15:52:32.4275941Z 
2025-02-24T15:52:32.4276088Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4276209Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4276305Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4276379Z         try:
2025-02-24T15:52:32.4276534Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4276616Z         except KeyError:
2025-02-24T15:52:32.4276763Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4276842Z     
2025-02-24T15:52:32.4276934Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4277035Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4277337Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4277483Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4277578Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4277797Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4277912Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4277998Z             else:
2025-02-24T15:52:32.4278094Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4278212Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4278217Z 
2025-02-24T15:52:32.4278353Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4278470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4278625Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4278699Z     ???
2025-02-24T15:52:32.4278816Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4278826Z 
2025-02-24T15:52:32.4278895Z >   ???
2025-02-24T15:52:32.4279031Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4279108Z E   
2025-02-24T15:52:32.4279265Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4279381Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4279478Z E          ...
2025-02-24T15:52:32.4279575Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4279705Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4279825Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4279896Z E          ...
2025-02-24T15:52:32.4279983Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4280110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4280226Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4280231Z 
2025-02-24T15:52:32.4280334Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4280590Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T15:52:32.4280600Z 
2025-02-24T15:52:32.4280743Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4280878Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4281107Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4281245Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4281384Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4281477Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4281563Z err_msg = None
2025-02-24T15:52:32.4281567Z 
2025-02-24T15:52:32.4281689Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4281779Z         if err_msg is None:
2025-02-24T15:52:32.4281884Z             if left.shape != right.shape:
2025-02-24T15:52:32.4281971Z                 raise_assert_detail(
2025-02-24T15:52:32.4282130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4282204Z                 )
2025-02-24T15:52:32.4282282Z     
2025-02-24T15:52:32.4282358Z             diff = 0
2025-02-24T15:52:32.4282478Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4282570Z                 # count up differences
2025-02-24T15:52:32.4282749Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4282830Z                     diff += 1
2025-02-24T15:52:32.4282907Z     
2025-02-24T15:52:32.4283005Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4283143Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4283318Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4283558Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4283638Z E           
2025-02-24T15:52:32.4283860Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4284130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4284393Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4284405Z 
2025-02-24T15:52:32.4284725Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4284731Z 
2025-02-24T15:52:32.4284907Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4284917Z 
2025-02-24T15:52:32.4285145Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeaae0>
2025-02-24T15:52:32.4285321Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4285402Z attr = 'lines'
2025-02-24T15:52:32.4285407Z 
2025-02-24T15:52:32.4285545Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4285664Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4285754Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4285831Z         try:
2025-02-24T15:52:32.4285973Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4286059Z         except KeyError:
2025-02-24T15:52:32.4286197Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4286279Z     
2025-02-24T15:52:32.4286367Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4286468Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4286562Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4286699Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4286791Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4286884Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4286999Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4287072Z             else:
2025-02-24T15:52:32.4287173Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4287280Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4287285Z 
2025-02-24T15:52:32.4287416Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4287531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4287688Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4287764Z     ???
2025-02-24T15:52:32.4287874Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4287884Z 
2025-02-24T15:52:32.4287961Z >   ???
2025-02-24T15:52:32.4288086Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4288162Z E   
2025-02-24T15:52:32.4288290Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4288407Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4288480Z E          ...
2025-02-24T15:52:32.4288575Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4288705Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4288826Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4288902Z E          ...
2025-02-24T15:52:32.4288989Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4289208Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4289313Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4289391Z 
2025-02-24T15:52:32.4289487Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4289787Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T15:52:32.4289793Z 
2025-02-24T15:52:32.4290022Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beebe30>
2025-02-24T15:52:32.4290187Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4290282Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4290286Z 
2025-02-24T15:52:32.4290425Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4290543Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4290633Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4290705Z         try:
2025-02-24T15:52:32.4290853Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4291036Z         except KeyError:
2025-02-24T15:52:32.4291180Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4291257Z     
2025-02-24T15:52:32.4291350Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4291445Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4291540Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4291701Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4291789Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4291884Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4291994Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4291999Z 
2025-02-24T15:52:32.4292127Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4292240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4292250Z 
2025-02-24T15:52:32.4292391Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4292476Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4292595Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4292681Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4292820Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4292912Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4293017Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4293104Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4293233Z err_msg = None
2025-02-24T15:52:32.4293243Z 
2025-02-24T15:52:32.4293442Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4293587Z         if err_msg is None:
2025-02-24T15:52:32.4293758Z             if left.shape != right.shape:
2025-02-24T15:52:32.4293918Z                 raise_assert_detail(
2025-02-24T15:52:32.4294158Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4294290Z                 )
2025-02-24T15:52:32.4294407Z     
2025-02-24T15:52:32.4294540Z             diff = 0
2025-02-24T15:52:32.4294700Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4294800Z                 # count up differences
2025-02-24T15:52:32.4294970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4295055Z                     diff += 1
2025-02-24T15:52:32.4295124Z     
2025-02-24T15:52:32.4295220Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4295357Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4295531Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4295643Z E           AssertionError: Series are different
2025-02-24T15:52:32.4295856Z E           
2025-02-24T15:52:32.4295964Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4296332Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4296793Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4297133Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4297145Z 
2025-02-24T15:52:32.4297455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4297755Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T15:52:32.4297760Z 
2025-02-24T15:52:32.4297984Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeb380>
2025-02-24T15:52:32.4298150Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4298248Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4298257Z 
2025-02-24T15:52:32.4298394Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4298513Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4298603Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4298681Z         try:
2025-02-24T15:52:32.4298823Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4298910Z         except KeyError:
2025-02-24T15:52:32.4299050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4299121Z     
2025-02-24T15:52:32.4299211Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4299305Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4299399Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4299531Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4299622Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4299715Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4299829Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4299839Z 
2025-02-24T15:52:32.4299961Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4300086Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4300091Z 
2025-02-24T15:52:32.4300231Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4300320Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4300437Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4300517Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4300659Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4300744Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4300854Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4301070Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4301277Z err_msg = None
2025-02-24T15:52:32.4301282Z 
2025-02-24T15:52:32.4301402Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4301593Z         if err_msg is None:
2025-02-24T15:52:32.4301693Z             if left.shape != right.shape:
2025-02-24T15:52:32.4301780Z                 raise_assert_detail(
2025-02-24T15:52:32.4301932Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4302005Z                 )
2025-02-24T15:52:32.4302080Z     
2025-02-24T15:52:32.4302154Z             diff = 0
2025-02-24T15:52:32.4302272Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4302362Z                 # count up differences
2025-02-24T15:52:32.4302536Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4302621Z                     diff += 1
2025-02-24T15:52:32.4302691Z     
2025-02-24T15:52:32.4302783Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4302922Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4303098Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4303207Z E           AssertionError: Series are different
2025-02-24T15:52:32.4303284Z E           
2025-02-24T15:52:32.4303386Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4303763Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4304143Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4304528Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4304539Z 
2025-02-24T15:52:32.4304845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4305082Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T15:52:32.4305091Z 
2025-02-24T15:52:32.4305222Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4305353Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4305455Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4305593Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4305721Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4305816Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4305897Z err_msg = None
2025-02-24T15:52:32.4305901Z 
2025-02-24T15:52:32.4306009Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4306097Z         if err_msg is None:
2025-02-24T15:52:32.4306192Z             if left.shape != right.shape:
2025-02-24T15:52:32.4306282Z                 raise_assert_detail(
2025-02-24T15:52:32.4306533Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4306609Z                 )
2025-02-24T15:52:32.4306780Z     
2025-02-24T15:52:32.4306862Z             diff = 0
2025-02-24T15:52:32.4306977Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4307066Z                 # count up differences
2025-02-24T15:52:32.4307238Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4307316Z                     diff += 1
2025-02-24T15:52:32.4307391Z     
2025-02-24T15:52:32.4307486Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4307624Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4307803Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4307933Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4308010Z E           
2025-02-24T15:52:32.4308128Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4308394Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4308676Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4308682Z 
2025-02-24T15:52:32.4308992Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4308997Z 
2025-02-24T15:52:32.4309176Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4309181Z 
2025-02-24T15:52:32.4309406Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeaf30>
2025-02-24T15:52:32.4309614Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>, attr = 'nu'
2025-02-24T15:52:32.4309618Z 
2025-02-24T15:52:32.4309754Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4309874Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4309960Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4310037Z         try:
2025-02-24T15:52:32.4310176Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4310263Z         except KeyError:
2025-02-24T15:52:32.4310407Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4310481Z     
2025-02-24T15:52:32.4310573Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4310668Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4310766Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4310897Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4311116Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4311207Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4311327Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4311332Z 
2025-02-24T15:52:32.4311458Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4311587Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4311742Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4311819Z     ???
2025-02-24T15:52:32.4311929Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4311938Z 
2025-02-24T15:52:32.4312006Z >   ???
2025-02-24T15:52:32.4312214Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4312520Z E   
2025-02-24T15:52:32.4312762Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4312955Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4313229Z E          ...
2025-02-24T15:52:32.4313380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4313577Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4313702Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4313781Z E          ...
2025-02-24T15:52:32.4313870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4314005Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4314116Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4314120Z 
2025-02-24T15:52:32.4314216Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4314495Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T15:52:32.4314509Z 
2025-02-24T15:52:32.4314642Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4314779Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4314882Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4315019Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4315148Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4315241Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4315321Z err_msg = None
2025-02-24T15:52:32.4315326Z 
2025-02-24T15:52:32.4315438Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4315527Z         if err_msg is None:
2025-02-24T15:52:32.4315626Z             if left.shape != right.shape:
2025-02-24T15:52:32.4315715Z                 raise_assert_detail(
2025-02-24T15:52:32.4315870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4315947Z                 )
2025-02-24T15:52:32.4316021Z     
2025-02-24T15:52:32.4316101Z             diff = 0
2025-02-24T15:52:32.4316221Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4316309Z                 # count up differences
2025-02-24T15:52:32.4316483Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4316563Z                     diff += 1
2025-02-24T15:52:32.4316637Z     
2025-02-24T15:52:32.4316726Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4316866Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4317038Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4317156Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4317232Z E           
2025-02-24T15:52:32.4317348Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4317617Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4317886Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4317892Z 
2025-02-24T15:52:32.4318211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4318216Z 
2025-02-24T15:52:32.4318479Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4318484Z 
2025-02-24T15:52:32.4318710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeb560>
2025-02-24T15:52:32.4318977Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4319061Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4319065Z 
2025-02-24T15:52:32.4319205Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4319321Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4319411Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4319482Z         try:
2025-02-24T15:52:32.4319627Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4319712Z         except KeyError:
2025-02-24T15:52:32.4319850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4319922Z     
2025-02-24T15:52:32.4320010Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4320112Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4320203Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4320339Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4320432Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4320525Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4320634Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4320638Z 
2025-02-24T15:52:32.4320767Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4320886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4321252Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4321332Z     ???
2025-02-24T15:52:32.4321444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4321449Z 
2025-02-24T15:52:32.4321522Z >   ???
2025-02-24T15:52:32.4321649Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4321728Z E   
2025-02-24T15:52:32.4321854Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4321978Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4322049Z E          ...
2025-02-24T15:52:32.4322141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4322273Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4322385Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4322460Z E          ...
2025-02-24T15:52:32.4322546Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4322674Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4322780Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4322784Z 
2025-02-24T15:52:32.4322877Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4323119Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T15:52:32.4323128Z 
2025-02-24T15:52:32.4323264Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4323400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4323497Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4323634Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4323758Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4323857Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4323931Z err_msg = None
2025-02-24T15:52:32.4323935Z 
2025-02-24T15:52:32.4324049Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4324136Z         if err_msg is None:
2025-02-24T15:52:32.4324234Z             if left.shape != right.shape:
2025-02-24T15:52:32.4324455Z                 raise_assert_detail(
2025-02-24T15:52:32.4324604Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4324785Z                 )
2025-02-24T15:52:32.4324854Z     
2025-02-24T15:52:32.4324931Z             diff = 0
2025-02-24T15:52:32.4325047Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4325140Z                 # count up differences
2025-02-24T15:52:32.4325316Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4325401Z                     diff += 1
2025-02-24T15:52:32.4325471Z     
2025-02-24T15:52:32.4325566Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4325707Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4325878Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4325996Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4326076Z E           
2025-02-24T15:52:32.4326192Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4326453Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4326723Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4326728Z 
2025-02-24T15:52:32.4327049Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4327058Z 
2025-02-24T15:52:32.4327229Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4327233Z 
2025-02-24T15:52:32.4327468Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeafc0>
2025-02-24T15:52:32.4327670Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>, attr = 'f_lu'
2025-02-24T15:52:32.4327679Z 
2025-02-24T15:52:32.4327817Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4327940Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4328027Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4328102Z         try:
2025-02-24T15:52:32.4328244Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4328329Z         except KeyError:
2025-02-24T15:52:32.4328468Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4328541Z     
2025-02-24T15:52:32.4328630Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4328733Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4328821Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4328955Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4329054Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4329145Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4329262Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4329267Z 
2025-02-24T15:52:32.4329396Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4329514Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4329661Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4329737Z     ???
2025-02-24T15:52:32.4329846Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4329851Z 
2025-02-24T15:52:32.4329924Z >   ???
2025-02-24T15:52:32.4330054Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4330209Z E   
2025-02-24T15:52:32.4330342Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4330533Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4330613Z E          ...
2025-02-24T15:52:32.4330702Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4330836Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4331138Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4331278Z E          ...
2025-02-24T15:52:32.4331428Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4331654Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4331839Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4331846Z 
2025-02-24T15:52:32.4331996Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4332462Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T15:52:32.4332478Z 
2025-02-24T15:52:32.4332654Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4332798Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4332896Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4333035Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4333162Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4333263Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4333343Z err_msg = None
2025-02-24T15:52:32.4333347Z 
2025-02-24T15:52:32.4333457Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4333544Z         if err_msg is None:
2025-02-24T15:52:32.4333640Z             if left.shape != right.shape:
2025-02-24T15:52:32.4333733Z                 raise_assert_detail(
2025-02-24T15:52:32.4333879Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4333960Z                 )
2025-02-24T15:52:32.4334029Z     
2025-02-24T15:52:32.4334106Z             diff = 0
2025-02-24T15:52:32.4334218Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4334312Z                 # count up differences
2025-02-24T15:52:32.4334487Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4334567Z                     diff += 1
2025-02-24T15:52:32.4334641Z     
2025-02-24T15:52:32.4334729Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4334869Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4335042Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4335156Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4335232Z E           
2025-02-24T15:52:32.4335348Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4335611Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4335883Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4335889Z 
2025-02-24T15:52:32.4336200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4336341Z 
2025-02-24T15:52:32.4336549Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4336556Z 
2025-02-24T15:52:32.4336948Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bee9790>
2025-02-24T15:52:32.4337117Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4337196Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4337201Z 
2025-02-24T15:52:32.4337343Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4337460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4337552Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4337624Z         try:
2025-02-24T15:52:32.4337769Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4337854Z         except KeyError:
2025-02-24T15:52:32.4337993Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4338066Z     
2025-02-24T15:52:32.4338160Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4338259Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4338348Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4338489Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4338577Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4338670Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4338780Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4338857Z             else:
2025-02-24T15:52:32.4338953Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4339066Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4339070Z 
2025-02-24T15:52:32.4339200Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4339313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4339464Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4339540Z     ???
2025-02-24T15:52:32.4339655Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4339659Z 
2025-02-24T15:52:32.4339734Z >   ???
2025-02-24T15:52:32.4339864Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4339934Z E   
2025-02-24T15:52:32.4340072Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4340191Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4340264Z E          ...
2025-02-24T15:52:32.4340355Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4340483Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4340600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4340670Z E          ...
2025-02-24T15:52:32.4340758Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4340883Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4341143Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4341149Z 
2025-02-24T15:52:32.4341238Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4341516Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T15:52:32.4341520Z 
2025-02-24T15:52:32.4341651Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4341777Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4341877Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4342011Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4342139Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4342232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4342451Z err_msg = None
2025-02-24T15:52:32.4342455Z 
2025-02-24T15:52:32.4342568Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4342652Z         if err_msg is None:
2025-02-24T15:52:32.4342852Z             if left.shape != right.shape:
2025-02-24T15:52:32.4342937Z                 raise_assert_detail(
2025-02-24T15:52:32.4343086Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4343159Z                 )
2025-02-24T15:52:32.4343231Z     
2025-02-24T15:52:32.4343304Z             diff = 0
2025-02-24T15:52:32.4343418Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4343505Z                 # count up differences
2025-02-24T15:52:32.4343682Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4343764Z                     diff += 1
2025-02-24T15:52:32.4343835Z     
2025-02-24T15:52:32.4343928Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4344068Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4344243Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4344362Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4344437Z E           
2025-02-24T15:52:32.4344550Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4344811Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4345080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4345089Z 
2025-02-24T15:52:32.4345394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4345404Z 
2025-02-24T15:52:32.4345576Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4345581Z 
2025-02-24T15:52:32.4345803Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beea810>
2025-02-24T15:52:32.4345973Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4346058Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4346063Z 
2025-02-24T15:52:32.4346199Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4346319Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4346405Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4346481Z         try:
2025-02-24T15:52:32.4346621Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4346712Z         except KeyError:
2025-02-24T15:52:32.4346850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4346935Z     
2025-02-24T15:52:32.4347023Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4347125Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4347218Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4347348Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4347442Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4347532Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4347645Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4347718Z             else:
2025-02-24T15:52:32.4347820Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4347927Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4347931Z 
2025-02-24T15:52:32.4348148Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4348264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4348483Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4348558Z     ???
2025-02-24T15:52:32.4348741Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4348750Z 
2025-02-24T15:52:32.4348881Z >   ???
2025-02-24T15:52:32.4349099Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4349226Z E   
2025-02-24T15:52:32.4349446Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4349637Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4349758Z E          ...
2025-02-24T15:52:32.4349909Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4350132Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4350253Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4350334Z E          ...
2025-02-24T15:52:32.4350422Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4350557Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4350661Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4350665Z 
2025-02-24T15:52:32.4350758Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4351138Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T15:52:32.4351144Z 
2025-02-24T15:52:32.4351281Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4351413Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4351507Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4351644Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4351773Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4351867Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4351948Z err_msg = None
2025-02-24T15:52:32.4351952Z 
2025-02-24T15:52:32.4352066Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4352148Z         if err_msg is None:
2025-02-24T15:52:32.4352246Z             if left.shape != right.shape:
2025-02-24T15:52:32.4352338Z                 raise_assert_detail(
2025-02-24T15:52:32.4352481Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4352558Z                 )
2025-02-24T15:52:32.4352627Z     
2025-02-24T15:52:32.4352704Z             diff = 0
2025-02-24T15:52:32.4352813Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4352904Z                 # count up differences
2025-02-24T15:52:32.4353074Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4353162Z                     diff += 1
2025-02-24T15:52:32.4353231Z     
2025-02-24T15:52:32.4353325Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4353465Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4353642Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4353757Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4353829Z E           
2025-02-24T15:52:32.4353950Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4354211Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4354619Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4354725Z 
2025-02-24T15:52:32.4355043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4355048Z 
2025-02-24T15:52:32.4355218Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4355223Z 
2025-02-24T15:52:32.4355450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beead20>
2025-02-24T15:52:32.4355616Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4355700Z attr = 'j_blues'
2025-02-24T15:52:32.4355704Z 
2025-02-24T15:52:32.4355846Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4355972Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4356065Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4356139Z         try:
2025-02-24T15:52:32.4356290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4356372Z         except KeyError:
2025-02-24T15:52:32.4356519Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4356590Z     
2025-02-24T15:52:32.4356689Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4356782Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4356880Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4357013Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4357108Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4357206Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4357318Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4357404Z             else:
2025-02-24T15:52:32.4357502Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4357615Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4357624Z 
2025-02-24T15:52:32.4357748Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4357869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4358015Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4358098Z     ???
2025-02-24T15:52:32.4358215Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4358219Z 
2025-02-24T15:52:32.4358289Z >   ???
2025-02-24T15:52:32.4358422Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4358492Z E   
2025-02-24T15:52:32.4358630Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4358743Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4358823Z E          ...
2025-02-24T15:52:32.4358914Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4359046Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4359168Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4359244Z E          ...
2025-02-24T15:52:32.4359336Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4359462Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4359572Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4359577Z 
2025-02-24T15:52:32.4359667Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4359884Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T15:52:32.4359888Z 
2025-02-24T15:52:32.4360016Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4360152Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4360338Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4360482Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4360687Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4360780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4360860Z err_msg = None
2025-02-24T15:52:32.4360864Z 
2025-02-24T15:52:32.4361074Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4361162Z         if err_msg is None:
2025-02-24T15:52:32.4361259Z             if left.shape != right.shape:
2025-02-24T15:52:32.4361351Z                 raise_assert_detail(
2025-02-24T15:52:32.4361524Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4361606Z                 )
2025-02-24T15:52:32.4361681Z     
2025-02-24T15:52:32.4361754Z             diff = 0
2025-02-24T15:52:32.4361876Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4361964Z                 # count up differences
2025-02-24T15:52:32.4362146Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4362225Z                     diff += 1
2025-02-24T15:52:32.4362301Z     
2025-02-24T15:52:32.4362391Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4362532Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4362704Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4362822Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4362898Z E           
2025-02-24T15:52:32.4363009Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4363274Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4363547Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4363553Z 
2025-02-24T15:52:32.4363871Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4363875Z 
2025-02-24T15:52:32.4364050Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4364055Z 
2025-02-24T15:52:32.4364279Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcaf30>
2025-02-24T15:52:32.4364453Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4364530Z attr = 'lines'
2025-02-24T15:52:32.4364534Z 
2025-02-24T15:52:32.4364678Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4364797Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4364887Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4364964Z         try:
2025-02-24T15:52:32.4365106Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4365196Z         except KeyError:
2025-02-24T15:52:32.4365336Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4365412Z     
2025-02-24T15:52:32.4365500Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4365599Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4365690Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4365827Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4366055Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4366150Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4366260Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4366463Z             else:
2025-02-24T15:52:32.4366567Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4366675Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4366679Z 
2025-02-24T15:52:32.4366809Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4366923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4367074Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4367145Z     ???
2025-02-24T15:52:32.4367258Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4367262Z 
2025-02-24T15:52:32.4367349Z >   ???
2025-02-24T15:52:32.4367585Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4367728Z E   
2025-02-24T15:52:32.4367955Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4368152Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4368283Z E          ...
2025-02-24T15:52:32.4368433Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4368649Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4368856Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4368933Z E          ...
2025-02-24T15:52:32.4369025Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4369151Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4369262Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4369266Z 
2025-02-24T15:52:32.4369361Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4369618Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T15:52:32.4369628Z 
2025-02-24T15:52:32.4369853Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcaa80>
2025-02-24T15:52:32.4370018Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4370117Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4370121Z 
2025-02-24T15:52:32.4370256Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4370377Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4370463Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4370545Z         try:
2025-02-24T15:52:32.4370689Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4370770Z         except KeyError:
2025-02-24T15:52:32.4371025Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4371099Z     
2025-02-24T15:52:32.4371191Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4371284Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4371384Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4371517Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4371613Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4371702Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4371820Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4371825Z 
2025-02-24T15:52:32.4371954Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4372069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4372073Z 
2025-02-24T15:52:32.4372213Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4372299Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4372412Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4372496Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4372643Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4372865Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4373082Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4373169Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4373245Z err_msg = None
2025-02-24T15:52:32.4373250Z 
2025-02-24T15:52:32.4373366Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4373446Z         if err_msg is None:
2025-02-24T15:52:32.4373541Z             if left.shape != right.shape:
2025-02-24T15:52:32.4373627Z                 raise_assert_detail(
2025-02-24T15:52:32.4373770Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4373842Z                 )
2025-02-24T15:52:32.4373914Z     
2025-02-24T15:52:32.4373988Z             diff = 0
2025-02-24T15:52:32.4374104Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4374205Z                 # count up differences
2025-02-24T15:52:32.4374376Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4374469Z                     diff += 1
2025-02-24T15:52:32.4374539Z     
2025-02-24T15:52:32.4374633Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4374768Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4374943Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4375048Z E           AssertionError: Series are different
2025-02-24T15:52:32.4375126Z E           
2025-02-24T15:52:32.4375228Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4375603Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4375952Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4376288Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4376298Z 
2025-02-24T15:52:32.4376615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4376874Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T15:52:32.4376883Z 
2025-02-24T15:52:32.4377104Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdca930>
2025-02-24T15:52:32.4377274Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4377365Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4377374Z 
2025-02-24T15:52:32.4377519Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4377639Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4377724Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4377801Z         try:
2025-02-24T15:52:32.4377943Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4378032Z         except KeyError:
2025-02-24T15:52:32.4378261Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4378338Z     
2025-02-24T15:52:32.4378424Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4378601Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4378692Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4378830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4378922Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4379012Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4379126Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4379131Z 
2025-02-24T15:52:32.4379254Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4379373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4379377Z 
2025-02-24T15:52:32.4379512Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4379609Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4379717Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4379804Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4379953Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4380033Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4380141Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4380219Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4380301Z err_msg = None
2025-02-24T15:52:32.4380305Z 
2025-02-24T15:52:32.4380412Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4380498Z         if err_msg is None:
2025-02-24T15:52:32.4380592Z             if left.shape != right.shape:
2025-02-24T15:52:32.4380686Z                 raise_assert_detail(
2025-02-24T15:52:32.4380833Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4381032Z                 )
2025-02-24T15:52:32.4381110Z     
2025-02-24T15:52:32.4381184Z             diff = 0
2025-02-24T15:52:32.4381301Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4381396Z                 # count up differences
2025-02-24T15:52:32.4381571Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4381651Z                     diff += 1
2025-02-24T15:52:32.4381727Z     
2025-02-24T15:52:32.4381815Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4381954Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4382122Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4382228Z E           AssertionError: Series are different
2025-02-24T15:52:32.4382306Z E           
2025-02-24T15:52:32.4382407Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4382783Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4383164Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4383542Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4383779Z 
2025-02-24T15:52:32.4384095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4384297Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T15:52:32.4384307Z 
2025-02-24T15:52:32.4384433Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4384569Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4384667Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4384807Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4384939Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4385043Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4385121Z err_msg = None
2025-02-24T15:52:32.4385125Z 
2025-02-24T15:52:32.4385236Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4385325Z         if err_msg is None:
2025-02-24T15:52:32.4385419Z             if left.shape != right.shape:
2025-02-24T15:52:32.4385510Z                 raise_assert_detail(
2025-02-24T15:52:32.4385654Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4385733Z                 )
2025-02-24T15:52:32.4385801Z     
2025-02-24T15:52:32.4385880Z             diff = 0
2025-02-24T15:52:32.4386021Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4386193Z                 # count up differences
2025-02-24T15:52:32.4386501Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4386645Z                     diff += 1
2025-02-24T15:52:32.4386765Z     
2025-02-24T15:52:32.4386927Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4387155Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4387451Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4387608Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4387681Z E           
2025-02-24T15:52:32.4387801Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4388062Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4388333Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4388343Z 
2025-02-24T15:52:32.4388653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4388658Z 
2025-02-24T15:52:32.4388825Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4388830Z 
2025-02-24T15:52:32.4389057Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcb0e0>
2025-02-24T15:52:32.4389256Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>, attr = 'nu'
2025-02-24T15:52:32.4389266Z 
2025-02-24T15:52:32.4389403Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4389623Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4389712Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4389790Z         try:
2025-02-24T15:52:32.4390016Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4390103Z         except KeyError:
2025-02-24T15:52:32.4390243Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4390321Z     
2025-02-24T15:52:32.4390409Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4390513Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4390604Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4390744Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4390836Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4391060Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4391186Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4391196Z 
2025-02-24T15:52:32.4391322Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4391443Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4391596Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4391677Z     ???
2025-02-24T15:52:32.4391788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4391799Z 
2025-02-24T15:52:32.4391868Z >   ???
2025-02-24T15:52:32.4392003Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4392074Z E   
2025-02-24T15:52:32.4392209Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4392319Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4392396Z E          ...
2025-02-24T15:52:32.4392487Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4392623Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4392740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4392817Z E          ...
2025-02-24T15:52:32.4392904Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4393039Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4393149Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4393153Z 
2025-02-24T15:52:32.4393243Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4393470Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T15:52:32.4393474Z 
2025-02-24T15:52:32.4393603Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4393740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4393840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4393979Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4394116Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4394216Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4394300Z err_msg = None
2025-02-24T15:52:32.4394305Z 
2025-02-24T15:52:32.4394414Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4394507Z         if err_msg is None:
2025-02-24T15:52:32.4394605Z             if left.shape != right.shape:
2025-02-24T15:52:32.4394695Z                 raise_assert_detail(
2025-02-24T15:52:32.4394845Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4394922Z                 )
2025-02-24T15:52:32.4394991Z     
2025-02-24T15:52:32.4395070Z             diff = 0
2025-02-24T15:52:32.4395188Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4395279Z                 # count up differences
2025-02-24T15:52:32.4395458Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4395662Z                     diff += 1
2025-02-24T15:52:32.4395736Z     
2025-02-24T15:52:32.4395928Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4396072Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4396242Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4396360Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4396433Z E           
2025-02-24T15:52:32.4396551Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4396817Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4397084Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4397095Z 
2025-02-24T15:52:32.4397404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4397409Z 
2025-02-24T15:52:32.4397584Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4397588Z 
2025-02-24T15:52:32.4397811Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdca450>
2025-02-24T15:52:32.4397982Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4398067Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4398072Z 
2025-02-24T15:52:32.4398222Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4398344Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4398437Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4398516Z         try:
2025-02-24T15:52:32.4398663Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4398750Z         except KeyError:
2025-02-24T15:52:32.4398892Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4398970Z     
2025-02-24T15:52:32.4399058Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4399158Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4399249Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4399386Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4399473Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4399569Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4399681Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4399690Z 
2025-02-24T15:52:32.4399821Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4399942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4400095Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4400180Z     ???
2025-02-24T15:52:32.4400291Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4400296Z 
2025-02-24T15:52:32.4400416Z >   ???
2025-02-24T15:52:32.4400551Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4400626Z E   
2025-02-24T15:52:32.4400755Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4400881Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4401049Z E          ...
2025-02-24T15:52:32.4401145Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4401280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4401514Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4401590Z E          ...
2025-02-24T15:52:32.4401685Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4401935Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4402042Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4402047Z 
2025-02-24T15:52:32.4402142Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4402345Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T15:52:32.4402349Z 
2025-02-24T15:52:32.4402486Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4402618Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4402714Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4402850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4402978Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4403084Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4403161Z err_msg = None
2025-02-24T15:52:32.4403164Z 
2025-02-24T15:52:32.4403282Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4403365Z         if err_msg is None:
2025-02-24T15:52:32.4403465Z             if left.shape != right.shape:
2025-02-24T15:52:32.4403555Z                 raise_assert_detail(
2025-02-24T15:52:32.4403697Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4403779Z                 )
2025-02-24T15:52:32.4403848Z     
2025-02-24T15:52:32.4403927Z             diff = 0
2025-02-24T15:52:32.4404040Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4404135Z                 # count up differences
2025-02-24T15:52:32.4404311Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4404398Z                     diff += 1
2025-02-24T15:52:32.4404474Z     
2025-02-24T15:52:32.4404568Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4404711Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4404882Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4405000Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4405071Z E           
2025-02-24T15:52:32.4405191Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4405453Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4405725Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4405735Z 
2025-02-24T15:52:32.4406044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4406049Z 
2025-02-24T15:52:32.4406218Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4406222Z 
2025-02-24T15:52:32.4406450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdca150>
2025-02-24T15:52:32.4406661Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>, attr = 'f_lu'
2025-02-24T15:52:32.4406670Z 
2025-02-24T15:52:32.4406808Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4407017Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4407102Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4407271Z         try:
2025-02-24T15:52:32.4407412Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4407497Z         except KeyError:
2025-02-24T15:52:32.4407635Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4407710Z     
2025-02-24T15:52:32.4407798Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4407896Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4407988Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4408125Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4408218Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4408309Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4408424Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4408435Z 
2025-02-24T15:52:32.4408558Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4408676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4408829Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4408910Z     ???
2025-02-24T15:52:32.4409022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4409027Z 
2025-02-24T15:52:32.4409101Z >   ???
2025-02-24T15:52:32.4409232Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4409305Z E   
2025-02-24T15:52:32.4409437Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4409548Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4409624Z E          ...
2025-02-24T15:52:32.4409715Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4409849Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4409966Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4410042Z E          ...
2025-02-24T15:52:32.4410128Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4410266Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4410370Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4410380Z 
2025-02-24T15:52:32.4410469Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4410690Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T15:52:32.4410695Z 
2025-02-24T15:52:32.4410823Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4411118Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4411218Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4411465Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4411602Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4411788Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4411931Z err_msg = None
2025-02-24T15:52:32.4411938Z 
2025-02-24T15:52:32.4412118Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4412254Z         if err_msg is None:
2025-02-24T15:52:32.4412406Z             if left.shape != right.shape:
2025-02-24T15:52:32.4412555Z                 raise_assert_detail(
2025-02-24T15:52:32.4412801Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4412930Z                 )
2025-02-24T15:52:32.4413048Z     
2025-02-24T15:52:32.4413179Z             diff = 0
2025-02-24T15:52:32.4413365Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4413528Z                 # count up differences
2025-02-24T15:52:32.4413859Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4413941Z                     diff += 1
2025-02-24T15:52:32.4414016Z     
2025-02-24T15:52:32.4414211Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4414353Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4414522Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4414641Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4414715Z E           
2025-02-24T15:52:32.4414834Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4415093Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4415367Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4415379Z 
2025-02-24T15:52:32.4415688Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4415693Z 
2025-02-24T15:52:32.4415862Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4415871Z 
2025-02-24T15:52:32.4416093Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcba10>
2025-02-24T15:52:32.4416264Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4416344Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4416349Z 
2025-02-24T15:52:32.4416495Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4416616Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4416709Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4416789Z         try:
2025-02-24T15:52:32.4416934Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4417015Z         except KeyError:
2025-02-24T15:52:32.4417155Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4417231Z     
2025-02-24T15:52:32.4417317Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4417414Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4417503Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4417638Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4417724Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4417820Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4417929Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4418014Z             else:
2025-02-24T15:52:32.4418110Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4418224Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4418233Z 
2025-02-24T15:52:32.4418365Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4418479Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4418631Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4418703Z     ???
2025-02-24T15:52:32.4418821Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4418826Z 
2025-02-24T15:52:32.4418896Z >   ???
2025-02-24T15:52:32.4419025Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4419095Z E   
2025-02-24T15:52:32.4419233Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4419353Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4419517Z E          ...
2025-02-24T15:52:32.4419612Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4419743Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4419938Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4420017Z E          ...
2025-02-24T15:52:32.4420109Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4420234Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4420344Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4420348Z 
2025-02-24T15:52:32.4420437Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4420661Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T15:52:32.4420666Z 
2025-02-24T15:52:32.4420798Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4421042Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4421154Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4421294Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4421439Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4421535Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4421616Z err_msg = None
2025-02-24T15:52:32.4421620Z 
2025-02-24T15:52:32.4421735Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4421816Z         if err_msg is None:
2025-02-24T15:52:32.4421916Z             if left.shape != right.shape:
2025-02-24T15:52:32.4422003Z                 raise_assert_detail(
2025-02-24T15:52:32.4422151Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4422223Z                 )
2025-02-24T15:52:32.4422305Z     
2025-02-24T15:52:32.4422380Z             diff = 0
2025-02-24T15:52:32.4422496Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4422586Z                 # count up differences
2025-02-24T15:52:32.4422765Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4422844Z                     diff += 1
2025-02-24T15:52:32.4422920Z     
2025-02-24T15:52:32.4423015Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4423152Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4423330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4423442Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4423520Z E           
2025-02-24T15:52:32.4423633Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4423906Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4424180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4424186Z 
2025-02-24T15:52:32.4424493Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4424498Z 
2025-02-24T15:52:32.4424673Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4424678Z 
2025-02-24T15:52:32.4424900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcbad0>
2025-02-24T15:52:32.4425214Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4425301Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4425404Z 
2025-02-24T15:52:32.4425543Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4425665Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4425753Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4425830Z         try:
2025-02-24T15:52:32.4425969Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4426057Z         except KeyError:
2025-02-24T15:52:32.4426195Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4426272Z     
2025-02-24T15:52:32.4426360Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4426459Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4426554Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4426684Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4426783Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4426872Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4426994Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4427067Z             else:
2025-02-24T15:52:32.4427168Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4427274Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4427279Z 
2025-02-24T15:52:32.4427405Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4427518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4427668Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4427740Z     ???
2025-02-24T15:52:32.4427850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4427855Z 
2025-02-24T15:52:32.4427928Z >   ???
2025-02-24T15:52:32.4428054Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4428133Z E   
2025-02-24T15:52:32.4428261Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4428384Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4428457Z E          ...
2025-02-24T15:52:32.4428549Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4428678Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4428794Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4428873Z E          ...
2025-02-24T15:52:32.4428959Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4429088Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4429192Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4429197Z 
2025-02-24T15:52:32.4429544Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4429748Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T15:52:32.4429757Z 
2025-02-24T15:52:32.4429895Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4430034Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4430130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4430271Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4430501Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4430674Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4430804Z err_msg = None
2025-02-24T15:52:32.4430811Z 
2025-02-24T15:52:32.4431133Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4431276Z         if err_msg is None:
2025-02-24T15:52:32.4431448Z             if left.shape != right.shape:
2025-02-24T15:52:32.4431811Z                 raise_assert_detail(
2025-02-24T15:52:32.4432065Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4432340Z                 )
2025-02-24T15:52:32.4432469Z     
2025-02-24T15:52:32.4432610Z             diff = 0
2025-02-24T15:52:32.4432737Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4432833Z                 # count up differences
2025-02-24T15:52:32.4433010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4433093Z                     diff += 1
2025-02-24T15:52:32.4433163Z     
2025-02-24T15:52:32.4433257Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4433409Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4433579Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4433696Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4433777Z E           
2025-02-24T15:52:32.4433895Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4434159Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4434430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4434436Z 
2025-02-24T15:52:32.4434752Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4434761Z 
2025-02-24T15:52:32.4434932Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4434936Z 
2025-02-24T15:52:32.4435174Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcbc50>
2025-02-24T15:52:32.4435365Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4435450Z attr = 'j_blues'
2025-02-24T15:52:32.4435454Z 
2025-02-24T15:52:32.4435603Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4435720Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4435809Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4435884Z         try:
2025-02-24T15:52:32.4436029Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4436112Z         except KeyError:
2025-02-24T15:52:32.4436255Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4436326Z     
2025-02-24T15:52:32.4436418Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4436516Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4436611Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4436754Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4436843Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4436938Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4437048Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4437127Z             else:
2025-02-24T15:52:32.4437223Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4437334Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4437339Z 
2025-02-24T15:52:32.4437464Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4437586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4437733Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4437902Z     ???
2025-02-24T15:52:32.4438021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4438025Z 
2025-02-24T15:52:32.4438093Z >   ???
2025-02-24T15:52:32.4438302Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4438373Z E   
2025-02-24T15:52:32.4438506Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4438617Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4438695Z E          ...
2025-02-24T15:52:32.4438782Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4438915Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4439027Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4439105Z E          ...
2025-02-24T15:52:32.4439196Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4439323Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4439443Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4439448Z 
2025-02-24T15:52:32.4439538Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4439752Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T15:52:32.4439762Z 
2025-02-24T15:52:32.4439895Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4440032Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4440131Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4440270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4440400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4440496Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4440581Z err_msg = None
2025-02-24T15:52:32.4440590Z 
2025-02-24T15:52:32.4440702Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4440792Z         if err_msg is None:
2025-02-24T15:52:32.4440887Z             if left.shape != right.shape:
2025-02-24T15:52:32.4441131Z                 raise_assert_detail(
2025-02-24T15:52:32.4441280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4441362Z                 )
2025-02-24T15:52:32.4441439Z     
2025-02-24T15:52:32.4441512Z             diff = 0
2025-02-24T15:52:32.4441631Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4441722Z                 # count up differences
2025-02-24T15:52:32.4441900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4441979Z                     diff += 1
2025-02-24T15:52:32.4442054Z     
2025-02-24T15:52:32.4442145Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4442286Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4442465Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4442583Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4442664Z E           
2025-02-24T15:52:32.4442777Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4443047Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4443313Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4443440Z 
2025-02-24T15:52:32.4443762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4443866Z 
2025-02-24T15:52:32.4444043Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4444048Z 
2025-02-24T15:52:32.4444270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98a10>
2025-02-24T15:52:32.4444442Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4444517Z attr = 'lines'
2025-02-24T15:52:32.4444521Z 
2025-02-24T15:52:32.4444663Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4444779Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4444871Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4444948Z         try:
2025-02-24T15:52:32.4445089Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4445182Z         except KeyError:
2025-02-24T15:52:32.4445318Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4452715Z     
2025-02-24T15:52:32.4452920Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4453099Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4453272Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4453442Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4453541Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4453640Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4453770Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4453844Z             else:
2025-02-24T15:52:32.4453950Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4454066Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4454071Z 
2025-02-24T15:52:32.4454215Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4454341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4454497Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4454578Z     ???
2025-02-24T15:52:32.4454693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4454698Z 
2025-02-24T15:52:32.4454772Z >   ???
2025-02-24T15:52:32.4454903Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4454979Z E   
2025-02-24T15:52:32.4455111Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4455234Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4455307Z E          ...
2025-02-24T15:52:32.4455405Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4455538Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4455661Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4455744Z E          ...
2025-02-24T15:52:32.4455833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4455962Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4456073Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4456078Z 
2025-02-24T15:52:32.4456177Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4456447Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T15:52:32.4456452Z 
2025-02-24T15:52:32.4456689Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98ad0>
2025-02-24T15:52:32.4456863Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4456960Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4456964Z 
2025-02-24T15:52:32.4457112Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4457232Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4457503Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4457575Z         try:
2025-02-24T15:52:32.4457733Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4457925Z         except KeyError:
2025-02-24T15:52:32.4458073Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4458145Z     
2025-02-24T15:52:32.4458241Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4458342Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4458432Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4458575Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4458662Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4458762Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4458876Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4458881Z 
2025-02-24T15:52:32.4459012Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4459135Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4459140Z 
2025-02-24T15:52:32.4459284Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4459383Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4459493Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4459578Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4459721Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4459810Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4459915Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4460000Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4460078Z err_msg = None
2025-02-24T15:52:32.4460082Z 
2025-02-24T15:52:32.4460203Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4460290Z         if err_msg is None:
2025-02-24T15:52:32.4460395Z             if left.shape != right.shape:
2025-02-24T15:52:32.4460488Z                 raise_assert_detail(
2025-02-24T15:52:32.4460643Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4460721Z                 )
2025-02-24T15:52:32.4460791Z     
2025-02-24T15:52:32.4460874Z             diff = 0
2025-02-24T15:52:32.4461136Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4461238Z                 # count up differences
2025-02-24T15:52:32.4461417Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4461528Z                     diff += 1
2025-02-24T15:52:32.4461603Z     
2025-02-24T15:52:32.4461698Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4461842Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4462015Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4462131Z E           AssertionError: Series are different
2025-02-24T15:52:32.4462203Z E           
2025-02-24T15:52:32.4462312Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4462690Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4463029Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4463514Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4463624Z 
2025-02-24T15:52:32.4463957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4464223Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T15:52:32.4464229Z 
2025-02-24T15:52:32.4464459Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98b90>
2025-02-24T15:52:32.4464627Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4464729Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4464734Z 
2025-02-24T15:52:32.4464874Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4464998Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4465091Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4465169Z         try:
2025-02-24T15:52:32.4465313Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4465402Z         except KeyError:
2025-02-24T15:52:32.4465542Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4465620Z     
2025-02-24T15:52:32.4465709Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4465809Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4465898Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4466037Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4466129Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4466226Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4466343Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4466348Z 
2025-02-24T15:52:32.4466479Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4466601Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4466611Z 
2025-02-24T15:52:32.4466748Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4466838Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4466946Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4467030Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4467170Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4467259Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4467364Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4467452Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4467528Z err_msg = None
2025-02-24T15:52:32.4467536Z 
2025-02-24T15:52:32.4467645Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4467735Z         if err_msg is None:
2025-02-24T15:52:32.4467831Z             if left.shape != right.shape:
2025-02-24T15:52:32.4467921Z                 raise_assert_detail(
2025-02-24T15:52:32.4468064Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4468144Z                 )
2025-02-24T15:52:32.4468215Z     
2025-02-24T15:52:32.4468293Z             diff = 0
2025-02-24T15:52:32.4468406Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4468501Z                 # count up differences
2025-02-24T15:52:32.4468671Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4468758Z                     diff += 1
2025-02-24T15:52:32.4468836Z     
2025-02-24T15:52:32.4469014Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4469154Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4469542Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4469735Z E           AssertionError: Series are different
2025-02-24T15:52:32.4469864Z E           
2025-02-24T15:52:32.4470050Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4470717Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4471255Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4471653Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4471660Z 
2025-02-24T15:52:32.4471975Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4472176Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T15:52:32.4472186Z 
2025-02-24T15:52:32.4472319Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4472454Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4472556Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4472688Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4472823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4472928Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4473005Z err_msg = None
2025-02-24T15:52:32.4473009Z 
2025-02-24T15:52:32.4473122Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4473205Z         if err_msg is None:
2025-02-24T15:52:32.4473304Z             if left.shape != right.shape:
2025-02-24T15:52:32.4473396Z                 raise_assert_detail(
2025-02-24T15:52:32.4473545Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4473622Z                 )
2025-02-24T15:52:32.4473697Z     
2025-02-24T15:52:32.4473773Z             diff = 0
2025-02-24T15:52:32.4473890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4473984Z                 # count up differences
2025-02-24T15:52:32.4474154Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4474238Z                     diff += 1
2025-02-24T15:52:32.4474309Z     
2025-02-24T15:52:32.4474399Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4474533Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4474707Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4474819Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4475032Z E           
2025-02-24T15:52:32.4475145Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4475512Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4475781Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4475786Z 
2025-02-24T15:52:32.4476094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4476104Z 
2025-02-24T15:52:32.4476280Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4476285Z 
2025-02-24T15:52:32.4476518Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98dd0>
2025-02-24T15:52:32.4476717Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>, attr = 'nu'
2025-02-24T15:52:32.4476722Z 
2025-02-24T15:52:32.4476865Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4476984Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4477075Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4477148Z         try:
2025-02-24T15:52:32.4477296Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4477380Z         except KeyError:
2025-02-24T15:52:32.4477522Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4477598Z     
2025-02-24T15:52:32.4477688Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4477792Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4477881Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4478023Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4478108Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4478201Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4478313Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4478318Z 
2025-02-24T15:52:32.4478445Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4478560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4478711Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4478786Z     ???
2025-02-24T15:52:32.4478896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4478901Z 
2025-02-24T15:52:32.4478973Z >   ???
2025-02-24T15:52:32.4479103Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4479179Z E   
2025-02-24T15:52:32.4479308Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4479429Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4479503Z E          ...
2025-02-24T15:52:32.4479600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4479734Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4479846Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4479922Z E          ...
2025-02-24T15:52:32.4480014Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4480146Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4480252Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4480256Z 
2025-02-24T15:52:32.4480350Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4480577Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T15:52:32.4480669Z 
2025-02-24T15:52:32.4480809Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4481164Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4481265Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4481403Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4481527Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4481628Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4481704Z err_msg = None
2025-02-24T15:52:32.4481708Z 
2025-02-24T15:52:32.4481823Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4481906Z         if err_msg is None:
2025-02-24T15:52:32.4482004Z             if left.shape != right.shape:
2025-02-24T15:52:32.4482101Z                 raise_assert_detail(
2025-02-24T15:52:32.4482248Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4482330Z                 )
2025-02-24T15:52:32.4482400Z     
2025-02-24T15:52:32.4482478Z             diff = 0
2025-02-24T15:52:32.4482592Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4482688Z                 # count up differences
2025-02-24T15:52:32.4482859Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4482942Z                     diff += 1
2025-02-24T15:52:32.4483013Z     
2025-02-24T15:52:32.4483108Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4483243Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4483419Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4483538Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4483615Z E           
2025-02-24T15:52:32.4483734Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4483994Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4484266Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4484271Z 
2025-02-24T15:52:32.4484590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4484598Z 
2025-02-24T15:52:32.4484769Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4484773Z 
2025-02-24T15:52:32.4485002Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98e90>
2025-02-24T15:52:32.4485167Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4485254Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4485258Z 
2025-02-24T15:52:32.4485400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4485517Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4485608Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4485681Z         try:
2025-02-24T15:52:32.4485825Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4485908Z         except KeyError:
2025-02-24T15:52:32.4486051Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4486122Z     
2025-02-24T15:52:32.4486339Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4486435Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4486529Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4486767Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4486859Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4486955Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4487067Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4487071Z 
2025-02-24T15:52:32.4487203Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4487318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4487468Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4487541Z     ???
2025-02-24T15:52:32.4487657Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4487662Z 
2025-02-24T15:52:32.4487731Z >   ???
2025-02-24T15:52:32.4487870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4487944Z E   
2025-02-24T15:52:32.4488072Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4488232Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4488367Z E          ...
2025-02-24T15:52:32.4488530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4488749Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4488949Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4489071Z E          ...
2025-02-24T15:52:32.4489223Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4489433Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4489620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4489628Z 
2025-02-24T15:52:32.4489747Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4489956Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T15:52:32.4489968Z 
2025-02-24T15:52:32.4490103Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4490239Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4490341Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4490476Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4490604Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4490701Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4490777Z err_msg = None
2025-02-24T15:52:32.4490781Z 
2025-02-24T15:52:32.4490895Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4491084Z         if err_msg is None:
2025-02-24T15:52:32.4491184Z             if left.shape != right.shape:
2025-02-24T15:52:32.4491286Z                 raise_assert_detail(
2025-02-24T15:52:32.4491436Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4491512Z                 )
2025-02-24T15:52:32.4491585Z     
2025-02-24T15:52:32.4491659Z             diff = 0
2025-02-24T15:52:32.4491776Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4491867Z                 # count up differences
2025-02-24T15:52:32.4492038Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4492117Z                     diff += 1
2025-02-24T15:52:32.4492191Z     
2025-02-24T15:52:32.4492279Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4492419Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4492593Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4492704Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4492937Z E           
2025-02-24T15:52:32.4493050Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4493423Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4493687Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4493697Z 
2025-02-24T15:52:32.4494002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4494013Z 
2025-02-24T15:52:32.4494189Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4494200Z 
2025-02-24T15:52:32.4494425Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98f50>
2025-02-24T15:52:32.4494627Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>, attr = 'f_lu'
2025-02-24T15:52:32.4494632Z 
2025-02-24T15:52:32.4494772Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4494887Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4494975Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4495046Z         try:
2025-02-24T15:52:32.4495189Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4495271Z         except KeyError:
2025-02-24T15:52:32.4495410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4495483Z     
2025-02-24T15:52:32.4495580Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4495673Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4495768Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4495908Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4495998Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4496092Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4496202Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4496206Z 
2025-02-24T15:52:32.4496330Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4496440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4496589Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4496661Z     ???
2025-02-24T15:52:32.4496775Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4496779Z 
2025-02-24T15:52:32.4496848Z >   ???
2025-02-24T15:52:32.4496984Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4497058Z E   
2025-02-24T15:52:32.4497187Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4497307Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4497380Z E          ...
2025-02-24T15:52:32.4497472Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4497602Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4497720Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4497792Z E          ...
2025-02-24T15:52:32.4497882Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4498008Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4498118Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4498123Z 
2025-02-24T15:52:32.4498215Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4498433Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T15:52:32.4498526Z 
2025-02-24T15:52:32.4498657Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4498858Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4498959Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4499089Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4499215Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4499312Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4499388Z err_msg = None
2025-02-24T15:52:32.4499393Z 
2025-02-24T15:52:32.4499504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4499585Z         if err_msg is None:
2025-02-24T15:52:32.4499684Z             if left.shape != right.shape:
2025-02-24T15:52:32.4499774Z                 raise_assert_detail(
2025-02-24T15:52:32.4499922Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4499999Z                 )
2025-02-24T15:52:32.4500072Z     
2025-02-24T15:52:32.4500144Z             diff = 0
2025-02-24T15:52:32.4500257Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4500345Z                 # count up differences
2025-02-24T15:52:32.4500519Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4500600Z                     diff += 1
2025-02-24T15:52:32.4500669Z     
2025-02-24T15:52:32.4500760Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4500896Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4501172Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4501284Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4501364Z E           
2025-02-24T15:52:32.4501476Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4501743Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4502012Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4502018Z 
2025-02-24T15:52:32.4502319Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4502328Z 
2025-02-24T15:52:32.4502499Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4502504Z 
2025-02-24T15:52:32.4502732Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc996d0>
2025-02-24T15:52:32.4502897Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4502983Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4502988Z 
2025-02-24T15:52:32.4503123Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4503242Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4503328Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4503404Z         try:
2025-02-24T15:52:32.4503544Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4503629Z         except KeyError:
2025-02-24T15:52:32.4503765Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4503839Z     
2025-02-24T15:52:32.4504050Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4504146Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4504240Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4504496Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4504587Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4504677Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4504790Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4504863Z             else:
2025-02-24T15:52:32.4504962Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4505067Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4505075Z 
2025-02-24T15:52:32.4505198Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4505313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4505456Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4505532Z     ???
2025-02-24T15:52:32.4505640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4505651Z 
2025-02-24T15:52:32.4505721Z >   ???
2025-02-24T15:52:32.4505844Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4505977Z E   
2025-02-24T15:52:32.4506205Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4506404Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4506533Z E          ...
2025-02-24T15:52:32.4506682Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4506901Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4507091Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4507221Z E          ...
2025-02-24T15:52:32.4507353Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4507491Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4507601Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4507607Z 
2025-02-24T15:52:32.4507701Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4507927Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T15:52:32.4507936Z 
2025-02-24T15:52:32.4508060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4508192Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4508287Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4508425Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4508549Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4508646Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4508725Z err_msg = None
2025-02-24T15:52:32.4508729Z 
2025-02-24T15:52:32.4508842Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4508928Z         if err_msg is None:
2025-02-24T15:52:32.4509026Z             if left.shape != right.shape:
2025-02-24T15:52:32.4509119Z                 raise_assert_detail(
2025-02-24T15:52:32.4509259Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4509333Z                 )
2025-02-24T15:52:32.4509402Z     
2025-02-24T15:52:32.4509478Z             diff = 0
2025-02-24T15:52:32.4509591Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4509685Z                 # count up differences
2025-02-24T15:52:32.4509853Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4509935Z                     diff += 1
2025-02-24T15:52:32.4510003Z     
2025-02-24T15:52:32.4510096Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4510337Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4510506Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4510697Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4510768Z E           
2025-02-24T15:52:32.4510882Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4511257Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4511527Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4511538Z 
2025-02-24T15:52:32.4511853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4511863Z 
2025-02-24T15:52:32.4512031Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4512036Z 
2025-02-24T15:52:32.4512267Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc99790>
2025-02-24T15:52:32.4512431Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4512514Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4512518Z 
2025-02-24T15:52:32.4512657Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4512770Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4512859Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4512930Z         try:
2025-02-24T15:52:32.4513073Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4513159Z         except KeyError:
2025-02-24T15:52:32.4513301Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4513375Z     
2025-02-24T15:52:32.4513467Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4513561Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4513653Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4513791Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4513878Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4513972Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4514082Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4514157Z             else:
2025-02-24T15:52:32.4514252Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4514361Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4514365Z 
2025-02-24T15:52:32.4514492Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4514607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4514762Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4514833Z     ???
2025-02-24T15:52:32.4514946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4514950Z 
2025-02-24T15:52:32.4515019Z >   ???
2025-02-24T15:52:32.4515146Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4515214Z E   
2025-02-24T15:52:32.4515344Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4515457Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4515533Z E          ...
2025-02-24T15:52:32.4515620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4515751Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4515866Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4516061Z E          ...
2025-02-24T15:52:32.4516152Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4516375Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4516484Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4516489Z 
2025-02-24T15:52:32.4516581Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4516793Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T15:52:32.4516797Z 
2025-02-24T15:52:32.4516926Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4517056Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4517155Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4517284Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4517415Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4517508Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4517592Z err_msg = None
2025-02-24T15:52:32.4517596Z 
2025-02-24T15:52:32.4517704Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4517791Z         if err_msg is None:
2025-02-24T15:52:32.4517885Z             if left.shape != right.shape:
2025-02-24T15:52:32.4517979Z                 raise_assert_detail(
2025-02-24T15:52:32.4518124Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4518196Z                 )
2025-02-24T15:52:32.4518268Z     
2025-02-24T15:52:32.4518341Z             diff = 0
2025-02-24T15:52:32.4518456Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4518545Z                 # count up differences
2025-02-24T15:52:32.4518715Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4518799Z                     diff += 1
2025-02-24T15:52:32.4518871Z     
2025-02-24T15:52:32.4518960Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4519103Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4519271Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4519388Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4519462Z E           
2025-02-24T15:52:32.4519573Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4519835Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4520095Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4520113Z 
2025-02-24T15:52:32.4520416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4520421Z 
2025-02-24T15:52:32.4520593Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4520598Z 
2025-02-24T15:52:32.4520816Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc99910>
2025-02-24T15:52:32.4521105Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4521181Z attr = 'j_blues'
2025-02-24T15:52:32.4521186Z 
2025-02-24T15:52:32.4521325Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4521562Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4521647Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4521719Z         try:
2025-02-24T15:52:32.4521962Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4522047Z         except KeyError:
2025-02-24T15:52:32.4522183Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4522255Z     
2025-02-24T15:52:32.4522342Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4522438Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4522524Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4522659Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4522744Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4522835Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4522948Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4523019Z             else:
2025-02-24T15:52:32.4523122Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4523229Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4523238Z 
2025-02-24T15:52:32.4523362Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4523473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4523617Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4523687Z     ???
2025-02-24T15:52:32.4523799Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4523804Z 
2025-02-24T15:52:32.4523877Z >   ???
2025-02-24T15:52:32.4524001Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4524071Z E   
2025-02-24T15:52:32.4524199Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4524315Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4524387Z E          ...
2025-02-24T15:52:32.4524530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4524757Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4524969Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4525092Z E          ...
2025-02-24T15:52:32.4525249Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4525462Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4525642Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4525649Z 
2025-02-24T15:52:32.4525803Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4526152Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T15:52:32.4526159Z 
2025-02-24T15:52:32.4526295Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4526424Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4526529Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4526659Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4526791Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4526890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4526965Z err_msg = None
2025-02-24T15:52:32.4526970Z 
2025-02-24T15:52:32.4527083Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4527165Z         if err_msg is None:
2025-02-24T15:52:32.4527262Z             if left.shape != right.shape:
2025-02-24T15:52:32.4527346Z                 raise_assert_detail(
2025-02-24T15:52:32.4527491Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4527563Z                 )
2025-02-24T15:52:32.4527635Z     
2025-02-24T15:52:32.4527708Z             diff = 0
2025-02-24T15:52:32.4527945Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4528037Z                 # count up differences
2025-02-24T15:52:32.4528285Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4528365Z                     diff += 1
2025-02-24T15:52:32.4528435Z     
2025-02-24T15:52:32.4528524Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4528658Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4528831Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4528942Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4529018Z E           
2025-02-24T15:52:32.4529129Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4529392Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4529670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4529675Z 
2025-02-24T15:52:32.4529979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4529987Z 
2025-02-24T15:52:32.4530155Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4530160Z 
2025-02-24T15:52:32.4530384Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9a690>
2025-02-24T15:52:32.4530554Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4530632Z attr = 'lines'
2025-02-24T15:52:32.4530636Z 
2025-02-24T15:52:32.4530770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4530894Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4531095Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4531171Z         try:
2025-02-24T15:52:32.4531311Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4531395Z         except KeyError:
2025-02-24T15:52:32.4531537Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4531609Z     
2025-02-24T15:52:32.4531701Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4531795Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4531887Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4532018Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4532111Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4532200Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4532313Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4532391Z             else:
2025-02-24T15:52:32.4532487Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4532594Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4532599Z 
2025-02-24T15:52:32.4532721Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4532837Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4532986Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4533062Z     ???
2025-02-24T15:52:32.4533173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4533177Z 
2025-02-24T15:52:32.4533254Z >   ???
2025-02-24T15:52:32.4533379Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4533588Z E   
2025-02-24T15:52:32.4533717Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4533833Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4534012Z E          ...
2025-02-24T15:52:32.4534100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4534234Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4534349Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4534425Z E          ...
2025-02-24T15:52:32.4534510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4534641Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4534745Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4534749Z 
2025-02-24T15:52:32.4534843Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4535131Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T15:52:32.4535141Z 
2025-02-24T15:52:32.4535362Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9a750>
2025-02-24T15:52:32.4535531Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4535627Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4535632Z 
2025-02-24T15:52:32.4535770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4535883Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4535972Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4536044Z         try:
2025-02-24T15:52:32.4536188Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4536273Z         except KeyError:
2025-02-24T15:52:32.4536407Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4536483Z     
2025-02-24T15:52:32.4536571Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4536670Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4536765Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4536900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4536991Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4537086Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4537195Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4537199Z 
2025-02-24T15:52:32.4537326Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4537440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4537445Z 
2025-02-24T15:52:32.4537581Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4537670Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4537778Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4537864Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4538004Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4538098Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4538208Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4538296Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4538378Z err_msg = None
2025-02-24T15:52:32.4538382Z 
2025-02-24T15:52:32.4538491Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4538578Z         if err_msg is None:
2025-02-24T15:52:32.4538671Z             if left.shape != right.shape:
2025-02-24T15:52:32.4538760Z                 raise_assert_detail(
2025-02-24T15:52:32.4538903Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4538978Z                 )
2025-02-24T15:52:32.4539047Z     
2025-02-24T15:52:32.4539124Z             diff = 0
2025-02-24T15:52:32.4539237Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4539418Z                 # count up differences
2025-02-24T15:52:32.4539590Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4539744Z                     diff += 1
2025-02-24T15:52:32.4539817Z     
2025-02-24T15:52:32.4539905Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4540044Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4540212Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4540320Z E           AssertionError: Series are different
2025-02-24T15:52:32.4540392Z E           
2025-02-24T15:52:32.4540499Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4540870Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4541343Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4541682Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4541688Z 
2025-02-24T15:52:32.4542005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4542286Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T15:52:32.4542297Z 
2025-02-24T15:52:32.4542521Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9a810>
2025-02-24T15:52:32.4542688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4542782Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4542788Z 
2025-02-24T15:52:32.4542926Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4543043Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4543131Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4543233Z         try:
2025-02-24T15:52:32.4543489Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4543635Z         except KeyError:
2025-02-24T15:52:32.4543895Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4544024Z     
2025-02-24T15:52:32.4544128Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4544229Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4544326Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4544462Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4544555Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4544648Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4544761Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4544765Z 
2025-02-24T15:52:32.4544895Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4545009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4545013Z 
2025-02-24T15:52:32.4545155Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4545384Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4545505Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4545708Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4545858Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4545946Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4546051Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4546134Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4546214Z err_msg = None
2025-02-24T15:52:32.4546219Z 
2025-02-24T15:52:32.4546331Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4546414Z         if err_msg is None:
2025-02-24T15:52:32.4546512Z             if left.shape != right.shape:
2025-02-24T15:52:32.4546596Z                 raise_assert_detail(
2025-02-24T15:52:32.4546743Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4546823Z                 )
2025-02-24T15:52:32.4546894Z     
2025-02-24T15:52:32.4546973Z             diff = 0
2025-02-24T15:52:32.4547093Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4547186Z                 # count up differences
2025-02-24T15:52:32.4547355Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4547438Z                     diff += 1
2025-02-24T15:52:32.4547509Z     
2025-02-24T15:52:32.4547598Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4547734Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4547910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4548014Z E           AssertionError: Series are different
2025-02-24T15:52:32.4548093Z E           
2025-02-24T15:52:32.4548200Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4548575Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4548961Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4549343Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4549357Z 
2025-02-24T15:52:32.4549669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4549891Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T15:52:32.4549896Z 
2025-02-24T15:52:32.4550026Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4550155Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4550258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4550390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4550629Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4550818Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4550898Z err_msg = None
2025-02-24T15:52:32.4550902Z 
2025-02-24T15:52:32.4551139Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4551226Z         if err_msg is None:
2025-02-24T15:52:32.4551324Z             if left.shape != right.shape:
2025-02-24T15:52:32.4551409Z                 raise_assert_detail(
2025-02-24T15:52:32.4551556Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4551629Z                 )
2025-02-24T15:52:32.4551703Z     
2025-02-24T15:52:32.4551775Z             diff = 0
2025-02-24T15:52:32.4551890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4551979Z                 # count up differences
2025-02-24T15:52:32.4552160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4552238Z                     diff += 1
2025-02-24T15:52:32.4552311Z     
2025-02-24T15:52:32.4552404Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4552543Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4552721Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4552831Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4552906Z E           
2025-02-24T15:52:32.4553019Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4553280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4553545Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4553557Z 
2025-02-24T15:52:32.4553863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4553867Z 
2025-02-24T15:52:32.4554039Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4554043Z 
2025-02-24T15:52:32.4554264Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9aa50>
2025-02-24T15:52:32.4554465Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>, attr = 'nu'
2025-02-24T15:52:32.4554470Z 
2025-02-24T15:52:32.4554609Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4554730Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4554820Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4554897Z         try:
2025-02-24T15:52:32.4555042Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4555123Z         except KeyError:
2025-02-24T15:52:32.4555266Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4555338Z     
2025-02-24T15:52:32.4555432Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4555526Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4555621Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4555755Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4555846Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4555942Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4556054Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4556177Z 
2025-02-24T15:52:32.4556309Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4556425Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4556680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4556752Z     ???
2025-02-24T15:52:32.4556865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4556870Z 
2025-02-24T15:52:32.4556939Z >   ???
2025-02-24T15:52:32.4557075Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4557148Z E   
2025-02-24T15:52:32.4557278Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4557396Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4557471Z E          ...
2025-02-24T15:52:32.4557564Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4557696Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4557820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4557892Z E          ...
2025-02-24T15:52:32.4557983Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4558112Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4558225Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4558229Z 
2025-02-24T15:52:32.4558324Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4558578Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T15:52:32.4558583Z 
2025-02-24T15:52:32.4558715Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4558843Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4558943Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4559077Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4559210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4559311Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4559386Z err_msg = None
2025-02-24T15:52:32.4559390Z 
2025-02-24T15:52:32.4559504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4559587Z         if err_msg is None:
2025-02-24T15:52:32.4559683Z             if left.shape != right.shape:
2025-02-24T15:52:32.4559768Z                 raise_assert_detail(
2025-02-24T15:52:32.4559917Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4559988Z                 )
2025-02-24T15:52:32.4560060Z     
2025-02-24T15:52:32.4560133Z             diff = 0
2025-02-24T15:52:32.4560251Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4560345Z                 # count up differences
2025-02-24T15:52:32.4560519Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4560603Z                     diff += 1
2025-02-24T15:52:32.4560673Z     
2025-02-24T15:52:32.4560772Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4561047Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4561231Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4561343Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4561420Z E           
2025-02-24T15:52:32.4561558Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4561820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4562438Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4562613Z 
2025-02-24T15:52:32.4563056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4563063Z 
2025-02-24T15:52:32.4563241Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4563246Z 
2025-02-24T15:52:32.4563471Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9ab10>
2025-02-24T15:52:32.4563635Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4563720Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4563725Z 
2025-02-24T15:52:32.4563862Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4563988Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4564075Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4564158Z         try:
2025-02-24T15:52:32.4564301Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4564390Z         except KeyError:
2025-02-24T15:52:32.4564531Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4564601Z     
2025-02-24T15:52:32.4564692Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4564787Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4564879Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4565012Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4565105Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4565194Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4565307Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4565316Z 
2025-02-24T15:52:32.4565439Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4565558Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4565716Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4565788Z     ???
2025-02-24T15:52:32.4565901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4565906Z 
2025-02-24T15:52:32.4565978Z >   ???
2025-02-24T15:52:32.4566105Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4566174Z E   
2025-02-24T15:52:32.4566307Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4566419Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4566497Z E          ...
2025-02-24T15:52:32.4566585Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4566720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4566843Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4566915Z E          ...
2025-02-24T15:52:32.4567010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4567135Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4567245Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4567249Z 
2025-02-24T15:52:32.4567339Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4567561Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T15:52:32.4567566Z 
2025-02-24T15:52:32.4567697Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4567830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4567930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4568065Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4568290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4568475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4568556Z err_msg = None
2025-02-24T15:52:32.4568560Z 
2025-02-24T15:52:32.4568669Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4568758Z         if err_msg is None:
2025-02-24T15:52:32.4568852Z             if left.shape != right.shape:
2025-02-24T15:52:32.4568944Z                 raise_assert_detail(
2025-02-24T15:52:32.4569091Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4569164Z                 )
2025-02-24T15:52:32.4569241Z     
2025-02-24T15:52:32.4569314Z             diff = 0
2025-02-24T15:52:32.4569428Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4569516Z                 # count up differences
2025-02-24T15:52:32.4569693Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4569771Z                     diff += 1
2025-02-24T15:52:32.4569851Z     
2025-02-24T15:52:32.4569940Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4570080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4570253Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4570366Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4570444Z E           
2025-02-24T15:52:32.4570558Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4570822Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4571211Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4571227Z 
2025-02-24T15:52:32.4571540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4571545Z 
2025-02-24T15:52:32.4571717Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4571721Z 
2025-02-24T15:52:32.4571944Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9abd0>
2025-02-24T15:52:32.4572149Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>, attr = 'f_lu'
2025-02-24T15:52:32.4572153Z 
2025-02-24T15:52:32.4572289Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4572413Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4572500Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4572577Z         try:
2025-02-24T15:52:32.4572722Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4572804Z         except KeyError:
2025-02-24T15:52:32.4572946Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4573016Z     
2025-02-24T15:52:32.4573107Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4573201Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4573294Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4573425Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4573515Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4573612Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4573723Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4573850Z 
2025-02-24T15:52:32.4573984Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4574096Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4574347Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4574420Z     ???
2025-02-24T15:52:32.4574535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4574540Z 
2025-02-24T15:52:32.4574608Z >   ???
2025-02-24T15:52:32.4574737Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4574811Z E   
2025-02-24T15:52:32.4574939Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4575055Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4575127Z E          ...
2025-02-24T15:52:32.4575223Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4575351Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4575473Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4575545Z E          ...
2025-02-24T15:52:32.4575633Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4575764Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4575880Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4575884Z 
2025-02-24T15:52:32.4575980Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4576224Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T15:52:32.4576229Z 
2025-02-24T15:52:32.4576363Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4576500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4576605Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4576736Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4576868Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4576970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4577050Z err_msg = None
2025-02-24T15:52:32.4577053Z 
2025-02-24T15:52:32.4577167Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4577249Z         if err_msg is None:
2025-02-24T15:52:32.4577351Z             if left.shape != right.shape:
2025-02-24T15:52:32.4577436Z                 raise_assert_detail(
2025-02-24T15:52:32.4577580Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4577652Z                 )
2025-02-24T15:52:32.4577726Z     
2025-02-24T15:52:32.4577801Z             diff = 0
2025-02-24T15:52:32.4577918Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4578007Z                 # count up differences
2025-02-24T15:52:32.4578187Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4578272Z                     diff += 1
2025-02-24T15:52:32.4578347Z     
2025-02-24T15:52:32.4578441Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4578577Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4578752Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4578863Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4578940Z E           
2025-02-24T15:52:32.4579053Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4579319Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4579692Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4579771Z 
2025-02-24T15:52:32.4580079Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4580084Z 
2025-02-24T15:52:32.4580257Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4580262Z 
2025-02-24T15:52:32.4580486Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9b350>
2025-02-24T15:52:32.4580649Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4580792Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4580802Z 
2025-02-24T15:52:32.4581164Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4581373Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4581532Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4581664Z         try:
2025-02-24T15:52:32.4581903Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4582047Z         except KeyError:
2025-02-24T15:52:32.4582276Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4582401Z     
2025-02-24T15:52:32.4582553Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4582703Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4582801Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4582937Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4583028Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4583119Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4583235Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4583314Z             else:
2025-02-24T15:52:32.4583414Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4583528Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4583537Z 
2025-02-24T15:52:32.4583663Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4583780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4583925Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4584000Z     ???
2025-02-24T15:52:32.4584111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4584116Z 
2025-02-24T15:52:32.4584193Z >   ???
2025-02-24T15:52:32.4584319Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4584394Z E   
2025-02-24T15:52:32.4584523Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4584640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4584720Z E          ...
2025-02-24T15:52:32.4584809Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4584951Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4585066Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4585141Z E          ...
2025-02-24T15:52:32.4585228Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4585357Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4585461Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4585465Z 
2025-02-24T15:52:32.4585561Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4585805Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T15:52:32.4585815Z 
2025-02-24T15:52:32.4585942Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4586215Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4586309Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4586550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4586675Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4586774Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4586850Z err_msg = None
2025-02-24T15:52:32.4586854Z 
2025-02-24T15:52:32.4586968Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4587053Z         if err_msg is None:
2025-02-24T15:52:32.4587150Z             if left.shape != right.shape:
2025-02-24T15:52:32.4587240Z                 raise_assert_detail(
2025-02-24T15:52:32.4587383Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4587460Z                 )
2025-02-24T15:52:32.4587535Z     
2025-02-24T15:52:32.4587613Z             diff = 0
2025-02-24T15:52:32.4587724Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4587822Z                 # count up differences
2025-02-24T15:52:32.4587993Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4588078Z                     diff += 1
2025-02-24T15:52:32.4588148Z     
2025-02-24T15:52:32.4588243Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4588383Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4588554Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4588669Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4588742Z E           
2025-02-24T15:52:32.4588859Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4589126Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4589402Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4589407Z 
2025-02-24T15:52:32.4589719Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4589724Z 
2025-02-24T15:52:32.4589896Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4589900Z 
2025-02-24T15:52:32.4590125Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9b410>
2025-02-24T15:52:32.4590296Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4590381Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4590390Z 
2025-02-24T15:52:32.4590529Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4590655Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4590745Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4590816Z         try:
2025-02-24T15:52:32.4591105Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4591192Z         except KeyError:
2025-02-24T15:52:32.4591336Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4591406Z     
2025-02-24T15:52:32.4591502Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4591596Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4591690Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4591827Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4592038Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4592134Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4592434Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4592513Z             else:
2025-02-24T15:52:32.4592607Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4592720Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4592724Z 
2025-02-24T15:52:32.4592851Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4592968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4593118Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4593189Z     ???
2025-02-24T15:52:32.4593304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4593309Z 
2025-02-24T15:52:32.4593377Z >   ???
2025-02-24T15:52:32.4593514Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4593583Z E   
2025-02-24T15:52:32.4593717Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4593836Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4593915Z E          ...
2025-02-24T15:52:32.4594002Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4594135Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4594251Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4594324Z E          ...
2025-02-24T15:52:32.4594414Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4594539Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4594647Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4594651Z 
2025-02-24T15:52:32.4594741Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4594996Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T15:52:32.4595010Z 
2025-02-24T15:52:32.4595151Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4595286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4595385Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4595518Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4595644Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4595739Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4595818Z err_msg = None
2025-02-24T15:52:32.4595823Z 
2025-02-24T15:52:32.4595931Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4596017Z         if err_msg is None:
2025-02-24T15:52:32.4596118Z             if left.shape != right.shape:
2025-02-24T15:52:32.4596212Z                 raise_assert_detail(
2025-02-24T15:52:32.4596364Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4596479Z                 )
2025-02-24T15:52:32.4596563Z     
2025-02-24T15:52:32.4596637Z             diff = 0
2025-02-24T15:52:32.4596754Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4596843Z                 # count up differences
2025-02-24T15:52:32.4597015Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4597095Z                     diff += 1
2025-02-24T15:52:32.4597169Z     
2025-02-24T15:52:32.4597259Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4597402Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4597571Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4597690Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4597858Z E           
2025-02-24T15:52:32.4597971Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4598315Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4598577Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4598588Z 
2025-02-24T15:52:32.4598900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4598909Z 
2025-02-24T15:52:32.4599102Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4599114Z 
2025-02-24T15:52:32.4599524Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9b590>
2025-02-24T15:52:32.4599829Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4599935Z attr = 'j_blues'
2025-02-24T15:52:32.4599941Z 
2025-02-24T15:52:32.4600085Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4600205Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4600291Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4600368Z         try:
2025-02-24T15:52:32.4600508Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4600595Z         except KeyError:
2025-02-24T15:52:32.4600735Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4600810Z     
2025-02-24T15:52:32.4601029Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4601133Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4601222Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4601369Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4601457Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4601552Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4601667Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4601740Z             else:
2025-02-24T15:52:32.4601840Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4601948Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4601953Z 
2025-02-24T15:52:32.4602083Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4602195Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4602344Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4602420Z     ???
2025-02-24T15:52:32.4602534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4602543Z 
2025-02-24T15:52:32.4602617Z >   ???
2025-02-24T15:52:32.4602744Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4602819Z E   
2025-02-24T15:52:32.4602947Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4603066Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4603140Z E          ...
2025-02-24T15:52:32.4603233Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4603364Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4603483Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4603556Z E          ...
2025-02-24T15:52:32.4603649Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4603778Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4604024Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4604029Z 
2025-02-24T15:52:32.4604123Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4604451Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T15:52:32.4604456Z 
2025-02-24T15:52:32.4604588Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4604717Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4604817Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4604950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4605078Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4605174Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4605258Z err_msg = None
2025-02-24T15:52:32.4605262Z 
2025-02-24T15:52:32.4605376Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4605459Z         if err_msg is None:
2025-02-24T15:52:32.4605562Z             if left.shape != right.shape:
2025-02-24T15:52:32.4605649Z                 raise_assert_detail(
2025-02-24T15:52:32.4605796Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4605868Z                 )
2025-02-24T15:52:32.4605941Z     
2025-02-24T15:52:32.4606014Z             diff = 0
2025-02-24T15:52:32.4606126Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4606218Z                 # count up differences
2025-02-24T15:52:32.4606387Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4606468Z                     diff += 1
2025-02-24T15:52:32.4606539Z     
2025-02-24T15:52:32.4606631Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4606770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4606944Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4607061Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4607137Z E           
2025-02-24T15:52:32.4607250Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4607513Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4607778Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4607788Z 
2025-02-24T15:52:32.4608092Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4608106Z 
2025-02-24T15:52:32.4608275Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4608280Z 
2025-02-24T15:52:32.4608509Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc350>
2025-02-24T15:52:32.4608673Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4608753Z attr = 'lines'
2025-02-24T15:52:32.4608757Z 
2025-02-24T15:52:32.4608894Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4609013Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4609099Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4609178Z         try:
2025-02-24T15:52:32.4609317Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4609496Z         except KeyError:
2025-02-24T15:52:32.4609642Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4609787Z     
2025-02-24T15:52:32.4609880Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4609975Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4610072Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4610206Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4610297Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4610388Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4610507Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4610580Z             else:
2025-02-24T15:52:32.4610681Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4610795Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4610799Z 
2025-02-24T15:52:32.4611019Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4611146Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4611290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4611373Z     ???
2025-02-24T15:52:32.4611485Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4611489Z 
2025-02-24T15:52:32.4611565Z >   ???
2025-02-24T15:52:32.4611691Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4611765Z E   
2025-02-24T15:52:32.4611898Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4612008Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4612084Z E          ...
2025-02-24T15:52:32.4612171Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4612302Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4612416Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4612497Z E          ...
2025-02-24T15:52:32.4612583Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4612708Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4612816Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4612820Z 
2025-02-24T15:52:32.4612913Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4613169Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T15:52:32.4613175Z 
2025-02-24T15:52:32.4613396Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc410>
2025-02-24T15:52:32.4613565Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4613654Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4613659Z 
2025-02-24T15:52:32.4613800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4613912Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4614006Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4614078Z         try:
2025-02-24T15:52:32.4614224Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4614315Z         except KeyError:
2025-02-24T15:52:32.4614449Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4614524Z     
2025-02-24T15:52:32.4614612Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4614709Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4614797Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4614933Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4615019Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4615112Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4615221Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4615225Z 
2025-02-24T15:52:32.4615355Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4615620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4615625Z 
2025-02-24T15:52:32.4615763Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4615954Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4616063Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4616149Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4616293Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4616380Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4616486Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4616569Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4616649Z err_msg = None
2025-02-24T15:52:32.4616653Z 
2025-02-24T15:52:32.4616760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4616849Z         if err_msg is None:
2025-02-24T15:52:32.4616943Z             if left.shape != right.shape:
2025-02-24T15:52:32.4617037Z                 raise_assert_detail(
2025-02-24T15:52:32.4617188Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4617266Z                 )
2025-02-24T15:52:32.4617336Z     
2025-02-24T15:52:32.4617420Z             diff = 0
2025-02-24T15:52:32.4617534Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4617629Z                 # count up differences
2025-02-24T15:52:32.4617810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4617928Z                     diff += 1
2025-02-24T15:52:32.4618071Z     
2025-02-24T15:52:32.4618227Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4618466Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4618760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4618951Z E           AssertionError: Series are different
2025-02-24T15:52:32.4619072Z E           
2025-02-24T15:52:32.4619259Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4619693Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4620038Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4620384Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4620395Z 
2025-02-24T15:52:32.4620710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4621088Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T15:52:32.4621094Z 
2025-02-24T15:52:32.4621325Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc4d0>
2025-02-24T15:52:32.4621489Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4621727Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4621732Z 
2025-02-24T15:52:32.4621874Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4622098Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4622189Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4622262Z         try:
2025-02-24T15:52:32.4622412Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4622496Z         except KeyError:
2025-02-24T15:52:32.4622639Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4622709Z     
2025-02-24T15:52:32.4622804Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4622901Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4622995Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4623129Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4623221Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4623327Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4623438Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4623443Z 
2025-02-24T15:52:32.4623578Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4631074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4631087Z 
2025-02-24T15:52:32.4631259Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4631352Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4631474Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4631560Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4631714Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4631801Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4631915Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4632006Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4632091Z err_msg = None
2025-02-24T15:52:32.4632096Z 
2025-02-24T15:52:32.4632230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4632316Z         if err_msg is None:
2025-02-24T15:52:32.4632423Z             if left.shape != right.shape:
2025-02-24T15:52:32.4632513Z                 raise_assert_detail(
2025-02-24T15:52:32.4632681Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4632756Z                 )
2025-02-24T15:52:32.4632834Z     
2025-02-24T15:52:32.4632910Z             diff = 0
2025-02-24T15:52:32.4633033Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4633126Z                 # count up differences
2025-02-24T15:52:32.4633311Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4633400Z                     diff += 1
2025-02-24T15:52:32.4633476Z     
2025-02-24T15:52:32.4633576Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4633719Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4633904Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4634012Z E           AssertionError: Series are different
2025-02-24T15:52:32.4634090Z E           
2025-02-24T15:52:32.4634197Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4634580Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4634972Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4635622Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4635634Z 
2025-02-24T15:52:32.4635954Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4636185Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T15:52:32.4636190Z 
2025-02-24T15:52:32.4636321Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4636474Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4636620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4636875Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4637108Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4637288Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4637433Z err_msg = None
2025-02-24T15:52:32.4637440Z 
2025-02-24T15:52:32.4637627Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4637779Z         if err_msg is None:
2025-02-24T15:52:32.4637948Z             if left.shape != right.shape:
2025-02-24T15:52:32.4638099Z                 raise_assert_detail(
2025-02-24T15:52:32.4638327Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4638415Z                 )
2025-02-24T15:52:32.4638488Z     
2025-02-24T15:52:32.4638569Z             diff = 0
2025-02-24T15:52:32.4638688Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4638778Z                 # count up differences
2025-02-24T15:52:32.4638954Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4639038Z                     diff += 1
2025-02-24T15:52:32.4639114Z     
2025-02-24T15:52:32.4639203Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4639347Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4639517Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4639640Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4639713Z E           
2025-02-24T15:52:32.4639833Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4640105Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4640368Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4640374Z 
2025-02-24T15:52:32.4640691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4640799Z 
2025-02-24T15:52:32.4641126Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4641250Z 
2025-02-24T15:52:32.4641483Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc710>
2025-02-24T15:52:32.4641690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>, attr = 'nu'
2025-02-24T15:52:32.4641695Z 
2025-02-24T15:52:32.4641834Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4641959Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4642047Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4642127Z         try:
2025-02-24T15:52:32.4642270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4642362Z         except KeyError:
2025-02-24T15:52:32.4642508Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4642581Z     
2025-02-24T15:52:32.4642681Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4642776Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4642870Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4643008Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4643096Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4643197Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4643309Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4643313Z 
2025-02-24T15:52:32.4643444Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4643559Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4643717Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4643795Z     ???
2025-02-24T15:52:32.4643906Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4643911Z 
2025-02-24T15:52:32.4643989Z >   ???
2025-02-24T15:52:32.4644117Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4644191Z E   
2025-02-24T15:52:32.4644320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4644445Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4644518Z E          ...
2025-02-24T15:52:32.4644612Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4644743Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4644862Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4644939Z E          ...
2025-02-24T15:52:32.4645025Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4645156Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4645264Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4645269Z 
2025-02-24T15:52:32.4645363Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4645595Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T15:52:32.4645601Z 
2025-02-24T15:52:32.4645735Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4645869Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4645972Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4646109Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4646236Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4646334Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4646411Z err_msg = None
2025-02-24T15:52:32.4646415Z 
2025-02-24T15:52:32.4646533Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4646617Z         if err_msg is None:
2025-02-24T15:52:32.4646859Z             if left.shape != right.shape:
2025-02-24T15:52:32.4646946Z                 raise_assert_detail(
2025-02-24T15:52:32.4647103Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4647253Z                 )
2025-02-24T15:52:32.4647322Z     
2025-02-24T15:52:32.4647399Z             diff = 0
2025-02-24T15:52:32.4647509Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4647603Z                 # count up differences
2025-02-24T15:52:32.4647774Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4647859Z                     diff += 1
2025-02-24T15:52:32.4647929Z     
2025-02-24T15:52:32.4648025Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4648161Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4648335Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4648460Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4648533Z E           
2025-02-24T15:52:32.4648653Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4648923Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4649192Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4649198Z 
2025-02-24T15:52:32.4649517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4649527Z 
2025-02-24T15:52:32.4649888Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4649909Z 
2025-02-24T15:52:32.4650182Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc7d0>
2025-02-24T15:52:32.4650354Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4650441Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4650446Z 
2025-02-24T15:52:32.4650586Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4650709Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4650800Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4650873Z         try:
2025-02-24T15:52:32.4651132Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4651217Z         except KeyError:
2025-02-24T15:52:32.4651361Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4651440Z     
2025-02-24T15:52:32.4651533Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4651627Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4651721Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4651858Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4651952Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4652047Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4652160Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4652165Z 
2025-02-24T15:52:32.4652293Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4652408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4652566Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4652638Z     ???
2025-02-24T15:52:32.4652754Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4652888Z 
2025-02-24T15:52:32.4652960Z >   ???
2025-02-24T15:52:32.4653099Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4653173Z E   
2025-02-24T15:52:32.4653409Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4653531Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4653604Z E          ...
2025-02-24T15:52:32.4653698Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4653828Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4653946Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4654019Z E          ...
2025-02-24T15:52:32.4654110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4654234Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4654346Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4654351Z 
2025-02-24T15:52:32.4654446Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4654656Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T15:52:32.4654661Z 
2025-02-24T15:52:32.4654792Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4654926Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4655025Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4655161Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4655357Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4655526Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4655666Z err_msg = None
2025-02-24T15:52:32.4655674Z 
2025-02-24T15:52:32.4655871Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4656020Z         if err_msg is None:
2025-02-24T15:52:32.4656150Z             if left.shape != right.shape:
2025-02-24T15:52:32.4656237Z                 raise_assert_detail(
2025-02-24T15:52:32.4656391Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4656469Z                 )
2025-02-24T15:52:32.4656547Z     
2025-02-24T15:52:32.4656621Z             diff = 0
2025-02-24T15:52:32.4656743Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4656834Z                 # count up differences
2025-02-24T15:52:32.4657009Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4657093Z                     diff += 1
2025-02-24T15:52:32.4657164Z     
2025-02-24T15:52:32.4657260Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4657400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4657575Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4657691Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4657768Z E           
2025-02-24T15:52:32.4657881Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4658153Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4658419Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4658425Z 
2025-02-24T15:52:32.4658740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4658841Z 
2025-02-24T15:52:32.4659020Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4659099Z 
2025-02-24T15:52:32.4659332Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc890>
2025-02-24T15:52:32.4659533Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>, attr = 'f_lu'
2025-02-24T15:52:32.4659538Z 
2025-02-24T15:52:32.4659679Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4659794Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4659886Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4659960Z         try:
2025-02-24T15:52:32.4660106Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4660190Z         except KeyError:
2025-02-24T15:52:32.4660333Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4660413Z     
2025-02-24T15:52:32.4660502Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4660602Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4660693Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4660836Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4661036Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4661135Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4661247Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4661252Z 
2025-02-24T15:52:32.4661381Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4661518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4661673Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4661750Z     ???
2025-02-24T15:52:32.4661859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4661863Z 
2025-02-24T15:52:32.4661945Z >   ???
2025-02-24T15:52:32.4662071Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4662147Z E   
2025-02-24T15:52:32.4662276Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4662399Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4662472Z E          ...
2025-02-24T15:52:32.4662565Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4662694Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4662814Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4662890Z E          ...
2025-02-24T15:52:32.4662977Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4663107Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4663213Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4663218Z 
2025-02-24T15:52:32.4663311Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4663530Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T15:52:32.4663535Z 
2025-02-24T15:52:32.4663668Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4663801Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4663902Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4664038Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4664164Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4664264Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4664340Z err_msg = None
2025-02-24T15:52:32.4664344Z 
2025-02-24T15:52:32.4664458Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4664540Z         if err_msg is None:
2025-02-24T15:52:32.4664767Z             if left.shape != right.shape:
2025-02-24T15:52:32.4664854Z                 raise_assert_detail(
2025-02-24T15:52:32.4665001Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4665198Z                 )
2025-02-24T15:52:32.4665268Z     
2025-02-24T15:52:32.4665344Z             diff = 0
2025-02-24T15:52:32.4665453Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4665547Z                 # count up differences
2025-02-24T15:52:32.4665716Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4665799Z                     diff += 1
2025-02-24T15:52:32.4665869Z     
2025-02-24T15:52:32.4665963Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4666099Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4666275Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4666395Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4666467Z E           
2025-02-24T15:52:32.4666584Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4666850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4667116Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4667122Z 
2025-02-24T15:52:32.4667430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4667439Z 
2025-02-24T15:52:32.4667607Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4667616Z 
2025-02-24T15:52:32.4667846Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbd010>
2025-02-24T15:52:32.4668011Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4668104Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4668109Z 
2025-02-24T15:52:32.4668244Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4668365Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4668452Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4668529Z         try:
2025-02-24T15:52:32.4668668Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4668755Z         except KeyError:
2025-02-24T15:52:32.4668893Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4668972Z     
2025-02-24T15:52:32.4669069Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4669164Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4669262Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4669393Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4669485Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4669576Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4669692Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4669765Z             else:
2025-02-24T15:52:32.4669866Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4669975Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4669979Z 
2025-02-24T15:52:32.4670109Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4670228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4670373Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4670563Z     ???
2025-02-24T15:52:32.4670676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4670753Z 
2025-02-24T15:52:32.4670827Z >   ???
2025-02-24T15:52:32.4671050Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4671126Z E   
2025-02-24T15:52:32.4671252Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4671369Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4671441Z E          ...
2025-02-24T15:52:32.4671533Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4671667Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4671780Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4671857Z E          ...
2025-02-24T15:52:32.4671944Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4672073Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4672184Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4672188Z 
2025-02-24T15:52:32.4672285Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4672491Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T15:52:32.4672498Z 
2025-02-24T15:52:32.4672623Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4672828Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4672996Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4673238Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4673452Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4673617Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4673753Z err_msg = None
2025-02-24T15:52:32.4673760Z 
2025-02-24T15:52:32.4673949Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4674097Z         if err_msg is None:
2025-02-24T15:52:32.4674255Z             if left.shape != right.shape:
2025-02-24T15:52:32.4674352Z                 raise_assert_detail(
2025-02-24T15:52:32.4674498Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4674575Z                 )
2025-02-24T15:52:32.4674645Z     
2025-02-24T15:52:32.4674724Z             diff = 0
2025-02-24T15:52:32.4674835Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4674932Z                 # count up differences
2025-02-24T15:52:32.4675100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4675182Z                     diff += 1
2025-02-24T15:52:32.4675251Z     
2025-02-24T15:52:32.4675345Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4675490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4675660Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4675782Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4675854Z E           
2025-02-24T15:52:32.4675971Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4676231Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4676497Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4676645Z 
2025-02-24T15:52:32.4676964Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4677071Z 
2025-02-24T15:52:32.4677244Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4677249Z 
2025-02-24T15:52:32.4677473Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbd250>
2025-02-24T15:52:32.4677637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4677718Z attr = 'j_blues'
2025-02-24T15:52:32.4677722Z 
2025-02-24T15:52:32.4677860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4677974Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4678066Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4678137Z         try:
2025-02-24T15:52:32.4678285Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4678366Z         except KeyError:
2025-02-24T15:52:32.4678508Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4678584Z     
2025-02-24T15:52:32.4678678Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4678772Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4678866Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4679002Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4679091Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4679185Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4679295Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4679374Z             else:
2025-02-24T15:52:32.4679470Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4679580Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4679589Z 
2025-02-24T15:52:32.4679713Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4679831Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4679981Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4680059Z     ???
2025-02-24T15:52:32.4680174Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4680179Z 
2025-02-24T15:52:32.4680249Z >   ???
2025-02-24T15:52:32.4680378Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4680449Z E   
2025-02-24T15:52:32.4680591Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4680712Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4680790Z E          ...
2025-02-24T15:52:32.4680880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4681182Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4681304Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4681391Z E          ...
2025-02-24T15:52:32.4681496Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4681625Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4681737Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4681741Z 
2025-02-24T15:52:32.4681830Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4682043Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T15:52:32.4682047Z 
2025-02-24T15:52:32.4682177Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4682309Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4682407Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4682540Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4682790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4682987Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4683068Z err_msg = None
2025-02-24T15:52:32.4683072Z 
2025-02-24T15:52:32.4683179Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4683266Z         if err_msg is None:
2025-02-24T15:52:32.4683359Z             if left.shape != right.shape:
2025-02-24T15:52:32.4683450Z                 raise_assert_detail(
2025-02-24T15:52:32.4683593Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4683668Z                 )
2025-02-24T15:52:32.4683743Z     
2025-02-24T15:52:32.4683816Z             diff = 0
2025-02-24T15:52:32.4683930Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4684019Z                 # count up differences
2025-02-24T15:52:32.4684191Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4684278Z                     diff += 1
2025-02-24T15:52:32.4684351Z     
2025-02-24T15:52:32.4684447Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4684587Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4684759Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4684875Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4684952Z E           
2025-02-24T15:52:32.4685064Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4685326Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4685593Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4685609Z 
2025-02-24T15:52:32.4685915Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4685919Z 
2025-02-24T15:52:32.4686093Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4686098Z 
2025-02-24T15:52:32.4686317Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbdfd0>
2025-02-24T15:52:32.4686484Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4686560Z attr = 'lines'
2025-02-24T15:52:32.4686564Z 
2025-02-24T15:52:32.4686704Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4686825Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4686915Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4686993Z         try:
2025-02-24T15:52:32.4687131Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4687216Z         except KeyError:
2025-02-24T15:52:32.4687353Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4687426Z     
2025-02-24T15:52:32.4687513Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4687610Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4687698Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4687833Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4687919Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4688015Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4688129Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4688289Z             else:
2025-02-24T15:52:32.4688387Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4688495Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4688595Z 
2025-02-24T15:52:32.4688724Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4688836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4688984Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4689055Z     ???
2025-02-24T15:52:32.4689171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4689176Z 
2025-02-24T15:52:32.4689249Z >   ???
2025-02-24T15:52:32.4689375Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4689448Z E   
2025-02-24T15:52:32.4689575Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4689692Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4689769Z E          ...
2025-02-24T15:52:32.4689865Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4689993Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4690118Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4690191Z E          ...
2025-02-24T15:52:32.4690278Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4690410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4690517Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4690521Z 
2025-02-24T15:52:32.4690615Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4690877Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T15:52:32.4690882Z 
2025-02-24T15:52:32.4691205Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe090>
2025-02-24T15:52:32.4691371Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4691471Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4691475Z 
2025-02-24T15:52:32.4691680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4691907Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4692060Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4692187Z         try:
2025-02-24T15:52:32.4692434Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4692571Z         except KeyError:
2025-02-24T15:52:32.4692813Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4692933Z     
2025-02-24T15:52:32.4693086Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4693184Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4693279Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4693412Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4693502Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4693596Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4693710Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4693717Z 
2025-02-24T15:52:32.4693846Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4693958Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4693963Z 
2025-02-24T15:52:32.4694102Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4694186Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4694298Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4694381Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4694523Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4694610Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4694714Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4694940Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4695017Z err_msg = None
2025-02-24T15:52:32.4695121Z 
2025-02-24T15:52:32.4695238Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4695324Z         if err_msg is None:
2025-02-24T15:52:32.4695422Z             if left.shape != right.shape:
2025-02-24T15:52:32.4695511Z                 raise_assert_detail(
2025-02-24T15:52:32.4695658Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4695730Z                 )
2025-02-24T15:52:32.4695804Z     
2025-02-24T15:52:32.4695881Z             diff = 0
2025-02-24T15:52:32.4695993Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4696085Z                 # count up differences
2025-02-24T15:52:32.4696254Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4696337Z                     diff += 1
2025-02-24T15:52:32.4696410Z     
2025-02-24T15:52:32.4696503Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4696637Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4696816Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4696921Z E           AssertionError: Series are different
2025-02-24T15:52:32.4696998Z E           
2025-02-24T15:52:32.4697101Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4697471Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4697807Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4698148Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4698158Z 
2025-02-24T15:52:32.4698471Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4698982Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T15:52:32.4698991Z 
2025-02-24T15:52:32.4699214Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe150>
2025-02-24T15:52:32.4699386Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4699481Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4699486Z 
2025-02-24T15:52:32.4699622Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4699742Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4699829Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4699904Z         try:
2025-02-24T15:52:32.4700046Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4700132Z         except KeyError:
2025-02-24T15:52:32.4700268Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4700342Z     
2025-02-24T15:52:32.4700429Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4700527Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4700726Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4700858Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4701192Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4701285Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4701402Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4701406Z 
2025-02-24T15:52:32.4701530Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4701647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4701652Z 
2025-02-24T15:52:32.4701788Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4701878Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4701991Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4702073Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4702225Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4702308Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4702424Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4702505Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4702586Z err_msg = None
2025-02-24T15:52:32.4702590Z 
2025-02-24T15:52:32.4702698Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4702787Z         if err_msg is None:
2025-02-24T15:52:32.4702885Z             if left.shape != right.shape:
2025-02-24T15:52:32.4702970Z                 raise_assert_detail(
2025-02-24T15:52:32.4703116Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4703188Z                 )
2025-02-24T15:52:32.4703260Z     
2025-02-24T15:52:32.4703333Z             diff = 0
2025-02-24T15:52:32.4703448Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4703543Z                 # count up differences
2025-02-24T15:52:32.4703719Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4703804Z                     diff += 1
2025-02-24T15:52:32.4703878Z     
2025-02-24T15:52:32.4703965Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4704104Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4704277Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4704380Z E           AssertionError: Series are different
2025-02-24T15:52:32.4704456Z E           
2025-02-24T15:52:32.4704559Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4704930Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4705312Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4705692Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4705814Z 
2025-02-24T15:52:32.4706130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4706431Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T15:52:32.4706436Z 
2025-02-24T15:52:32.4706562Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4706692Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4706790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4706928Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4707050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4707150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4707235Z err_msg = None
2025-02-24T15:52:32.4707239Z 
2025-02-24T15:52:32.4707345Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4707436Z         if err_msg is None:
2025-02-24T15:52:32.4707528Z             if left.shape != right.shape:
2025-02-24T15:52:32.4707616Z                 raise_assert_detail(
2025-02-24T15:52:32.4707756Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4707829Z                 )
2025-02-24T15:52:32.4707898Z     
2025-02-24T15:52:32.4707974Z             diff = 0
2025-02-24T15:52:32.4708084Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4708174Z                 # count up differences
2025-02-24T15:52:32.4708345Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4708424Z                     diff += 1
2025-02-24T15:52:32.4708498Z     
2025-02-24T15:52:32.4708590Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4708728Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4708896Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4709017Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4709089Z E           
2025-02-24T15:52:32.4709205Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4709467Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4709733Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4709746Z 
2025-02-24T15:52:32.4710226Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4710236Z 
2025-02-24T15:52:32.4710530Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4710543Z 
2025-02-24T15:52:32.4711063Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe390>
2025-02-24T15:52:32.4711352Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>, attr = 'nu'
2025-02-24T15:52:32.4711359Z 
2025-02-24T15:52:32.4711499Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4711620Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4711708Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4711787Z         try:
2025-02-24T15:52:32.4712094Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4712181Z         except KeyError:
2025-02-24T15:52:32.4712321Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4712503Z     
2025-02-24T15:52:32.4712599Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4712695Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4712792Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4712927Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4713019Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4713108Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4713226Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4713231Z 
2025-02-24T15:52:32.4713357Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4713475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4713629Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4713706Z     ???
2025-02-24T15:52:32.4713822Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4713833Z 
2025-02-24T15:52:32.4713902Z >   ???
2025-02-24T15:52:32.4714036Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4714106Z E   
2025-02-24T15:52:32.4714241Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4714355Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4714434Z E          ...
2025-02-24T15:52:32.4714523Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4714658Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4714772Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4714851Z E          ...
2025-02-24T15:52:32.4714943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4715076Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4715185Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4715194Z 
2025-02-24T15:52:32.4715283Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4715512Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T15:52:32.4715516Z 
2025-02-24T15:52:32.4715642Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4715775Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4715876Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4716008Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4716135Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4716228Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4716314Z err_msg = None
2025-02-24T15:52:32.4716318Z 
2025-02-24T15:52:32.4716426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4716520Z         if err_msg is None:
2025-02-24T15:52:32.4716616Z             if left.shape != right.shape:
2025-02-24T15:52:32.4716708Z                 raise_assert_detail(
2025-02-24T15:52:32.4716859Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4716933Z                 )
2025-02-24T15:52:32.4717009Z     
2025-02-24T15:52:32.4717083Z             diff = 0
2025-02-24T15:52:32.4717201Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4717290Z                 # count up differences
2025-02-24T15:52:32.4717464Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4717545Z                     diff += 1
2025-02-24T15:52:32.4717618Z     
2025-02-24T15:52:32.4717707Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4717942Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4718112Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4718307Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4718383Z E           
2025-02-24T15:52:32.4718494Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4718762Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4719024Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4719039Z 
2025-02-24T15:52:32.4719348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4719353Z 
2025-02-24T15:52:32.4719526Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4719531Z 
2025-02-24T15:52:32.4719757Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe450>
2025-02-24T15:52:32.4719925Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4720012Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4720017Z 
2025-02-24T15:52:32.4720171Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4720294Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4720379Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4720459Z         try:
2025-02-24T15:52:32.4720600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4720686Z         except KeyError:
2025-02-24T15:52:32.4720831Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4720902Z     
2025-02-24T15:52:32.4721122Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4721220Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4721308Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4721442Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4721529Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4721624Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4721740Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4721744Z 
2025-02-24T15:52:32.4721869Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4721991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4722143Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4722220Z     ???
2025-02-24T15:52:32.4722333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4722342Z 
2025-02-24T15:52:32.4722416Z >   ???
2025-02-24T15:52:32.4722540Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4722613Z E   
2025-02-24T15:52:32.4722747Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4722868Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4722945Z E          ...
2025-02-24T15:52:32.4723033Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4723167Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4723281Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4723358Z E          ...
2025-02-24T15:52:32.4723444Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4723700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4723806Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4723913Z 
2025-02-24T15:52:32.4724009Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4724224Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T15:52:32.4724229Z 
2025-02-24T15:52:32.4724357Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4724487Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4724583Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4724722Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4724845Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4724950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4725033Z err_msg = None
2025-02-24T15:52:32.4725037Z 
2025-02-24T15:52:32.4725144Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4725236Z         if err_msg is None:
2025-02-24T15:52:32.4725330Z             if left.shape != right.shape:
2025-02-24T15:52:32.4725419Z                 raise_assert_detail(
2025-02-24T15:52:32.4725561Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4725637Z                 )
2025-02-24T15:52:32.4725708Z     
2025-02-24T15:52:32.4725786Z             diff = 0
2025-02-24T15:52:32.4725895Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4725989Z                 # count up differences
2025-02-24T15:52:32.4726158Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4726243Z                     diff += 1
2025-02-24T15:52:32.4726317Z     
2025-02-24T15:52:32.4726410Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4726552Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4726727Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4726843Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4726916Z E           
2025-02-24T15:52:32.4727032Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4727294Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4727561Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4727575Z 
2025-02-24T15:52:32.4727883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4727889Z 
2025-02-24T15:52:32.4728056Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4728061Z 
2025-02-24T15:52:32.4728285Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe510>
2025-02-24T15:52:32.4728491Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>, attr = 'f_lu'
2025-02-24T15:52:32.4728495Z 
2025-02-24T15:52:32.4728631Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4728752Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4728838Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4728977Z         try:
2025-02-24T15:52:32.4729394Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4729548Z         except KeyError:
2025-02-24T15:52:32.4729789Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4730023Z     
2025-02-24T15:52:32.4730174Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4730344Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4730473Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4730609Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4730700Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4730791Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4731004Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4731009Z 
2025-02-24T15:52:32.4731143Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4731264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4731418Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4731494Z     ???
2025-02-24T15:52:32.4731608Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4731618Z 
2025-02-24T15:52:32.4731687Z >   ???
2025-02-24T15:52:32.4731818Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4731886Z E   
2025-02-24T15:52:32.4732020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4732134Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4732213Z E          ...
2025-02-24T15:52:32.4732301Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4732436Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4732553Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4732631Z E          ...
2025-02-24T15:52:32.4732722Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4732850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4732961Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4732969Z 
2025-02-24T15:52:32.4733059Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4733288Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T15:52:32.4733293Z 
2025-02-24T15:52:32.4733422Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4733557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4733656Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4733794Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4733926Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4734027Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4734107Z err_msg = None
2025-02-24T15:52:32.4734111Z 
2025-02-24T15:52:32.4734221Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4734316Z         if err_msg is None:
2025-02-24T15:52:32.4734411Z             if left.shape != right.shape:
2025-02-24T15:52:32.4734504Z                 raise_assert_detail(
2025-02-24T15:52:32.4734647Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4734724Z                 )
2025-02-24T15:52:32.4734799Z     
2025-02-24T15:52:32.4734872Z             diff = 0
2025-02-24T15:52:32.4734990Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4735078Z                 # count up differences
2025-02-24T15:52:32.4735255Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4735335Z                     diff += 1
2025-02-24T15:52:32.4735413Z     
2025-02-24T15:52:32.4735655Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4735798Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4736071Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4736189Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4736266Z E           
2025-02-24T15:52:32.4736378Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4736641Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4736904Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4736920Z 
2025-02-24T15:52:32.4737231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4737236Z 
2025-02-24T15:52:32.4737410Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4737414Z 
2025-02-24T15:52:32.4737636Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbec90>
2025-02-24T15:52:32.4737804Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4737884Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4737888Z 
2025-02-24T15:52:32.4738030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4738147Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4738239Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4738322Z         try:
2025-02-24T15:52:32.4738461Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4738548Z         except KeyError:
2025-02-24T15:52:32.4738689Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4738765Z     
2025-02-24T15:52:32.4738854Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4738953Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4739044Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4739181Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4739268Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4739361Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4739471Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4739545Z             else:
2025-02-24T15:52:32.4739645Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4739754Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4739763Z 
2025-02-24T15:52:32.4739892Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4740007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4740162Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4740234Z     ???
2025-02-24T15:52:32.4740349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4740353Z 
2025-02-24T15:52:32.4740423Z >   ???
2025-02-24T15:52:32.4740553Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4740627Z E   
2025-02-24T15:52:32.4740757Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4740874Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4741049Z E          ...
2025-02-24T15:52:32.4741142Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4741272Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4741510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4741582Z E          ...
2025-02-24T15:52:32.4741777Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4741903Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4742013Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4742017Z 
2025-02-24T15:52:32.4742108Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4742328Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T15:52:32.4742333Z 
2025-02-24T15:52:32.4742467Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4742592Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4742694Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4742827Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4742960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4743064Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4743141Z err_msg = None
2025-02-24T15:52:32.4743145Z 
2025-02-24T15:52:32.4743258Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4743340Z         if err_msg is None:
2025-02-24T15:52:32.4743439Z             if left.shape != right.shape:
2025-02-24T15:52:32.4743525Z                 raise_assert_detail(
2025-02-24T15:52:32.4743671Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4743743Z                 )
2025-02-24T15:52:32.4743818Z     
2025-02-24T15:52:32.4743895Z             diff = 0
2025-02-24T15:52:32.4744011Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4744106Z                 # count up differences
2025-02-24T15:52:32.4744280Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4744366Z                     diff += 1
2025-02-24T15:52:32.4744442Z     
2025-02-24T15:52:32.4744538Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4744677Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4744850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4744962Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4745041Z E           
2025-02-24T15:52:32.4745152Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4745415Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4745689Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4745699Z 
2025-02-24T15:52:32.4746005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4746010Z 
2025-02-24T15:52:32.4746183Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4746187Z 
2025-02-24T15:52:32.4746414Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbed50>
2025-02-24T15:52:32.4746577Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4746662Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4746667Z 
2025-02-24T15:52:32.4746901Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4747022Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4747253Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4747334Z         try:
2025-02-24T15:52:32.4747475Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4747561Z         except KeyError:
2025-02-24T15:52:32.4747715Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4747792Z     
2025-02-24T15:52:32.4747889Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4747986Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4748080Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4748211Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4748302Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4748390Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4748502Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4748581Z             else:
2025-02-24T15:52:32.4748680Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4748797Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4748806Z 
2025-02-24T15:52:32.4748931Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4749048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4749191Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4749267Z     ???
2025-02-24T15:52:32.4749378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4749382Z 
2025-02-24T15:52:32.4749456Z >   ???
2025-02-24T15:52:32.4749581Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4749662Z E   
2025-02-24T15:52:32.4749790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4749911Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4749993Z E          ...
2025-02-24T15:52:32.4750080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4750219Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4750332Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4750410Z E          ...
2025-02-24T15:52:32.4750495Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4750623Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4750726Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4750731Z 
2025-02-24T15:52:32.4750825Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4751138Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T15:52:32.4751148Z 
2025-02-24T15:52:32.4751276Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4751412Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4751511Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4751650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4751775Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4751875Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4751951Z err_msg = None
2025-02-24T15:52:32.4751955Z 
2025-02-24T15:52:32.4752068Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4752154Z         if err_msg is None:
2025-02-24T15:52:32.4752252Z             if left.shape != right.shape:
2025-02-24T15:52:32.4752349Z                 raise_assert_detail(
2025-02-24T15:52:32.4752493Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4752571Z                 )
2025-02-24T15:52:32.4752780Z     
2025-02-24T15:52:32.4752859Z             diff = 0
2025-02-24T15:52:32.4752971Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4753225Z                 # count up differences
2025-02-24T15:52:32.4753396Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4753482Z                     diff += 1
2025-02-24T15:52:32.4753559Z     
2025-02-24T15:52:32.4753648Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4753788Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4753962Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4754134Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4754270Z E           
2025-02-24T15:52:32.4754524Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4755039Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4755553Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4755562Z 
2025-02-24T15:52:32.4755957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4755962Z 
2025-02-24T15:52:32.4756135Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4756139Z 
2025-02-24T15:52:32.4756372Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbeed0>
2025-02-24T15:52:32.4756547Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4756624Z attr = 'j_blues'
2025-02-24T15:52:32.4756632Z 
2025-02-24T15:52:32.4756775Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4756890Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4756983Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4757055Z         try:
2025-02-24T15:52:32.4757198Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4757279Z         except KeyError:
2025-02-24T15:52:32.4757421Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4757491Z     
2025-02-24T15:52:32.4757586Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4757681Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4757777Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4757914Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4758010Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4758104Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4758219Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4758297Z             else:
2025-02-24T15:52:32.4758392Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4758505Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4758509Z 
2025-02-24T15:52:32.4758633Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4758749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4758899Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4758971Z     ???
2025-02-24T15:52:32.4759087Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4759092Z 
2025-02-24T15:52:32.4759161Z >   ???
2025-02-24T15:52:32.4759401Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4759472Z E   
2025-02-24T15:52:32.4759610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4759797Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4759876Z E          ...
2025-02-24T15:52:32.4759966Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4760101Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4760220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4760293Z E          ...
2025-02-24T15:52:32.4760383Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4760512Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4760621Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4760626Z 
2025-02-24T15:52:32.4760714Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4761079Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T15:52:32.4761091Z 
2025-02-24T15:52:32.4761226Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4761370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4761473Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4761634Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4761764Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4761856Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4761941Z err_msg = None
2025-02-24T15:52:32.4761944Z 
2025-02-24T15:52:32.4762055Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4762146Z         if err_msg is None:
2025-02-24T15:52:32.4762243Z             if left.shape != right.shape:
2025-02-24T15:52:32.4762338Z                 raise_assert_detail(
2025-02-24T15:52:32.4762491Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4762567Z                 )
2025-02-24T15:52:32.4762640Z     
2025-02-24T15:52:32.4762714Z             diff = 0
2025-02-24T15:52:32.4762831Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4762921Z                 # count up differences
2025-02-24T15:52:32.4763093Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4763173Z                     diff += 1
2025-02-24T15:52:32.4763252Z     
2025-02-24T15:52:32.4763341Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4763484Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4763656Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4763775Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4763859Z E           
2025-02-24T15:52:32.4763971Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4764242Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4764503Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4764513Z 
2025-02-24T15:52:32.4764820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4764949Z 
2025-02-24T15:52:32.4765129Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4765135Z 
2025-02-24T15:52:32.4765464Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbfc50>
2025-02-24T15:52:32.4765637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4765714Z attr = 'lines'
2025-02-24T15:52:32.4765719Z 
2025-02-24T15:52:32.4765858Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4765978Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4766066Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4766143Z         try:
2025-02-24T15:52:32.4766283Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4766372Z         except KeyError:
2025-02-24T15:52:32.4766510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4766586Z     
2025-02-24T15:52:32.4766680Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4766779Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4766871Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4767016Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4767105Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4767200Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4767316Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4767389Z             else:
2025-02-24T15:52:32.4767489Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4767598Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4767602Z 
2025-02-24T15:52:32.4767730Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4767843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4767992Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4768067Z     ???
2025-02-24T15:52:32.4768184Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4768189Z 
2025-02-24T15:52:32.4768267Z >   ???
2025-02-24T15:52:32.4768394Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4768467Z E   
2025-02-24T15:52:32.4768596Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4768713Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4768787Z E          ...
2025-02-24T15:52:32.4768881Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4769009Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4769128Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4769202Z E          ...
2025-02-24T15:52:32.4769294Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4769421Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4769530Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4769534Z 
2025-02-24T15:52:32.4769627Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4769899Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T15:52:32.4769904Z 
2025-02-24T15:52:32.4770132Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbfd10>
2025-02-24T15:52:32.4770298Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4770394Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4770399Z 
2025-02-24T15:52:32.4770535Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4770654Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4770746Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4770818Z         try:
2025-02-24T15:52:32.4771089Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4771296Z         except KeyError:
2025-02-24T15:52:32.4771440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4771510Z     
2025-02-24T15:52:32.4771707Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4771802Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4771896Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4772030Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4772122Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4772216Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4772327Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4772332Z 
2025-02-24T15:52:32.4772458Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4772569Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4772574Z 
2025-02-24T15:52:32.4772713Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4772807Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4772920Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4773008Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4773208Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4773366Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4773552Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4773703Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4773843Z err_msg = None
2025-02-24T15:52:32.4773850Z 
2025-02-24T15:52:32.4774044Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4774183Z         if err_msg is None:
2025-02-24T15:52:32.4774347Z             if left.shape != right.shape:
2025-02-24T15:52:32.4774491Z                 raise_assert_detail(
2025-02-24T15:52:32.4774742Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4774829Z                 )
2025-02-24T15:52:32.4774900Z     
2025-02-24T15:52:32.4774983Z             diff = 0
2025-02-24T15:52:32.4775104Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4775197Z                 # count up differences
2025-02-24T15:52:32.4775371Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4775455Z                     diff += 1
2025-02-24T15:52:32.4775526Z     
2025-02-24T15:52:32.4775621Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4775759Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4775937Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4776041Z E           AssertionError: Series are different
2025-02-24T15:52:32.4776119Z E           
2025-02-24T15:52:32.4776225Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4776597Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4776940Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4777285Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4777485Z 
2025-02-24T15:52:32.4777807Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4778081Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T15:52:32.4778086Z 
2025-02-24T15:52:32.4778308Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbfdd0>
2025-02-24T15:52:32.4778481Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4778580Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4778585Z 
2025-02-24T15:52:32.4778723Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4778843Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4778933Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4779012Z         try:
2025-02-24T15:52:32.4779153Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4779246Z         except KeyError:
2025-02-24T15:52:32.4779382Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4779460Z     
2025-02-24T15:52:32.4779547Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4779650Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4779745Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4779879Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4779972Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4780060Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4780177Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4780181Z 
2025-02-24T15:52:32.4780305Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4780428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4780432Z 
2025-02-24T15:52:32.4780572Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4780666Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4780780Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4780861Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4781145Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4781231Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4781341Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4781421Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4781504Z err_msg = None
2025-02-24T15:52:32.4781508Z 
2025-02-24T15:52:32.4781620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4781713Z         if err_msg is None:
2025-02-24T15:52:32.4781811Z             if left.shape != right.shape:
2025-02-24T15:52:32.4781902Z                 raise_assert_detail(
2025-02-24T15:52:32.4782051Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4782123Z                 )
2025-02-24T15:52:32.4782197Z     
2025-02-24T15:52:32.4782272Z             diff = 0
2025-02-24T15:52:32.4782389Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4782478Z                 # count up differences
2025-02-24T15:52:32.4782654Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4782733Z                     diff += 1
2025-02-24T15:52:32.4782809Z     
2025-02-24T15:52:32.4782896Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4783035Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4783339Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4783445Z E           AssertionError: Series are different
2025-02-24T15:52:32.4783642Z E           
2025-02-24T15:52:32.4783745Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4784428Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4785108Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4785581Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4785589Z 
2025-02-24T15:52:32.4785911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4786123Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T15:52:32.4786129Z 
2025-02-24T15:52:32.4786258Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4786396Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4786494Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4786636Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4786759Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4786857Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4786939Z err_msg = None
2025-02-24T15:52:32.4786943Z 
2025-02-24T15:52:32.4787053Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4787142Z         if err_msg is None:
2025-02-24T15:52:32.4787238Z             if left.shape != right.shape:
2025-02-24T15:52:32.4787331Z                 raise_assert_detail(
2025-02-24T15:52:32.4787474Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4787556Z                 )
2025-02-24T15:52:32.4787627Z     
2025-02-24T15:52:32.4787709Z             diff = 0
2025-02-24T15:52:32.4787821Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4787919Z                 # count up differences
2025-02-24T15:52:32.4788094Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4788174Z                     diff += 1
2025-02-24T15:52:32.4788249Z     
2025-02-24T15:52:32.4788334Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4788472Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4788641Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4788757Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4788830Z E           
2025-02-24T15:52:32.4788951Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4789212Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4789658Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4789665Z 
2025-02-24T15:52:32.4789976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4789981Z 
2025-02-24T15:52:32.4790155Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4790166Z 
2025-02-24T15:52:32.4790393Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0050>
2025-02-24T15:52:32.4790594Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>, attr = 'nu'
2025-02-24T15:52:32.4790605Z 
2025-02-24T15:52:32.4790742Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4790863Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4791063Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4791144Z         try:
2025-02-24T15:52:32.4791285Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4791372Z         except KeyError:
2025-02-24T15:52:32.4791509Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4791585Z     
2025-02-24T15:52:32.4791682Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4791777Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4791871Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4792004Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4792102Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4792193Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4792316Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4792321Z 
2025-02-24T15:52:32.4792445Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4792568Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4792716Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4792797Z     ???
2025-02-24T15:52:32.4792910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4792914Z 
2025-02-24T15:52:32.4792983Z >   ???
2025-02-24T15:52:32.4793116Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4793188Z E   
2025-02-24T15:52:32.4793322Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4793439Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4793517Z E          ...
2025-02-24T15:52:32.4793607Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4793751Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4793865Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4793943Z E          ...
2025-02-24T15:52:32.4794035Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4794160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4794272Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4794277Z 
2025-02-24T15:52:32.4794369Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4794603Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T15:52:32.4794608Z 
2025-02-24T15:52:32.4794735Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4794996Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4795096Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4795339Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4795469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4795564Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4795644Z err_msg = None
2025-02-24T15:52:32.4795648Z 
2025-02-24T15:52:32.4795755Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4795842Z         if err_msg is None:
2025-02-24T15:52:32.4795936Z             if left.shape != right.shape:
2025-02-24T15:52:32.4796026Z                 raise_assert_detail(
2025-02-24T15:52:32.4796168Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4796251Z                 )
2025-02-24T15:52:32.4796326Z     
2025-02-24T15:52:32.4796401Z             diff = 0
2025-02-24T15:52:32.4796517Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4796613Z                 # count up differences
2025-02-24T15:52:32.4796793Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4796873Z                     diff += 1
2025-02-24T15:52:32.4796950Z     
2025-02-24T15:52:32.4797041Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4797185Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4797357Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4797475Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4797550Z E           
2025-02-24T15:52:32.4797663Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4797933Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4798205Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4798217Z 
2025-02-24T15:52:32.4798528Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4798533Z 
2025-02-24T15:52:32.4798710Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4798714Z 
2025-02-24T15:52:32.4798933Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0110>
2025-02-24T15:52:32.4799109Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4799195Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4799199Z 
2025-02-24T15:52:32.4799344Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4799460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4799553Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4799633Z         try:
2025-02-24T15:52:32.4799771Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4799857Z         except KeyError:
2025-02-24T15:52:32.4799996Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4800072Z     
2025-02-24T15:52:32.4800161Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4800265Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4800355Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4800602Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4800690Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4800786Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4801108Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4801117Z 
2025-02-24T15:52:32.4801339Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4801545Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4801801Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4801933Z     ???
2025-02-24T15:52:32.4802123Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4802130Z 
2025-02-24T15:52:32.4802255Z >   ???
2025-02-24T15:52:32.4802466Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4802600Z E   
2025-02-24T15:52:32.4802751Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4802881Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4802962Z E          ...
2025-02-24T15:52:32.4803052Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4803195Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4803312Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4803391Z E          ...
2025-02-24T15:52:32.4803478Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4803612Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4803720Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4803725Z 
2025-02-24T15:52:32.4803822Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4804035Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T15:52:32.4804040Z 
2025-02-24T15:52:32.4811857Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4812041Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4812159Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4812304Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4812433Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4812530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4812610Z err_msg = None
2025-02-24T15:52:32.4812615Z 
2025-02-24T15:52:32.4812742Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4812827Z         if err_msg is None:
2025-02-24T15:52:32.4812935Z             if left.shape != right.shape:
2025-02-24T15:52:32.4813027Z                 raise_assert_detail(
2025-02-24T15:52:32.4813187Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4813270Z                 )
2025-02-24T15:52:32.4813342Z     
2025-02-24T15:52:32.4813427Z             diff = 0
2025-02-24T15:52:32.4813544Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4813644Z                 # count up differences
2025-02-24T15:52:32.4813820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4813907Z                     diff += 1
2025-02-24T15:52:32.4813981Z     
2025-02-24T15:52:32.4814083Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4814224Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4814409Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4814532Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4814606Z E           
2025-02-24T15:52:32.4814729Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4815177Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4815563Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4815569Z 
2025-02-24T15:52:32.4815894Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4815899Z 
2025-02-24T15:52:32.4816074Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4816079Z 
2025-02-24T15:52:32.4816318Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce01d0>
2025-02-24T15:52:32.4816525Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>, attr = 'f_lu'
2025-02-24T15:52:32.4816536Z 
2025-02-24T15:52:32.4816682Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4816805Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4816901Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4816979Z         try:
2025-02-24T15:52:32.4817125Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4817214Z         except KeyError:
2025-02-24T15:52:32.4817356Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4817436Z     
2025-02-24T15:52:32.4817527Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4817635Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4817729Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4817875Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4817962Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4818059Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4818181Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4818186Z 
2025-02-24T15:52:32.4818316Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4818437Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4818588Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4818668Z     ???
2025-02-24T15:52:32.4818782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4818786Z 
2025-02-24T15:52:32.4818862Z >   ???
2025-02-24T15:52:32.4818996Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4819073Z E   
2025-02-24T15:52:32.4819206Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4819332Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4819413Z E          ...
2025-02-24T15:52:32.4819506Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4819652Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4819769Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4819848Z E          ...
2025-02-24T15:52:32.4819937Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4820067Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4820175Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4820180Z 
2025-02-24T15:52:32.4820302Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4820725Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T15:52:32.4820735Z 
2025-02-24T15:52:32.4821101Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4821511Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4821818Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4822056Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4822192Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4822296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4822374Z err_msg = None
2025-02-24T15:52:32.4822382Z 
2025-02-24T15:52:32.4822501Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4822591Z         if err_msg is None:
2025-02-24T15:52:32.4822689Z             if left.shape != right.shape:
2025-02-24T15:52:32.4822780Z                 raise_assert_detail(
2025-02-24T15:52:32.4822930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4823012Z                 )
2025-02-24T15:52:32.4823082Z     
2025-02-24T15:52:32.4823161Z             diff = 0
2025-02-24T15:52:32.4823275Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4823377Z                 # count up differences
2025-02-24T15:52:32.4823547Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4823629Z                     diff += 1
2025-02-24T15:52:32.4823706Z     
2025-02-24T15:52:32.4823797Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4823939Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4824111Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4824232Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4824309Z E           
2025-02-24T15:52:32.4824422Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4824694Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4824962Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4824967Z 
2025-02-24T15:52:32.4825287Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4825292Z 
2025-02-24T15:52:32.4825470Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4825475Z 
2025-02-24T15:52:32.4825700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0950>
2025-02-24T15:52:32.4825872Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4825958Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4825963Z 
2025-02-24T15:52:32.4826108Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4826226Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4826317Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4826394Z         try:
2025-02-24T15:52:32.4826536Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4826623Z         except KeyError:
2025-02-24T15:52:32.4826762Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4826837Z     
2025-02-24T15:52:32.4826925Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4827027Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4827117Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4827346Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4827433Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4827604Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4827719Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4827799Z             else:
2025-02-24T15:52:32.4827900Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4828008Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4828013Z 
2025-02-24T15:52:32.4828144Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4828262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4828412Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4828485Z     ???
2025-02-24T15:52:32.4828601Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4828612Z 
2025-02-24T15:52:32.4828681Z >   ???
2025-02-24T15:52:32.4828814Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4828895Z E   
2025-02-24T15:52:32.4829031Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4829149Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4829221Z E          ...
2025-02-24T15:52:32.4829316Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4829446Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4829566Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4829639Z E          ...
2025-02-24T15:52:32.4829730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4829856Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4829969Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4829973Z 
2025-02-24T15:52:32.4830070Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4830300Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T15:52:32.4830305Z 
2025-02-24T15:52:32.4830442Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4830579Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4830683Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4830819Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4831087Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4831191Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4831267Z err_msg = None
2025-02-24T15:52:32.4831272Z 
2025-02-24T15:52:32.4831389Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4831473Z         if err_msg is None:
2025-02-24T15:52:32.4831578Z             if left.shape != right.shape:
2025-02-24T15:52:32.4831664Z                 raise_assert_detail(
2025-02-24T15:52:32.4831816Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4831892Z                 )
2025-02-24T15:52:32.4831967Z     
2025-02-24T15:52:32.4832041Z             diff = 0
2025-02-24T15:52:32.4832160Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4832253Z                 # count up differences
2025-02-24T15:52:32.4832420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4832505Z                     diff += 1
2025-02-24T15:52:32.4832575Z     
2025-02-24T15:52:32.4832669Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4832804Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4832981Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4833241Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4833321Z E           
2025-02-24T15:52:32.4833432Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4833800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4834067Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4834073Z 
2025-02-24T15:52:32.4834377Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4834387Z 
2025-02-24T15:52:32.4834560Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4834570Z 
2025-02-24T15:52:32.4834795Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0a10>
2025-02-24T15:52:32.4834959Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4835045Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4835049Z 
2025-02-24T15:52:32.4835186Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4835307Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4835393Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4835472Z         try:
2025-02-24T15:52:32.4835610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4835697Z         except KeyError:
2025-02-24T15:52:32.4835839Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4835912Z     
2025-02-24T15:52:32.4836007Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4836101Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4836200Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4836340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4836430Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4836518Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4836629Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4836702Z             else:
2025-02-24T15:52:32.4836809Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4836930Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4836939Z 
2025-02-24T15:52:32.4837064Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4837185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4837335Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4837432Z     ???
2025-02-24T15:52:32.4837563Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4837573Z 
2025-02-24T15:52:32.4837648Z >   ???
2025-02-24T15:52:32.4837773Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4837870Z E   
2025-02-24T15:52:32.4837997Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4838114Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4838190Z E          ...
2025-02-24T15:52:32.4838278Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4838413Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4838525Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4838601Z E          ...
2025-02-24T15:52:32.4838689Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4838909Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4839020Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4839025Z 
2025-02-24T15:52:32.4839195Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4839408Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T15:52:32.4839418Z 
2025-02-24T15:52:32.4839547Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4839683Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4839856Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4840107Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4840328Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4840501Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4840643Z err_msg = None
2025-02-24T15:52:32.4840655Z 
2025-02-24T15:52:32.4840843Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4841125Z         if err_msg is None:
2025-02-24T15:52:32.4841288Z             if left.shape != right.shape:
2025-02-24T15:52:32.4841444Z                 raise_assert_detail(
2025-02-24T15:52:32.4841597Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4841674Z                 )
2025-02-24T15:52:32.4841744Z     
2025-02-24T15:52:32.4841822Z             diff = 0
2025-02-24T15:52:32.4841934Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4842026Z                 # count up differences
2025-02-24T15:52:32.4842196Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4842279Z                     diff += 1
2025-02-24T15:52:32.4842354Z     
2025-02-24T15:52:32.4842443Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4842592Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4842760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4842882Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4842959Z E           
2025-02-24T15:52:32.4843074Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4843334Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4843600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4843609Z 
2025-02-24T15:52:32.4843929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4843934Z 
2025-02-24T15:52:32.4844105Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4844109Z 
2025-02-24T15:52:32.4844341Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0b90>
2025-02-24T15:52:32.4844511Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4844587Z attr = 'j_blues'
2025-02-24T15:52:32.4844591Z 
2025-02-24T15:52:32.4844738Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4844858Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4844948Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4845020Z         try:
2025-02-24T15:52:32.4845306Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4845388Z         except KeyError:
2025-02-24T15:52:32.4845532Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4845705Z     
2025-02-24T15:52:32.4845797Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4845889Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4845984Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4846122Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4846208Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4846302Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4846411Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4846487Z             else:
2025-02-24T15:52:32.4846583Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4846698Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4846708Z 
2025-02-24T15:52:32.4846832Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4846951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4847108Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4847179Z     ???
2025-02-24T15:52:32.4847296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4847300Z 
2025-02-24T15:52:32.4847368Z >   ???
2025-02-24T15:52:32.4847497Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4847566Z E   
2025-02-24T15:52:32.4847697Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4847811Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4847887Z E          ...
2025-02-24T15:52:32.4847976Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4848113Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4848235Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4848309Z E          ...
2025-02-24T15:52:32.4848399Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4848541Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4848650Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4848659Z 
2025-02-24T15:52:32.4848750Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4848964Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T15:52:32.4848969Z 
2025-02-24T15:52:32.4849097Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4849232Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4849330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4849467Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4849599Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4849703Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4849784Z err_msg = None
2025-02-24T15:52:32.4849788Z 
2025-02-24T15:52:32.4849897Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4849982Z         if err_msg is None:
2025-02-24T15:52:32.4850077Z             if left.shape != right.shape:
2025-02-24T15:52:32.4850165Z                 raise_assert_detail(
2025-02-24T15:52:32.4850307Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4850381Z                 )
2025-02-24T15:52:32.4850448Z     
2025-02-24T15:52:32.4850527Z             diff = 0
2025-02-24T15:52:32.4850637Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4850733Z                 # count up differences
2025-02-24T15:52:32.4851132Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4851215Z                     diff += 1
2025-02-24T15:52:32.4851289Z     
2025-02-24T15:52:32.4851538Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4851683Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4851856Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4851972Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4852044Z E           
2025-02-24T15:52:32.4852159Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4852418Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4852689Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4852704Z 
2025-02-24T15:52:32.4853016Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4853021Z 
2025-02-24T15:52:32.4853192Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4853202Z 
2025-02-24T15:52:32.4853421Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1910>
2025-02-24T15:52:32.4853588Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4853663Z attr = 'lines'
2025-02-24T15:52:32.4853667Z 
2025-02-24T15:52:32.4853807Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4853928Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4854017Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4854096Z         try:
2025-02-24T15:52:32.4854239Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4854322Z         except KeyError:
2025-02-24T15:52:32.4854464Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4854537Z     
2025-02-24T15:52:32.4854625Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4854724Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4854817Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4854954Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4855041Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4855135Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4855245Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4855329Z             else:
2025-02-24T15:52:32.4855425Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4855537Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4855546Z 
2025-02-24T15:52:32.4855675Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4855788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4855942Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4856013Z     ???
2025-02-24T15:52:32.4856130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4856134Z 
2025-02-24T15:52:32.4856202Z >   ???
2025-02-24T15:52:32.4856332Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4856400Z E   
2025-02-24T15:52:32.4856532Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4856645Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4856846Z E          ...
2025-02-24T15:52:32.4856940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4857069Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4857267Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4857396Z E          ...
2025-02-24T15:52:32.4857561Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4857783Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4857981Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4857990Z 
2025-02-24T15:52:32.4858123Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4858398Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T15:52:32.4858403Z 
2025-02-24T15:52:32.4858629Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce19d0>
2025-02-24T15:52:32.4858795Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4858897Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4858901Z 
2025-02-24T15:52:32.4859041Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4859169Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4859254Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4859331Z         try:
2025-02-24T15:52:32.4859475Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4859562Z         except KeyError:
2025-02-24T15:52:32.4859705Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4859775Z     
2025-02-24T15:52:32.4859866Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4859959Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4860052Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4860182Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4860272Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4860367Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4860483Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4860491Z 
2025-02-24T15:52:32.4860615Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4860734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4860738Z 
2025-02-24T15:52:32.4860880Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4861102Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4861218Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4861298Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4861442Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4861552Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4861663Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4861745Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4861828Z err_msg = None
2025-02-24T15:52:32.4861836Z 
2025-02-24T15:52:32.4861951Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4862034Z         if err_msg is None:
2025-02-24T15:52:32.4862133Z             if left.shape != right.shape:
2025-02-24T15:52:32.4862219Z                 raise_assert_detail(
2025-02-24T15:52:32.4862370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4862442Z                 )
2025-02-24T15:52:32.4862518Z     
2025-02-24T15:52:32.4862590Z             diff = 0
2025-02-24T15:52:32.4862708Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4862795Z                 # count up differences
2025-02-24T15:52:32.4862967Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4863050Z                     diff += 1
2025-02-24T15:52:32.4863253Z     
2025-02-24T15:52:32.4863345Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4863480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4863757Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4863862Z E           AssertionError: Series are different
2025-02-24T15:52:32.4863938Z E           
2025-02-24T15:52:32.4864041Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4864415Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4864750Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4865097Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4865108Z 
2025-02-24T15:52:32.4865418Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4865684Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T15:52:32.4865695Z 
2025-02-24T15:52:32.4865916Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1a90>
2025-02-24T15:52:32.4866091Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4866185Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4866190Z 
2025-02-24T15:52:32.4866331Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4866446Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4866538Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4866614Z         try:
2025-02-24T15:52:32.4866756Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4866843Z         except KeyError:
2025-02-24T15:52:32.4866979Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4867052Z     
2025-02-24T15:52:32.4867141Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4867246Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4867336Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4867476Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4867567Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4867662Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4867776Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4867780Z 
2025-02-24T15:52:32.4867903Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4868022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4868026Z 
2025-02-24T15:52:32.4868162Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4868251Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4868362Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4868448Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4868673Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4868761Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4868941Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4869019Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4869099Z err_msg = None
2025-02-24T15:52:32.4869103Z 
2025-02-24T15:52:32.4869211Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4869296Z         if err_msg is None:
2025-02-24T15:52:32.4869389Z             if left.shape != right.shape:
2025-02-24T15:52:32.4869479Z                 raise_assert_detail(
2025-02-24T15:52:32.4869620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4869700Z                 )
2025-02-24T15:52:32.4869769Z     
2025-02-24T15:52:32.4869847Z             diff = 0
2025-02-24T15:52:32.4869964Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4870059Z                 # count up differences
2025-02-24T15:52:32.4870230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4870315Z                     diff += 1
2025-02-24T15:52:32.4870388Z     
2025-02-24T15:52:32.4870473Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4870611Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4870784Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4870893Z E           AssertionError: Series are different
2025-02-24T15:52:32.4871060Z E           
2025-02-24T15:52:32.4871167Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4871541Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4871924Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4872307Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4872317Z 
2025-02-24T15:52:32.4872626Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4872835Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T15:52:32.4872840Z 
2025-02-24T15:52:32.4872972Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4873102Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4873205Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4873340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4873462Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4873684Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4873760Z err_msg = None
2025-02-24T15:52:32.4873763Z 
2025-02-24T15:52:32.4873875Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4874079Z         if err_msg is None:
2025-02-24T15:52:32.4874178Z             if left.shape != right.shape:
2025-02-24T15:52:32.4874263Z                 raise_assert_detail(
2025-02-24T15:52:32.4874408Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4874487Z                 )
2025-02-24T15:52:32.4874556Z     
2025-02-24T15:52:32.4874634Z             diff = 0
2025-02-24T15:52:32.4874745Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4874838Z                 # count up differences
2025-02-24T15:52:32.4875007Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4875091Z                     diff += 1
2025-02-24T15:52:32.4875160Z     
2025-02-24T15:52:32.4875256Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4875389Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4875591Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4875709Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4875781Z E           
2025-02-24T15:52:32.4875898Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4876327Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4876744Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4876772Z 
2025-02-24T15:52:32.4877244Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4877253Z 
2025-02-24T15:52:32.4877524Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4877533Z 
2025-02-24T15:52:32.4877888Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1cd0>
2025-02-24T15:52:32.4878213Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>, attr = 'nu'
2025-02-24T15:52:32.4878223Z 
2025-02-24T15:52:32.4878446Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4878653Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4878791Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4878915Z         try:
2025-02-24T15:52:32.4879152Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4879305Z         except KeyError:
2025-02-24T15:52:32.4879542Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4879681Z     
2025-02-24T15:52:32.4879834Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4880008Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4880156Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4880382Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4880532Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4880696Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4880899Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4881121Z 
2025-02-24T15:52:32.4881356Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4881575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4882096Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4882238Z     ???
2025-02-24T15:52:32.4882442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4882631Z 
2025-02-24T15:52:32.4882775Z >   ???
2025-02-24T15:52:32.4883019Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4883156Z E   
2025-02-24T15:52:32.4883407Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4883613Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4883751Z E          ...
2025-02-24T15:52:32.4883919Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4884168Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4884384Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4884529Z E          ...
2025-02-24T15:52:32.4884691Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4884949Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4885140Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4885160Z 
2025-02-24T15:52:32.4885336Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4885762Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T15:52:32.4885774Z 
2025-02-24T15:52:32.4886001Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4886242Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4886424Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4886680Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4886915Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4887087Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4887233Z err_msg = None
2025-02-24T15:52:32.4887241Z 
2025-02-24T15:52:32.4887433Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4887584Z         if err_msg is None:
2025-02-24T15:52:32.4887744Z             if left.shape != right.shape:
2025-02-24T15:52:32.4887888Z                 raise_assert_detail(
2025-02-24T15:52:32.4888135Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4888265Z                 )
2025-02-24T15:52:32.4888389Z     
2025-02-24T15:52:32.4888530Z             diff = 0
2025-02-24T15:52:32.4888731Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4888897Z                 # count up differences
2025-02-24T15:52:32.4889193Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4889338Z                     diff += 1
2025-02-24T15:52:32.4889462Z     
2025-02-24T15:52:32.4889622Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4889859Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4890150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4890357Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4890482Z E           
2025-02-24T15:52:32.4890683Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4891363Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4891836Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4892209Z 
2025-02-24T15:52:32.4892790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4892802Z 
2025-02-24T15:52:32.4893118Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4893129Z 
2025-02-24T15:52:32.4893532Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1d90>
2025-02-24T15:52:32.4893823Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4893960Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4893967Z 
2025-02-24T15:52:32.4894209Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4894409Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4894565Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4894705Z         try:
2025-02-24T15:52:32.4894962Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4895107Z         except KeyError:
2025-02-24T15:52:32.4895366Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4895493Z     
2025-02-24T15:52:32.4895648Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4895821Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4895980Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4896224Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4896378Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4896540Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4896733Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4896741Z 
2025-02-24T15:52:32.4896967Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4897174Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4897447Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4897575Z     ???
2025-02-24T15:52:32.4897771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4897784Z 
2025-02-24T15:52:32.4897907Z >   ???
2025-02-24T15:52:32.4898115Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4898245Z E   
2025-02-24T15:52:32.4898477Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4898683Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4898814Z E          ...
2025-02-24T15:52:32.4898985Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4899212Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4899420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4899552Z E          ...
2025-02-24T15:52:32.4899705Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4899936Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4900105Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4900117Z 
2025-02-24T15:52:32.4900268Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4900633Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T15:52:32.4900642Z 
2025-02-24T15:52:32.4900878Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4901281Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4901464Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4901705Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4901922Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4902296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4902438Z err_msg = None
2025-02-24T15:52:32.4902450Z 
2025-02-24T15:52:32.4902666Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4902991Z         if err_msg is None:
2025-02-24T15:52:32.4903175Z             if left.shape != right.shape:
2025-02-24T15:52:32.4903337Z                 raise_assert_detail(
2025-02-24T15:52:32.4903512Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4903593Z                 )
2025-02-24T15:52:32.4903663Z     
2025-02-24T15:52:32.4903747Z             diff = 0
2025-02-24T15:52:32.4903865Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4903963Z                 # count up differences
2025-02-24T15:52:32.4904156Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4904241Z                     diff += 1
2025-02-24T15:52:32.4904319Z     
2025-02-24T15:52:32.4904419Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4904558Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4904763Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4904884Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4904958Z E           
2025-02-24T15:52:32.4905076Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4905341Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4905611Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4905625Z 
2025-02-24T15:52:32.4905961Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4905966Z 
2025-02-24T15:52:32.4906140Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4906146Z 
2025-02-24T15:52:32.4906379Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1e50>
2025-02-24T15:52:32.4906585Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>, attr = 'f_lu'
2025-02-24T15:52:32.4906590Z 
2025-02-24T15:52:32.4906735Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4906857Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4906951Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4907034Z         try:
2025-02-24T15:52:32.4907183Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4907271Z         except KeyError:
2025-02-24T15:52:32.4907418Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4907493Z     
2025-02-24T15:52:32.4907583Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4907682Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4907774Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4907914Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4908002Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4908098Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4908210Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4908219Z 
2025-02-24T15:52:32.4908349Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4908474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4908757Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4908835Z     ???
2025-02-24T15:52:32.4908946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4909032Z 
2025-02-24T15:52:32.4909109Z >   ???
2025-02-24T15:52:32.4909239Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4909329Z E   
2025-02-24T15:52:32.4909468Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4909588Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4909667Z E          ...
2025-02-24T15:52:32.4909759Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4909896Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4910010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4910088Z E          ...
2025-02-24T15:52:32.4910176Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4910312Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4910417Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4910428Z 
2025-02-24T15:52:32.4910523Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4910751Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T15:52:32.4910761Z 
2025-02-24T15:52:32.4910894Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4911221Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4911324Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4911462Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4911587Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4911689Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4911768Z err_msg = None
2025-02-24T15:52:32.4911780Z 
2025-02-24T15:52:32.4911896Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4911989Z         if err_msg is None:
2025-02-24T15:52:32.4912088Z             if left.shape != right.shape:
2025-02-24T15:52:32.4912180Z                 raise_assert_detail(
2025-02-24T15:52:32.4912329Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4912407Z                 )
2025-02-24T15:52:32.4912482Z     
2025-02-24T15:52:32.4912559Z             diff = 0
2025-02-24T15:52:32.4912671Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4912763Z                 # count up differences
2025-02-24T15:52:32.4912934Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4913022Z                     diff += 1
2025-02-24T15:52:32.4913100Z     
2025-02-24T15:52:32.4913261Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4913508Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4913822Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4913987Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4914065Z E           
2025-02-24T15:52:32.4914186Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4914448Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4914714Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4914960Z 
2025-02-24T15:52:32.4915285Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4915290Z 
2025-02-24T15:52:32.4915461Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4915466Z 
2025-02-24T15:52:32.4915702Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce25d0>
2025-02-24T15:52:32.4915877Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4915958Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4915962Z 
2025-02-24T15:52:32.4916107Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4916223Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4916314Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4916391Z         try:
2025-02-24T15:52:32.4916537Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4916622Z         except KeyError:
2025-02-24T15:52:32.4916772Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4916841Z     
2025-02-24T15:52:32.4916934Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4917033Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4917121Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4917260Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4917347Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4917442Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4917553Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4917631Z             else:
2025-02-24T15:52:32.4917729Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4917844Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4917854Z 
2025-02-24T15:52:32.4917982Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4918102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4918258Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4918332Z     ???
2025-02-24T15:52:32.4918447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4918451Z 
2025-02-24T15:52:32.4918522Z >   ???
2025-02-24T15:52:32.4918657Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4918727Z E   
2025-02-24T15:52:32.4918859Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4918972Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4919052Z E          ...
2025-02-24T15:52:32.4919143Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4919275Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4919398Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4919471Z E          ...
2025-02-24T15:52:32.4919568Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4919693Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4919806Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4919810Z 
2025-02-24T15:52:32.4919900Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4920133Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T15:52:32.4920138Z 
2025-02-24T15:52:32.4920266Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4920404Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4920508Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4920752Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4920882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4921233Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4921315Z err_msg = None
2025-02-24T15:52:32.4921320Z 
2025-02-24T15:52:32.4921430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4921516Z         if err_msg is None:
2025-02-24T15:52:32.4921614Z             if left.shape != right.shape:
2025-02-24T15:52:32.4921706Z                 raise_assert_detail(
2025-02-24T15:52:32.4921857Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4921930Z                 )
2025-02-24T15:52:32.4922005Z     
2025-02-24T15:52:32.4922079Z             diff = 0
2025-02-24T15:52:32.4922194Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4922284Z                 # count up differences
2025-02-24T15:52:32.4922466Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4922547Z                     diff += 1
2025-02-24T15:52:32.4922630Z     
2025-02-24T15:52:32.4922719Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4922861Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4923037Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4923151Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4923227Z E           
2025-02-24T15:52:32.4923339Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4923604Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4923871Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4923886Z 
2025-02-24T15:52:32.4924194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4924199Z 
2025-02-24T15:52:32.4924372Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4924377Z 
2025-02-24T15:52:32.4924601Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce2690>
2025-02-24T15:52:32.4924770Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4924851Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4924859Z 
2025-02-24T15:52:32.4925000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4925121Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4925214Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4925291Z         try:
2025-02-24T15:52:32.4925431Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4925518Z         except KeyError:
2025-02-24T15:52:32.4925657Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4925732Z     
2025-02-24T15:52:32.4925820Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4925921Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4926014Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4926152Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4926248Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4926339Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4926580Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4926654Z             else:
2025-02-24T15:52:32.4926754Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4926953Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4926957Z 
2025-02-24T15:52:32.4927088Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4927202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4927354Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4927426Z     ???
2025-02-24T15:52:32.4927542Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4927547Z 
2025-02-24T15:52:32.4927621Z >   ???
2025-02-24T15:52:32.4927745Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4927821Z E   
2025-02-24T15:52:32.4927952Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4928075Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4928147Z E          ...
2025-02-24T15:52:32.4928242Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4928380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4928499Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4928571Z E          ...
2025-02-24T15:52:32.4928663Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4928793Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4928899Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4928904Z 
2025-02-24T15:52:32.4928998Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4929209Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T15:52:32.4929214Z 
2025-02-24T15:52:32.4929348Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4929481Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4929585Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4929729Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4929853Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4929953Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4930029Z err_msg = None
2025-02-24T15:52:32.4930033Z 
2025-02-24T15:52:32.4930149Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4930233Z         if err_msg is None:
2025-02-24T15:52:32.4930334Z             if left.shape != right.shape:
2025-02-24T15:52:32.4930421Z                 raise_assert_detail(
2025-02-24T15:52:32.4930571Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4930650Z                 )
2025-02-24T15:52:32.4930728Z     
2025-02-24T15:52:32.4930807Z             diff = 0
2025-02-24T15:52:32.4931041Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4931143Z                 # count up differences
2025-02-24T15:52:32.4931313Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4931398Z                     diff += 1
2025-02-24T15:52:32.4931468Z     
2025-02-24T15:52:32.4931563Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4931700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4931876Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4932026Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4932166Z E           
2025-02-24T15:52:32.4932371Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4932837Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4933595Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4933604Z 
2025-02-24T15:52:32.4933917Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4933927Z 
2025-02-24T15:52:32.4934097Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4934102Z 
2025-02-24T15:52:32.4934329Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce2810>
2025-02-24T15:52:32.4934498Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4934584Z attr = 'j_blues'
2025-02-24T15:52:32.4934588Z 
2025-02-24T15:52:32.4934725Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4934847Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4934933Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4935011Z         try:
2025-02-24T15:52:32.4935156Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4935239Z         except KeyError:
2025-02-24T15:52:32.4935380Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4935451Z     
2025-02-24T15:52:32.4935543Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4935639Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4935736Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4935872Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4935964Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4936056Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4936177Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4936255Z             else:
2025-02-24T15:52:32.4936351Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4936467Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4936472Z 
2025-02-24T15:52:32.4936597Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4936716Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4936863Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4936943Z     ???
2025-02-24T15:52:32.4937053Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4937057Z 
2025-02-24T15:52:32.4937132Z >   ???
2025-02-24T15:52:32.4937265Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4937339Z E   
2025-02-24T15:52:32.4937476Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4937595Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4937674Z E          ...
2025-02-24T15:52:32.4937764Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4937899Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4938014Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4938090Z E          ...
2025-02-24T15:52:32.4938178Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4938308Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4938415Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4938424Z 
2025-02-24T15:52:32.4938516Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4938733Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T15:52:32.4938829Z 
2025-02-24T15:52:32.4938961Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4939174Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4939272Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4939414Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4939541Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4939642Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4939723Z err_msg = None
2025-02-24T15:52:32.4939727Z 
2025-02-24T15:52:32.4939844Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4939931Z         if err_msg is None:
2025-02-24T15:52:32.4940029Z             if left.shape != right.shape:
2025-02-24T15:52:32.4940125Z                 raise_assert_detail(
2025-02-24T15:52:32.4940270Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4940351Z                 )
2025-02-24T15:52:32.4940421Z     
2025-02-24T15:52:32.4940499Z             diff = 0
2025-02-24T15:52:32.4940610Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4940706Z                 # count up differences
2025-02-24T15:52:32.4940882Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4941083Z                     diff += 1
2025-02-24T15:52:32.4941159Z     
2025-02-24T15:52:32.4941252Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4941396Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4941571Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4941689Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4941766Z E           
2025-02-24T15:52:32.4941883Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4942150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4942418Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4942424Z 
2025-02-24T15:52:32.4942739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4942748Z 
2025-02-24T15:52:32.4942922Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4942936Z 
2025-02-24T15:52:32.4943160Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3590>
2025-02-24T15:52:32.4943334Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.4943411Z attr = 'lines'
2025-02-24T15:52:32.4943415Z 
2025-02-24T15:52:32.4943559Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4943678Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4943770Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4943841Z         try:
2025-02-24T15:52:32.4943990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4944074Z         except KeyError:
2025-02-24T15:52:32.4944218Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4944292Z     
2025-02-24T15:52:32.4944504Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4944605Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4944695Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4944937Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4945025Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4945123Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4945242Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4945321Z             else:
2025-02-24T15:52:32.4945419Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4945533Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4945537Z 
2025-02-24T15:52:32.4945668Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4945783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4945935Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4946013Z     ???
2025-02-24T15:52:32.4946128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4946138Z 
2025-02-24T15:52:32.4946208Z >   ???
2025-02-24T15:52:32.4946341Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4946410Z E   
2025-02-24T15:52:32.4946547Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4946662Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4946740Z E          ...
2025-02-24T15:52:32.4946835Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4946964Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4947083Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4947157Z E          ...
2025-02-24T15:52:32.4947250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4947377Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4947495Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4947500Z 
2025-02-24T15:52:32.4947589Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4947871Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T15:52:32.4947876Z 
2025-02-24T15:52:32.4948107Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3650>
2025-02-24T15:52:32.4948273Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.4948370Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4948374Z 
2025-02-24T15:52:32.4948511Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4948631Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4948717Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4948797Z         try:
2025-02-24T15:52:32.4948936Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4949029Z         except KeyError:
2025-02-24T15:52:32.4949167Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4949245Z     
2025-02-24T15:52:32.4949344Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4949439Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4949537Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4949671Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4949764Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4949855Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4949970Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4949975Z 
2025-02-24T15:52:32.4950099Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4950219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4950223Z 
2025-02-24T15:52:32.4950364Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4950657Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4950860Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4951329Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4951588Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4951736Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4951921Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4952061Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4952148Z err_msg = None
2025-02-24T15:52:32.4952152Z 
2025-02-24T15:52:32.4952276Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4952360Z         if err_msg is None:
2025-02-24T15:52:32.4952465Z             if left.shape != right.shape:
2025-02-24T15:52:32.4952551Z                 raise_assert_detail(
2025-02-24T15:52:32.4952709Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4952783Z                 )
2025-02-24T15:52:32.4952861Z     
2025-02-24T15:52:32.4952945Z             diff = 0
2025-02-24T15:52:32.4953064Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4953155Z                 # count up differences
2025-02-24T15:52:32.4953337Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4953422Z                     diff += 1
2025-02-24T15:52:32.4953494Z     
2025-02-24T15:52:32.4953589Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4953730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4953910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4954016Z E           AssertionError: Series are different
2025-02-24T15:52:32.4954093Z E           
2025-02-24T15:52:32.4954196Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4954582Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4954925Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4955260Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4955279Z 
2025-02-24T15:52:32.4955598Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4955876Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T15:52:32.4955881Z 
2025-02-24T15:52:32.4956105Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3710>
2025-02-24T15:52:32.4956276Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.4956369Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4956372Z 
2025-02-24T15:52:32.4956516Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4956759Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4956850Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4956932Z         try:
2025-02-24T15:52:32.4957188Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4957275Z         except KeyError:
2025-02-24T15:52:32.4957415Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4957491Z     
2025-02-24T15:52:32.4957582Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4957681Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4957773Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4957910Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4957998Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4958095Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4958205Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4958215Z 
2025-02-24T15:52:32.4958340Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4958468Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4958479Z 
2025-02-24T15:52:32.4958617Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4958709Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4958816Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4958904Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4959044Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4959132Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4959245Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4959325Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4959406Z err_msg = None
2025-02-24T15:52:32.4959410Z 
2025-02-24T15:52:32.4959520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4959611Z         if err_msg is None:
2025-02-24T15:52:32.4959708Z             if left.shape != right.shape:
2025-02-24T15:52:32.4959809Z                 raise_assert_detail(
2025-02-24T15:52:32.4959954Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4960032Z                 )
2025-02-24T15:52:32.4960101Z     
2025-02-24T15:52:32.4960181Z             diff = 0
2025-02-24T15:52:32.4960297Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4960390Z                 # count up differences
2025-02-24T15:52:32.4960566Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4960643Z                     diff += 1
2025-02-24T15:52:32.4960718Z     
2025-02-24T15:52:32.4960807Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4961085Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4961265Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4961378Z E           AssertionError: Series are different
2025-02-24T15:52:32.4961458Z E           
2025-02-24T15:52:32.4961591Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4961975Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4962352Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4962957Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4962964Z 
2025-02-24T15:52:32.4963286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4963493Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T15:52:32.4963498Z 
2025-02-24T15:52:32.4963630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4963764Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4963873Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4964014Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4964137Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4964238Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4964314Z err_msg = None
2025-02-24T15:52:32.4964318Z 
2025-02-24T15:52:32.4964432Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4964515Z         if err_msg is None:
2025-02-24T15:52:32.4964616Z             if left.shape != right.shape:
2025-02-24T15:52:32.4964702Z                 raise_assert_detail(
2025-02-24T15:52:32.4964850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4964932Z                 )
2025-02-24T15:52:32.4965003Z     
2025-02-24T15:52:32.4965085Z             diff = 0
2025-02-24T15:52:32.4965198Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4965299Z                 # count up differences
2025-02-24T15:52:32.4965471Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4965555Z                     diff += 1
2025-02-24T15:52:32.4965626Z     
2025-02-24T15:52:32.4965720Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4965855Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4966030Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4966152Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4966225Z E           
2025-02-24T15:52:32.4966344Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4966611Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4966883Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4966889Z 
2025-02-24T15:52:32.4967200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4967205Z 
2025-02-24T15:52:32.4967374Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4967379Z 
2025-02-24T15:52:32.4967698Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3950>
2025-02-24T15:52:32.4967900Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>, attr = 'nu'
2025-02-24T15:52:32.4967977Z 
2025-02-24T15:52:32.4968121Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4968316Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4968478Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4968615Z         try:
2025-02-24T15:52:32.4968868Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4968972Z         except KeyError:
2025-02-24T15:52:32.4969115Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4969191Z     
2025-02-24T15:52:32.4969283Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4969384Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4969476Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4969623Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4969713Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4969814Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4969940Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4969944Z 
2025-02-24T15:52:32.4970071Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4970192Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4970342Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4970420Z     ???
2025-02-24T15:52:32.4970532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4970537Z 
2025-02-24T15:52:32.4970612Z >   ???
2025-02-24T15:52:32.4970742Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4970816Z E   
2025-02-24T15:52:32.4971083Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4971208Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4971286Z E          ...
2025-02-24T15:52:32.4971375Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4971516Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4971632Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4971709Z E          ...
2025-02-24T15:52:32.4971797Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4971930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4972036Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4972041Z 
2025-02-24T15:52:32.4972139Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4972381Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T15:52:32.4972386Z 
2025-02-24T15:52:32.4972516Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4972652Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4972755Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4972893Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4973018Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4973118Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4973201Z err_msg = None
2025-02-24T15:52:32.4973205Z 
2025-02-24T15:52:32.4973316Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4973405Z         if err_msg is None:
2025-02-24T15:52:32.4973502Z             if left.shape != right.shape:
2025-02-24T15:52:32.4973592Z                 raise_assert_detail(
2025-02-24T15:52:32.4973742Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4973957Z                 )
2025-02-24T15:52:32.4974028Z     
2025-02-24T15:52:32.4974108Z             diff = 0
2025-02-24T15:52:32.4974220Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4974437Z                 # count up differences
2025-02-24T15:52:32.4974612Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4974698Z                     diff += 1
2025-02-24T15:52:32.4974773Z     
2025-02-24T15:52:32.4974863Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4975006Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4975177Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4975296Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4975368Z E           
2025-02-24T15:52:32.4975487Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4975756Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4976031Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4976036Z 
2025-02-24T15:52:32.4976354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4976359Z 
2025-02-24T15:52:32.4976530Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4976535Z 
2025-02-24T15:52:32.4976770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3a10>
2025-02-24T15:52:32.4976947Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.4977034Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4977039Z 
2025-02-24T15:52:32.4977180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4977296Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4977388Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4977462Z         try:
2025-02-24T15:52:32.4977608Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4977690Z         except KeyError:
2025-02-24T15:52:32.4977831Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4977902Z     
2025-02-24T15:52:32.4977996Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4978096Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4978187Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4978331Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4978419Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4978521Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4978634Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4978638Z 
2025-02-24T15:52:32.4978768Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4978882Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4979035Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4979113Z     ???
2025-02-24T15:52:32.4979222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4979227Z 
2025-02-24T15:52:32.4979301Z >   ???
2025-02-24T15:52:32.4979429Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4979504Z E   
2025-02-24T15:52:32.4979635Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4979860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4979935Z E          ...
2025-02-24T15:52:32.4980105Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4980239Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4980360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4980438Z E          ...
2025-02-24T15:52:32.4980526Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4980657Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4980764Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4980768Z 
2025-02-24T15:52:32.4980864Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4981198Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T15:52:32.4981203Z 
2025-02-24T15:52:32.4981339Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4981474Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4981584Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4981722Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4981848Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4981947Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4982025Z err_msg = None
2025-02-24T15:52:32.4982029Z 
2025-02-24T15:52:32.4982145Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4982228Z         if err_msg is None:
2025-02-24T15:52:32.4982328Z             if left.shape != right.shape:
2025-02-24T15:52:32.4982414Z                 raise_assert_detail(
2025-02-24T15:52:32.4982566Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4982649Z                 )
2025-02-24T15:52:32.4982719Z     
2025-02-24T15:52:32.4982797Z             diff = 0
2025-02-24T15:52:32.4982915Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4983011Z                 # count up differences
2025-02-24T15:52:32.4983179Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4983265Z                     diff += 1
2025-02-24T15:52:32.4983335Z     
2025-02-24T15:52:32.4983430Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4983567Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4983749Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4983862Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4983941Z E           
2025-02-24T15:52:32.4984059Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4984324Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4984596Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4984601Z 
2025-02-24T15:52:32.4984910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4984915Z 
2025-02-24T15:52:32.4985084Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4985207Z 
2025-02-24T15:52:32.4985440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3ad0>
2025-02-24T15:52:32.4985643Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>, attr = 'f_lu'
2025-02-24T15:52:32.4985749Z 
2025-02-24T15:52:32.4985894Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4986009Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4986103Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4986181Z         try:
2025-02-24T15:52:32.4986324Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4986410Z         except KeyError:
2025-02-24T15:52:32.4986549Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4986624Z     
2025-02-24T15:52:32.4986714Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4986815Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4986903Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4987110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4987263Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4987437Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4987623Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4987637Z 
2025-02-24T15:52:32.4987850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4988048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4988294Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4988424Z     ???
2025-02-24T15:52:32.4988593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4988598Z 
2025-02-24T15:52:32.4988675Z >   ???
2025-02-24T15:52:32.4988804Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4988878Z E   
2025-02-24T15:52:32.4989320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4989450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4989525Z E          ...
2025-02-24T15:52:32.4989625Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4989755Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4989882Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4989955Z E          ...
2025-02-24T15:52:32.4990051Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4990178Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4990291Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4990295Z 
2025-02-24T15:52:32.4990387Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4990625Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T15:52:32.4990631Z 
2025-02-24T15:52:32.4990767Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4991023Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4991139Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4991276Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4991409Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4991503Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4991587Z err_msg = None
2025-02-24T15:52:32.4991591Z 
2025-02-24T15:52:32.4991710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4991793Z         if err_msg is None:
2025-02-24T15:52:32.4991895Z             if left.shape != right.shape:
2025-02-24T15:52:32.4991982Z                 raise_assert_detail(
2025-02-24T15:52:32.4992134Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4992352Z                 )
2025-02-24T15:52:32.4992429Z     
2025-02-24T15:52:32.4992506Z             diff = 0
2025-02-24T15:52:32.4992731Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4992821Z                 # count up differences
2025-02-24T15:52:32.4992999Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4993093Z                     diff += 1
2025-02-24T15:52:32.4993169Z     
2025-02-24T15:52:32.4993263Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4993401Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4993579Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4993691Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4993771Z E           
2025-02-24T15:52:32.4993884Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4994158Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4994432Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4994437Z 
2025-02-24T15:52:32.4994746Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4994751Z 
2025-02-24T15:52:32.4994930Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4994940Z 
2025-02-24T15:52:32.4995164Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd10290>
2025-02-24T15:52:32.5003137Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.5003240Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5003245Z 
2025-02-24T15:52:32.5003397Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5003521Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5003611Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5003685Z         try:
2025-02-24T15:52:32.5003832Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5003923Z         except KeyError:
2025-02-24T15:52:32.5004113Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5004254Z     
2025-02-24T15:52:32.5004419Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5004591Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5004759Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5005012Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5005177Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5005336Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5005538Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5005665Z             else:
2025-02-24T15:52:32.5005831Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5006016Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5006023Z 
2025-02-24T15:52:32.5006247Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5006449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5006708Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5006837Z     ???
2025-02-24T15:52:32.5007026Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5007273Z 
2025-02-24T15:52:32.5007404Z >   ???
2025-02-24T15:52:32.5007626Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5007753Z E   
2025-02-24T15:52:32.5008125Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5008330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5008459Z E          ...
2025-02-24T15:52:32.5008562Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5008708Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5008831Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5008911Z E          ...
2025-02-24T15:52:32.5009000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5009135Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5009244Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5009249Z 
2025-02-24T15:52:32.5009353Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5009599Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T15:52:32.5009605Z 
2025-02-24T15:52:32.5009752Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5009896Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5009996Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5010147Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5010274Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5010375Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5010451Z err_msg = None
2025-02-24T15:52:32.5010456Z 
2025-02-24T15:52:32.5010579Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5010663Z         if err_msg is None:
2025-02-24T15:52:32.5010775Z             if left.shape != right.shape:
2025-02-24T15:52:32.5010868Z                 raise_assert_detail(
2025-02-24T15:52:32.5011186Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5011266Z                 )
2025-02-24T15:52:32.5011338Z     
2025-02-24T15:52:32.5011417Z             diff = 0
2025-02-24T15:52:32.5011534Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5011635Z                 # count up differences
2025-02-24T15:52:32.5011808Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5011893Z                     diff += 1
2025-02-24T15:52:32.5011963Z     
2025-02-24T15:52:32.5012059Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5012197Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5012372Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5012500Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5012572Z E           
2025-02-24T15:52:32.5012694Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5012962Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5013235Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5013242Z 
2025-02-24T15:52:32.5013564Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5013709Z 
2025-02-24T15:52:32.5013887Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5013991Z 
2025-02-24T15:52:32.5014225Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd10350>
2025-02-24T15:52:32.5014398Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.5014481Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5014485Z 
2025-02-24T15:52:32.5014632Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5014748Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5014839Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5014911Z         try:
2025-02-24T15:52:32.5015058Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5015142Z         except KeyError:
2025-02-24T15:52:32.5015287Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5015367Z     
2025-02-24T15:52:32.5015465Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5015564Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5015667Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5015805Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5015898Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5015993Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5016107Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5016185Z             else:
2025-02-24T15:52:32.5016283Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5016397Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5016402Z 
2025-02-24T15:52:32.5016528Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5016650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5016804Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5016883Z     ???
2025-02-24T15:52:32.5016996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5017005Z 
2025-02-24T15:52:32.5017079Z >   ???
2025-02-24T15:52:32.5017209Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5017284Z E   
2025-02-24T15:52:32.5017416Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5017533Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5017607Z E          ...
2025-02-24T15:52:32.5017701Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5017836Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5017955Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5018033Z E          ...
2025-02-24T15:52:32.5018120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5018255Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5018361Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5018369Z 
2025-02-24T15:52:32.5018466Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5018680Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T15:52:32.5018685Z 
2025-02-24T15:52:32.5018821Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5018954Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5019059Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5019199Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5019326Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5019426Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5019592Z err_msg = None
2025-02-24T15:52:32.5019596Z 
2025-02-24T15:52:32.5019715Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5019874Z         if err_msg is None:
2025-02-24T15:52:32.5019978Z             if left.shape != right.shape:
2025-02-24T15:52:32.5020064Z                 raise_assert_detail(
2025-02-24T15:52:32.5020224Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5020301Z                 )
2025-02-24T15:52:32.5020370Z     
2025-02-24T15:52:32.5020447Z             diff = 0
2025-02-24T15:52:32.5020559Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5020654Z                 # count up differences
2025-02-24T15:52:32.5020828Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5021039Z                     diff += 1
2025-02-24T15:52:32.5021112Z     
2025-02-24T15:52:32.5021214Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5021349Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5021528Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5021654Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5021727Z E           
2025-02-24T15:52:32.5021846Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5022106Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5022374Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5022387Z 
2025-02-24T15:52:32.5022707Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5022712Z 
2025-02-24T15:52:32.5022885Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5022890Z 
2025-02-24T15:52:32.5023120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd104d0>
2025-02-24T15:52:32.5023288Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.5023368Z attr = 'j_blues'
2025-02-24T15:52:32.5023373Z 
2025-02-24T15:52:32.5023590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5023807Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5023958Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5024090Z         try:
2025-02-24T15:52:32.5024336Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5024473Z         except KeyError:
2025-02-24T15:52:32.5024719Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5024792Z     
2025-02-24T15:52:32.5024890Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5024985Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5025082Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5025217Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5025308Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5025398Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5025514Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5025594Z             else:
2025-02-24T15:52:32.5025692Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5025806Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5025943Z 
2025-02-24T15:52:32.5026078Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5026202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5026459Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5026536Z     ???
2025-02-24T15:52:32.5026647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5026657Z 
2025-02-24T15:52:32.5026726Z >   ???
2025-02-24T15:52:32.5026859Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5026929Z E   
2025-02-24T15:52:32.5027063Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5027179Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5027256Z E          ...
2025-02-24T15:52:32.5027345Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5027481Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5027599Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5027675Z E          ...
2025-02-24T15:52:32.5027761Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5027899Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5028012Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5028016Z 
2025-02-24T15:52:32.5028107Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5028385Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T15:52:32.5028390Z 
2025-02-24T15:52:32.5028520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5028654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5028755Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5028894Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5029029Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5029130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5029210Z err_msg = None
2025-02-24T15:52:32.5029215Z 
2025-02-24T15:52:32.5029327Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5029415Z         if err_msg is None:
2025-02-24T15:52:32.5029511Z             if left.shape != right.shape:
2025-02-24T15:52:32.5029601Z                 raise_assert_detail(
2025-02-24T15:52:32.5029749Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5029825Z                 )
2025-02-24T15:52:32.5029894Z     
2025-02-24T15:52:32.5029972Z             diff = 0
2025-02-24T15:52:32.5030091Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5030181Z                 # count up differences
2025-02-24T15:52:32.5030363Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5030443Z                     diff += 1
2025-02-24T15:52:32.5030525Z     
2025-02-24T15:52:32.5030615Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5030757Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5031039Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5031162Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5031234Z E           
2025-02-24T15:52:32.5031350Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5031634Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5032081Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5032186Z 
2025-02-24T15:52:32.5032504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5032508Z 
2025-02-24T15:52:32.5032682Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5032687Z 
2025-02-24T15:52:32.5032909Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11250>
2025-02-24T15:52:32.5033077Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5033153Z attr = 'lines'
2025-02-24T15:52:32.5033157Z 
2025-02-24T15:52:32.5033302Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5033419Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5033513Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5033586Z         try:
2025-02-24T15:52:32.5033729Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5033813Z         except KeyError:
2025-02-24T15:52:32.5033951Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5034025Z     
2025-02-24T15:52:32.5034114Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5034214Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5034303Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5034440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5034529Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5034624Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5034734Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5034819Z             else:
2025-02-24T15:52:32.5034914Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5035032Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5035036Z 
2025-02-24T15:52:32.5035167Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5035281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5035433Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5035504Z     ???
2025-02-24T15:52:32.5035621Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5035626Z 
2025-02-24T15:52:32.5035694Z >   ???
2025-02-24T15:52:32.5035826Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5035895Z E   
2025-02-24T15:52:32.5036029Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5036145Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5036222Z E          ...
2025-02-24T15:52:32.5036314Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5036448Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5036566Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5036638Z E          ...
2025-02-24T15:52:32.5036726Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5036852Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5036961Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5036966Z 
2025-02-24T15:52:32.5037056Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5037370Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T15:52:32.5037376Z 
2025-02-24T15:52:32.5037603Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11310>
2025-02-24T15:52:32.5037855Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5037952Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5038027Z 
2025-02-24T15:52:32.5038163Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5038284Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5038369Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5038444Z         try:
2025-02-24T15:52:32.5038589Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5038672Z         except KeyError:
2025-02-24T15:52:32.5038814Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5038885Z     
2025-02-24T15:52:32.5038976Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5039073Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5039168Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5039300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5039396Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5039485Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5039606Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5039610Z 
2025-02-24T15:52:32.5039739Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5039855Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5039860Z 
2025-02-24T15:52:32.5040000Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5040085Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5040198Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5040281Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5040425Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5040508Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5040624Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5040709Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5040789Z err_msg = None
2025-02-24T15:52:32.5040793Z 
2025-02-24T15:52:32.5041024Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5041110Z         if err_msg is None:
2025-02-24T15:52:32.5041214Z             if left.shape != right.shape:
2025-02-24T15:52:32.5041314Z                 raise_assert_detail(
2025-02-24T15:52:32.5041469Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5041552Z                 )
2025-02-24T15:52:32.5041626Z     
2025-02-24T15:52:32.5041707Z             diff = 0
2025-02-24T15:52:32.5041829Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5041920Z                 # count up differences
2025-02-24T15:52:32.5042118Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5042204Z                     diff += 1
2025-02-24T15:52:32.5042278Z     
2025-02-24T15:52:32.5042446Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5042706Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5043007Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5043182Z E           AssertionError: Series are different
2025-02-24T15:52:32.5043308Z E           
2025-02-24T15:52:32.5043481Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5043899Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5044378Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5044848Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5044854Z 
2025-02-24T15:52:32.5045178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5045493Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T15:52:32.5045503Z 
2025-02-24T15:52:32.5045734Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd113d0>
2025-02-24T15:52:32.5045904Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5045997Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5046001Z 
2025-02-24T15:52:32.5046143Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5046258Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5046346Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5046419Z         try:
2025-02-24T15:52:32.5046563Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5046649Z         except KeyError:
2025-02-24T15:52:32.5046788Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5046869Z     
2025-02-24T15:52:32.5046958Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5047055Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5047143Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5047282Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5047369Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5047461Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5047569Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5047574Z 
2025-02-24T15:52:32.5047702Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5047818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5047823Z 
2025-02-24T15:52:32.5047957Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5048043Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5048150Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5048238Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5048377Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5048469Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5048573Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5048657Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5048736Z err_msg = None
2025-02-24T15:52:32.5048740Z 
2025-02-24T15:52:32.5048847Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5048932Z         if err_msg is None:
2025-02-24T15:52:32.5049025Z             if left.shape != right.shape:
2025-02-24T15:52:32.5049117Z                 raise_assert_detail(
2025-02-24T15:52:32.5049260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5049337Z                 )
2025-02-24T15:52:32.5049407Z     
2025-02-24T15:52:32.5049573Z             diff = 0
2025-02-24T15:52:32.5049685Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5049779Z                 # count up differences
2025-02-24T15:52:32.5050042Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5050127Z                     diff += 1
2025-02-24T15:52:32.5050201Z     
2025-02-24T15:52:32.5050287Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5050427Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5050598Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5050705Z E           AssertionError: Series are different
2025-02-24T15:52:32.5050778Z E           
2025-02-24T15:52:32.5050883Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5051390Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5051783Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5052162Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5052177Z 
2025-02-24T15:52:32.5052490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5052747Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T15:52:32.5052752Z 
2025-02-24T15:52:32.5052885Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5053011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5053113Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5053247Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5053374Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5053477Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5053558Z err_msg = None
2025-02-24T15:52:32.5053562Z 
2025-02-24T15:52:32.5053674Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5053756Z         if err_msg is None:
2025-02-24T15:52:32.5053854Z             if left.shape != right.shape:
2025-02-24T15:52:32.5053939Z                 raise_assert_detail(
2025-02-24T15:52:32.5054089Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5054163Z                 )
2025-02-24T15:52:32.5054237Z     
2025-02-24T15:52:32.5054313Z             diff = 0
2025-02-24T15:52:32.5054422Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5054516Z                 # count up differences
2025-02-24T15:52:32.5054685Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5054890Z                     diff += 1
2025-02-24T15:52:32.5054959Z     
2025-02-24T15:52:32.5055051Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5055287Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5055461Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5055574Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5055650Z E           
2025-02-24T15:52:32.5055763Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5056031Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5056298Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5056317Z 
2025-02-24T15:52:32.5056619Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5056631Z 
2025-02-24T15:52:32.5056800Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5056804Z 
2025-02-24T15:52:32.5057035Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11610>
2025-02-24T15:52:32.5057235Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>, attr = 'nu'
2025-02-24T15:52:32.5057240Z 
2025-02-24T15:52:32.5057381Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5057496Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5057591Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5057662Z         try:
2025-02-24T15:52:32.5057807Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5057898Z         except KeyError:
2025-02-24T15:52:32.5058035Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5058108Z     
2025-02-24T15:52:32.5058197Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5058296Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5058385Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5058522Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5058611Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5058705Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5058814Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5058818Z 
2025-02-24T15:52:32.5058946Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5059067Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5059213Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5059291Z     ???
2025-02-24T15:52:32.5059400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5059404Z 
2025-02-24T15:52:32.5059478Z >   ???
2025-02-24T15:52:32.5059604Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5059678Z E   
2025-02-24T15:52:32.5059806Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5059926Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5059998Z E          ...
2025-02-24T15:52:32.5060091Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5060303Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5060504Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5060772Z E          ...
2025-02-24T15:52:32.5061046Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5061273Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5061627Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5061635Z 
2025-02-24T15:52:32.5061737Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5062043Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T15:52:32.5062067Z 
2025-02-24T15:52:32.5062217Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5062355Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5062451Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5062589Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5062711Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5062818Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5062898Z err_msg = None
2025-02-24T15:52:32.5062902Z 
2025-02-24T15:52:32.5063019Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5063105Z         if err_msg is None:
2025-02-24T15:52:32.5063200Z             if left.shape != right.shape:
2025-02-24T15:52:32.5063288Z                 raise_assert_detail(
2025-02-24T15:52:32.5063431Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5063507Z                 )
2025-02-24T15:52:32.5063577Z     
2025-02-24T15:52:32.5063656Z             diff = 0
2025-02-24T15:52:32.5063766Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5063861Z                 # count up differences
2025-02-24T15:52:32.5064030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5064118Z                     diff += 1
2025-02-24T15:52:32.5064186Z     
2025-02-24T15:52:32.5064278Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5064424Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5064594Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5064712Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5064784Z E           
2025-02-24T15:52:32.5064903Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5065165Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5065441Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5065469Z 
2025-02-24T15:52:32.5065790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5065794Z 
2025-02-24T15:52:32.5065963Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5065968Z 
2025-02-24T15:52:32.5066195Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd116d0>
2025-02-24T15:52:32.5066359Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5066445Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5066450Z 
2025-02-24T15:52:32.5066589Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5066828Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5066918Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5066988Z         try:
2025-02-24T15:52:32.5067209Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5067291Z         except KeyError:
2025-02-24T15:52:32.5067434Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5067504Z     
2025-02-24T15:52:32.5067597Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5067690Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5067784Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5067918Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5068005Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5068100Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5068210Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5068215Z 
2025-02-24T15:52:32.5068350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5068462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5068616Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5068688Z     ???
2025-02-24T15:52:32.5068804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5068809Z 
2025-02-24T15:52:32.5068880Z >   ???
2025-02-24T15:52:32.5069007Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5069080Z E   
2025-02-24T15:52:32.5069206Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5069320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5069393Z E          ...
2025-02-24T15:52:32.5069485Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5069614Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5069734Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5069810Z E          ...
2025-02-24T15:52:32.5069903Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5070033Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5070147Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5070152Z 
2025-02-24T15:52:32.5070244Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5070510Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T15:52:32.5070515Z 
2025-02-24T15:52:32.5070648Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5070775Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5070877Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5071144Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5071283Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5071381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5071462Z err_msg = None
2025-02-24T15:52:32.5071467Z 
2025-02-24T15:52:32.5071579Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5071660Z         if err_msg is None:
2025-02-24T15:52:32.5071759Z             if left.shape != right.shape:
2025-02-24T15:52:32.5071844Z                 raise_assert_detail(
2025-02-24T15:52:32.5071992Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5072066Z                 )
2025-02-24T15:52:32.5072143Z     
2025-02-24T15:52:32.5072215Z             diff = 0
2025-02-24T15:52:32.5072332Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5072424Z                 # count up differences
2025-02-24T15:52:32.5072594Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5072801Z                     diff += 1
2025-02-24T15:52:32.5072870Z     
2025-02-24T15:52:32.5073085Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5073224Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5073399Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5073513Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5073588Z E           
2025-02-24T15:52:32.5073699Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5073962Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5074237Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5074249Z 
2025-02-24T15:52:32.5074557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5074566Z 
2025-02-24T15:52:32.5074734Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5074739Z 
2025-02-24T15:52:32.5074968Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11790>
2025-02-24T15:52:32.5075174Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>, attr = 'f_lu'
2025-02-24T15:52:32.5075178Z 
2025-02-24T15:52:32.5075320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5075440Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5075530Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5075601Z         try:
2025-02-24T15:52:32.5075753Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5075839Z         except KeyError:
2025-02-24T15:52:32.5075977Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5076052Z     
2025-02-24T15:52:32.5076139Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5076237Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5076327Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5076464Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5076550Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5076645Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5076754Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5076759Z 
2025-02-24T15:52:32.5076893Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5077011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5077163Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5077238Z     ???
2025-02-24T15:52:32.5077348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5077353Z 
2025-02-24T15:52:32.5077427Z >   ???
2025-02-24T15:52:32.5077552Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5077626Z E   
2025-02-24T15:52:32.5077753Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5077870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5077941Z E          ...
2025-02-24T15:52:32.5078033Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5078166Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5078278Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5078446Z E          ...
2025-02-24T15:52:32.5078532Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5078740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5078848Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5078853Z 
2025-02-24T15:52:32.5078946Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5079267Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T15:52:32.5079273Z 
2025-02-24T15:52:32.5079497Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11d90>
2025-02-24T15:52:32.5079792Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5079952Z attr = 'stimulated_emission_factor'
2025-02-24T15:52:32.5079960Z 
2025-02-24T15:52:32.5080192Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5080389Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5080534Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5080655Z         try:
2025-02-24T15:52:32.5080857Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5081057Z         except KeyError:
2025-02-24T15:52:32.5081204Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5081281Z     
2025-02-24T15:52:32.5081369Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5081468Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5081555Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5081691Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5081777Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5081870Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5081977Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5082054Z             else:
2025-02-24T15:52:32.5082156Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5082276Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5082285Z 
2025-02-24T15:52:32.5082416Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5082531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5082682Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5082753Z     ???
2025-02-24T15:52:32.5082868Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5082873Z 
2025-02-24T15:52:32.5082942Z >   ???
2025-02-24T15:52:32.5083128Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5083198Z E   
2025-02-24T15:52:32.5083369Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T15:52:32.5083737Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5088351Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:52:32.5093389Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:52:32.5093595Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T15:52:32.5093604Z 
2025-02-24T15:52:32.5093700Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5094007Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T15:52:32.5094016Z 
2025-02-24T15:52:32.5094155Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5094289Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5094393Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5094527Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5094658Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5094755Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5094837Z err_msg = None
2025-02-24T15:52:32.5094842Z 
2025-02-24T15:52:32.5095075Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5095159Z         if err_msg is None:
2025-02-24T15:52:32.5095260Z             if left.shape != right.shape:
2025-02-24T15:52:32.5095449Z                 raise_assert_detail(
2025-02-24T15:52:32.5095608Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5095681Z                 )
2025-02-24T15:52:32.5095757Z     
2025-02-24T15:52:32.5095832Z             diff = 0
2025-02-24T15:52:32.5095950Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5096045Z                 # count up differences
2025-02-24T15:52:32.5096221Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5096308Z                     diff += 1
2025-02-24T15:52:32.5096377Z     
2025-02-24T15:52:32.5096472Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5096611Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5096791Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5096907Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5096992Z E           
2025-02-24T15:52:32.5097105Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5097373Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5097639Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5097652Z 
2025-02-24T15:52:32.5097960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5097970Z 
2025-02-24T15:52:32.5098149Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5098154Z 
2025-02-24T15:52:32.5098544Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11e50>
2025-02-24T15:52:32.5098832Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5098988Z attr = 'previous_beta_sobolev'
2025-02-24T15:52:32.5098994Z 
2025-02-24T15:52:32.5099224Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5099433Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5099530Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5099607Z         try:
2025-02-24T15:52:32.5099755Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5099848Z         except KeyError:
2025-02-24T15:52:32.5099995Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5100064Z     
2025-02-24T15:52:32.5100163Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5100257Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5100352Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5100486Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5100578Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5100668Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5100783Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5100857Z             else:
2025-02-24T15:52:32.5101061Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5101172Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5101181Z 
2025-02-24T15:52:32.5101311Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5101590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5101743Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5101926Z     ???
2025-02-24T15:52:32.5102039Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5102043Z 
2025-02-24T15:52:32.5102117Z >   ???
2025-02-24T15:52:32.5102244Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5102319Z E   
2025-02-24T15:52:32.5102449Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5102566Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5102643Z E          ...
2025-02-24T15:52:32.5102733Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5102870Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5102983Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5103067Z E          ...
2025-02-24T15:52:32.5103153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5103284Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5103395Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5103400Z 
2025-02-24T15:52:32.5103495Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5103775Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T15:52:32.5103785Z 
2025-02-24T15:52:32.5103915Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5104047Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5104144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5104283Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5104408Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5104510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5104593Z err_msg = None
2025-02-24T15:52:32.5104602Z 
2025-02-24T15:52:32.5104713Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5104801Z         if err_msg is None:
2025-02-24T15:52:32.5104898Z             if left.shape != right.shape:
2025-02-24T15:52:32.5104987Z                 raise_assert_detail(
2025-02-24T15:52:32.5105133Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5105210Z                 )
2025-02-24T15:52:32.5105280Z     
2025-02-24T15:52:32.5105359Z             diff = 0
2025-02-24T15:52:32.5105471Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5105564Z                 # count up differences
2025-02-24T15:52:32.5105738Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5105826Z                     diff += 1
2025-02-24T15:52:32.5105896Z     
2025-02-24T15:52:32.5105986Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5106131Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5106301Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5106418Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5106490Z E           
2025-02-24T15:52:32.5106607Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5106866Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5107136Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5107322Z 
2025-02-24T15:52:32.5107642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5107647Z 
2025-02-24T15:52:32.5107818Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5107823Z 
2025-02-24T15:52:32.5108051Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11f10>
2025-02-24T15:52:32.5108223Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5108305Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5108309Z 
2025-02-24T15:52:32.5108451Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5108570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5108659Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5108731Z         try:
2025-02-24T15:52:32.5108886Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5108968Z         except KeyError:
2025-02-24T15:52:32.5109111Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5109180Z     
2025-02-24T15:52:32.5109274Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5109374Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5109463Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5109599Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5109685Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5109780Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5109891Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5109967Z             else:
2025-02-24T15:52:32.5110068Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5110179Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5110184Z 
2025-02-24T15:52:32.5110313Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5110431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5110581Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5110653Z     ???
2025-02-24T15:52:32.5110768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5110772Z 
2025-02-24T15:52:32.5110842Z >   ???
2025-02-24T15:52:32.5111073Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5111144Z E   
2025-02-24T15:52:32.5111278Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5111389Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5111465Z E          ...
2025-02-24T15:52:32.5111557Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5111692Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5111813Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5111889Z E          ...
2025-02-24T15:52:32.5111981Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5112105Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5112214Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5112219Z 
2025-02-24T15:52:32.5112307Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5112588Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T15:52:32.5112593Z 
2025-02-24T15:52:32.5112721Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5112854Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5113094Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5113227Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5113458Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5113553Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5113632Z err_msg = None
2025-02-24T15:52:32.5113636Z 
2025-02-24T15:52:32.5113746Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5113832Z         if err_msg is None:
2025-02-24T15:52:32.5113934Z             if left.shape != right.shape:
2025-02-24T15:52:32.5114020Z                 raise_assert_detail(
2025-02-24T15:52:32.5114169Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5114242Z                 )
2025-02-24T15:52:32.5114314Z     
2025-02-24T15:52:32.5114388Z             diff = 0
2025-02-24T15:52:32.5114508Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5114596Z                 # count up differences
2025-02-24T15:52:32.5114776Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5114854Z                     diff += 1
2025-02-24T15:52:32.5114930Z     
2025-02-24T15:52:32.5115019Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5115160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5115336Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5115450Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5115527Z E           
2025-02-24T15:52:32.5115637Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5115902Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5116174Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5116186Z 
2025-02-24T15:52:32.5116488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5116493Z 
2025-02-24T15:52:32.5116665Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5116669Z 
2025-02-24T15:52:32.5116890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11fd0>
2025-02-24T15:52:32.5117065Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5117146Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5117156Z 
2025-02-24T15:52:32.5117291Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5117483Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5117632Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5117758Z         try:
2025-02-24T15:52:32.5117996Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5118137Z         except KeyError:
2025-02-24T15:52:32.5118367Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5118491Z     
2025-02-24T15:52:32.5118632Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5118734Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5118823Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5118961Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5119151Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5119241Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5119357Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5119507Z             else:
2025-02-24T15:52:32.5119607Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5119715Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5119719Z 
2025-02-24T15:52:32.5119850Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5119964Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5120114Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5120184Z     ???
2025-02-24T15:52:32.5120299Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5120304Z 
2025-02-24T15:52:32.5120378Z >   ???
2025-02-24T15:52:32.5120506Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5120586Z E   
2025-02-24T15:52:32.5120714Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5120829Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5121037Z E          ...
2025-02-24T15:52:32.5121136Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5121266Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5121383Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5121454Z E          ...
2025-02-24T15:52:32.5121546Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5121676Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5121780Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5121784Z 
2025-02-24T15:52:32.5121879Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5122149Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T15:52:32.5122160Z 
2025-02-24T15:52:32.5122292Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5122419Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5122525Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5122666Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5122790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5122889Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5122968Z err_msg = None
2025-02-24T15:52:32.5122972Z 
2025-02-24T15:52:32.5123088Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5123170Z         if err_msg is None:
2025-02-24T15:52:32.5123272Z             if left.shape != right.shape:
2025-02-24T15:52:32.5123359Z                 raise_assert_detail(
2025-02-24T15:52:32.5123512Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5123589Z                 )
2025-02-24T15:52:32.5123665Z     
2025-02-24T15:52:32.5123743Z             diff = 0
2025-02-24T15:52:32.5123855Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5123947Z                 # count up differences
2025-02-24T15:52:32.5124118Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5124205Z                     diff += 1
2025-02-24T15:52:32.5124274Z     
2025-02-24T15:52:32.5124366Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5124502Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5124676Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5124789Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5125011Z E           
2025-02-24T15:52:32.5125127Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5125386Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5125759Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5125765Z 
2025-02-24T15:52:32.5126073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5126078Z 
2025-02-24T15:52:32.5126252Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5126257Z 
2025-02-24T15:52:32.5126480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd12150>
2025-02-24T15:52:32.5126653Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5126733Z attr = 'j_blues'
2025-02-24T15:52:32.5126737Z 
2025-02-24T15:52:32.5126872Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5126992Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5127080Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5127153Z         try:
2025-02-24T15:52:32.5127295Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5127376Z         except KeyError:
2025-02-24T15:52:32.5127514Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5127584Z     
2025-02-24T15:52:32.5127678Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5127777Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5127872Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5128002Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5128098Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5128188Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5128307Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5128384Z             else:
2025-02-24T15:52:32.5128479Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5128593Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5128597Z 
2025-02-24T15:52:32.5128722Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5128841Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5128986Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5129062Z     ???
2025-02-24T15:52:32.5129177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5129182Z 
2025-02-24T15:52:32.5129256Z >   ???
2025-02-24T15:52:32.5129391Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5129460Z E   
2025-02-24T15:52:32.5129593Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5129702Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5129781Z E          ...
2025-02-24T15:52:32.5129869Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5130006Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5130117Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5130192Z E          ...
2025-02-24T15:52:32.5130278Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5130408Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5130512Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5130607Z 
2025-02-24T15:52:32.5130698Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5131077Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T15:52:32.5131191Z 
2025-02-24T15:52:32.5131326Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5131458Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5131554Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5131691Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5131813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5131912Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5131991Z err_msg = None
2025-02-24T15:52:32.5132000Z 
2025-02-24T15:52:32.5132110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5132195Z         if err_msg is None:
2025-02-24T15:52:32.5132290Z             if left.shape != right.shape:
2025-02-24T15:52:32.5132385Z                 raise_assert_detail(
2025-02-24T15:52:32.5132531Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5132605Z                 )
2025-02-24T15:52:32.5132674Z     
2025-02-24T15:52:32.5132752Z             diff = 0
2025-02-24T15:52:32.5132863Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5132955Z                 # count up differences
2025-02-24T15:52:32.5133131Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5133210Z                     diff += 1
2025-02-24T15:52:32.5133284Z     
2025-02-24T15:52:32.5133372Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5133513Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5133689Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5133804Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5133882Z E           
2025-02-24T15:52:32.5134000Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5134260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5134526Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5134535Z 
2025-02-24T15:52:32.5134844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5134854Z 
2025-02-24T15:52:32.5135024Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5135032Z 
2025-02-24T15:52:32.5135256Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd12ed0>
2025-02-24T15:52:32.5135428Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5135504Z attr = 'lines'
2025-02-24T15:52:32.5135508Z 
2025-02-24T15:52:32.5135650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5135762Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5135852Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5135924Z         try:
2025-02-24T15:52:32.5136153Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5136459Z         except KeyError:
2025-02-24T15:52:32.5136702Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5136825Z     
2025-02-24T15:52:32.5137071Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5137251Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5137348Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5137498Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5137587Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5137688Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5137805Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5137883Z             else:
2025-02-24T15:52:32.5137982Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5138098Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5138102Z 
2025-02-24T15:52:32.5138235Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5138357Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5138511Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5138590Z     ???
2025-02-24T15:52:32.5138709Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5138714Z 
2025-02-24T15:52:32.5138783Z >   ???
2025-02-24T15:52:32.5138917Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5138987Z E   
2025-02-24T15:52:32.5139124Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5139243Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5139315Z E          ...
2025-02-24T15:52:32.5139410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5139542Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5139662Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5139738Z E          ...
2025-02-24T15:52:32.5139831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5139956Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5140072Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5140076Z 
2025-02-24T15:52:32.5140169Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5140475Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T15:52:32.5140481Z 
2025-02-24T15:52:32.5140711Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd12f90>
2025-02-24T15:52:32.5140880Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5141082Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5141087Z 
2025-02-24T15:52:32.5141225Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5141346Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5141437Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5141515Z         try:
2025-02-24T15:52:32.5141660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5141752Z         except KeyError:
2025-02-24T15:52:32.5141894Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5141964Z     
2025-02-24T15:52:32.5142057Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5142151Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5142246Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5142379Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5142470Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5142561Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5142675Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5142679Z 
2025-02-24T15:52:32.5142804Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5143048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5143052Z 
2025-02-24T15:52:32.5143195Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5143402Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5143517Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5143609Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5143761Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5143844Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5143954Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5144035Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5144118Z err_msg = None
2025-02-24T15:52:32.5144122Z 
2025-02-24T15:52:32.5144237Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5144325Z         if err_msg is None:
2025-02-24T15:52:32.5144423Z             if left.shape != right.shape:
2025-02-24T15:52:32.5144509Z                 raise_assert_detail(
2025-02-24T15:52:32.5144664Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5144737Z                 )
2025-02-24T15:52:32.5144813Z     
2025-02-24T15:52:32.5144887Z             diff = 0
2025-02-24T15:52:32.5145004Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5145094Z                 # count up differences
2025-02-24T15:52:32.5145273Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5145356Z                     diff += 1
2025-02-24T15:52:32.5145427Z     
2025-02-24T15:52:32.5145516Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5145653Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5145827Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5145938Z E           AssertionError: Series are different
2025-02-24T15:52:32.5146012Z E           
2025-02-24T15:52:32.5146120Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5146498Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5146835Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5147172Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5147188Z 
2025-02-24T15:52:32.5147505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5147804Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T15:52:32.5147809Z 
2025-02-24T15:52:32.5148031Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13050>
2025-02-24T15:52:32.5148206Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5148389Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5148394Z 
2025-02-24T15:52:32.5148540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5148733Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5148820Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5148898Z         try:
2025-02-24T15:52:32.5149040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5149126Z         except KeyError:
2025-02-24T15:52:32.5149262Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5149340Z     
2025-02-24T15:52:32.5149429Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5149531Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5149622Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5149759Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5149846Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5149948Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5150071Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5150089Z 
2025-02-24T15:52:32.5150213Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5150332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5150337Z 
2025-02-24T15:52:32.5150494Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5150585Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5150701Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5150798Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5151039Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5151131Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5151242Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5151326Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5151406Z err_msg = None
2025-02-24T15:52:32.5151416Z 
2025-02-24T15:52:32.5151525Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5151612Z         if err_msg is None:
2025-02-24T15:52:32.5151709Z             if left.shape != right.shape:
2025-02-24T15:52:32.5151800Z                 raise_assert_detail(
2025-02-24T15:52:32.5151945Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5152023Z                 )
2025-02-24T15:52:32.5152097Z     
2025-02-24T15:52:32.5152171Z             diff = 0
2025-02-24T15:52:32.5152289Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5152379Z                 # count up differences
2025-02-24T15:52:32.5152556Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5152634Z                     diff += 1
2025-02-24T15:52:32.5152712Z     
2025-02-24T15:52:32.5152800Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5152941Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5153117Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5153227Z E           AssertionError: Series are different
2025-02-24T15:52:32.5153300Z E           
2025-02-24T15:52:32.5153407Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5153779Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5154208Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5155207Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5155219Z 
2025-02-24T15:52:32.5155588Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5155853Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T15:52:32.5155864Z 
2025-02-24T15:52:32.5155997Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5156138Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5156239Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5156377Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5156500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5156598Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5156674Z err_msg = None
2025-02-24T15:52:32.5156678Z 
2025-02-24T15:52:32.5156794Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5156881Z         if err_msg is None:
2025-02-24T15:52:32.5156984Z             if left.shape != right.shape:
2025-02-24T15:52:32.5157078Z                 raise_assert_detail(
2025-02-24T15:52:32.5157231Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5157314Z                 )
2025-02-24T15:52:32.5157385Z     
2025-02-24T15:52:32.5157463Z             diff = 0
2025-02-24T15:52:32.5157576Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5157671Z                 # count up differences
2025-02-24T15:52:32.5157844Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5157927Z                     diff += 1
2025-02-24T15:52:32.5158002Z     
2025-02-24T15:52:32.5158097Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5158240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5158411Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5158535Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5158607Z E           
2025-02-24T15:52:32.5158728Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5158994Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5159260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5159266Z 
2025-02-24T15:52:32.5159576Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5159668Z 
2025-02-24T15:52:32.5159843Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5159922Z 
2025-02-24T15:52:32.5160155Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13290>
2025-02-24T15:52:32.5160352Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>, attr = 'nu'
2025-02-24T15:52:32.5160361Z 
2025-02-24T15:52:32.5160503Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5160625Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5160713Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5160789Z         try:
2025-02-24T15:52:32.5161061Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5161153Z         except KeyError:
2025-02-24T15:52:32.5161294Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5161376Z     
2025-02-24T15:52:32.5161465Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5161567Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5161682Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5161826Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5161920Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5162013Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5162129Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5162134Z 
2025-02-24T15:52:32.5162258Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5162378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5162526Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5162603Z     ???
2025-02-24T15:52:32.5162715Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5162724Z 
2025-02-24T15:52:32.5162802Z >   ???
2025-02-24T15:52:32.5162935Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5163006Z E   
2025-02-24T15:52:32.5163139Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5163258Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5163334Z E          ...
2025-02-24T15:52:32.5163426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5163566Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5163680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5163759Z E          ...
2025-02-24T15:52:32.5163846Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5163976Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5164091Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5164095Z 
2025-02-24T15:52:32.5164187Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5164466Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T15:52:32.5164472Z 
2025-02-24T15:52:32.5164605Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5164739Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5164836Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5164976Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5165107Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5165202Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5165283Z err_msg = None
2025-02-24T15:52:32.5165287Z 
2025-02-24T15:52:32.5165399Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5165487Z         if err_msg is None:
2025-02-24T15:52:32.5165723Z             if left.shape != right.shape:
2025-02-24T15:52:32.5165815Z                 raise_assert_detail(
2025-02-24T15:52:32.5165960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5166159Z                 )
2025-02-24T15:52:32.5166230Z     
2025-02-24T15:52:32.5166311Z             diff = 0
2025-02-24T15:52:32.5166428Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5166516Z                 # count up differences
2025-02-24T15:52:32.5166692Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5166772Z                     diff += 1
2025-02-24T15:52:32.5166846Z     
2025-02-24T15:52:32.5166933Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5167072Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5167243Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5167368Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5167441Z E           
2025-02-24T15:52:32.5167558Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5167830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5168093Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5168099Z 
2025-02-24T15:52:32.5168415Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5168424Z 
2025-02-24T15:52:32.5168600Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5168609Z 
2025-02-24T15:52:32.5168832Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13350>
2025-02-24T15:52:32.5169002Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5169085Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5169090Z 
2025-02-24T15:52:32.5169230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5169345Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5169435Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5169507Z         try:
2025-02-24T15:52:32.5169651Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5169738Z         except KeyError:
2025-02-24T15:52:32.5169877Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5169956Z     
2025-02-24T15:52:32.5170043Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5170144Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5170240Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5170377Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5170464Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5170560Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5170670Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5170675Z 
2025-02-24T15:52:32.5170804Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5171043Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5171199Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5171276Z     ???
2025-02-24T15:52:32.5171387Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5171512Z 
2025-02-24T15:52:32.5171588Z >   ???
2025-02-24T15:52:32.5171717Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5171895Z E   
2025-02-24T15:52:32.5172026Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5172143Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5172219Z E          ...
2025-02-24T15:52:32.5172314Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5172450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5172564Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5172640Z E          ...
2025-02-24T15:52:32.5172727Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5172858Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5173043Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5173051Z 
2025-02-24T15:52:32.5173223Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5173655Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T15:52:32.5173676Z 
2025-02-24T15:52:32.5173894Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5174122Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5174234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5174374Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5174499Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5174598Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5174676Z err_msg = None
2025-02-24T15:52:32.5174680Z 
2025-02-24T15:52:32.5174796Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5174888Z         if err_msg is None:
2025-02-24T15:52:32.5174984Z             if left.shape != right.shape:
2025-02-24T15:52:32.5175075Z                 raise_assert_detail(
2025-02-24T15:52:32.5175220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5175295Z                 )
2025-02-24T15:52:32.5175364Z     
2025-02-24T15:52:32.5175443Z             diff = 0
2025-02-24T15:52:32.5175553Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5175646Z                 # count up differences
2025-02-24T15:52:32.5175814Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5175900Z                     diff += 1
2025-02-24T15:52:32.5175972Z     
2025-02-24T15:52:32.5176065Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5176204Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5176374Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5176499Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5176572Z E           
2025-02-24T15:52:32.5176698Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5176956Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5177226Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5177232Z 
2025-02-24T15:52:32.5177645Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5177650Z 
2025-02-24T15:52:32.5177896Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5177901Z 
2025-02-24T15:52:32.5178134Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13410>
2025-02-24T15:52:32.5178335Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>, attr = 'f_lu'
2025-02-24T15:52:32.5178345Z 
2025-02-24T15:52:32.5178481Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5178599Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5178686Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5178764Z         try:
2025-02-24T15:52:32.5178905Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5178994Z         except KeyError:
2025-02-24T15:52:32.5179132Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5179216Z     
2025-02-24T15:52:32.5179305Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5179404Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5179500Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5179637Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5179733Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5179823Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5179940Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5179945Z 
2025-02-24T15:52:32.5180071Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5180189Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5180335Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5180414Z     ???
2025-02-24T15:52:32.5180524Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5180534Z 
2025-02-24T15:52:32.5180607Z >   ???
2025-02-24T15:52:32.5180741Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5180816Z E   
2025-02-24T15:52:32.5181059Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5181175Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5181251Z E          ...
2025-02-24T15:52:32.5181342Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5181479Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5181593Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5181671Z E          ...
2025-02-24T15:52:32.5181758Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5181893Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5182003Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5182008Z 
2025-02-24T15:52:32.5182104Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5182421Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T15:52:32.5182430Z 
2025-02-24T15:52:32.5182652Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13a10>
2025-02-24T15:52:32.5182827Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5182920Z attr = 'stimulated_emission_factor'
2025-02-24T15:52:32.5182925Z 
2025-02-24T15:52:32.5183065Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5183186Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5183271Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5183350Z         try:
2025-02-24T15:52:32.5183491Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5183582Z         except KeyError:
2025-02-24T15:52:32.5183720Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5183920Z     
2025-02-24T15:52:32.5184009Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5184108Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5184303Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5184441Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5184530Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5184625Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5184738Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5184813Z             else:
2025-02-24T15:52:32.5184912Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5185020Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5185024Z 
2025-02-24T15:52:32.5185153Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5185267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5185423Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5185496Z     ???
2025-02-24T15:52:32.5185610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5185622Z 
2025-02-24T15:52:32.5193006Z >   ???
2025-02-24T15:52:32.5193394Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5193527Z E   
2025-02-24T15:52:32.5193842Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:52:32.5194513Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5199519Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.5204683Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.5205193Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:52:32.5205201Z 
2025-02-24T15:52:32.5205306Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5205606Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T15:52:32.5205617Z 
2025-02-24T15:52:32.5205760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5205902Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5206014Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5206154Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5206285Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5206386Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5206470Z err_msg = None
2025-02-24T15:52:32.5206475Z 
2025-02-24T15:52:32.5206600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5206686Z         if err_msg is None:
2025-02-24T15:52:32.5206791Z             if left.shape != right.shape:
2025-02-24T15:52:32.5206889Z                 raise_assert_detail(
2025-02-24T15:52:32.5207047Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5207126Z                 )
2025-02-24T15:52:32.5207203Z     
2025-02-24T15:52:32.5207279Z             diff = 0
2025-02-24T15:52:32.5207400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5207498Z                 # count up differences
2025-02-24T15:52:32.5207674Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5207761Z                     diff += 1
2025-02-24T15:52:32.5207833Z     
2025-02-24T15:52:32.5207929Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5208071Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5208252Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5208370Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5208536Z E           
2025-02-24T15:52:32.5208654Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5208923Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5209272Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5209278Z 
2025-02-24T15:52:32.5209597Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5209606Z 
2025-02-24T15:52:32.5209789Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5209794Z 
2025-02-24T15:52:32.5210025Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13ad0>
2025-02-24T15:52:32.5210197Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5210294Z attr = 'previous_beta_sobolev'
2025-02-24T15:52:32.5210298Z 
2025-02-24T15:52:32.5210439Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5210565Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5210653Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5210787Z         try:
2025-02-24T15:52:32.5211167Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5211323Z         except KeyError:
2025-02-24T15:52:32.5211574Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5211652Z     
2025-02-24T15:52:32.5211759Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5211856Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5211951Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5212092Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5212185Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5212279Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5212396Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5212472Z             else:
2025-02-24T15:52:32.5212575Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5212690Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5212695Z 
2025-02-24T15:52:32.5212825Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5212952Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5213102Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5213186Z     ???
2025-02-24T15:52:32.5213300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5213304Z 
2025-02-24T15:52:32.5213384Z >   ???
2025-02-24T15:52:32.5213516Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5213591Z E   
2025-02-24T15:52:32.5213724Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5213845Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5213924Z E          ...
2025-02-24T15:52:32.5214015Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5214147Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5214271Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5214344Z E          ...
2025-02-24T15:52:32.5214437Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5214562Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5214817Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5214822Z 
2025-02-24T15:52:32.5214916Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5215298Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T15:52:32.5215304Z 
2025-02-24T15:52:32.5215440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5215576Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5215680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5215823Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5215958Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5216058Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5216147Z err_msg = None
2025-02-24T15:52:32.5216151Z 
2025-02-24T15:52:32.5216271Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5216357Z         if err_msg is None:
2025-02-24T15:52:32.5216467Z             if left.shape != right.shape:
2025-02-24T15:52:32.5216556Z                 raise_assert_detail(
2025-02-24T15:52:32.5216711Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5216785Z                 )
2025-02-24T15:52:32.5216860Z     
2025-02-24T15:52:32.5216938Z             diff = 0
2025-02-24T15:52:32.5217065Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5217159Z                 # count up differences
2025-02-24T15:52:32.5217340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5217428Z                     diff += 1
2025-02-24T15:52:32.5217499Z     
2025-02-24T15:52:32.5217597Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5217745Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5217923Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5218045Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5218124Z E           
2025-02-24T15:52:32.5218239Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5218520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5218798Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5218819Z 
2025-02-24T15:52:32.5219149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5219157Z 
2025-02-24T15:52:32.5219335Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5219340Z 
2025-02-24T15:52:32.5219566Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13b90>
2025-02-24T15:52:32.5219741Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5219827Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5219832Z 
2025-02-24T15:52:32.5219972Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5220093Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5220180Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5220259Z         try:
2025-02-24T15:52:32.5220405Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5220590Z         except KeyError:
2025-02-24T15:52:32.5220731Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5220887Z     
2025-02-24T15:52:32.5221130Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5221234Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5221328Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5221460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5221553Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5221642Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5221756Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5221830Z             else:
2025-02-24T15:52:32.5221934Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5222042Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5222046Z 
2025-02-24T15:52:32.5222240Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5222362Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5222526Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5222624Z     ???
2025-02-24T15:52:32.5222737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5222741Z 
2025-02-24T15:52:32.5222817Z >   ???
2025-02-24T15:52:32.5222945Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5223020Z E   
2025-02-24T15:52:32.5223149Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5223268Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5223341Z E          ...
2025-02-24T15:52:32.5223435Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5223571Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5223685Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5223768Z E          ...
2025-02-24T15:52:32.5223856Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5223992Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5224099Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5224103Z 
2025-02-24T15:52:32.5224199Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5224471Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T15:52:32.5224476Z 
2025-02-24T15:52:32.5224618Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5224756Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5224856Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5224999Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5225129Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5225232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5225315Z err_msg = None
2025-02-24T15:52:32.5225319Z 
2025-02-24T15:52:32.5225436Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5225519Z         if err_msg is None:
2025-02-24T15:52:32.5225620Z             if left.shape != right.shape:
2025-02-24T15:52:32.5225711Z                 raise_assert_detail(
2025-02-24T15:52:32.5225858Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5225934Z                 )
2025-02-24T15:52:32.5226004Z     
2025-02-24T15:52:32.5226085Z             diff = 0
2025-02-24T15:52:32.5226196Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5226292Z                 # count up differences
2025-02-24T15:52:32.5226464Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5226692Z                     diff += 1
2025-02-24T15:52:32.5226762Z     
2025-02-24T15:52:32.5226961Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5227099Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5227276Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5227395Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5227468Z E           
2025-02-24T15:52:32.5227585Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5227845Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5228120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5228133Z 
2025-02-24T15:52:32.5228450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5228455Z 
2025-02-24T15:52:32.5228621Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5228626Z 
2025-02-24T15:52:32.5228860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13c50>
2025-02-24T15:52:32.5229122Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5229276Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5229284Z 
2025-02-24T15:52:32.5229536Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5229752Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5229905Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5230036Z         try:
2025-02-24T15:52:32.5230285Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5230427Z         except KeyError:
2025-02-24T15:52:32.5230606Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5230680Z     
2025-02-24T15:52:32.5230776Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5230875Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5231073Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5231213Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5231306Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5231400Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5231514Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5231595Z             else:
2025-02-24T15:52:32.5231692Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5231807Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5231816Z 
2025-02-24T15:52:32.5231945Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5232067Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5232218Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5232296Z     ???
2025-02-24T15:52:32.5232417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5232421Z 
2025-02-24T15:52:32.5232493Z >   ???
2025-02-24T15:52:32.5232630Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5232700Z E   
2025-02-24T15:52:32.5232835Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5232950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5233168Z E          ...
2025-02-24T15:52:32.5233260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5233396Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5233616Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5233696Z E          ...
2025-02-24T15:52:32.5233791Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5233918Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5234029Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5234033Z 
2025-02-24T15:52:32.5234126Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5234396Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T15:52:32.5234401Z 
2025-02-24T15:52:32.5234536Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5234674Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5234779Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5234924Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5235055Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5235150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5235232Z err_msg = None
2025-02-24T15:52:32.5235236Z 
2025-02-24T15:52:32.5235352Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5235440Z         if err_msg is None:
2025-02-24T15:52:32.5235538Z             if left.shape != right.shape:
2025-02-24T15:52:32.5235631Z                 raise_assert_detail(
2025-02-24T15:52:32.5235779Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5235862Z                 )
2025-02-24T15:52:32.5235945Z     
2025-02-24T15:52:32.5236021Z             diff = 0
2025-02-24T15:52:32.5236140Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5236230Z                 # count up differences
2025-02-24T15:52:32.5236416Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5236498Z                     diff += 1
2025-02-24T15:52:32.5236574Z     
2025-02-24T15:52:32.5236664Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5236807Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5236979Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5237099Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5237177Z E           
2025-02-24T15:52:32.5237290Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5237557Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5237831Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5237837Z 
2025-02-24T15:52:32.5238159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5238163Z 
2025-02-24T15:52:32.5238343Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5238348Z 
2025-02-24T15:52:32.5238577Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13dd0>
2025-02-24T15:52:32.5238865Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5238943Z attr = 'j_blues'
2025-02-24T15:52:32.5239020Z 
2025-02-24T15:52:32.5239165Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5239282Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5239374Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5239452Z         try:
2025-02-24T15:52:32.5239594Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5239682Z         except KeyError:
2025-02-24T15:52:32.5239823Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5239899Z     
2025-02-24T15:52:32.5239998Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5240105Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5240197Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5240335Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5240427Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5240522Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5240631Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5240714Z             else:
2025-02-24T15:52:32.5240813Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5241053Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5241059Z 
2025-02-24T15:52:32.5241189Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5241309Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5241460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5241533Z     ???
2025-02-24T15:52:32.5241647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5241652Z 
2025-02-24T15:52:32.5241723Z >   ???
2025-02-24T15:52:32.5241852Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5241928Z E   
2025-02-24T15:52:32.5242059Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5242173Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5242255Z E          ...
2025-02-24T15:52:32.5242345Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5242479Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5242600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5242673Z E          ...
2025-02-24T15:52:32.5242763Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5242889Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5242999Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5243004Z 
2025-02-24T15:52:32.5243094Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5243295Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T15:52:32.5243303Z 
2025-02-24T15:52:32.5243431Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5243571Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5243674Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5243807Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5243937Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5244032Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5244114Z err_msg = None
2025-02-24T15:52:32.5244118Z 
2025-02-24T15:52:32.5244229Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5244316Z         if err_msg is None:
2025-02-24T15:52:32.5244416Z             if left.shape != right.shape:
2025-02-24T15:52:32.5244627Z                 raise_assert_detail(
2025-02-24T15:52:32.5244776Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5244849Z                 )
2025-02-24T15:52:32.5245047Z     
2025-02-24T15:52:32.5245122Z             diff = 0
2025-02-24T15:52:32.5245238Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5245330Z                 # count up differences
2025-02-24T15:52:32.5245506Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5245587Z                     diff += 1
2025-02-24T15:52:32.5245662Z     
2025-02-24T15:52:32.5245751Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5245893Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5246067Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5246184Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5246264Z E           
2025-02-24T15:52:32.5246377Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5246643Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5246911Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5246920Z 
2025-02-24T15:52:32.5247234Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5247244Z 
2025-02-24T15:52:32.5247419Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5247424Z 
2025-02-24T15:52:32.5247662Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd38b90>
2025-02-24T15:52:32.5247972Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5248101Z attr = 'lines'
2025-02-24T15:52:32.5248116Z 
2025-02-24T15:52:32.5248351Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5248554Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5248697Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5248826Z         try:
2025-02-24T15:52:32.5249061Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5249212Z         except KeyError:
2025-02-24T15:52:32.5249362Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5249438Z     
2025-02-24T15:52:32.5249527Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5249633Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5249726Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5249864Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5249961Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5250053Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5250166Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5250240Z             else:
2025-02-24T15:52:32.5250338Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5250445Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5250450Z 
2025-02-24T15:52:32.5250579Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5250694Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5250848Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5251029Z     ???
2025-02-24T15:52:32.5251288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5251293Z 
2025-02-24T15:52:32.5251366Z >   ???
2025-02-24T15:52:32.5251601Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5251676Z E   
2025-02-24T15:52:32.5251807Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5251922Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5251995Z E          ...
2025-02-24T15:52:32.5252089Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5252218Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5252334Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5252407Z E          ...
2025-02-24T15:52:32.5252497Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5252629Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5252741Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5252746Z 
2025-02-24T15:52:32.5252840Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5253076Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T15:52:32.5253087Z 
2025-02-24T15:52:32.5253315Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd38c50>
2025-02-24T15:52:32.5253486Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5253580Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5253585Z 
2025-02-24T15:52:32.5253728Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5253842Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5253931Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5254004Z         try:
2025-02-24T15:52:32.5254149Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5254232Z         except KeyError:
2025-02-24T15:52:32.5254378Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5254449Z     
2025-02-24T15:52:32.5254542Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5254641Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5254735Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5254865Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5254957Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5255054Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5255165Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5255169Z 
2025-02-24T15:52:32.5255298Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5255411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5255416Z 
2025-02-24T15:52:32.5255558Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5255648Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5255759Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5255850Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5255991Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5256079Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5256184Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5256268Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5256343Z err_msg = None
2025-02-24T15:52:32.5256347Z 
2025-02-24T15:52:32.5256457Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5256539Z         if err_msg is None:
2025-02-24T15:52:32.5256640Z             if left.shape != right.shape:
2025-02-24T15:52:32.5256726Z                 raise_assert_detail(
2025-02-24T15:52:32.5256873Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5257042Z                 )
2025-02-24T15:52:32.5257114Z     
2025-02-24T15:52:32.5257193Z             diff = 0
2025-02-24T15:52:32.5257381Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5257476Z                 # count up differences
2025-02-24T15:52:32.5257649Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5257731Z                     diff += 1
2025-02-24T15:52:32.5257803Z     
2025-02-24T15:52:32.5257894Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5258030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5258206Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5258314Z E           AssertionError: Series are different
2025-02-24T15:52:32.5258388Z E           
2025-02-24T15:52:32.5258497Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5258875Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5259220Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5259556Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5259570Z 
2025-02-24T15:52:32.5259885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5260124Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T15:52:32.5260129Z 
2025-02-24T15:52:32.5260356Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd38d10>
2025-02-24T15:52:32.5260525Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5260622Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5260626Z 
2025-02-24T15:52:32.5260763Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5260881Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5261092Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5261169Z         try:
2025-02-24T15:52:32.5261311Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5261406Z         except KeyError:
2025-02-24T15:52:32.5261541Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5261651Z     
2025-02-24T15:52:32.5261744Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5261839Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5261931Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5262064Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5262153Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5262244Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5262355Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5262360Z 
2025-02-24T15:52:32.5262486Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5262729Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5262734Z 
2025-02-24T15:52:32.5262873Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5263061Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5263173Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5263254Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5263396Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5263482Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5263595Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5263675Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5263755Z err_msg = None
2025-02-24T15:52:32.5263759Z 
2025-02-24T15:52:32.5263869Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5263958Z         if err_msg is None:
2025-02-24T15:52:32.5264057Z             if left.shape != right.shape:
2025-02-24T15:52:32.5264143Z                 raise_assert_detail(
2025-02-24T15:52:32.5264296Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5264370Z                 )
2025-02-24T15:52:32.5264443Z     
2025-02-24T15:52:32.5264517Z             diff = 0
2025-02-24T15:52:32.5264633Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5264724Z                 # count up differences
2025-02-24T15:52:32.5264899Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5264980Z                     diff += 1
2025-02-24T15:52:32.5265059Z     
2025-02-24T15:52:32.5265150Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5265286Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5265462Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5265572Z E           AssertionError: Series are different
2025-02-24T15:52:32.5265648Z E           
2025-02-24T15:52:32.5265752Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5266132Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5266837Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5267522Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5267548Z 
2025-02-24T15:52:32.5267900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5268100Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T15:52:32.5268105Z 
2025-02-24T15:52:32.5268235Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5268369Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5268571Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5268806Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5268930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5269030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5269110Z err_msg = None
2025-02-24T15:52:32.5269114Z 
2025-02-24T15:52:32.5269222Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5269310Z         if err_msg is None:
2025-02-24T15:52:32.5269407Z             if left.shape != right.shape:
2025-02-24T15:52:32.5269497Z                 raise_assert_detail(
2025-02-24T15:52:32.5269644Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5269721Z                 )
2025-02-24T15:52:32.5269797Z     
2025-02-24T15:52:32.5269875Z             diff = 0
2025-02-24T15:52:32.5269987Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5270087Z                 # count up differences
2025-02-24T15:52:32.5270262Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5270343Z                     diff += 1
2025-02-24T15:52:32.5270417Z     
2025-02-24T15:52:32.5270505Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5270643Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5270812Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5271044Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5271120Z E           
2025-02-24T15:52:32.5271237Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5271497Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5271775Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5271781Z 
2025-02-24T15:52:32.5272094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5272098Z 
2025-02-24T15:52:32.5272271Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5272280Z 
2025-02-24T15:52:32.5272504Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd38f50>
2025-02-24T15:52:32.5272713Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>, attr = 'nu'
2025-02-24T15:52:32.5272719Z 
2025-02-24T15:52:32.5272864Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5272984Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5273072Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5273149Z         try:
2025-02-24T15:52:32.5273291Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5273376Z         except KeyError:
2025-02-24T15:52:32.5273514Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5273587Z     
2025-02-24T15:52:32.5273682Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5273778Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5273872Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5274003Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5274220Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5274311Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5274426Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5274535Z 
2025-02-24T15:52:32.5274664Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5274784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5274936Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5275008Z     ???
2025-02-24T15:52:32.5275124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5275128Z 
2025-02-24T15:52:32.5275196Z >   ???
2025-02-24T15:52:32.5275326Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5275395Z E   
2025-02-24T15:52:32.5275526Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5275640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5275721Z E          ...
2025-02-24T15:52:32.5275808Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5275943Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5276066Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5276139Z E          ...
2025-02-24T15:52:32.5276231Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5276355Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5276463Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5276468Z 
2025-02-24T15:52:32.5276558Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5276766Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T15:52:32.5276770Z 
2025-02-24T15:52:32.5276899Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5277034Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5277142Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5277281Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5277414Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5277509Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5277590Z err_msg = None
2025-02-24T15:52:32.5277594Z 
2025-02-24T15:52:32.5277706Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5277792Z         if err_msg is None:
2025-02-24T15:52:32.5277889Z             if left.shape != right.shape:
2025-02-24T15:52:32.5277978Z                 raise_assert_detail(
2025-02-24T15:52:32.5278125Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5278197Z                 )
2025-02-24T15:52:32.5278275Z     
2025-02-24T15:52:32.5278350Z             diff = 0
2025-02-24T15:52:32.5278466Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5278557Z                 # count up differences
2025-02-24T15:52:32.5278737Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5278816Z                     diff += 1
2025-02-24T15:52:32.5278893Z     
2025-02-24T15:52:32.5278983Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5279124Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5279294Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5279411Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5279487Z E           
2025-02-24T15:52:32.5279604Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5279868Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5280293Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5280303Z 
2025-02-24T15:52:32.5280613Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5280618Z 
2025-02-24T15:52:32.5280789Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5280794Z 
2025-02-24T15:52:32.5281140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39010>
2025-02-24T15:52:32.5281321Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5281402Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5281412Z 
2025-02-24T15:52:32.5281555Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5281674Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5281762Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5281837Z         try:
2025-02-24T15:52:32.5281978Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5282063Z         except KeyError:
2025-02-24T15:52:32.5282201Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5282276Z     
2025-02-24T15:52:32.5282366Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5282464Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5282554Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5282688Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5282782Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5282876Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5282997Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5283002Z 
2025-02-24T15:52:32.5283126Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5283248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5283396Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5283473Z     ???
2025-02-24T15:52:32.5283586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5283590Z 
2025-02-24T15:52:32.5283665Z >   ???
2025-02-24T15:52:32.5283793Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5283868Z E   
2025-02-24T15:52:32.5284002Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5284116Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5284196Z E          ...
2025-02-24T15:52:32.5284286Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5284427Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5284542Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5284681Z E          ...
2025-02-24T15:52:32.5284837Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5285066Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5285246Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5285256Z 
2025-02-24T15:52:32.5285421Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5285765Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T15:52:32.5285772Z 
2025-02-24T15:52:32.5285991Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5286192Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5286439Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5286681Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5286807Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5286906Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5286988Z err_msg = None
2025-02-24T15:52:32.5286993Z 
2025-02-24T15:52:32.5287103Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5287192Z         if err_msg is None:
2025-02-24T15:52:32.5287290Z             if left.shape != right.shape:
2025-02-24T15:52:32.5287383Z                 raise_assert_detail(
2025-02-24T15:52:32.5287530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5287609Z                 )
2025-02-24T15:52:32.5287685Z     
2025-02-24T15:52:32.5287764Z             diff = 0
2025-02-24T15:52:32.5287878Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5287981Z                 # count up differences
2025-02-24T15:52:32.5288153Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5288240Z                     diff += 1
2025-02-24T15:52:32.5288317Z     
2025-02-24T15:52:32.5288408Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5288551Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5288723Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5288841Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5288914Z E           
2025-02-24T15:52:32.5289033Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5289296Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5289575Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5289581Z 
2025-02-24T15:52:32.5289892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5289897Z 
2025-02-24T15:52:32.5290067Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5290072Z 
2025-02-24T15:52:32.5290304Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd390d0>
2025-02-24T15:52:32.5290519Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>, attr = 'f_lu'
2025-02-24T15:52:32.5290527Z 
2025-02-24T15:52:32.5290665Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5290785Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5290872Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5291057Z         try:
2025-02-24T15:52:32.5291202Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5291291Z         except KeyError:
2025-02-24T15:52:32.5291429Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5291504Z     
2025-02-24T15:52:32.5291600Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5291695Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5291793Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5291927Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5292174Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5292265Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5292504Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5292509Z 
2025-02-24T15:52:32.5292635Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5292753Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5292903Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5292980Z     ???
2025-02-24T15:52:32.5293095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5293099Z 
2025-02-24T15:52:32.5293169Z >   ???
2025-02-24T15:52:32.5293300Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5293372Z E   
2025-02-24T15:52:32.5293506Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5293619Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5293703Z E          ...
2025-02-24T15:52:32.5293791Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5293933Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5294046Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5294126Z E          ...
2025-02-24T15:52:32.5294217Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5294343Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5294451Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5294456Z 
2025-02-24T15:52:32.5294544Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5294792Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T15:52:32.5294798Z 
2025-02-24T15:52:32.5295025Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd396d0>
2025-02-24T15:52:32.5295205Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5295301Z attr = 'stimulated_emission_factor'
2025-02-24T15:52:32.5295310Z 
2025-02-24T15:52:32.5295450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5295571Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5295657Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5295736Z         try:
2025-02-24T15:52:32.5295878Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5295965Z         except KeyError:
2025-02-24T15:52:32.5296103Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5296179Z     
2025-02-24T15:52:32.5296269Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5296368Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5296457Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5296596Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5296692Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5296784Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5296899Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5296976Z             else:
2025-02-24T15:52:32.5297075Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5297185Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5297190Z 
2025-02-24T15:52:32.5297319Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5297434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5297586Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5297661Z     ???
2025-02-24T15:52:32.5297771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5297775Z 
2025-02-24T15:52:32.5297850Z >   ???
2025-02-24T15:52:32.5298028Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5298193Z E   
2025-02-24T15:52:32.5298361Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:52:32.5298813Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5304181Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.5309121Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.5309597Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:52:32.5309615Z 
2025-02-24T15:52:32.5309776Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5310184Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T15:52:32.5310194Z 
2025-02-24T15:52:32.5310421Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5310653Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5310818Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5311192Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5311415Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5311543Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5311627Z err_msg = None
2025-02-24T15:52:32.5311631Z 
2025-02-24T15:52:32.5311747Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5311836Z         if err_msg is None:
2025-02-24T15:52:32.5311934Z             if left.shape != right.shape:
2025-02-24T15:52:32.5312024Z                 raise_assert_detail(
2025-02-24T15:52:32.5312170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5312248Z                 )
2025-02-24T15:52:32.5312319Z     
2025-02-24T15:52:32.5312399Z             diff = 0
2025-02-24T15:52:32.5312513Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5312616Z                 # count up differences
2025-02-24T15:52:32.5312793Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5312880Z                     diff += 1
2025-02-24T15:52:32.5312955Z     
2025-02-24T15:52:32.5313047Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5313189Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5313359Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5313477Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5313551Z E           
2025-02-24T15:52:32.5313669Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5313933Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5314205Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5314214Z 
2025-02-24T15:52:32.5314527Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5314532Z 
2025-02-24T15:52:32.5314704Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5314712Z 
2025-02-24T15:52:32.5314936Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39790>
2025-02-24T15:52:32.5315110Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5315202Z attr = 'previous_beta_sobolev'
2025-02-24T15:52:32.5315347Z 
2025-02-24T15:52:32.5315498Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5315617Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5315812Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5315889Z         try:
2025-02-24T15:52:32.5316034Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5316118Z         except KeyError:
2025-02-24T15:52:32.5316261Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5316335Z     
2025-02-24T15:52:32.5316425Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5316521Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5316614Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5316751Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5316841Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5316937Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5317055Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5317134Z             else:
2025-02-24T15:52:32.5317231Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5317351Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5317355Z 
2025-02-24T15:52:32.5317487Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5317603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5317756Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5317831Z     ???
2025-02-24T15:52:32.5317947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5317951Z 
2025-02-24T15:52:32.5318022Z >   ???
2025-02-24T15:52:32.5318156Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5318231Z E   
2025-02-24T15:52:32.5318365Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5318489Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5318570Z E          ...
2025-02-24T15:52:32.5318668Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5318804Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5318924Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5318999Z E          ...
2025-02-24T15:52:32.5319089Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5319214Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5319325Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5319330Z 
2025-02-24T15:52:32.5319420Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5319630Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T15:52:32.5319635Z 
2025-02-24T15:52:32.5319768Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5319902Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5320009Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5320146Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5320277Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5320374Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5320457Z err_msg = None
2025-02-24T15:52:32.5320461Z 
2025-02-24T15:52:32.5320577Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5320662Z         if err_msg is None:
2025-02-24T15:52:32.5320763Z             if left.shape != right.shape:
2025-02-24T15:52:32.5320851Z                 raise_assert_detail(
2025-02-24T15:52:32.5321130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5321343Z                 )
2025-02-24T15:52:32.5321419Z     
2025-02-24T15:52:32.5321495Z             diff = 0
2025-02-24T15:52:32.5321615Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5321809Z                 # count up differences
2025-02-24T15:52:32.5321987Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5322067Z                     diff += 1
2025-02-24T15:52:32.5322143Z     
2025-02-24T15:52:32.5322237Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5322374Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5322549Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5322663Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5322739Z E           
2025-02-24T15:52:32.5322854Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5323126Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5323400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5323409Z 
2025-02-24T15:52:32.5323712Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5323717Z 
2025-02-24T15:52:32.5323889Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5323893Z 
2025-02-24T15:52:32.5324120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39850>
2025-02-24T15:52:32.5324293Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5324384Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5324389Z 
2025-02-24T15:52:32.5324530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5324651Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5324738Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5324814Z         try:
2025-02-24T15:52:32.5324955Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5325042Z         except KeyError:
2025-02-24T15:52:32.5325181Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5325257Z     
2025-02-24T15:52:32.5325347Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5325446Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5325539Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5325676Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5325768Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5325865Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5325981Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5326059Z             else:
2025-02-24T15:52:32.5326158Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5326266Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5326270Z 
2025-02-24T15:52:32.5326400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5326514Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5326665Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5326742Z     ???
2025-02-24T15:52:32.5326853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5326945Z 
2025-02-24T15:52:32.5327021Z >   ???
2025-02-24T15:52:32.5327149Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5327223Z E   
2025-02-24T15:52:32.5327434Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5327555Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5327630Z E          ...
2025-02-24T15:52:32.5327723Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5327853Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5327974Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5328053Z E          ...
2025-02-24T15:52:32.5328141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5328273Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5328381Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5328385Z 
2025-02-24T15:52:32.5328539Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5328911Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T15:52:32.5328921Z 
2025-02-24T15:52:32.5329152Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5329380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5329549Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5329781Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5329990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5330093Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5330171Z err_msg = None
2025-02-24T15:52:32.5330176Z 
2025-02-24T15:52:32.5330292Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5330375Z         if err_msg is None:
2025-02-24T15:52:32.5330482Z             if left.shape != right.shape:
2025-02-24T15:52:32.5330569Z                 raise_assert_detail(
2025-02-24T15:52:32.5330719Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5330802Z                 )
2025-02-24T15:52:32.5330873Z     
2025-02-24T15:52:32.5331054Z             diff = 0
2025-02-24T15:52:32.5331169Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5331264Z                 # count up differences
2025-02-24T15:52:32.5331434Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5331517Z                     diff += 1
2025-02-24T15:52:32.5331588Z     
2025-02-24T15:52:32.5331682Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5331818Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5331996Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5332118Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5332191Z E           
2025-02-24T15:52:32.5332308Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5332573Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5332842Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5332848Z 
2025-02-24T15:52:32.5333158Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5333297Z 
2025-02-24T15:52:32.5333472Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5333577Z 
2025-02-24T15:52:32.5333808Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39910>
2025-02-24T15:52:32.5333978Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5334063Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5334068Z 
2025-02-24T15:52:32.5334205Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5334325Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5334417Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5334492Z         try:
2025-02-24T15:52:32.5334638Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5334720Z         except KeyError:
2025-02-24T15:52:32.5334864Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5334942Z     
2025-02-24T15:52:32.5335035Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5335131Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5335233Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5335365Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5335457Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5335550Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5335661Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5335739Z             else:
2025-02-24T15:52:32.5335836Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5335948Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5335953Z 
2025-02-24T15:52:32.5336083Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5336204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5336357Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5336434Z     ???
2025-02-24T15:52:32.5336547Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5336560Z 
2025-02-24T15:52:32.5336631Z >   ???
2025-02-24T15:52:32.5336765Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5336836Z E   
2025-02-24T15:52:32.5336970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5337085Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5337162Z E          ...
2025-02-24T15:52:32.5337250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5337382Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5337498Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5337572Z E          ...
2025-02-24T15:52:32.5337661Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5337795Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5337906Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5337911Z 
2025-02-24T15:52:32.5338006Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5338214Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T15:52:32.5338218Z 
2025-02-24T15:52:32.5338349Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5338483Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5338580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5338721Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5338852Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5338948Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5339116Z err_msg = None
2025-02-24T15:52:32.5339120Z 
2025-02-24T15:52:32.5339231Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5339414Z         if err_msg is None:
2025-02-24T15:52:32.5339512Z             if left.shape != right.shape:
2025-02-24T15:52:32.5339602Z                 raise_assert_detail(
2025-02-24T15:52:32.5339747Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5339829Z                 )
2025-02-24T15:52:32.5339900Z     
2025-02-24T15:52:32.5339979Z             diff = 0
2025-02-24T15:52:32.5340096Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5340186Z                 # count up differences
2025-02-24T15:52:32.5340360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5340441Z                     diff += 1
2025-02-24T15:52:32.5340515Z     
2025-02-24T15:52:32.5340606Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5340751Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5341042Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5341170Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5341242Z E           
2025-02-24T15:52:32.5341359Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5341623Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5341886Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5341897Z 
2025-02-24T15:52:32.5342211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5342216Z 
2025-02-24T15:52:32.5342393Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5342397Z 
2025-02-24T15:52:32.5342619Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39a90>
2025-02-24T15:52:32.5342792Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5342869Z attr = 'j_blues'
2025-02-24T15:52:32.5342873Z 
2025-02-24T15:52:32.5343015Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5343133Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5343225Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5343298Z         try:
2025-02-24T15:52:32.5343447Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5343534Z         except KeyError:
2025-02-24T15:52:32.5343684Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5343802Z     
2025-02-24T15:52:32.5343891Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5343992Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5344083Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5344220Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5344308Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5344404Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5344513Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5344591Z             else:
2025-02-24T15:52:32.5344692Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5344800Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5344925Z 
2025-02-24T15:52:32.5345058Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5345170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5345426Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5345500Z     ???
2025-02-24T15:52:32.5345616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5345619Z 
2025-02-24T15:52:32.5345689Z >   ???
2025-02-24T15:52:32.5345820Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5345894Z E   
2025-02-24T15:52:32.5346026Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5346145Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5346219Z E          ...
2025-02-24T15:52:32.5346312Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5346441Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5346567Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5346639Z E          ...
2025-02-24T15:52:32.5346732Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5346865Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5346976Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5346980Z 
2025-02-24T15:52:32.5347074Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5347304Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T15:52:32.5347308Z 
2025-02-24T15:52:32.5347440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5347569Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5347669Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5347804Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5348016Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5348194Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5348336Z err_msg = None
2025-02-24T15:52:32.5348344Z 
2025-02-24T15:52:32.5348530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5348672Z         if err_msg is None:
2025-02-24T15:52:32.5348836Z             if left.shape != right.shape:
2025-02-24T15:52:32.5348979Z                 raise_assert_detail(
2025-02-24T15:52:32.5349225Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5349347Z                 )
2025-02-24T15:52:32.5349477Z     
2025-02-24T15:52:32.5349557Z             diff = 0
2025-02-24T15:52:32.5349677Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5349767Z                 # count up differences
2025-02-24T15:52:32.5349944Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5350034Z                     diff += 1
2025-02-24T15:52:32.5350107Z     
2025-02-24T15:52:32.5350204Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5350343Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5350518Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5350630Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5350707Z E           
2025-02-24T15:52:32.5350820Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5351191Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5351608Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5351719Z 
2025-02-24T15:52:32.5352029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5352033Z 
2025-02-24T15:52:32.5352208Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5352213Z 
2025-02-24T15:52:32.5352442Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3a810>
2025-02-24T15:52:32.5352610Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5352690Z attr = 'lines'
2025-02-24T15:52:32.5352695Z 
2025-02-24T15:52:32.5352834Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5352960Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5353046Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5353128Z         try:
2025-02-24T15:52:32.5353270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5353356Z         except KeyError:
2025-02-24T15:52:32.5353499Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5353576Z     
2025-02-24T15:52:32.5353669Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5353763Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5353856Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5353990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5354080Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5354172Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5354285Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5354364Z             else:
2025-02-24T15:52:32.5354464Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5354571Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5354581Z 
2025-02-24T15:52:32.5354710Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5354831Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5354980Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5355058Z     ???
2025-02-24T15:52:32.5355169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5355174Z 
2025-02-24T15:52:32.5355249Z >   ???
2025-02-24T15:52:32.5355374Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5355450Z E   
2025-02-24T15:52:32.5355579Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5355696Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5355773Z E          ...
2025-02-24T15:52:32.5355868Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5356002Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5356121Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5356199Z E          ...
2025-02-24T15:52:32.5356288Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5356419Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5356527Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5356532Z 
2025-02-24T15:52:32.5356627Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5356859Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T15:52:32.5356869Z 
2025-02-24T15:52:32.5357091Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3a8d0>
2025-02-24T15:52:32.5357268Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5357447Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5357451Z 
2025-02-24T15:52:32.5357596Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5357805Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5357895Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5357968Z         try:
2025-02-24T15:52:32.5358114Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5358197Z         except KeyError:
2025-02-24T15:52:32.5358342Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5358418Z     
2025-02-24T15:52:32.5358507Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5358608Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5358698Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5358834Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5358922Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5359022Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5359132Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5359142Z 
2025-02-24T15:52:32.5359272Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5359387Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5359395Z 
2025-02-24T15:52:32.5359533Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5359625Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5359737Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5359824Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5359964Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5360056Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5360161Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5360250Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5360328Z err_msg = None
2025-02-24T15:52:32.5360341Z 
2025-02-24T15:52:32.5360451Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5360540Z         if err_msg is None:
2025-02-24T15:52:32.5360638Z             if left.shape != right.shape:
2025-02-24T15:52:32.5360731Z                 raise_assert_detail(
2025-02-24T15:52:32.5360878Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5361077Z                 )
2025-02-24T15:52:32.5361150Z     
2025-02-24T15:52:32.5361229Z             diff = 0
2025-02-24T15:52:32.5361341Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5361435Z                 # count up differences
2025-02-24T15:52:32.5361607Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5361718Z                     diff += 1
2025-02-24T15:52:32.5361800Z     
2025-02-24T15:52:32.5361889Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5362029Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5362205Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5362313Z E           AssertionError: Series are different
2025-02-24T15:52:32.5362387Z E           
2025-02-24T15:52:32.5362495Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5362866Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5363205Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5363785Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5363791Z 
2025-02-24T15:52:32.5364112Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5364340Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T15:52:32.5364349Z 
2025-02-24T15:52:32.5364573Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3a990>
2025-02-24T15:52:32.5364747Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5364845Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5364849Z 
2025-02-24T15:52:32.5364987Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5365108Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5365193Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5365270Z         try:
2025-02-24T15:52:32.5365417Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5365500Z         except KeyError:
2025-02-24T15:52:32.5365643Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5365713Z     
2025-02-24T15:52:32.5365807Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5365903Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5366004Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5366136Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5366232Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5366324Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5366439Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5366443Z 
2025-02-24T15:52:32.5366574Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5366689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5366693Z 
2025-02-24T15:52:32.5366946Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5367095Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5367289Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5367433Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5367691Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5367833Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5368027Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5368168Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5368288Z err_msg = None
2025-02-24T15:52:32.5368293Z 
2025-02-24T15:52:32.5368409Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5368492Z         if err_msg is None:
2025-02-24T15:52:32.5368591Z             if left.shape != right.shape:
2025-02-24T15:52:32.5368678Z                 raise_assert_detail(
2025-02-24T15:52:32.5368827Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5368901Z                 )
2025-02-24T15:52:32.5368976Z     
2025-02-24T15:52:32.5369051Z             diff = 0
2025-02-24T15:52:32.5369168Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5369365Z                 # count up differences
2025-02-24T15:52:32.5369535Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5369706Z                     diff += 1
2025-02-24T15:52:32.5369778Z     
2025-02-24T15:52:32.5369873Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5370009Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5370189Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5370293Z E           AssertionError: Series are different
2025-02-24T15:52:32.5370371Z E           
2025-02-24T15:52:32.5370476Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5370852Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5371356Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5371737Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5371754Z 
2025-02-24T15:52:32.5372067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5372273Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T15:52:32.5372278Z 
2025-02-24T15:52:32.5372409Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5372543Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5372649Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5372783Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5372915Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5373011Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5373096Z err_msg = None
2025-02-24T15:52:32.5373100Z 
2025-02-24T15:52:32.5373209Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5373303Z         if err_msg is None:
2025-02-24T15:52:32.5373400Z             if left.shape != right.shape:
2025-02-24T15:52:32.5373489Z                 raise_assert_detail(
2025-02-24T15:52:32.5373633Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5373710Z                 )
2025-02-24T15:52:32.5373785Z     
2025-02-24T15:52:32.5373859Z             diff = 0
2025-02-24T15:52:32.5373982Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5374071Z                 # count up differences
2025-02-24T15:52:32.5374248Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5374334Z                     diff += 1
2025-02-24T15:52:32.5374411Z     
2025-02-24T15:52:32.5374503Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5374768Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5374940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5375160Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5375239Z E           
2025-02-24T15:52:32.5375357Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5375622Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5375886Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5375901Z 
2025-02-24T15:52:32.5376207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5376212Z 
2025-02-24T15:52:32.5376388Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5376392Z 
2025-02-24T15:52:32.5376617Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3abd0>
2025-02-24T15:52:32.5376822Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>, attr = 'nu'
2025-02-24T15:52:32.5376827Z 
2025-02-24T15:52:32.5376966Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5377088Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5377180Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5377253Z         try:
2025-02-24T15:52:32.5377408Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5377493Z         except KeyError:
2025-02-24T15:52:32.5377637Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5377714Z     
2025-02-24T15:52:32.5377810Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5377904Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5378002Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5378135Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5378229Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5378320Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5378434Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5378439Z 
2025-02-24T15:52:32.5378568Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5378682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5378842Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5378930Z     ???
2025-02-24T15:52:32.5379047Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5379056Z 
2025-02-24T15:52:32.5379127Z >   ???
2025-02-24T15:52:32.5379260Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5379332Z E   
2025-02-24T15:52:32.5379472Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5379591Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5379665Z E          ...
2025-02-24T15:52:32.5379759Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5379890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5380015Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5380095Z E          ...
2025-02-24T15:52:32.5380187Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5380402Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5380514Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5380519Z 
2025-02-24T15:52:32.5380688Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5380896Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T15:52:32.5380900Z 
2025-02-24T15:52:32.5381160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5381292Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5381401Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5381538Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5381668Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5381764Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5381852Z err_msg = None
2025-02-24T15:52:32.5381856Z 
2025-02-24T15:52:32.5381976Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5382065Z         if err_msg is None:
2025-02-24T15:52:32.5382167Z             if left.shape != right.shape:
2025-02-24T15:52:32.5382252Z                 raise_assert_detail(
2025-02-24T15:52:32.5382403Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5382479Z                 )
2025-02-24T15:52:32.5382553Z     
2025-02-24T15:52:32.5382629Z             diff = 0
2025-02-24T15:52:32.5382746Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5382835Z                 # count up differences
2025-02-24T15:52:32.5383012Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5383094Z                     diff += 1
2025-02-24T15:52:32.5383171Z     
2025-02-24T15:52:32.5383270Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5383413Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5383590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5383709Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5383787Z E           
2025-02-24T15:52:32.5383900Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5384168Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5384437Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5384446Z 
2025-02-24T15:52:32.5384760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5384765Z 
2025-02-24T15:52:32.5384942Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5384946Z 
2025-02-24T15:52:32.5385175Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3ac90>
2025-02-24T15:52:32.5385350Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5385439Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5385443Z 
2025-02-24T15:52:32.5385582Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5385702Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5385792Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5385873Z         try:
2025-02-24T15:52:32.5386158Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5386248Z         except KeyError:
2025-02-24T15:52:32.5386388Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5386568Z     
2025-02-24T15:52:32.5386660Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5430024Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5430254Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5430517Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5430672Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5430846Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5431179Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5431195Z 
2025-02-24T15:52:32.5431423Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5431626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5431893Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5431975Z     ???
2025-02-24T15:52:32.5432095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5432108Z 
2025-02-24T15:52:32.5432181Z >   ???
2025-02-24T15:52:32.5432323Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5432398Z E   
2025-02-24T15:52:32.5432542Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5432661Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5432741Z E          ...
2025-02-24T15:52:32.5432833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5432973Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5433098Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5433173Z E          ...
2025-02-24T15:52:32.5433267Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5433409Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5433520Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5433529Z 
2025-02-24T15:52:32.5433628Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5433834Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T15:52:32.5433842Z 
2025-02-24T15:52:32.5433977Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5434113Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5434215Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5434355Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5434480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5434576Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5434656Z err_msg = None
2025-02-24T15:52:32.5434660Z 
2025-02-24T15:52:32.5434778Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5434872Z         if err_msg is None:
2025-02-24T15:52:32.5434973Z             if left.shape != right.shape:
2025-02-24T15:52:32.5435063Z                 raise_assert_detail(
2025-02-24T15:52:32.5435215Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5435291Z                 )
2025-02-24T15:52:32.5435360Z     
2025-02-24T15:52:32.5435439Z             diff = 0
2025-02-24T15:52:32.5435553Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5435646Z                 # count up differences
2025-02-24T15:52:32.5435818Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5435903Z                     diff += 1
2025-02-24T15:52:32.5435976Z     
2025-02-24T15:52:32.5436257Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5436400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5436578Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5436812Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5436886Z E           
2025-02-24T15:52:32.5437004Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5437270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5437537Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5437555Z 
2025-02-24T15:52:32.5437883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5437888Z 
2025-02-24T15:52:32.5438060Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5438065Z 
2025-02-24T15:52:32.5438290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3ad50>
2025-02-24T15:52:32.5438496Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>, attr = 'f_lu'
2025-02-24T15:52:32.5438503Z 
2025-02-24T15:52:32.5438644Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5438766Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5438852Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5438926Z         try:
2025-02-24T15:52:32.5439078Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5439162Z         except KeyError:
2025-02-24T15:52:32.5439302Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5439379Z     
2025-02-24T15:52:32.5439468Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5439565Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5439656Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5439793Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5439887Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5439979Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5440094Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5440099Z 
2025-02-24T15:52:32.5440225Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5440343Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5440499Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5440573Z     ???
2025-02-24T15:52:32.5440683Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5440696Z 
2025-02-24T15:52:32.5440763Z >   ???
2025-02-24T15:52:32.5440893Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5441154Z E   
2025-02-24T15:52:32.5441333Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5441448Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5441524Z E          ...
2025-02-24T15:52:32.5441613Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5441746Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5441861Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5441935Z E          ...
2025-02-24T15:52:32.5442022Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5442285Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5442396Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5442503Z 
2025-02-24T15:52:32.5442597Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5442807Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T15:52:32.5442812Z 
2025-02-24T15:52:32.5442942Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5443076Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5443175Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5443312Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5443438Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5443532Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5443620Z err_msg = None
2025-02-24T15:52:32.5443625Z 
2025-02-24T15:52:32.5443742Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5443834Z         if err_msg is None:
2025-02-24T15:52:32.5443933Z             if left.shape != right.shape:
2025-02-24T15:52:32.5444025Z                 raise_assert_detail(
2025-02-24T15:52:32.5444175Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5444249Z                 )
2025-02-24T15:52:32.5444318Z     
2025-02-24T15:52:32.5444394Z             diff = 0
2025-02-24T15:52:32.5444509Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5444599Z                 # count up differences
2025-02-24T15:52:32.5444773Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5444854Z                     diff += 1
2025-02-24T15:52:32.5444924Z     
2025-02-24T15:52:32.5445014Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5445161Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5445331Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5445456Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5445528Z E           
2025-02-24T15:52:32.5445644Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5445908Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5446171Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5446181Z 
2025-02-24T15:52:32.5446501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5446506Z 
2025-02-24T15:52:32.5446679Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5446685Z 
2025-02-24T15:52:32.5446907Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3b4d0>
2025-02-24T15:52:32.5447076Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5447155Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5447160Z 
2025-02-24T15:52:32.5447301Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5447416Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5447506Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5447666Z         try:
2025-02-24T15:52:32.5447812Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5447897Z         except KeyError:
2025-02-24T15:52:32.5448114Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5448185Z     
2025-02-24T15:52:32.5448273Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5448368Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5448459Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5448594Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5448681Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5448773Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5448882Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5448955Z             else:
2025-02-24T15:52:32.5449053Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5449162Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5449172Z 
2025-02-24T15:52:32.5449302Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5449416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5449571Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5449642Z     ???
2025-02-24T15:52:32.5449755Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5449760Z 
2025-02-24T15:52:32.5449828Z >   ???
2025-02-24T15:52:32.5449958Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5450025Z E   
2025-02-24T15:52:32.5450156Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5450268Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5450339Z E          ...
2025-02-24T15:52:32.5450431Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5450560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5450695Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5450833Z E          ...
2025-02-24T15:52:32.5451113Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5451348Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5451548Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5451556Z 
2025-02-24T15:52:32.5451670Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5451880Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T15:52:32.5451886Z 
2025-02-24T15:52:32.5452021Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5452153Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5452255Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5452390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5452520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5452619Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5452699Z err_msg = None
2025-02-24T15:52:32.5452704Z 
2025-02-24T15:52:32.5452819Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5452901Z         if err_msg is None:
2025-02-24T15:52:32.5453000Z             if left.shape != right.shape:
2025-02-24T15:52:32.5453086Z                 raise_assert_detail(
2025-02-24T15:52:32.5453234Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5453307Z                 )
2025-02-24T15:52:32.5453380Z     
2025-02-24T15:52:32.5453453Z             diff = 0
2025-02-24T15:52:32.5453566Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5453654Z                 # count up differences
2025-02-24T15:52:32.5453996Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5454079Z                     diff += 1
2025-02-24T15:52:32.5454250Z     
2025-02-24T15:52:32.5454343Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5454481Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5454656Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5454767Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5454841Z E           
2025-02-24T15:52:32.5454951Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5455212Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5455485Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5455499Z 
2025-02-24T15:52:32.5455812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5455816Z 
2025-02-24T15:52:32.5455986Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5455990Z 
2025-02-24T15:52:32.5456213Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3b590>
2025-02-24T15:52:32.5456380Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5456463Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5456467Z 
2025-02-24T15:52:32.5456610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5456727Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5456813Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5456895Z         try:
2025-02-24T15:52:32.5457035Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5457121Z         except KeyError:
2025-02-24T15:52:32.5457257Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5457330Z     
2025-02-24T15:52:32.5457421Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5457515Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5457608Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5457741Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5457830Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5457919Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5458033Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5458111Z             else:
2025-02-24T15:52:32.5458209Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5458315Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5458323Z 
2025-02-24T15:52:32.5458451Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5458568Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5458712Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5458785Z     ???
2025-02-24T15:52:32.5458894Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5458898Z 
2025-02-24T15:52:32.5458968Z >   ???
2025-02-24T15:52:32.5459094Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5459163Z E   
2025-02-24T15:52:32.5459289Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5459404Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5459587Z E          ...
2025-02-24T15:52:32.5459679Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5459890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5460004Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5460078Z E          ...
2025-02-24T15:52:32.5460165Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5460292Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5460397Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5460402Z 
2025-02-24T15:52:32.5460492Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5460690Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T15:52:32.5460694Z 
2025-02-24T15:52:32.5460825Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5461107Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5461213Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5461353Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5461476Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5461571Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5461677Z err_msg = None
2025-02-24T15:52:32.5461683Z 
2025-02-24T15:52:32.5461801Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5461883Z         if err_msg is None:
2025-02-24T15:52:32.5461982Z             if left.shape != right.shape:
2025-02-24T15:52:32.5462070Z                 raise_assert_detail(
2025-02-24T15:52:32.5462214Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5462289Z                 )
2025-02-24T15:52:32.5462363Z     
2025-02-24T15:52:32.5462437Z             diff = 0
2025-02-24T15:52:32.5462547Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5462643Z                 # count up differences
2025-02-24T15:52:32.5462811Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5462895Z                     diff += 1
2025-02-24T15:52:32.5462963Z     
2025-02-24T15:52:32.5463054Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5463191Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5463363Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5463478Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5463550Z E           
2025-02-24T15:52:32.5463662Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5463921Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5464195Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5464200Z 
2025-02-24T15:52:32.5464509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5464513Z 
2025-02-24T15:52:32.5464684Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5464689Z 
2025-02-24T15:52:32.5464935Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3b710>
2025-02-24T15:52:32.5465230Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5465309Z attr = 'j_blues'
2025-02-24T15:52:32.5465414Z 
2025-02-24T15:52:32.5465562Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5465681Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5465770Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5465842Z         try:
2025-02-24T15:52:32.5465992Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5466076Z         except KeyError:
2025-02-24T15:52:32.5466219Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5466289Z     
2025-02-24T15:52:32.5466381Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5466475Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5466568Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5466702Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5466798Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5466889Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5467007Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5467081Z             else:
2025-02-24T15:52:32.5467177Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5467288Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5467292Z 
2025-02-24T15:52:32.5467417Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5467535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5467687Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5467760Z     ???
2025-02-24T15:52:32.5467874Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5467878Z 
2025-02-24T15:52:32.5467947Z >   ???
2025-02-24T15:52:32.5468077Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5468151Z E   
2025-02-24T15:52:32.5468282Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5468402Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5468478Z E          ...
2025-02-24T15:52:32.5468568Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5468703Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5468817Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5468891Z E          ...
2025-02-24T15:52:32.5468978Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5469101Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5469208Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5469213Z 
2025-02-24T15:52:32.5469303Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5469498Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T15:52:32.5469506Z 
2025-02-24T15:52:32.5469635Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5469774Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5469873Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5470010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5470138Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5470232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5470312Z err_msg = None
2025-02-24T15:52:32.5470316Z 
2025-02-24T15:52:32.5470428Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5470512Z         if err_msg is None:
2025-02-24T15:52:32.5470610Z             if left.shape != right.shape:
2025-02-24T15:52:32.5470855Z                 raise_assert_detail(
2025-02-24T15:52:32.5471100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5471309Z                 )
2025-02-24T15:52:32.5471381Z     
2025-02-24T15:52:32.5471456Z             diff = 0
2025-02-24T15:52:32.5471581Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5471674Z                 # count up differences
2025-02-24T15:52:32.5471859Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5471940Z                     diff += 1
2025-02-24T15:52:32.5472015Z     
2025-02-24T15:52:32.5472106Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5472254Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5472427Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5472546Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5472630Z E           
2025-02-24T15:52:32.5472745Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5473014Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5473285Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5473290Z 
2025-02-24T15:52:32.5473609Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5473618Z 
2025-02-24T15:52:32.5473795Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5473800Z 
2025-02-24T15:52:32.5474023Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd604d0>
2025-02-24T15:52:32.5474199Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5474275Z attr = 'lines'
2025-02-24T15:52:32.5474280Z 
2025-02-24T15:52:32.5474423Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5474541Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5474631Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5474708Z         try:
2025-02-24T15:52:32.5474851Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5474937Z         except KeyError:
2025-02-24T15:52:32.5475079Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5475151Z     
2025-02-24T15:52:32.5475240Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5475345Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5475438Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5475581Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5475672Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5475770Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5475883Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5475960Z             else:
2025-02-24T15:52:32.5476061Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5476169Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5476173Z 
2025-02-24T15:52:32.5476301Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5476418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5476571Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5476780Z     ???
2025-02-24T15:52:32.5476994Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5477004Z 
2025-02-24T15:52:32.5477251Z >   ???
2025-02-24T15:52:32.5477430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5477506Z E   
2025-02-24T15:52:32.5477638Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5477768Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5477841Z E          ...
2025-02-24T15:52:32.5477934Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5478066Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5478183Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5478256Z E          ...
2025-02-24T15:52:32.5478345Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5478471Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5478588Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5478594Z 
2025-02-24T15:52:32.5478687Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5478926Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T15:52:32.5478931Z 
2025-02-24T15:52:32.5479157Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60590>
2025-02-24T15:52:32.5479324Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5479419Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5479423Z 
2025-02-24T15:52:32.5479563Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5479683Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5479776Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5479850Z         try:
2025-02-24T15:52:32.5479999Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5480081Z         except KeyError:
2025-02-24T15:52:32.5480229Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5480299Z     
2025-02-24T15:52:32.5480393Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5480493Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5480588Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5480722Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5480814Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5481055Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5481245Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5481251Z 
2025-02-24T15:52:32.5481384Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5481497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5481502Z 
2025-02-24T15:52:32.5481646Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5481738Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5481851Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5481941Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5482086Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5482175Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5482278Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5482360Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5482435Z err_msg = None
2025-02-24T15:52:32.5482440Z 
2025-02-24T15:52:32.5482556Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5482640Z         if err_msg is None:
2025-02-24T15:52:32.5482739Z             if left.shape != right.shape:
2025-02-24T15:52:32.5482824Z                 raise_assert_detail(
2025-02-24T15:52:32.5482974Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5483185Z                 )
2025-02-24T15:52:32.5483258Z     
2025-02-24T15:52:32.5483334Z             diff = 0
2025-02-24T15:52:32.5483557Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5483649Z                 # count up differences
2025-02-24T15:52:32.5483823Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5483909Z                     diff += 1
2025-02-24T15:52:32.5483979Z     
2025-02-24T15:52:32.5484069Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5484208Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5484385Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5484491Z E           AssertionError: Series are different
2025-02-24T15:52:32.5484568Z E           
2025-02-24T15:52:32.5484674Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5485055Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5485399Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5485733Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5485750Z 
2025-02-24T15:52:32.5486063Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5486292Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T15:52:32.5486297Z 
2025-02-24T15:52:32.5486521Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60650>
2025-02-24T15:52:32.5486694Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5486788Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5486796Z 
2025-02-24T15:52:32.5486935Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5487053Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5487217Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5487350Z         try:
2025-02-24T15:52:32.5487607Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5487763Z         except KeyError:
2025-02-24T15:52:32.5487995Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5488115Z     
2025-02-24T15:52:32.5488263Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5488433Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5488552Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5488694Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5488784Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5488874Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5488989Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5488994Z 
2025-02-24T15:52:32.5489118Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5489342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5489348Z 
2025-02-24T15:52:32.5489484Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5489650Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5489765Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5489848Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5489993Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5490076Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5490186Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5490266Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5490345Z err_msg = None
2025-02-24T15:52:32.5490350Z 
2025-02-24T15:52:32.5490462Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5490554Z         if err_msg is None:
2025-02-24T15:52:32.5490647Z             if left.shape != right.shape:
2025-02-24T15:52:32.5490735Z                 raise_assert_detail(
2025-02-24T15:52:32.5490886Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5491257Z                 )
2025-02-24T15:52:32.5491331Z     
2025-02-24T15:52:32.5491405Z             diff = 0
2025-02-24T15:52:32.5491524Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5491612Z                 # count up differences
2025-02-24T15:52:32.5491797Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5491880Z                     diff += 1
2025-02-24T15:52:32.5491951Z     
2025-02-24T15:52:32.5492038Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5492177Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5492350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5492465Z E           AssertionError: Series are different
2025-02-24T15:52:32.5492541Z E           
2025-02-24T15:52:32.5492651Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5493022Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5493396Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5493791Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5493806Z 
2025-02-24T15:52:32.5494163Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5494362Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T15:52:32.5494371Z 
2025-02-24T15:52:32.5494504Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5494642Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5494872Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5495130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5495254Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5495354Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5495430Z err_msg = None
2025-02-24T15:52:32.5495434Z 
2025-02-24T15:52:32.5495550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5495635Z         if err_msg is None:
2025-02-24T15:52:32.5495733Z             if left.shape != right.shape:
2025-02-24T15:52:32.5495824Z                 raise_assert_detail(
2025-02-24T15:52:32.5495973Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5496049Z                 )
2025-02-24T15:52:32.5496127Z     
2025-02-24T15:52:32.5496202Z             diff = 0
2025-02-24T15:52:32.5496313Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5496423Z                 # count up differences
2025-02-24T15:52:32.5496732Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5496875Z                     diff += 1
2025-02-24T15:52:32.5497008Z     
2025-02-24T15:52:32.5497154Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5497302Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5497473Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5497591Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5497664Z E           
2025-02-24T15:52:32.5497782Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5498045Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5498326Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5498333Z 
2025-02-24T15:52:32.5498647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5498652Z 
2025-02-24T15:52:32.5498825Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5498830Z 
2025-02-24T15:52:32.5499059Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60890>
2025-02-24T15:52:32.5499264Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>, attr = 'nu'
2025-02-24T15:52:32.5499277Z 
2025-02-24T15:52:32.5499416Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5499538Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5499625Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5499701Z         try:
2025-02-24T15:52:32.5499845Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5499943Z         except KeyError:
2025-02-24T15:52:32.5500086Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5500160Z     
2025-02-24T15:52:32.5500251Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5500352Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5500447Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5500584Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5500775Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5500867Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5501115Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5501236Z 
2025-02-24T15:52:32.5501375Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5501495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5501646Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5501722Z     ???
2025-02-24T15:52:32.5501834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5501843Z 
2025-02-24T15:52:32.5501912Z >   ???
2025-02-24T15:52:32.5502042Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5502113Z E   
2025-02-24T15:52:32.5502245Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5502358Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5502444Z E          ...
2025-02-24T15:52:32.5502533Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5502682Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5502796Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5502872Z E          ...
2025-02-24T15:52:32.5502960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5503087Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5503196Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5503200Z 
2025-02-24T15:52:32.5503289Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5503495Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T15:52:32.5503500Z 
2025-02-24T15:52:32.5503630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5503762Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5503866Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5504010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5504137Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5504231Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5504310Z err_msg = None
2025-02-24T15:52:32.5504315Z 
2025-02-24T15:52:32.5504425Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5504509Z         if err_msg is None:
2025-02-24T15:52:32.5504606Z             if left.shape != right.shape:
2025-02-24T15:52:32.5504695Z                 raise_assert_detail(
2025-02-24T15:52:32.5504840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5504915Z                 )
2025-02-24T15:52:32.5504988Z     
2025-02-24T15:52:32.5505066Z             diff = 0
2025-02-24T15:52:32.5505179Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5505275Z                 # count up differences
2025-02-24T15:52:32.5505450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5505530Z                     diff += 1
2025-02-24T15:52:32.5505601Z     
2025-02-24T15:52:32.5505691Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5505832Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5506002Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5506118Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5506191Z E           
2025-02-24T15:52:32.5506311Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5506577Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5507034Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5507041Z 
2025-02-24T15:52:32.5507356Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5507361Z 
2025-02-24T15:52:32.5507537Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5507542Z 
2025-02-24T15:52:32.5507765Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60950>
2025-02-24T15:52:32.5507941Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5508024Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5508034Z 
2025-02-24T15:52:32.5508175Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5508292Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5508381Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5508452Z         try:
2025-02-24T15:52:32.5508597Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5508682Z         except KeyError:
2025-02-24T15:52:32.5508820Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5508892Z     
2025-02-24T15:52:32.5508980Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5509078Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5509168Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5509304Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5509398Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5509492Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5509608Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5509612Z 
2025-02-24T15:52:32.5509742Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5509857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5510004Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5510087Z     ???
2025-02-24T15:52:32.5510202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5510206Z 
2025-02-24T15:52:32.5510287Z >   ???
2025-02-24T15:52:32.5510421Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5510492Z E   
2025-02-24T15:52:32.5510635Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5510758Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5510831Z E          ...
2025-02-24T15:52:32.5511050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5511200Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5511322Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5511400Z E          ...
2025-02-24T15:52:32.5511487Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5511618Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5511725Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5511730Z 
2025-02-24T15:52:32.5511827Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5512026Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T15:52:32.5512030Z 
2025-02-24T15:52:32.5512166Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5512423Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5512521Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5512764Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5512889Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5512991Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5513066Z err_msg = None
2025-02-24T15:52:32.5513071Z 
2025-02-24T15:52:32.5513184Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5513271Z         if err_msg is None:
2025-02-24T15:52:32.5513368Z             if left.shape != right.shape:
2025-02-24T15:52:32.5513458Z                 raise_assert_detail(
2025-02-24T15:52:32.5513606Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5513687Z                 )
2025-02-24T15:52:32.5513757Z     
2025-02-24T15:52:32.5513835Z             diff = 0
2025-02-24T15:52:32.5513945Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5514045Z                 # count up differences
2025-02-24T15:52:32.5514216Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5514299Z                     diff += 1
2025-02-24T15:52:32.5514368Z     
2025-02-24T15:52:32.5514462Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5514601Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5514773Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5514890Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5514964Z E           
2025-02-24T15:52:32.5515089Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5515353Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5515631Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5515637Z 
2025-02-24T15:52:32.5515951Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5515956Z 
2025-02-24T15:52:32.5516127Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5516132Z 
2025-02-24T15:52:32.5516363Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60a10>
2025-02-24T15:52:32.5516572Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>, attr = 'f_lu'
2025-02-24T15:52:32.5516585Z 
2025-02-24T15:52:32.5516723Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5516845Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5516932Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5517008Z         try:
2025-02-24T15:52:32.5517153Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5517240Z         except KeyError:
2025-02-24T15:52:32.5517381Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5517456Z     
2025-02-24T15:52:32.5517547Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5517647Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5517737Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5517873Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5518090Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5518180Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5518369Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5518374Z 
2025-02-24T15:52:32.5518499Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5518620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5518767Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5518843Z     ???
2025-02-24T15:52:32.5518952Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5518956Z 
2025-02-24T15:52:32.5519030Z >   ???
2025-02-24T15:52:32.5519159Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5519229Z E   
2025-02-24T15:52:32.5519363Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5519478Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5519567Z E          ...
2025-02-24T15:52:32.5519657Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5519799Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5519913Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5519989Z E          ...
2025-02-24T15:52:32.5520076Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5520211Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5520321Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5520325Z 
2025-02-24T15:52:32.5520416Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5520620Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T15:52:32.5520625Z 
2025-02-24T15:52:32.5520754Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5520888Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5521115Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5521262Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5521389Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5521491Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5521571Z err_msg = None
2025-02-24T15:52:32.5521575Z 
2025-02-24T15:52:32.5521686Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5521829Z         if err_msg is None:
2025-02-24T15:52:32.5521995Z             if left.shape != right.shape:
2025-02-24T15:52:32.5522150Z                 raise_assert_detail(
2025-02-24T15:52:32.5522399Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5522528Z                 )
2025-02-24T15:52:32.5522654Z     
2025-02-24T15:52:32.5522784Z             diff = 0
2025-02-24T15:52:32.5522971Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5523130Z                 # count up differences
2025-02-24T15:52:32.5523379Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5523460Z                     diff += 1
2025-02-24T15:52:32.5523533Z     
2025-02-24T15:52:32.5523622Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5523764Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5523935Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5524052Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5524123Z E           
2025-02-24T15:52:32.5524237Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5524494Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5525001Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5525008Z 
2025-02-24T15:52:32.5525321Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5525326Z 
2025-02-24T15:52:32.5525496Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5525500Z 
2025-02-24T15:52:32.5525723Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd61190>
2025-02-24T15:52:32.5525897Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5525980Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5525990Z 
2025-02-24T15:52:32.5526131Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5526247Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5526335Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5526408Z         try:
2025-02-24T15:52:32.5526552Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5526638Z         except KeyError:
2025-02-24T15:52:32.5526777Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5526852Z     
2025-02-24T15:52:32.5526941Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5527039Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5527130Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5527267Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5527362Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5527454Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5527571Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5527647Z             else:
2025-02-24T15:52:32.5527744Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5527857Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5527861Z 
2025-02-24T15:52:32.5527990Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5528105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5528257Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5528328Z     ???
2025-02-24T15:52:32.5528444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5528449Z 
2025-02-24T15:52:32.5528518Z >   ???
2025-02-24T15:52:32.5528652Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5528721Z E   
2025-02-24T15:52:32.5528855Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5528979Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5529052Z E          ...
2025-02-24T15:52:32.5529146Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5529276Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5529392Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5529465Z E          ...
2025-02-24T15:52:32.5529555Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5529681Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5529792Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5529796Z 
2025-02-24T15:52:32.5529887Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5530090Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T15:52:32.5530182Z 
2025-02-24T15:52:32.5530317Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5530521Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5530621Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5530754Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5530881Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5531091Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5531173Z err_msg = None
2025-02-24T15:52:32.5531178Z 
2025-02-24T15:52:32.5531290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5531372Z         if err_msg is None:
2025-02-24T15:52:32.5531470Z             if left.shape != right.shape:
2025-02-24T15:52:32.5531562Z                 raise_assert_detail(
2025-02-24T15:52:32.5531710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5531820Z                 )
2025-02-24T15:52:32.5531948Z     
2025-02-24T15:52:32.5532079Z             diff = 0
2025-02-24T15:52:32.5532277Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5532418Z                 # count up differences
2025-02-24T15:52:32.5532699Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5532836Z                     diff += 1
2025-02-24T15:52:32.5532949Z     
2025-02-24T15:52:32.5533101Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5533334Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5533626Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5533808Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5533950Z E           
2025-02-24T15:52:32.5534136Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5534477Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5534748Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5534754Z 
2025-02-24T15:52:32.5535066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5535075Z 
2025-02-24T15:52:32.5535249Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5535254Z 
2025-02-24T15:52:32.5535483Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd61250>
2025-02-24T15:52:32.5535657Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5535741Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5535746Z 
2025-02-24T15:52:32.5535888Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5536011Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5536098Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5536175Z         try:
2025-02-24T15:52:32.5536323Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5536422Z         except KeyError:
2025-02-24T15:52:32.5536564Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5536641Z     
2025-02-24T15:52:32.5536882Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5536979Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5537075Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5537315Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5537411Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5537502Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5537635Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5537709Z             else:
2025-02-24T15:52:32.5537809Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5537920Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5537925Z 
2025-02-24T15:52:32.5538056Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5538174Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5538323Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5538404Z     ???
2025-02-24T15:52:32.5538516Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5538526Z 
2025-02-24T15:52:32.5538599Z >   ???
2025-02-24T15:52:32.5538728Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5538802Z E   
2025-02-24T15:52:32.5538930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5539049Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5539123Z E          ...
2025-02-24T15:52:32.5539217Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5539352Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5539464Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5539540Z E          ...
2025-02-24T15:52:32.5539629Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5539757Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5539869Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5539873Z 
2025-02-24T15:52:32.5539968Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5540171Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T15:52:32.5540176Z 
2025-02-24T15:52:32.5540310Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5540448Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5540548Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5540686Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5540811Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5541049Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5541136Z err_msg = None
2025-02-24T15:52:32.5541140Z 
2025-02-24T15:52:32.5541256Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5541339Z         if err_msg is None:
2025-02-24T15:52:32.5541444Z             if left.shape != right.shape:
2025-02-24T15:52:32.5541534Z                 raise_assert_detail(
2025-02-24T15:52:32.5541684Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5541760Z                 )
2025-02-24T15:52:32.5541831Z     
2025-02-24T15:52:32.5541910Z             diff = 0
2025-02-24T15:52:32.5542023Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5542118Z                 # count up differences
2025-02-24T15:52:32.5542290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5542377Z                     diff += 1
2025-02-24T15:52:32.5542448Z     
2025-02-24T15:52:32.5542542Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5542680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5542997Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5543216Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5543289Z E           
2025-02-24T15:52:32.5543405Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5543665Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5543932Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5543946Z 
2025-02-24T15:52:32.5544269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5544280Z 
2025-02-24T15:52:32.5544452Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5544457Z 
2025-02-24T15:52:32.5544681Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd613d0>
2025-02-24T15:52:32.5544851Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5544932Z attr = 'j_blues'
2025-02-24T15:52:32.5544936Z 
2025-02-24T15:52:32.5545078Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5545198Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5545287Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5545359Z         try:
2025-02-24T15:52:32.5545502Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5545592Z         except KeyError:
2025-02-24T15:52:32.5545735Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5545811Z     
2025-02-24T15:52:32.5545904Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5545999Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5546094Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5546227Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5546320Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5546413Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5546528Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5546605Z             else:
2025-02-24T15:52:32.5546701Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5546815Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5546819Z 
2025-02-24T15:52:32.5546947Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5547067Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5547213Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5547295Z     ???
2025-02-24T15:52:32.5547409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5547414Z 
2025-02-24T15:52:32.5547484Z >   ???
2025-02-24T15:52:32.5547614Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5547684Z E   
2025-02-24T15:52:32.5547817Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5547929Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5548007Z E          ...
2025-02-24T15:52:32.5548096Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5548229Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5548343Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5548510Z E          ...
2025-02-24T15:52:32.5548600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5548726Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5548909Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5548913Z 
2025-02-24T15:52:32.5549005Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5549218Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T15:52:32.5549222Z 
2025-02-24T15:52:32.5549351Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5549484Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5549581Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5549717Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5549933Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5550103Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5550250Z err_msg = None
2025-02-24T15:52:32.5550257Z 
2025-02-24T15:52:32.5550445Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5550593Z         if err_msg is None:
2025-02-24T15:52:32.5550753Z             if left.shape != right.shape:
2025-02-24T15:52:32.5550901Z                 raise_assert_detail(
2025-02-24T15:52:32.5551278Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5551411Z                 )
2025-02-24T15:52:32.5551524Z     
2025-02-24T15:52:32.5551600Z             diff = 0
2025-02-24T15:52:32.5551718Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5551807Z                 # count up differences
2025-02-24T15:52:32.5551983Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5552072Z                     diff += 1
2025-02-24T15:52:32.5552144Z     
2025-02-24T15:52:32.5552234Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5552380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5552553Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5552669Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5552745Z E           
2025-02-24T15:52:32.5552856Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5553120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5553382Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5553395Z 
2025-02-24T15:52:32.5553716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5553720Z 
2025-02-24T15:52:32.5553894Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5553899Z 
2025-02-24T15:52:32.5554122Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62150>
2025-02-24T15:52:32.5554293Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5554370Z attr = 'lines'
2025-02-24T15:52:32.5554374Z 
2025-02-24T15:52:32.5554516Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5554794Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5554889Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5554964Z         try:
2025-02-24T15:52:32.5555209Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5555295Z         except KeyError:
2025-02-24T15:52:32.5555434Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5555505Z     
2025-02-24T15:52:32.5555594Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5555692Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5555784Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5555922Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5556010Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5556104Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5556216Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5556291Z             else:
2025-02-24T15:52:32.5556396Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5556504Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5556515Z 
2025-02-24T15:52:32.5556643Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5556760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5556910Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5556983Z     ???
2025-02-24T15:52:32.5557097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5557102Z 
2025-02-24T15:52:32.5557170Z >   ???
2025-02-24T15:52:32.5557306Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5557380Z E   
2025-02-24T15:52:32.5557510Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5557631Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5557704Z E          ...
2025-02-24T15:52:32.5557803Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5557934Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5558058Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5558131Z E          ...
2025-02-24T15:52:32.5558221Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5558348Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5558457Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5558462Z 
2025-02-24T15:52:32.5558557Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5558808Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T15:52:32.5558814Z 
2025-02-24T15:52:32.5559043Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62210>
2025-02-24T15:52:32.5559213Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5559313Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5559318Z 
2025-02-24T15:52:32.5559454Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5559578Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5559667Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5559740Z         try:
2025-02-24T15:52:32.5559887Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5559968Z         except KeyError:
2025-02-24T15:52:32.5560112Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5560183Z     
2025-02-24T15:52:32.5560275Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5560370Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5560466Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5560597Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5560688Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5560780Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5561116Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5561122Z 
2025-02-24T15:52:32.5561254Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5561505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5561510Z 
2025-02-24T15:52:32.5561679Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5561767Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5561882Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5561966Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5562110Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5562199Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5562304Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5562393Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5562470Z err_msg = None
2025-02-24T15:52:32.5562474Z 
2025-02-24T15:52:32.5562588Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5562677Z         if err_msg is None:
2025-02-24T15:52:32.5562779Z             if left.shape != right.shape:
2025-02-24T15:52:32.5562866Z                 raise_assert_detail(
2025-02-24T15:52:32.5563018Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5563091Z                 )
2025-02-24T15:52:32.5563164Z     
2025-02-24T15:52:32.5563243Z             diff = 0
2025-02-24T15:52:32.5563357Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5563451Z                 # count up differences
2025-02-24T15:52:32.5563620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5563707Z                     diff += 1
2025-02-24T15:52:32.5563779Z     
2025-02-24T15:52:32.5563881Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5564020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5564204Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5564310Z E           AssertionError: Series are different
2025-02-24T15:52:32.5564395Z E           
2025-02-24T15:52:32.5564501Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5564879Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5565220Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5565562Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5565575Z 
2025-02-24T15:52:32.5565889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5566152Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T15:52:32.5566274Z 
2025-02-24T15:52:32.5566504Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd622d0>
2025-02-24T15:52:32.5566681Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5566862Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5566867Z 
2025-02-24T15:52:32.5567046Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5567238Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5567485Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5567661Z         try:
2025-02-24T15:52:32.5567839Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5567988Z         except KeyError:
2025-02-24T15:52:32.5568161Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5568339Z     
2025-02-24T15:52:32.5568492Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5568657Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5568787Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5568991Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5569176Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5569341Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5569523Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5569529Z 
2025-02-24T15:52:32.5569686Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5569869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5569874Z 
2025-02-24T15:52:32.5570027Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5570257Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5570437Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5570556Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5570767Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5570872Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5571378Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5571507Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5571655Z err_msg = None
2025-02-24T15:52:32.5571660Z 
2025-02-24T15:52:32.5571807Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5571945Z         if err_msg is None:
2025-02-24T15:52:32.5572192Z             if left.shape != right.shape:
2025-02-24T15:52:32.5572314Z                 raise_assert_detail(
2025-02-24T15:52:32.5572530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5572637Z                 )
2025-02-24T15:52:32.5572775Z     
2025-02-24T15:52:32.5572927Z             diff = 0
2025-02-24T15:52:32.5573130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5573259Z                 # count up differences
2025-02-24T15:52:32.5573503Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5573640Z                     diff += 1
2025-02-24T15:52:32.5573806Z     
2025-02-24T15:52:32.5573976Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5574149Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5574390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5574546Z E           AssertionError: Series are different
2025-02-24T15:52:32.5574714Z E           
2025-02-24T15:52:32.5574867Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5575308Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5576040Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5576455Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5576488Z 
2025-02-24T15:52:32.5576886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5577182Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T15:52:32.5577188Z 
2025-02-24T15:52:32.5577370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5577570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5577704Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5577935Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5578159Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5578289Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5578441Z err_msg = None
2025-02-24T15:52:32.5578446Z 
2025-02-24T15:52:32.5578590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5578769Z         if err_msg is None:
2025-02-24T15:52:32.5578925Z             if left.shape != right.shape:
2025-02-24T15:52:32.5579097Z                 raise_assert_detail(
2025-02-24T15:52:32.5579277Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5579419Z                 )
2025-02-24T15:52:32.5579581Z     
2025-02-24T15:52:32.5579721Z             diff = 0
2025-02-24T15:52:32.5579902Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5580025Z                 # count up differences
2025-02-24T15:52:32.5580260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5580359Z                     diff += 1
2025-02-24T15:52:32.5580568Z     
2025-02-24T15:52:32.5580690Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5580903Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5581266Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5581442Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5581662Z E           
2025-02-24T15:52:32.5581812Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5582142Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5582442Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5582606Z 
2025-02-24T15:52:32.5582951Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5583058Z 
2025-02-24T15:52:32.5583531Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5583544Z 
2025-02-24T15:52:32.5584005Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62510>
2025-02-24T15:52:32.5584309Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>, attr = 'nu'
2025-02-24T15:52:32.5584315Z 
2025-02-24T15:52:32.5584620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5584778Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5584932Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5585037Z         try:
2025-02-24T15:52:32.5585233Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5585418Z         except KeyError:
2025-02-24T15:52:32.5585642Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5585753Z     
2025-02-24T15:52:32.5585910Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5586041Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5586269Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5586490Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5586610Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5586767Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5586912Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5586917Z 
2025-02-24T15:52:32.5587161Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5587327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5587549Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5587661Z     ???
2025-02-24T15:52:32.5587855Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5587864Z 
2025-02-24T15:52:32.5588026Z >   ???
2025-02-24T15:52:32.5588205Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5588341Z E   
2025-02-24T15:52:32.5588504Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5588704Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5588796Z E          ...
2025-02-24T15:52:32.5589007Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5589172Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5589354Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5589510Z E          ...
2025-02-24T15:52:32.5589615Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5589863Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5590007Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5590012Z 
2025-02-24T15:52:32.5590169Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5590444Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T15:52:32.5590449Z 
2025-02-24T15:52:32.5590631Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5590885Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5591152Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5591381Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5591549Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5591699Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5592004Z err_msg = None
2025-02-24T15:52:32.5592009Z 
2025-02-24T15:52:32.5592207Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5592342Z         if err_msg is None:
2025-02-24T15:52:32.5592614Z             if left.shape != right.shape:
2025-02-24T15:52:32.5592754Z                 raise_assert_detail(
2025-02-24T15:52:32.5592980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5593151Z                 )
2025-02-24T15:52:32.5593256Z     
2025-02-24T15:52:32.5593397Z             diff = 0
2025-02-24T15:52:32.5593543Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5593732Z                 # count up differences
2025-02-24T15:52:32.5593969Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5594118Z                     diff += 1
2025-02-24T15:52:32.5594222Z     
2025-02-24T15:52:32.5594385Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5594622Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5594860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5595047Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5595152Z E           
2025-02-24T15:52:32.5595335Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5595615Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5596021Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5596032Z 
2025-02-24T15:52:32.5596417Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5596426Z 
2025-02-24T15:52:32.5596632Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5596637Z 
2025-02-24T15:52:32.5596932Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd625d0>
2025-02-24T15:52:32.5597210Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5597341Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5597346Z 
2025-02-24T15:52:32.5597549Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5597700Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5597854Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5597961Z         try:
2025-02-24T15:52:32.5598238Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5598363Z         except KeyError:
2025-02-24T15:52:32.5598569Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5598725Z     
2025-02-24T15:52:32.5598832Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5599052Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5599178Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5599376Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5599496Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5599655Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5599838Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5599842Z 
2025-02-24T15:52:32.5600049Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5600231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5600426Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5600638Z     ???
2025-02-24T15:52:32.5600826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5601040Z 
2025-02-24T15:52:32.5601204Z >   ???
2025-02-24T15:52:32.5601395Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5601535Z E   
2025-02-24T15:52:32.5601699Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5601918Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5602091Z E          ...
2025-02-24T15:52:32.5602216Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5602419Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5602566Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5602733Z E          ...
2025-02-24T15:52:32.5602869Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5603080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5603228Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5603233Z 
2025-02-24T15:52:32.5603399Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5603705Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T15:52:32.5603710Z 
2025-02-24T15:52:32.5603906Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5604104Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5604237Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5604440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5604582Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5604829Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5604980Z err_msg = None
2025-02-24T15:52:32.5604984Z 
2025-02-24T15:52:32.5605127Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5605284Z         if err_msg is None:
2025-02-24T15:52:32.5605399Z             if left.shape != right.shape:
2025-02-24T15:52:32.5605631Z                 raise_assert_detail(
2025-02-24T15:52:32.5605813Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5605953Z                 )
2025-02-24T15:52:32.5606057Z     
2025-02-24T15:52:32.5606185Z             diff = 0
2025-02-24T15:52:32.5606387Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5606564Z                 # count up differences
2025-02-24T15:52:32.5606803Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5606918Z                     diff += 1
2025-02-24T15:52:32.5607039Z     
2025-02-24T15:52:32.5607224Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5607451Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5607656Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5607842Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5607948Z E           
2025-02-24T15:52:32.5608178Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5608524Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5608820Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5608943Z 
2025-02-24T15:52:32.5609351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5609456Z 
2025-02-24T15:52:32.5609689Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5609695Z 
2025-02-24T15:52:32.5610001Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62690>
2025-02-24T15:52:32.5610296Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>, attr = 'f_lu'
2025-02-24T15:52:32.5610301Z 
2025-02-24T15:52:32.5610473Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5610674Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5610795Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5611155Z         try:
2025-02-24T15:52:32.5611446Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5611593Z         except KeyError:
2025-02-24T15:52:32.5611810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5611919Z     
2025-02-24T15:52:32.5612132Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5612279Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5612454Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5612624Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5612781Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5612891Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5613132Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5613137Z 
2025-02-24T15:52:32.5613355Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5613503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5613719Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5613814Z     ???
2025-02-24T15:52:32.5614049Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5614059Z 
2025-02-24T15:52:32.5614177Z >   ???
2025-02-24T15:52:32.5614380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5614482Z E   
2025-02-24T15:52:32.5614664Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5614917Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5615024Z E          ...
2025-02-24T15:52:32.5615180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5615345Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5615512Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5615658Z E          ...
2025-02-24T15:52:32.5615847Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5616006Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5616186Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5616191Z 
2025-02-24T15:52:32.5616398Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5616838Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T15:52:32.5616848Z 
2025-02-24T15:52:32.5617195Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5623420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5623648Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5623899Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5624124Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5624281Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5624554Z err_msg = None
2025-02-24T15:52:32.5624561Z 
2025-02-24T15:52:32.5624689Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5624944Z         if err_msg is None:
2025-02-24T15:52:32.5625051Z             if left.shape != right.shape:
2025-02-24T15:52:32.5625142Z                 raise_assert_detail(
2025-02-24T15:52:32.5625305Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5625386Z                 )
2025-02-24T15:52:32.5625458Z     
2025-02-24T15:52:32.5625538Z             diff = 0
2025-02-24T15:52:32.5625656Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5625753Z                 # count up differences
2025-02-24T15:52:32.5625933Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5626013Z                     diff += 1
2025-02-24T15:52:32.5626086Z     
2025-02-24T15:52:32.5626178Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5626328Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5626505Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5626630Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5626704Z E           
2025-02-24T15:52:32.5626823Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5627088Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5627356Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5627366Z 
2025-02-24T15:52:32.5627685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5627694Z 
2025-02-24T15:52:32.5627871Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5627881Z 
2025-02-24T15:52:32.5628105Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62e10>
2025-02-24T15:52:32.5628278Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5628362Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5628366Z 
2025-02-24T15:52:32.5628515Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5628636Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5628732Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5628805Z         try:
2025-02-24T15:52:32.5628966Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5629055Z         except KeyError:
2025-02-24T15:52:32.5629197Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5629274Z     
2025-02-24T15:52:32.5629365Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5629467Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5629559Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5629702Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5629791Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5629887Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5630000Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5630075Z             else:
2025-02-24T15:52:32.5630172Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5630287Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5630292Z 
2025-02-24T15:52:32.5630516Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5630633Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5630865Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5631117Z     ???
2025-02-24T15:52:32.5631238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5631243Z 
2025-02-24T15:52:32.5631313Z >   ???
2025-02-24T15:52:32.5631444Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5631514Z E   
2025-02-24T15:52:32.5631649Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5631769Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5631841Z E          ...
2025-02-24T15:52:32.5631934Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5632066Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5632192Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5632264Z E          ...
2025-02-24T15:52:32.5632354Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5632485Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5632595Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5632600Z 
2025-02-24T15:52:32.5632692Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5632912Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T15:52:32.5632916Z 
2025-02-24T15:52:32.5633049Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5633183Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5633287Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5633423Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5633557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5633651Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5633737Z err_msg = None
2025-02-24T15:52:32.5633741Z 
2025-02-24T15:52:32.5633861Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5633944Z         if err_msg is None:
2025-02-24T15:52:32.5634046Z             if left.shape != right.shape:
2025-02-24T15:52:32.5634135Z                 raise_assert_detail(
2025-02-24T15:52:32.5634287Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5634360Z                 )
2025-02-24T15:52:32.5634437Z     
2025-02-24T15:52:32.5634512Z             diff = 0
2025-02-24T15:52:32.5634629Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5634719Z                 # count up differences
2025-02-24T15:52:32.5634894Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5634979Z                     diff += 1
2025-02-24T15:52:32.5635052Z     
2025-02-24T15:52:32.5635150Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5635287Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5635464Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5635578Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5635654Z E           
2025-02-24T15:52:32.5635768Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5636034Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5636458Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5636567Z 
2025-02-24T15:52:32.5636883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5636888Z 
2025-02-24T15:52:32.5637063Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5637067Z 
2025-02-24T15:52:32.5637292Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62ed0>
2025-02-24T15:52:32.5637463Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5637549Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5637553Z 
2025-02-24T15:52:32.5637691Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5637821Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5637907Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5637987Z         try:
2025-02-24T15:52:32.5638131Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5638216Z         except KeyError:
2025-02-24T15:52:32.5638358Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5638431Z     
2025-02-24T15:52:32.5638523Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5638623Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5638716Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5638849Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5638938Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5639029Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5639142Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5639220Z             else:
2025-02-24T15:52:32.5639322Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5639431Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5639440Z 
2025-02-24T15:52:32.5639573Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5639689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5639840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5639916Z     ???
2025-02-24T15:52:32.5640028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5640032Z 
2025-02-24T15:52:32.5640106Z >   ???
2025-02-24T15:52:32.5640234Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5640306Z E   
2025-02-24T15:52:32.5640433Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5640548Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5640625Z E          ...
2025-02-24T15:52:32.5640718Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5640846Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5641130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5641209Z E          ...
2025-02-24T15:52:32.5641296Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5641423Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5641527Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5641531Z 
2025-02-24T15:52:32.5641623Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5641830Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T15:52:32.5641835Z 
2025-02-24T15:52:32.5641968Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5642100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5642329Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5642464Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5642692Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5642789Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5642866Z err_msg = None
2025-02-24T15:52:32.5642870Z 
2025-02-24T15:52:32.5642987Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5643069Z         if err_msg is None:
2025-02-24T15:52:32.5643173Z             if left.shape != right.shape:
2025-02-24T15:52:32.5643264Z                 raise_assert_detail(
2025-02-24T15:52:32.5643412Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5643488Z                 )
2025-02-24T15:52:32.5643557Z     
2025-02-24T15:52:32.5643639Z             diff = 0
2025-02-24T15:52:32.5643752Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5643845Z                 # count up differences
2025-02-24T15:52:32.5644020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5644105Z                     diff += 1
2025-02-24T15:52:32.5644176Z     
2025-02-24T15:52:32.5644270Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5644408Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5644584Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5644703Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5644776Z E           
2025-02-24T15:52:32.5644892Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5645153Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5645429Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5645434Z 
2025-02-24T15:52:32.5645750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5645754Z 
2025-02-24T15:52:32.5645923Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5645928Z 
2025-02-24T15:52:32.5646163Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd63050>
2025-02-24T15:52:32.5646347Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5646428Z attr = 'j_blues'
2025-02-24T15:52:32.5646432Z 
2025-02-24T15:52:32.5646580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5646698Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5646789Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5646862Z         try:
2025-02-24T15:52:32.5647007Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5647091Z         except KeyError:
2025-02-24T15:52:32.5647234Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5647304Z     
2025-02-24T15:52:32.5647397Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5647492Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5647586Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5647719Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5647899Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5647993Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5648103Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5648257Z             else:
2025-02-24T15:52:32.5648353Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5648464Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5648468Z 
2025-02-24T15:52:32.5648594Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5648714Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5648860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5648935Z     ???
2025-02-24T15:52:32.5649048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5649056Z 
2025-02-24T15:52:32.5649125Z >   ???
2025-02-24T15:52:32.5649255Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5649330Z E   
2025-02-24T15:52:32.5649463Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5649577Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5649659Z E          ...
2025-02-24T15:52:32.5649749Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5649890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5650002Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5650079Z E          ...
2025-02-24T15:52:32.5650166Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5650299Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5650456Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5650466Z 
2025-02-24T15:52:32.5650611Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5651168Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T15:52:32.5651187Z 
2025-02-24T15:52:32.5651393Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5651597Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5651761Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5651984Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5652208Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5652371Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5652493Z err_msg = None
2025-02-24T15:52:32.5652500Z 
2025-02-24T15:52:32.5652674Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5652809Z         if err_msg is None:
2025-02-24T15:52:32.5652958Z             if left.shape != right.shape:
2025-02-24T15:52:32.5653106Z                 raise_assert_detail(
2025-02-24T15:52:32.5653343Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5653467Z                 )
2025-02-24T15:52:32.5653591Z     
2025-02-24T15:52:32.5653706Z             diff = 0
2025-02-24T15:52:32.5653894Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5654034Z                 # count up differences
2025-02-24T15:52:32.5654304Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5654435Z                     diff += 1
2025-02-24T15:52:32.5654546Z     
2025-02-24T15:52:32.5654691Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5654918Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5655256Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5655469Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5655729Z E           
2025-02-24T15:52:32.5655852Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5656122Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5656516Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5656523Z 
2025-02-24T15:52:32.5656867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5656872Z 
2025-02-24T15:52:32.5657056Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5657062Z 
2025-02-24T15:52:32.5657284Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd63dd0>
2025-02-24T15:52:32.5657463Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5657540Z attr = 'lines'
2025-02-24T15:52:32.5657544Z 
2025-02-24T15:52:32.5657687Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5657807Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5657899Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5657978Z         try:
2025-02-24T15:52:32.5658121Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5658208Z         except KeyError:
2025-02-24T15:52:32.5658346Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5658419Z     
2025-02-24T15:52:32.5658507Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5658611Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5658701Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5658838Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5658932Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5659033Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5659143Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5659221Z             else:
2025-02-24T15:52:32.5659321Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5659429Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5659434Z 
2025-02-24T15:52:32.5659563Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5659677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5659828Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5659901Z     ???
2025-02-24T15:52:32.5660018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5660023Z 
2025-02-24T15:52:32.5660093Z >   ???
2025-02-24T15:52:32.5660227Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5660300Z E   
2025-02-24T15:52:32.5660431Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5660548Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5660621Z E          ...
2025-02-24T15:52:32.5661308Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5661452Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5661570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5661643Z E          ...
2025-02-24T15:52:32.5661765Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5661893Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5662002Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5662164Z 
2025-02-24T15:52:32.5662265Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5662794Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T15:52:32.5662957Z 
2025-02-24T15:52:32.5663350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd63e90>
2025-02-24T15:52:32.5663624Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5663723Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5663728Z 
2025-02-24T15:52:32.5663866Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5663989Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5664079Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5664151Z         try:
2025-02-24T15:52:32.5664294Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5664376Z         except KeyError:
2025-02-24T15:52:32.5664524Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5664594Z     
2025-02-24T15:52:32.5664686Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5664787Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5664883Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5665024Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5665114Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5665204Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5665319Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5665324Z 
2025-02-24T15:52:32.5665448Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5665564Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5665569Z 
2025-02-24T15:52:32.5665712Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5665805Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5665919Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5666005Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5666149Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5666236Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5666345Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5666432Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5666509Z err_msg = None
2025-02-24T15:52:32.5666513Z 
2025-02-24T15:52:32.5666630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5666713Z         if err_msg is None:
2025-02-24T15:52:32.5666814Z             if left.shape != right.shape:
2025-02-24T15:52:32.5666901Z                 raise_assert_detail(
2025-02-24T15:52:32.5667054Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5667131Z                 )
2025-02-24T15:52:32.5667203Z     
2025-02-24T15:52:32.5667276Z             diff = 0
2025-02-24T15:52:32.5667397Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5667490Z                 # count up differences
2025-02-24T15:52:32.5667664Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5667749Z                     diff += 1
2025-02-24T15:52:32.5667819Z     
2025-02-24T15:52:32.5667910Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5668047Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5668225Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5668333Z E           AssertionError: Series are different
2025-02-24T15:52:32.5668411Z E           
2025-02-24T15:52:32.5668516Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5668984Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5669397Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5669727Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5669747Z 
2025-02-24T15:52:32.5670059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5670378Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T15:52:32.5670384Z 
2025-02-24T15:52:32.5670605Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd63f50>
2025-02-24T15:52:32.5670778Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5670871Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5670875Z 
2025-02-24T15:52:32.5671303Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5671428Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5671522Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5671600Z         try:
2025-02-24T15:52:32.5671742Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5671834Z         except KeyError:
2025-02-24T15:52:32.5671973Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5672046Z     
2025-02-24T15:52:32.5672136Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5672278Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5672431Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5672664Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5672813Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5672972Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5673161Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5673167Z 
2025-02-24T15:52:32.5673343Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5673470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5673474Z 
2025-02-24T15:52:32.5673619Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5673710Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5673821Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5673909Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5674054Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5674139Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5674250Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5674332Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5674417Z err_msg = None
2025-02-24T15:52:32.5674421Z 
2025-02-24T15:52:32.5674534Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5674760Z         if err_msg is None:
2025-02-24T15:52:32.5674859Z             if left.shape != right.shape:
2025-02-24T15:52:32.5674951Z                 raise_assert_detail(
2025-02-24T15:52:32.5675203Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5675283Z                 )
2025-02-24T15:52:32.5675358Z     
2025-02-24T15:52:32.5675432Z             diff = 0
2025-02-24T15:52:32.5675548Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5675639Z                 # count up differences
2025-02-24T15:52:32.5675814Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5675894Z                     diff += 1
2025-02-24T15:52:32.5675968Z     
2025-02-24T15:52:32.5676056Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5676199Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5676373Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5676488Z E           AssertionError: Series are different
2025-02-24T15:52:32.5676564Z E           
2025-02-24T15:52:32.5676675Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5677046Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5677419Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5677803Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5677813Z 
2025-02-24T15:52:32.5678127Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5678375Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T15:52:32.5678381Z 
2025-02-24T15:52:32.5678519Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5678659Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5678762Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5678906Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5679030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5679130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5679208Z err_msg = None
2025-02-24T15:52:32.5679212Z 
2025-02-24T15:52:32.5679325Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5679408Z         if err_msg is None:
2025-02-24T15:52:32.5679508Z             if left.shape != right.shape:
2025-02-24T15:52:32.5679597Z                 raise_assert_detail(
2025-02-24T15:52:32.5679738Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5679901Z                 )
2025-02-24T15:52:32.5679970Z     
2025-02-24T15:52:32.5680048Z             diff = 0
2025-02-24T15:52:32.5680161Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5680350Z                 # count up differences
2025-02-24T15:52:32.5680517Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5680601Z                     diff += 1
2025-02-24T15:52:32.5680670Z     
2025-02-24T15:52:32.5680763Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5680901Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5681308Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5681432Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5681506Z E           
2025-02-24T15:52:32.5681626Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5681889Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5682168Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5682175Z 
2025-02-24T15:52:32.5682482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5682487Z 
2025-02-24T15:52:32.5682656Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5682661Z 
2025-02-24T15:52:32.5682897Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb941d0>
2025-02-24T15:52:32.5683099Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>, attr = 'nu'
2025-02-24T15:52:32.5683114Z 
2025-02-24T15:52:32.5683251Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5683371Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5683458Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5683532Z         try:
2025-02-24T15:52:32.5683673Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5683759Z         except KeyError:
2025-02-24T15:52:32.5683901Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5683974Z     
2025-02-24T15:52:32.5684062Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5684161Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5684250Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5684385Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5684482Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5684572Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5684695Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5684700Z 
2025-02-24T15:52:32.5684827Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5684947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5685097Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5685173Z     ???
2025-02-24T15:52:32.5685287Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5685291Z 
2025-02-24T15:52:32.5685366Z >   ???
2025-02-24T15:52:32.5685502Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5685574Z E   
2025-02-24T15:52:32.5685708Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5685953Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5686028Z E          ...
2025-02-24T15:52:32.5686118Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5686356Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5686472Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5686549Z E          ...
2025-02-24T15:52:32.5686637Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5686769Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5686879Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5686888Z 
2025-02-24T15:52:32.5686980Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5687274Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T15:52:32.5687280Z 
2025-02-24T15:52:32.5687411Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5687551Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5687650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5687794Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5687918Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5688021Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5688104Z err_msg = None
2025-02-24T15:52:32.5688108Z 
2025-02-24T15:52:32.5688217Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5688305Z         if err_msg is None:
2025-02-24T15:52:32.5688401Z             if left.shape != right.shape:
2025-02-24T15:52:32.5688490Z                 raise_assert_detail(
2025-02-24T15:52:32.5688637Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5688724Z                 )
2025-02-24T15:52:32.5688795Z     
2025-02-24T15:52:32.5688876Z             diff = 0
2025-02-24T15:52:32.5688988Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5689108Z                 # count up differences
2025-02-24T15:52:32.5689417Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5689550Z                     diff += 1
2025-02-24T15:52:32.5689673Z     
2025-02-24T15:52:32.5689822Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5690054Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5690289Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5690410Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5690483Z E           
2025-02-24T15:52:32.5690599Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5690861Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5691301Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5691309Z 
2025-02-24T15:52:32.5691633Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5691638Z 
2025-02-24T15:52:32.5691810Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5691819Z 
2025-02-24T15:52:32.5692197Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94290>
2025-02-24T15:52:32.5692369Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5692561Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5692566Z 
2025-02-24T15:52:32.5692710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5692829Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5692920Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5692994Z         try:
2025-02-24T15:52:32.5693142Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5693226Z         except KeyError:
2025-02-24T15:52:32.5693370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5693446Z     
2025-02-24T15:52:32.5693536Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5693637Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5693732Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5693891Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5693980Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5694083Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5694195Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5694200Z 
2025-02-24T15:52:32.5694331Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5694449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5694607Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5694687Z     ???
2025-02-24T15:52:32.5694799Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5694804Z 
2025-02-24T15:52:32.5694878Z >   ???
2025-02-24T15:52:32.5695006Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5695082Z E   
2025-02-24T15:52:32.5695212Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5695335Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5695410Z E          ...
2025-02-24T15:52:32.5695511Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5695642Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5695761Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5695843Z E          ...
2025-02-24T15:52:32.5695931Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5696082Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5696190Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5696194Z 
2025-02-24T15:52:32.5696293Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5696552Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T15:52:32.5696557Z 
2025-02-24T15:52:32.5696694Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5696834Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5696939Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5697080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5697206Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5697308Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5697389Z err_msg = None
2025-02-24T15:52:32.5697393Z 
2025-02-24T15:52:32.5697512Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5697596Z         if err_msg is None:
2025-02-24T15:52:32.5697701Z             if left.shape != right.shape:
2025-02-24T15:52:32.5697795Z                 raise_assert_detail(
2025-02-24T15:52:32.5697942Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5698115Z                 )
2025-02-24T15:52:32.5698187Z     
2025-02-24T15:52:32.5698268Z             diff = 0
2025-02-24T15:52:32.5698461Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5698557Z                 # count up differences
2025-02-24T15:52:32.5698731Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5698817Z                     diff += 1
2025-02-24T15:52:32.5698888Z     
2025-02-24T15:52:32.5698984Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5699122Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5699297Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5699448Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5699572Z E           
2025-02-24T15:52:32.5699768Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5700231Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5700639Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5700646Z 
2025-02-24T15:52:32.5701175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5701183Z 
2025-02-24T15:52:32.5701363Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5701374Z 
2025-02-24T15:52:32.5701606Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94350>
2025-02-24T15:52:32.5701812Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>, attr = 'f_lu'
2025-02-24T15:52:32.5701821Z 
2025-02-24T15:52:32.5701966Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5702089Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5702175Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5702251Z         try:
2025-02-24T15:52:32.5702394Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5702479Z         except KeyError:
2025-02-24T15:52:32.5702619Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5702693Z     
2025-02-24T15:52:32.5702783Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5702881Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5702973Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5703118Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5703207Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5703308Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5703424Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5703429Z 
2025-02-24T15:52:32.5703557Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5703675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5703823Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5703898Z     ???
2025-02-24T15:52:32.5704012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5704017Z 
2025-02-24T15:52:32.5704095Z >   ???
2025-02-24T15:52:32.5704223Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5704298Z E   
2025-02-24T15:52:32.5704433Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5704680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5704758Z E          ...
2025-02-24T15:52:32.5705030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5705166Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5705279Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5705359Z E          ...
2025-02-24T15:52:32.5705448Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5705580Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5705690Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5705699Z 
2025-02-24T15:52:32.5705789Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5706080Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T15:52:32.5706085Z 
2025-02-24T15:52:32.5706218Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5706360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5706466Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5706607Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5706739Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5706842Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5706927Z err_msg = None
2025-02-24T15:52:32.5706931Z 
2025-02-24T15:52:32.5707047Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5707136Z         if err_msg is None:
2025-02-24T15:52:32.5707234Z             if left.shape != right.shape:
2025-02-24T15:52:32.5707326Z                 raise_assert_detail(
2025-02-24T15:52:32.5707477Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5707559Z                 )
2025-02-24T15:52:32.5707630Z     
2025-02-24T15:52:32.5707712Z             diff = 0
2025-02-24T15:52:32.5707831Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5707930Z                 # count up differences
2025-02-24T15:52:32.5708108Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5708189Z                     diff += 1
2025-02-24T15:52:32.5708264Z     
2025-02-24T15:52:32.5708356Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5708499Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5708672Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5708789Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5708863Z E           
2025-02-24T15:52:32.5708980Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5709248Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5709529Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5709535Z 
2025-02-24T15:52:32.5709858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5709863Z 
2025-02-24T15:52:32.5710035Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5710133Z 
2025-02-24T15:52:32.5710380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94ad0>
2025-02-24T15:52:32.5710553Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5710710Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5710714Z 
2025-02-24T15:52:32.5710857Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5711137Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5711232Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5711306Z         try:
2025-02-24T15:52:32.5711450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5711533Z         except KeyError:
2025-02-24T15:52:32.5711677Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5711755Z     
2025-02-24T15:52:32.5711844Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5711943Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5712039Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5712178Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5712266Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5712367Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5712477Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5712555Z             else:
2025-02-24T15:52:32.5712651Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5712763Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5712768Z 
2025-02-24T15:52:32.5712900Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5713018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5713170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5713243Z     ???
2025-02-24T15:52:32.5713358Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5713367Z 
2025-02-24T15:52:32.5713437Z >   ???
2025-02-24T15:52:32.5713569Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5713672Z E   
2025-02-24T15:52:32.5713824Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5713938Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5714015Z E          ...
2025-02-24T15:52:32.5714111Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5714243Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5714360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5714438Z E          ...
2025-02-24T15:52:32.5714529Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5714658Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5714767Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5714772Z 
2025-02-24T15:52:32.5714867Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5715153Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T15:52:32.5715163Z 
2025-02-24T15:52:32.5715297Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5715427Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5715529Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5715667Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5715794Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5715888Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5715970Z err_msg = None
2025-02-24T15:52:32.5715975Z 
2025-02-24T15:52:32.5716090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5716322Z         if err_msg is None:
2025-02-24T15:52:32.5716421Z             if left.shape != right.shape:
2025-02-24T15:52:32.5716507Z                 raise_assert_detail(
2025-02-24T15:52:32.5716762Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5716835Z                 )
2025-02-24T15:52:32.5716909Z     
2025-02-24T15:52:32.5716983Z             diff = 0
2025-02-24T15:52:32.5717096Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5717184Z                 # count up differences
2025-02-24T15:52:32.5717359Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5717439Z                     diff += 1
2025-02-24T15:52:32.5717512Z     
2025-02-24T15:52:32.5717605Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5717742Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5717917Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5718040Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5718118Z E           
2025-02-24T15:52:32.5718239Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5718503Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5718880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5718896Z 
2025-02-24T15:52:32.5719432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5719440Z 
2025-02-24T15:52:32.5719735Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5719749Z 
2025-02-24T15:52:32.5720032Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94b90>
2025-02-24T15:52:32.5720206Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5720290Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5720294Z 
2025-02-24T15:52:32.5720434Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5720552Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5720637Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5720712Z         try:
2025-02-24T15:52:32.5720854Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5721093Z         except KeyError:
2025-02-24T15:52:32.5721245Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5721322Z     
2025-02-24T15:52:32.5721415Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5721520Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5721614Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5721752Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5721845Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5721937Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5722055Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5722129Z             else:
2025-02-24T15:52:32.5722229Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5722341Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5722346Z 
2025-02-24T15:52:32.5722477Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5722593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5722880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5722957Z     ???
2025-02-24T15:52:32.5723175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5723180Z 
2025-02-24T15:52:32.5723254Z >   ???
2025-02-24T15:52:32.5723384Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5723459Z E   
2025-02-24T15:52:32.5723593Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5723711Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5723784Z E          ...
2025-02-24T15:52:32.5723878Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5724010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5724131Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5724209Z E          ...
2025-02-24T15:52:32.5724300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5724439Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5724547Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5724558Z 
2025-02-24T15:52:32.5724655Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5724923Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T15:52:32.5724929Z 
2025-02-24T15:52:32.5725068Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5725205Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5725303Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5725443Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5725568Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5725670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5725747Z err_msg = None
2025-02-24T15:52:32.5725751Z 
2025-02-24T15:52:32.5725872Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5725954Z         if err_msg is None:
2025-02-24T15:52:32.5726055Z             if left.shape != right.shape:
2025-02-24T15:52:32.5726149Z                 raise_assert_detail(
2025-02-24T15:52:32.5726296Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5726371Z                 )
2025-02-24T15:52:32.5726439Z     
2025-02-24T15:52:32.5726514Z             diff = 0
2025-02-24T15:52:32.5726627Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5726722Z                 # count up differences
2025-02-24T15:52:32.5726896Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5726980Z                     diff += 1
2025-02-24T15:52:32.5727055Z     
2025-02-24T15:52:32.5727150Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5727288Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5727466Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5727583Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5727657Z E           
2025-02-24T15:52:32.5727773Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5728034Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5728301Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5728485Z 
2025-02-24T15:52:32.5728797Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5728802Z 
2025-02-24T15:52:32.5728974Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5728979Z 
2025-02-24T15:52:32.5729210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94d10>
2025-02-24T15:52:32.5729377Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5729457Z attr = 'j_blues'
2025-02-24T15:52:32.5729461Z 
2025-02-24T15:52:32.5729600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5729722Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5729813Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5729892Z         try:
2025-02-24T15:52:32.5730038Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5730129Z         except KeyError:
2025-02-24T15:52:32.5730274Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5730344Z     
2025-02-24T15:52:32.5730438Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5730534Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5730629Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5730763Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5730853Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5731104Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5731221Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5731300Z             else:
2025-02-24T15:52:32.5731404Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5731523Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5731533Z 
2025-02-24T15:52:32.5731659Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5731784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5731934Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5732010Z     ???
2025-02-24T15:52:32.5732121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5732131Z 
2025-02-24T15:52:32.5732202Z >   ???
2025-02-24T15:52:32.5732333Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5732407Z E   
2025-02-24T15:52:32.5732545Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5732658Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5732734Z E          ...
2025-02-24T15:52:32.5732823Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5732962Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5733075Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5733154Z E          ...
2025-02-24T15:52:32.5733243Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5733375Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5733485Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5733490Z 
2025-02-24T15:52:32.5733581Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5733755Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T15:52:32.5733760Z 
2025-02-24T15:52:32.5733989Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5734088Z attr = 'stimulated_emission_factor'
2025-02-24T15:52:32.5734360Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f888beeb050>
2025-02-24T15:52:32.5734366Z 
2025-02-24T15:52:32.5734644Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5734818Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5735044Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5735182Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5735303Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5735399Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5735492Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5735604Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5735609Z 
2025-02-24T15:52:32.5735714Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5735834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5735838Z 
2025-02-24T15:52:32.5736162Z args = (<function assert_allclose.<locals>.compare at 0x7f885e2740e0>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-02-24T15:52:32.5736243Z         0.01476858],
2025-02-24T15:52:32.5736383Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T15:52:32.5736464Z         0.01473787]]))
2025-02-24T15:52:32.5736715Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5736721Z 
2025-02-24T15:52:32.5736795Z     @wraps(func)
2025-02-24T15:52:32.5736887Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5736976Z         with self._recreate_cm():
2025-02-24T15:52:32.5737070Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5737164Z E           AssertionError: 
2025-02-24T15:52:32.5737275Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5737352Z E           
2025-02-24T15:52:32.5737458Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T15:52:32.5737557Z E           Max absolute difference: 1.
2025-02-24T15:52:32.5737656Z E           Max relative difference: 1.
2025-02-24T15:52:32.5737792Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.5737905Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.5738015Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:52:32.5738137Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.5738248Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.5738355Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:52:32.5738360Z 
2025-02-24T15:52:32.5738566Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5738733Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T15:52:32.5738741Z 
2025-02-24T15:52:32.5738967Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5739060Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5739335Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885e61ce30>
2025-02-24T15:52:32.5739345Z 
2025-02-24T15:52:32.5739494Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5739666Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5739790Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5739926Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5740047Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5740141Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5740235Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5740341Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5740440Z 
2025-02-24T15:52:32.5740553Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5740669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5740746Z 
2025-02-24T15:52:32.5741366Z args = (<function assert_allclose.<locals>.compare at 0x7f888ac1bba0>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T15:52:32.5741626Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5741632Z 
2025-02-24T15:52:32.5741713Z     @wraps(func)
2025-02-24T15:52:32.5741799Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5741892Z         with self._recreate_cm():
2025-02-24T15:52:32.5741980Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5742073Z E           AssertionError: 
2025-02-24T15:52:32.5742187Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5742259Z E           
2025-02-24T15:52:32.5742375Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T15:52:32.5742470Z E           Max absolute difference: 4005
2025-02-24T15:52:32.5742574Z E           Max relative difference: 26.00649351
2025-02-24T15:52:32.5742690Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:52:32.5742799Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:52:32.5742803Z 
2025-02-24T15:52:32.5743011Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5743177Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T15:52:32.5743182Z 
2025-02-24T15:52:32.5743413Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5743506Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5743778Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8883bba480>
2025-02-24T15:52:32.5743790Z 
2025-02-24T15:52:32.5743936Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5744105Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5744235Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5744374Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5744500Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5744589Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5744685Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5744788Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5744793Z 
2025-02-24T15:52:32.5744902Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5745042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5745049Z 
2025-02-24T15:52:32.5745752Z args = (<function assert_allclose.<locals>.compare at 0x7f888a48d120>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T15:52:32.5746164Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5746180Z 
2025-02-24T15:52:32.5746258Z     @wraps(func)
2025-02-24T15:52:32.5746349Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5746436Z         with self._recreate_cm():
2025-02-24T15:52:32.5746528Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5746615Z E           AssertionError: 
2025-02-24T15:52:32.5746726Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5746798Z E           
2025-02-24T15:52:32.5746904Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T15:52:32.5746997Z E           Max absolute difference: 4046
2025-02-24T15:52:32.5747100Z E           Max relative difference: 24.82208589
2025-02-24T15:52:32.5747210Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:52:32.5747456Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:52:32.5747461Z 
2025-02-24T15:52:32.5747668Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5747925Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T15:52:32.5747930Z 
2025-02-24T15:52:32.5748162Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5748242Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5748514Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8883bba3f0>
2025-02-24T15:52:32.5748519Z 
2025-02-24T15:52:32.5748667Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5748832Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5748956Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5749084Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5749213Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5749306Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5749410Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5749511Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5749515Z 
2025-02-24T15:52:32.5749621Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5749734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5749742Z 
2025-02-24T15:52:32.5750011Z args = (<function assert_allclose.<locals>.compare at 0x7f8885161760>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5750091Z        [1., 1., .....,
2025-02-24T15:52:32.5750171Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5750255Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5750336Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T15:52:32.5750586Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5750595Z 
2025-02-24T15:52:32.5750672Z     @wraps(func)
2025-02-24T15:52:32.5750769Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5750857Z         with self._recreate_cm():
2025-02-24T15:52:32.5751350Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5751448Z E           AssertionError: 
2025-02-24T15:52:32.5751557Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5751635Z E           
2025-02-24T15:52:32.5751742Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:52:32.5751848Z E           Max absolute difference: 0.99984222
2025-02-24T15:52:32.5751948Z E           Max relative difference: 6337.12154973
2025-02-24T15:52:32.5752045Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5752131Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5752225Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.5752320Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5752409Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5752505Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.5752510Z 
2025-02-24T15:52:32.5752712Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5752859Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T15:52:32.5752864Z 
2025-02-24T15:52:32.5753086Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5753168Z attr = 'lines'
2025-02-24T15:52:32.5753436Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f888bbf46b0>
2025-02-24T15:52:32.5753441Z 
2025-02-24T15:52:32.5753589Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5753757Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5754023Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5754163Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5754388Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5754484Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5754576Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5754681Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5754686Z 
2025-02-24T15:52:32.5754792Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5754911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5754916Z 
2025-02-24T15:52:32.5755380Z args = (<function assert_allclose.<locals>.compare at 0x7f888a694220>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T15:52:32.5755490Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T15:52:32.5755748Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5755762Z 
2025-02-24T15:52:32.5755840Z     @wraps(func)
2025-02-24T15:52:32.5755931Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5756020Z         with self._recreate_cm():
2025-02-24T15:52:32.5756112Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5756204Z E           AssertionError: 
2025-02-24T15:52:32.5756312Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5756391Z E           
2025-02-24T15:52:32.5756495Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T15:52:32.5756603Z E           Max absolute difference: 4.25260542e+12
2025-02-24T15:52:32.5756703Z E           Max relative difference: 18196.0085861
2025-02-24T15:52:32.5756861Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:52:32.5756953Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T15:52:32.5757105Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:52:32.5757252Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:52:32.5757352Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T15:52:32.5757494Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:52:32.5757498Z 
2025-02-24T15:52:32.5757700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5757848Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T15:52:32.5757853Z 
2025-02-24T15:52:32.5758076Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5758158Z attr = 'f_lu'
2025-02-24T15:52:32.5758426Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f888bbf4350>
2025-02-24T15:52:32.5758436Z 
2025-02-24T15:52:32.5758586Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5758756Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5758882Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5759020Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5759142Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5759236Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5759329Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5759434Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5759438Z 
2025-02-24T15:52:32.5759544Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5759663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5759668Z 
2025-02-24T15:52:32.5760139Z args = (<function assert_allclose.<locals>.compare at 0x7f8885161b20>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T15:52:32.5760336Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T15:52:32.5760658Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5760664Z 
2025-02-24T15:52:32.5760740Z     @wraps(func)
2025-02-24T15:52:32.5760829Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5761049Z         with self._recreate_cm():
2025-02-24T15:52:32.5761147Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5761238Z E           AssertionError: 
2025-02-24T15:52:32.5761345Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5761425Z E           
2025-02-24T15:52:32.5761527Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T15:52:32.5761631Z E           Max absolute difference: 2.92713618
2025-02-24T15:52:32.5761757Z E           Max relative difference: 18196.0085861
2025-02-24T15:52:32.5761921Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:52:32.5762010Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T15:52:32.5762165Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:52:32.5762250Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T15:52:32.5762255Z 
2025-02-24T15:52:32.5762461Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5762620Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T15:52:32.5762625Z 
2025-02-24T15:52:32.5762853Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5762940Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5763207Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885bbf85f0>
2025-02-24T15:52:32.5763212Z 
2025-02-24T15:52:32.5763365Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5763532Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5763662Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5763798Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5763918Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5764015Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5764105Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5764212Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5764216Z 
2025-02-24T15:52:32.5764321Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5764438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5764442Z 
2025-02-24T15:52:32.5764898Z args = (<function assert_allclose.<locals>.compare at 0x7f885e2740e0>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T15:52:32.5765019Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T15:52:32.5765270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5765275Z 
2025-02-24T15:52:32.5765350Z     @wraps(func)
2025-02-24T15:52:32.5765440Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5765529Z         with self._recreate_cm():
2025-02-24T15:52:32.5765621Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5765709Z E           AssertionError: 
2025-02-24T15:52:32.5765821Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5765894Z E           
2025-02-24T15:52:32.5766002Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T15:52:32.5766110Z E           Max absolute difference: 282815.33818472
2025-02-24T15:52:32.5766211Z E           Max relative difference: 4.12352828e+47
2025-02-24T15:52:32.5766490Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:52:32.5766580Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T15:52:32.5766826Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:52:32.5766973Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:52:32.5767064Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T15:52:32.5767199Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:52:32.5767203Z 
2025-02-24T15:52:32.5767407Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5767579Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T15:52:32.5767584Z 
2025-02-24T15:52:32.5767799Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5767892Z attr = 'iterations_w'
2025-02-24T15:52:32.5768163Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8877880290>
2025-02-24T15:52:32.5768168Z 
2025-02-24T15:52:32.5768276Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5768349Z         "attr",
2025-02-24T15:52:32.5768428Z         [
2025-02-24T15:52:32.5768512Z             "iterations_w",
2025-02-24T15:52:32.5768601Z             "iterations_t_rad",
2025-02-24T15:52:32.5768708Z             "iterations_electron_densities",
2025-02-24T15:52:32.5768794Z             "iterations_t_inner",
2025-02-24T15:52:32.5768870Z         ],
2025-02-24T15:52:32.5768941Z     )
2025-02-24T15:52:32.5769145Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5769256Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:52:32.5769352Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5769439Z             actual = actual.value
2025-02-24T15:52:32.5769538Z         actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5769669Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5769855Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5769865Z 
2025-02-24T15:52:32.5769987Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:52:32.5770102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5770256Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5770329Z     ???
2025-02-24T15:52:32.5770444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5770450Z 
2025-02-24T15:52:32.5770519Z >   ???
2025-02-24T15:52:32.5770705Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5770775Z E   
2025-02-24T15:52:32.5771186Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.5771323Z E   [index]: [0, 1]
2025-02-24T15:52:32.5771508Z E   [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T15:52:32.5771684Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T15:52:32.5771989Z E   At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T15:52:32.5771997Z 
2025-02-24T15:52:32.5772139Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5772299Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.5772735Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.5773187Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.5773348Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:52:32.5773352Z 
2025-02-24T15:52:32.5773356Z 
2025-02-24T15:52:32.5773597Z Packets:                                                                                   4031/? [04:47<00:00, 10.45it/s]   [A
2025-02-24T15:52:32.5773736Z 
2025-02-24T15:52:32.5773970Z Packets:                                                                                   14378/? [04:47<00:00, 61.82it/s][A
2025-02-24T15:52:32.5774099Z 
2025-02-24T15:52:32.5774332Z Packets:                                                                                   25103/? [04:47<00:00, 137.80it/s][A
2025-02-24T15:52:32.5774337Z 
2025-02-24T15:52:32.5774555Z Packets:                                                                                   35779/? [04:47<00:00, 245.66it/s][A
2025-02-24T15:52:32.5775285Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:47<00:00, 101.25s/it]
2025-02-24T15:52:32.5775299Z 
2025-02-24T15:52:32.5775555Z Packets:                                                                                   44030/? [04:47<00:00, 245.66it/s][A
2025-02-24T15:52:32.5775561Z 
2025-02-24T15:52:32.5775783Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T15:52:32.5775801Z 
2025-02-24T15:52:32.5776072Z Packets:   ███████████████████▎                                                            9643/40000 [00:00<00:00, 35166.02it/s][A
2025-02-24T15:52:32.5776088Z 
2025-02-24T15:52:32.5776359Z Packets:   ██████████████████████████▎                                                     13167/40000 [00:00<00:00, 35189.88it/s][A
2025-02-24T15:52:32.5776365Z 
2025-02-24T15:52:32.5776642Z Packets:   █████████████████████████████████▍                                              16693/40000 [00:00<00:00, 35211.02it/s][A
2025-02-24T15:52:32.5776648Z 
2025-02-24T15:52:32.5776952Z Packets:   ████████████████████████████████████████▍                                       20216/40000 [00:00<00:00, 35163.75it/s][A
2025-02-24T15:52:32.5776957Z 
2025-02-24T15:52:32.5777239Z Packets:   ███████████████████████████████████████████████▌                                23756/40000 [00:00<00:00, 35236.42it/s][A
2025-02-24T15:52:32.5777263Z 
2025-02-24T15:52:32.5777554Z Packets:   ██████████████████████████████████████████████████████▋                         27323/40000 [00:00<00:00, 35368.71it/s][A
2025-02-24T15:52:32.5777574Z 
2025-02-24T15:52:32.5777883Z Packets:   █████████████████████████████████████████████████████████████▋                  30869/40000 [00:00<00:00, 35393.91it/s][A
2025-02-24T15:52:32.5777889Z 
2025-02-24T15:52:32.5778194Z Packets:   ████████████████████████████████████████████████████████████████████▊           34410/40000 [00:00<00:00, 35342.50it/s][A
2025-02-24T15:52:32.5778199Z 
2025-02-24T15:52:32.5778516Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    37979/40000 [00:01<00:00, 35442.68it/s][A
2025-02-24T15:52:32.5778670Z Iterations:                                                                                6/? [04:50<00:00, 67.62s/it] 
2025-02-24T15:52:32.5778676Z 
2025-02-24T15:52:32.5779131Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35442.68it/s][A
2025-02-24T15:52:32.5779297Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.5779906Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.5780083Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T15:52:32.5780088Z 
2025-02-24T15:52:32.5780307Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5780399Z attr = 'iterations_t_rad'
2025-02-24T15:52:32.5780673Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885ae82390>
2025-02-24T15:52:32.5780678Z 
2025-02-24T15:52:32.5780774Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5780855Z         "attr",
2025-02-24T15:52:32.5781083Z         [
2025-02-24T15:52:32.5781175Z             "iterations_w",
2025-02-24T15:52:32.5781260Z             "iterations_t_rad",
2025-02-24T15:52:32.5781370Z             "iterations_electron_densities",
2025-02-24T15:52:32.5781464Z             "iterations_t_inner",
2025-02-24T15:52:32.5781545Z         ],
2025-02-24T15:52:32.5781621Z     )
2025-02-24T15:52:32.5781823Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5781940Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:52:32.5782031Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5782125Z             actual = actual.value
2025-02-24T15:52:32.5782220Z         actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5782351Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5782531Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5782536Z 
2025-02-24T15:52:32.5782663Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:52:32.5782783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5782940Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5783024Z     ???
2025-02-24T15:52:32.5783133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5783138Z 
2025-02-24T15:52:32.5783215Z >   ???
2025-02-24T15:52:32.5783401Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5783479Z E   
2025-02-24T15:52:32.5783646Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.5783728Z E   [index]: [0, 1]
2025-02-24T15:52:32.5783830Z E   [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T15:52:32.5783936Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T15:52:32.5784110Z E   At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T15:52:32.5784123Z 
2025-02-24T15:52:32.5784215Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5784406Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T15:52:32.5784415Z 
2025-02-24T15:52:32.5784634Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5784743Z attr = 'iterations_electron_densities'
2025-02-24T15:52:32.5785011Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f88627bf290>
2025-02-24T15:52:32.5785016Z 
2025-02-24T15:52:32.5785117Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5785191Z         "attr",
2025-02-24T15:52:32.5785270Z         [
2025-02-24T15:52:32.5785357Z             "iterations_w",
2025-02-24T15:52:32.5785441Z             "iterations_t_rad",
2025-02-24T15:52:32.5785547Z             "iterations_electron_densities",
2025-02-24T15:52:32.5785633Z             "iterations_t_inner",
2025-02-24T15:52:32.5785710Z         ],
2025-02-24T15:52:32.5785782Z     )
2025-02-24T15:52:32.5786113Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5786225Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:52:32.5786420Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5786506Z             actual = actual.value
2025-02-24T15:52:32.5786606Z         actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5786733Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5786916Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5786920Z 
2025-02-24T15:52:32.5787048Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:52:32.5787160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5787316Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5787388Z     ???
2025-02-24T15:52:32.5787501Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5787511Z 
2025-02-24T15:52:32.5787581Z >   ???
2025-02-24T15:52:32.5787765Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5787843Z E   
2025-02-24T15:52:32.5788010Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.5788093Z E   [index]: [0, 1]
2025-02-24T15:52:32.5788194Z E   [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T15:52:32.5788301Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T15:52:32.5788474Z E   At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T15:52:32.5788479Z 
2025-02-24T15:52:32.5788574Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5788738Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T15:52:32.5788743Z 
2025-02-24T15:52:32.5788968Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5789053Z attr = 'nu_bar_estimator'
2025-02-24T15:52:32.5789328Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f88627bffb0>
2025-02-24T15:52:32.5789333Z 
2025-02-24T15:52:32.5789435Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5789510Z         "attr",
2025-02-24T15:52:32.5789586Z         [
2025-02-24T15:52:32.5789671Z             "nu_bar_estimator",
2025-02-24T15:52:32.5789756Z             "j_estimator",
2025-02-24T15:52:32.5789839Z             "t_radiative",
2025-02-24T15:52:32.5789970Z             "dilution_factor",
2025-02-24T15:52:32.5790112Z             "output_nus",
2025-02-24T15:52:32.5790255Z             "output_energies",
2025-02-24T15:52:32.5790375Z         ],
2025-02-24T15:52:32.5790498Z     )
2025-02-24T15:52:32.5790805Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5791117Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5791268Z             actual = getattr(
2025-02-24T15:52:32.5791468Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5791556Z                 attr,
2025-02-24T15:52:32.5791628Z             )
2025-02-24T15:52:32.5791758Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5791911Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5792033Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5792115Z             actual = getattr(
2025-02-24T15:52:32.5792293Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5792372Z                 attr,
2025-02-24T15:52:32.5792443Z             )
2025-02-24T15:52:32.5792519Z         else:
2025-02-24T15:52:32.5792658Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5792734Z     
2025-02-24T15:52:32.5792825Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5792915Z             actual = actual.value
2025-02-24T15:52:32.5793141Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5793272Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5793454Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5793564Z 
2025-02-24T15:52:32.5793692Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5793804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5793961Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5794038Z     ???
2025-02-24T15:52:32.5794153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5794158Z 
2025-02-24T15:52:32.5794231Z >   ???
2025-02-24T15:52:32.5794330Z E   AssertionError: Series are different
2025-02-24T15:52:32.5794405Z E   
2025-02-24T15:52:32.5794502Z E   Series values are different (100.0 %)
2025-02-24T15:52:32.5794637Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.5795870Z E   [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T15:52:32.5797092Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T15:52:32.5797295Z E   At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T15:52:32.5797301Z 
2025-02-24T15:52:32.5797404Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5797563Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T15:52:32.5797567Z 
2025-02-24T15:52:32.5797787Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5797869Z attr = 'j_estimator'
2025-02-24T15:52:32.5798142Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8851963110>
2025-02-24T15:52:32.5798148Z 
2025-02-24T15:52:32.5798240Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5798319Z         "attr",
2025-02-24T15:52:32.5798391Z         [
2025-02-24T15:52:32.5798478Z             "nu_bar_estimator",
2025-02-24T15:52:32.5798565Z             "j_estimator",
2025-02-24T15:52:32.5798645Z             "t_radiative",
2025-02-24T15:52:32.5798737Z             "dilution_factor",
2025-02-24T15:52:32.5798822Z             "output_nus",
2025-02-24T15:52:32.5798909Z             "output_energies",
2025-02-24T15:52:32.5798979Z         ],
2025-02-24T15:52:32.5799058Z     )
2025-02-24T15:52:32.5799240Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5799358Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5799439Z             actual = getattr(
2025-02-24T15:52:32.5799636Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5799711Z                 attr,
2025-02-24T15:52:32.5799785Z             )
2025-02-24T15:52:32.5799909Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5800060Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5800179Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5800260Z             actual = getattr(
2025-02-24T15:52:32.5800527Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5800603Z                 attr,
2025-02-24T15:52:32.5800679Z             )
2025-02-24T15:52:32.5800847Z         else:
2025-02-24T15:52:32.5801114Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5801189Z     
2025-02-24T15:52:32.5801282Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5801368Z             actual = actual.value
2025-02-24T15:52:32.5801464Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5801599Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5801782Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5801787Z 
2025-02-24T15:52:32.5801915Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5802028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5802180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5802257Z     ???
2025-02-24T15:52:32.5802371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5802380Z 
2025-02-24T15:52:32.5802450Z >   ???
2025-02-24T15:52:32.5802554Z E   AssertionError: Series are different
2025-02-24T15:52:32.5802628Z E   
2025-02-24T15:52:32.5802722Z E   Series values are different (100.0 %)
2025-02-24T15:52:32.5802856Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.5803841Z E   [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T15:52:32.5804816Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T15:52:32.5805001Z E   At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T15:52:32.5805005Z 
2025-02-24T15:52:32.5805095Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5805258Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T15:52:32.5805263Z 
2025-02-24T15:52:32.5805479Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5805564Z attr = 't_radiative'
2025-02-24T15:52:32.5805829Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f88519626c0>
2025-02-24T15:52:32.5805923Z 
2025-02-24T15:52:32.5806204Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5806311Z         "attr",
2025-02-24T15:52:32.5806452Z         [
2025-02-24T15:52:32.5806586Z             "nu_bar_estimator",
2025-02-24T15:52:32.5806749Z             "j_estimator",
2025-02-24T15:52:32.5806909Z             "t_radiative",
2025-02-24T15:52:32.5807076Z             "dilution_factor",
2025-02-24T15:52:32.5807188Z             "output_nus",
2025-02-24T15:52:32.5807356Z             "output_energies",
2025-02-24T15:52:32.5807463Z         ],
2025-02-24T15:52:32.5807631Z     )
2025-02-24T15:52:32.5807860Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5808044Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5808214Z             actual = getattr(
2025-02-24T15:52:32.5808437Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5808606Z                 attr,
2025-02-24T15:52:32.5808807Z             )
2025-02-24T15:52:32.5809273Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5816133Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5816632Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5816765Z             actual = getattr(
2025-02-24T15:52:32.5816967Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5817050Z                 attr,
2025-02-24T15:52:32.5817126Z             )
2025-02-24T15:52:32.5817197Z         else:
2025-02-24T15:52:32.5817352Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5817423Z     
2025-02-24T15:52:32.5817522Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5817608Z             actual = actual.value
2025-02-24T15:52:32.5817704Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5817833Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5818028Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5818042Z 
2025-02-24T15:52:32.5818169Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5818304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5818461Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5818532Z     ???
2025-02-24T15:52:32.5818647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5818651Z 
2025-02-24T15:52:32.5818720Z >   ???
2025-02-24T15:52:32.5818825Z E   AssertionError: Series are different
2025-02-24T15:52:32.5818896Z E   
2025-02-24T15:52:32.5818998Z E   Series values are different (90.0 %)
2025-02-24T15:52:32.5819131Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.5820145Z E   [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T15:52:32.5821318Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T15:52:32.5821503Z E   At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T15:52:32.5821508Z 
2025-02-24T15:52:32.5821607Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5821779Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T15:52:32.5821788Z 
2025-02-24T15:52:32.5822007Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5822097Z attr = 'dilution_factor'
2025-02-24T15:52:32.5822377Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8851963ad0>
2025-02-24T15:52:32.5822383Z 
2025-02-24T15:52:32.5822482Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5822557Z         "attr",
2025-02-24T15:52:32.5822633Z         [
2025-02-24T15:52:32.5822718Z             "nu_bar_estimator",
2025-02-24T15:52:32.5822802Z             "j_estimator",
2025-02-24T15:52:32.5822878Z             "t_radiative",
2025-02-24T15:52:32.5822965Z             "dilution_factor",
2025-02-24T15:52:32.5823048Z             "output_nus",
2025-02-24T15:52:32.5823130Z             "output_energies",
2025-02-24T15:52:32.5823205Z         ],
2025-02-24T15:52:32.5823274Z     )
2025-02-24T15:52:32.5823465Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5823721Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5823808Z             actual = getattr(
2025-02-24T15:52:32.5824009Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5824192Z                 attr,
2025-02-24T15:52:32.5824265Z             )
2025-02-24T15:52:32.5824389Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5824544Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5824663Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5824748Z             actual = getattr(
2025-02-24T15:52:32.5824926Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5825003Z                 attr,
2025-02-24T15:52:32.5825075Z             )
2025-02-24T15:52:32.5825154Z         else:
2025-02-24T15:52:32.5825290Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5825374Z     
2025-02-24T15:52:32.5825464Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5825555Z             actual = actual.value
2025-02-24T15:52:32.5825652Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5825781Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5825967Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5825971Z 
2025-02-24T15:52:32.5826094Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5826220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5826372Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5826448Z     ???
2025-02-24T15:52:32.5826558Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5826563Z 
2025-02-24T15:52:32.5826637Z >   ???
2025-02-24T15:52:32.5826737Z E   AssertionError: Series are different
2025-02-24T15:52:32.5826816Z E   
2025-02-24T15:52:32.5826910Z E   Series values are different (95.0 %)
2025-02-24T15:52:32.5827046Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.5828765Z E   [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T15:52:32.5829873Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T15:52:32.5830066Z E   At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T15:52:32.5830076Z 
2025-02-24T15:52:32.5830171Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5830332Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T15:52:32.5830337Z 
2025-02-24T15:52:32.5830557Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5830637Z attr = 'output_nus'
2025-02-24T15:52:32.5831014Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8863233d10>
2025-02-24T15:52:32.5831020Z 
2025-02-24T15:52:32.5831125Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5831198Z         "attr",
2025-02-24T15:52:32.5831272Z         [
2025-02-24T15:52:32.5831355Z             "nu_bar_estimator",
2025-02-24T15:52:32.5831441Z             "j_estimator",
2025-02-24T15:52:32.5831656Z             "t_radiative",
2025-02-24T15:52:32.5831744Z             "dilution_factor",
2025-02-24T15:52:32.5831826Z             "output_nus",
2025-02-24T15:52:32.5832016Z             "output_energies",
2025-02-24T15:52:32.5832087Z         ],
2025-02-24T15:52:32.5832161Z     )
2025-02-24T15:52:32.5832346Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5832468Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5832550Z             actual = getattr(
2025-02-24T15:52:32.5832749Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5832829Z                 attr,
2025-02-24T15:52:32.5832903Z             )
2025-02-24T15:52:32.5833026Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5833178Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5833296Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5833382Z             actual = getattr(
2025-02-24T15:52:32.5833557Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5833639Z                 attr,
2025-02-24T15:52:32.5833716Z             )
2025-02-24T15:52:32.5833788Z         else:
2025-02-24T15:52:32.5833926Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5834000Z     
2025-02-24T15:52:32.5834089Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5834178Z             actual = actual.value
2025-02-24T15:52:32.5834268Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5834397Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5834579Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5834584Z 
2025-02-24T15:52:32.5834707Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5834822Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5834978Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5835049Z     ???
2025-02-24T15:52:32.5835161Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5835171Z 
2025-02-24T15:52:32.5835245Z >   ???
2025-02-24T15:52:32.5835344Z E   AssertionError: Series are different
2025-02-24T15:52:32.5835418Z E   
2025-02-24T15:52:32.5835516Z E   Series values are different (5.1125 %)
2025-02-24T15:52:32.5835891Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5841186Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T15:52:32.5846805Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T15:52:32.5847161Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T15:52:32.5847176Z 
2025-02-24T15:52:32.5847328Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5847626Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T15:52:32.5847632Z 
2025-02-24T15:52:32.5847966Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5848064Z attr = 'output_energies'
2025-02-24T15:52:32.5848339Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f88593d11c0>
2025-02-24T15:52:32.5848344Z 
2025-02-24T15:52:32.5848442Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5848516Z         "attr",
2025-02-24T15:52:32.5848591Z         [
2025-02-24T15:52:32.5848681Z             "nu_bar_estimator",
2025-02-24T15:52:32.5848762Z             "j_estimator",
2025-02-24T15:52:32.5848845Z             "t_radiative",
2025-02-24T15:52:32.5848930Z             "dilution_factor",
2025-02-24T15:52:32.5849014Z             "output_nus",
2025-02-24T15:52:32.5849100Z             "output_energies",
2025-02-24T15:52:32.5849184Z         ],
2025-02-24T15:52:32.5849256Z     )
2025-02-24T15:52:32.5849564Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5849683Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5849882Z             actual = getattr(
2025-02-24T15:52:32.5850087Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5850166Z                 attr,
2025-02-24T15:52:32.5850245Z             )
2025-02-24T15:52:32.5850366Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5850526Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5850643Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5850730Z             actual = getattr(
2025-02-24T15:52:32.5851047Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5851189Z                 attr,
2025-02-24T15:52:32.5851265Z             )
2025-02-24T15:52:32.5851348Z         else:
2025-02-24T15:52:32.5851486Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5851561Z     
2025-02-24T15:52:32.5851652Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5851750Z             actual = actual.value
2025-02-24T15:52:32.5851844Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5851968Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5852156Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5852160Z 
2025-02-24T15:52:32.5852289Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5852411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5852568Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5852645Z     ???
2025-02-24T15:52:32.5852758Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5852763Z 
2025-02-24T15:52:32.5852843Z >   ???
2025-02-24T15:52:32.5852951Z E   AssertionError: Series are different
2025-02-24T15:52:32.5853022Z E   
2025-02-24T15:52:32.5853125Z E   Series values are different (1.3025 %)
2025-02-24T15:52:32.5853499Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5859819Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:52:32.5866623Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:52:32.5866864Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T15:52:32.5866870Z 
2025-02-24T15:52:32.5866968Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5867160Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T15:52:32.5867165Z 
2025-02-24T15:52:32.5867437Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f888bab0200>
2025-02-24T15:52:32.5867637Z simulation = <tardis.simulation.base.Simulation object at 0x7f8877047b90>
2025-02-24T15:52:32.5867758Z 
2025-02-24T15:52:32.5867887Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T15:52:32.5868042Z         transport_state = simulation.transport.transport_state
2025-02-24T15:52:32.5868338Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:52:32.5868415Z     
2025-02-24T15:52:32.5868604Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:52:32.5868733Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.5868905Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:52:32.5869011Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5869084Z     
2025-02-24T15:52:32.5869195Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.5869269Z     
2025-02-24T15:52:32.5869356Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5869434Z             result,
2025-02-24T15:52:32.5869512Z             luminosity,
2025-02-24T15:52:32.5869593Z         )
2025-02-24T15:52:32.5869598Z 
2025-02-24T15:52:32.5869723Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T15:52:32.5869843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5870198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5870299Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5870416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5870421Z 
2025-02-24T15:52:32.5870893Z args = (<function assert_allclose.<locals>.compare at 0x7f8860059440>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T15:52:32.5871106Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5871356Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5871367Z 
2025-02-24T15:52:32.5871449Z     @wraps(func)
2025-02-24T15:52:32.5871535Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5871632Z         with self._recreate_cm():
2025-02-24T15:52:32.5871726Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5871816Z E           AssertionError: 
2025-02-24T15:52:32.5871931Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5872006Z E           
2025-02-24T15:52:32.5872116Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:52:32.5872219Z E           Max absolute difference: 4.30543741e+37
2025-02-24T15:52:32.5872317Z E           Max relative difference: 1.
2025-02-24T15:52:32.5872472Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5872566Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5872713Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5872847Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5872855Z 
2025-02-24T15:52:32.5873226Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5873576Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T15:52:32.5873583Z 
2025-02-24T15:52:32.5874024Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f888bab28d0>
2025-02-24T15:52:32.5874226Z simulation = <tardis.simulation.base.Simulation object at 0x7f8877047b90>
2025-02-24T15:52:32.5874231Z 
2025-02-24T15:52:32.5874387Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T15:52:32.5874537Z         transport_state = simulation.transport.transport_state
2025-02-24T15:52:32.5874733Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:52:32.5874809Z     
2025-02-24T15:52:32.5874994Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:52:32.5875286Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T15:52:32.5875494Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T15:52:32.5875723Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5875793Z     
2025-02-24T15:52:32.5875905Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.5875975Z     
2025-02-24T15:52:32.5876069Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5876143Z             result,
2025-02-24T15:52:32.5876226Z             luminosity,
2025-02-24T15:52:32.5876302Z         )
2025-02-24T15:52:32.5876307Z 
2025-02-24T15:52:32.5876432Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T15:52:32.5876548Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5876887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5876988Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5877099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5877109Z 
2025-02-24T15:52:32.5877582Z args = (<function assert_allclose.<locals>.compare at 0x7f8859233600>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T15:52:32.5877692Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5877935Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5877941Z 
2025-02-24T15:52:32.5878019Z     @wraps(func)
2025-02-24T15:52:32.5878106Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5878198Z         with self._recreate_cm():
2025-02-24T15:52:32.5878287Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5878378Z E           AssertionError: 
2025-02-24T15:52:32.5878488Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5878570Z E           
2025-02-24T15:52:32.5878674Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T15:52:32.5878778Z E           Max absolute difference: 4.15247374e+37
2025-02-24T15:52:32.5878880Z E           Max relative difference: 1.
2025-02-24T15:52:32.5879032Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5879125Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5879271Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5879362Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5879366Z 
2025-02-24T15:52:32.5879568Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5879737Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T15:52:32.5879742Z 
2025-02-24T15:52:32.5880000Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f888bab0d70>
2025-02-24T15:52:32.5880197Z simulation = <tardis.simulation.base.Simulation object at 0x7f8877047b90>
2025-02-24T15:52:32.5880207Z 
2025-02-24T15:52:32.5880301Z     def test_solve(self, simulation):
2025-02-24T15:52:32.5880448Z         transport_state = simulation.transport.transport_state
2025-02-24T15:52:32.5880641Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:52:32.5880713Z     
2025-02-24T15:52:32.5881010Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:52:32.5881174Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T15:52:32.5881263Z             transport_state
2025-02-24T15:52:32.5881335Z         )
2025-02-24T15:52:32.5881521Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:52:32.5881647Z         expected_real = self.get_expected_data(key_real)
2025-02-24T15:52:32.5881838Z     
2025-02-24T15:52:32.5881976Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T15:52:32.5882049Z     
2025-02-24T15:52:32.5882140Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5882334Z             result_real.luminosity,
2025-02-24T15:52:32.5882421Z             luminosity_real,
2025-02-24T15:52:32.5882499Z         )
2025-02-24T15:52:32.5882503Z 
2025-02-24T15:52:32.5882631Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T15:52:32.5882748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5883084Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5883180Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5883292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5883297Z 
2025-02-24T15:52:32.5883766Z args = (<function assert_allclose.<locals>.compare at 0x7f8859230fe0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T15:52:32.5883883Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5884137Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5884142Z 
2025-02-24T15:52:32.5884222Z     @wraps(func)
2025-02-24T15:52:32.5884308Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5884401Z         with self._recreate_cm():
2025-02-24T15:52:32.5884492Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5884582Z E           AssertionError: 
2025-02-24T15:52:32.5884694Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5884772Z E           
2025-02-24T15:52:32.5884874Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:52:32.5884980Z E           Max absolute difference: 4.30543741e+37
2025-02-24T15:52:32.5885077Z E           Max relative difference: 1.
2025-02-24T15:52:32.5885236Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5885327Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5885476Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5885565Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5885570Z 
2025-02-24T15:52:32.5885769Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5885955Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T15:52:32.5885960Z 
2025-02-24T15:52:32.5886171Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f888bab11c0>
2025-02-24T15:52:32.5886366Z simulation = <tardis.simulation.base.Simulation object at 0x7f88602570b0>
2025-02-24T15:52:32.5886370Z 
2025-02-24T15:52:32.5886485Z     def test_j_blue_estimators(self, simulation):
2025-02-24T15:52:32.5886640Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T15:52:32.5886752Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5886823Z     
2025-02-24T15:52:32.5886919Z >       npt.assert_allclose(
2025-02-24T15:52:32.5887143Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T15:52:32.5887232Z             expected.values,
2025-02-24T15:52:32.5887307Z         )
2025-02-24T15:52:32.5887312Z 
2025-02-24T15:52:32.5887410Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T15:52:32.5887528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5887532Z 
2025-02-24T15:52:32.5887802Z args = (<function assert_allclose.<locals>.compare at 0x7f886005ba60>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5887882Z        [0., 0., .....,
2025-02-24T15:52:32.5887961Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5888043Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5888214Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.5888461Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5888539Z 
2025-02-24T15:52:32.5888619Z     @wraps(func)
2025-02-24T15:52:32.5888705Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5888797Z         with self._recreate_cm():
2025-02-24T15:52:32.5888886Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5888975Z E           AssertionError: 
2025-02-24T15:52:32.5889084Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5889165Z E           
2025-02-24T15:52:32.5889274Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T15:52:32.5889382Z E           Max absolute difference: 5.32418652e-19
2025-02-24T15:52:32.5889483Z E           Max relative difference: 12.23359055
2025-02-24T15:52:32.5889582Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5889673Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5889770Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.5889866Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5889957Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5890047Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.5890051Z 
2025-02-24T15:52:32.5890253Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5890416Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.5890671Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5890751Z 	
2025-02-24T15:52:32.5891425Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T15:52:32.5891608Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5892048Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T15:52:32.5892218Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5892710Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T15:52:32.5892953Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.5893400Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.5893582Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5893798Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:52:32.5893968Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5894039Z 	
2025-02-24T15:52:32.5894201Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5894367Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5894441Z 	
2025-02-24T15:52:32.5894535Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T15:52:32.5894639Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T15:52:32.5894732Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5894843Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5895004Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5895079Z 	
2025-02-24T15:52:32.5895233Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:52:32.5895393Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5895468Z 	
2025-02-24T15:52:32.5895575Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T15:52:32.5895669Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T15:52:32.5895752Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T15:52:32.5895842Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T15:52:32.5896048Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T15:52:32.5896165Z  ([1mbase.py[0m:650)
2025-02-24T15:52:32.5896327Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5896502Z 	
2025-02-24T15:52:32.5896593Z 	Current t_inner = 9974.969 K
2025-02-24T15:52:32.5896720Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T15:52:32.5896836Z  ([1mbase.py[0m:652)
2025-02-24T15:52:32.5896998Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5897072Z 	
2025-02-24T15:52:32.5897224Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5897390Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5897460Z 	
2025-02-24T15:52:32.5897556Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T15:52:32.5897650Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T15:52:32.5897747Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5897851Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5898015Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5898091Z 	
2025-02-24T15:52:32.5898241Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:52:32.5898404Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5898481Z 	
2025-02-24T15:52:32.5898662Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5898811Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T15:52:32.5898960Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T15:52:32.5899108Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T15:52:32.5899257Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T15:52:32.5899441Z  ([1mbase.py[0m:650)
2025-02-24T15:52:32.5899728Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5899799Z 	
2025-02-24T15:52:32.5899892Z 	Current t_inner = 10736.790 K
2025-02-24T15:52:32.5900009Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T15:52:32.5900120Z  ([1mbase.py[0m:652)
2025-02-24T15:52:32.5900288Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5900357Z 	
2025-02-24T15:52:32.5900512Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5900674Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5900746Z 	
2025-02-24T15:52:32.5900837Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T15:52:32.5901056Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T15:52:32.5901150Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5901261Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5901419Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5901640Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T15:52:32.5901798Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5901872Z 	
2025-02-24T15:52:32.5902018Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:52:32.5902175Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5902251Z 	
2025-02-24T15:52:32.5902356Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5902444Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T15:52:32.5902532Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T15:52:32.5902620Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T15:52:32.5902706Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T15:52:32.5902813Z  ([1mbase.py[0m:650)
2025-02-24T15:52:32.5902972Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5903044Z 	
2025-02-24T15:52:32.5903131Z 	Current t_inner = 10718.574 K
2025-02-24T15:52:32.5903244Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T15:52:32.5903351Z  ([1mbase.py[0m:652)
2025-02-24T15:52:32.5903508Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5903579Z 	
2025-02-24T15:52:32.5903724Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5903884Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5904111Z 	
2025-02-24T15:52:32.5904209Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T15:52:32.5904300Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T15:52:32.5904498Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5904607Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5904769Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5904986Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T15:52:32.5905144Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5905217Z 	
2025-02-24T15:52:32.5905360Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:52:32.5905523Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5905594Z 	
2025-02-24T15:52:32.5905703Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5905790Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T15:52:32.5905880Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T15:52:32.5905972Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T15:52:32.5906059Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T15:52:32.5906170Z  ([1mbase.py[0m:650)
2025-02-24T15:52:32.5906333Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5906406Z 	
2025-02-24T15:52:32.5906490Z 	Current t_inner = 10696.150 K
2025-02-24T15:52:32.5906607Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T15:52:32.5906712Z  ([1mbase.py[0m:652)
2025-02-24T15:52:32.5906872Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5906943Z 	
2025-02-24T15:52:32.5907044Z 	Simulation finished in 4 iterations 
2025-02-24T15:52:32.5907131Z 	Simulation took 12.70 s
2025-02-24T15:52:32.5907237Z  ([1mbase.py[0m:542)
2025-02-24T15:52:32.5907395Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5907469Z 	
2025-02-24T15:52:32.5907619Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5907788Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5907862Z 	
2025-02-24T15:52:32.5907953Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T15:52:32.5908056Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T15:52:32.5908148Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5908254Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5908416Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:52:32.5908421Z 
2025-02-24T15:52:32.5908425Z 
2025-02-24T15:52:32.5908678Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T15:52:32.5908683Z 
2025-02-24T15:52:32.5908903Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T15:52:32.5908912Z 
2025-02-24T15:52:32.5909171Z Packets:   ████▏                                                                           10556/200000 [00:00<00:01, 105550.03it/s][A
2025-02-24T15:52:32.5909184Z 
2025-02-24T15:52:32.5909441Z Packets:   ████████▍                                                                       21112/200000 [00:00<00:01, 102893.92it/s][A
2025-02-24T15:52:32.5909453Z 
2025-02-24T15:52:32.5909702Z Packets:   ████████████▊                                                                   31915/200000 [00:00<00:01, 105205.63it/s][A
2025-02-24T15:52:32.5909708Z 
2025-02-24T15:52:32.5909965Z Packets:   █████████████████                                                               42745/200000 [00:00<00:01, 106413.69it/s][A
2025-02-24T15:52:32.5909970Z 
2025-02-24T15:52:32.5910229Z Packets:   █████████████████████▍                                                          53448/200000 [00:00<00:01, 106634.67it/s][A
2025-02-24T15:52:32.5910233Z 
2025-02-24T15:52:32.5910492Z Packets:   █████████████████████████▋                                                      64363/200000 [00:00<00:01, 107484.15it/s][A
2025-02-24T15:52:32.5910593Z 
2025-02-24T15:52:32.5910870Z Packets:   ██████████████████████████████                                                  75150/200000 [00:00<00:01, 107608.35it/s][A
2025-02-24T15:52:32.5911084Z 
2025-02-24T15:52:32.5911375Z Packets:   ██████████████████████████████████▍                                             86089/200000 [00:00<00:01, 108173.39it/s][A
2025-02-24T15:52:32.5911381Z 
2025-02-24T15:52:32.5911659Z Packets:   ██████████████████████████████████████▊                                         96917/200000 [00:00<00:00, 108205.59it/s][A
2025-02-24T15:52:32.5911664Z 
2025-02-24T15:52:32.5911956Z Packets:   ███████████████████████████████████████████                                     107760/200000 [00:01<00:00, 108273.17it/s][A
2025-02-24T15:52:32.5911962Z 
2025-02-24T15:52:32.5912254Z Packets:   ███████████████████████████████████████████████▍                                118684/200000 [00:01<00:00, 108568.22it/s][A
2025-02-24T15:52:32.5912263Z 
2025-02-24T15:52:32.5912588Z Packets:   ███████████████████████████████████████████████████▊                            129542/200000 [00:01<00:00, 108213.14it/s][A
2025-02-24T15:52:32.5912593Z 
2025-02-24T15:52:32.5912913Z Packets:   ████████████████████████████████████████████████████████▏                       140364/200000 [00:01<00:00, 108188.04it/s][A
2025-02-24T15:52:32.5912918Z 
2025-02-24T15:52:32.5913223Z Packets:   ████████████████████████████████████████████████████████████▍                   151204/200000 [00:01<00:00, 108250.18it/s][A
2025-02-24T15:52:32.5913228Z 
2025-02-24T15:52:32.5913541Z Packets:   ████████████████████████████████████████████████████████████████▊               162030/200000 [00:01<00:00, 107989.12it/s][A
2025-02-24T15:52:32.5913546Z 
2025-02-24T15:52:32.5913862Z Packets:   █████████████████████████████████████████████████████████████████████▏          172830/200000 [00:01<00:00, 107862.80it/s][A
2025-02-24T15:52:32.5913868Z 
2025-02-24T15:52:32.5914185Z Packets:   █████████████████████████████████████████████████████████████████████████▍      183617/200000 [00:01<00:00, 107826.75it/s][A
2025-02-24T15:52:32.5914206Z 
2025-02-24T15:52:32.5914532Z Packets:   █████████████████████████████████████████████████████████████████████████████▊  194492/200000 [00:01<00:00, 108100.68it/s][A
2025-02-24T15:52:32.5914698Z Iterations:                                                                                13/? [05:51<00:00, 12.16s/it]
2025-02-24T15:52:32.5914708Z 
2025-02-24T15:52:32.5915039Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 108100.68it/s][A
2025-02-24T15:52:32.5915045Z 
2025-02-24T15:52:32.5915285Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:52:32.5915290Z 
2025-02-24T15:52:32.5915529Z Packets:   ████▎                                                                           10811/200000 [00:00<00:01, 107189.58it/s][A
2025-02-24T15:52:32.5915659Z 
2025-02-24T15:52:32.5915911Z Packets:   ████████▋                                                                       21835/200000 [00:00<00:01, 108974.03it/s][A
2025-02-24T15:52:32.5916013Z 
2025-02-24T15:52:32.5916266Z Packets:   █████████████                                                                   32734/200000 [00:00<00:01, 108758.48it/s][A
2025-02-24T15:52:32.5916271Z 
2025-02-24T15:52:32.5916529Z Packets:   █████████████████▍                                                              43611/200000 [00:00<00:01, 108526.03it/s][A
2025-02-24T15:52:32.5916534Z 
2025-02-24T15:52:32.5916793Z Packets:   █████████████████████▊                                                          54464/200000 [00:00<00:01, 98635.81it/s] [A
2025-02-24T15:52:32.5916798Z 
2025-02-24T15:52:32.5917057Z Packets:   ██████████████████████████                                                      65296/200000 [00:00<00:01, 101714.65it/s][A
2025-02-24T15:52:32.5917066Z 
2025-02-24T15:52:32.5917346Z Packets:   ██████████████████████████████▍                                                 76193/200000 [00:00<00:01, 103981.36it/s][A
2025-02-24T15:52:32.5917362Z 
2025-02-24T15:52:32.5917637Z Packets:   ██████████████████████████████████▊                                             87080/200000 [00:00<00:01, 105488.66it/s][A
2025-02-24T15:52:32.5917643Z 
2025-02-24T15:52:32.5917920Z Packets:   ███████████████████████████████████████▏                                        97890/200000 [00:00<00:00, 106285.23it/s][A
2025-02-24T15:52:32.5917926Z 
2025-02-24T15:52:32.5918215Z Packets:   ███████████████████████████████████████████▌                                    108752/200000 [00:01<00:00, 106993.67it/s][A
2025-02-24T15:52:32.5918220Z 
2025-02-24T15:52:32.5918516Z Packets:   ███████████████████████████████████████████████▊                                119541/200000 [00:01<00:00, 107264.35it/s][A
2025-02-24T15:52:32.5918521Z 
2025-02-24T15:52:32.5918818Z Packets:   ████████████████████████████████████████████████████▏                           130461/200000 [00:01<00:00, 107846.68it/s][A
2025-02-24T15:52:32.5918835Z 
2025-02-24T15:52:32.5919138Z Packets:   ████████████████████████████████████████████████████████▌                       141325/200000 [00:01<00:00, 108084.82it/s][A
2025-02-24T15:52:32.5919157Z 
2025-02-24T15:52:32.5919463Z Packets:   ████████████████████████████████████████████████████████████▉                   152220/200000 [00:01<00:00, 108345.18it/s][A
2025-02-24T15:52:32.5919471Z 
2025-02-24T15:52:32.5919781Z Packets:   █████████████████████████████████████████████████████████████████▎              163158/200000 [00:01<00:00, 108654.89it/s][A
2025-02-24T15:52:32.5919787Z 
2025-02-24T15:52:32.5920106Z Packets:   █████████████████████████████████████████████████████████████████████▌          174030/200000 [00:01<00:00, 108550.45it/s][A
2025-02-24T15:52:32.5920110Z 
2025-02-24T15:52:32.5920432Z Packets:   █████████████████████████████████████████████████████████████████████████▉      184890/200000 [00:01<00:00, 108488.04it/s][A
2025-02-24T15:52:32.5920533Z 
2025-02-24T15:52:32.5920864Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 195834/200000 [00:01<00:00, 108772.49it/s][A
2025-02-24T15:52:32.5921250Z Iterations:                                                                                14/? [05:54<00:00,  9.45s/it]
2025-02-24T15:52:32.5921256Z 
2025-02-24T15:52:32.5921591Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 108772.49it/s][A
2025-02-24T15:52:32.5921597Z 
2025-02-24T15:52:32.5921834Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:52:32.5921839Z 
2025-02-24T15:52:32.5922075Z Packets:   ████▍                                                                           11063/200000 [00:00<00:01, 110629.84it/s][A
2025-02-24T15:52:32.5922098Z 
2025-02-24T15:52:32.5922338Z Packets:   ████████▊                                                                       22126/200000 [00:00<00:01, 110605.80it/s][A
2025-02-24T15:52:32.5922355Z 
2025-02-24T15:52:32.5922606Z Packets:   █████████████▎                                                                  33187/200000 [00:00<00:01, 110517.66it/s][A
2025-02-24T15:52:32.5922611Z 
2025-02-24T15:52:32.5922861Z Packets:   █████████████████▋                                                              44263/200000 [00:00<00:01, 110611.65it/s][A
2025-02-24T15:52:32.5922866Z 
2025-02-24T15:52:32.5923127Z Packets:   ██████████████████████▏                                                         55325/200000 [00:00<00:01, 110588.09it/s][A
2025-02-24T15:52:32.5923132Z 
2025-02-24T15:52:32.5923398Z Packets:   ██████████████████████████▌                                                     66384/200000 [00:00<00:01, 110529.93it/s][A
2025-02-24T15:52:32.5923404Z 
2025-02-24T15:52:32.5923669Z Packets:   ██████████████████████████████▉                                                 77438/200000 [00:00<00:01, 110479.56it/s][A
2025-02-24T15:52:32.5923684Z 
2025-02-24T15:52:32.5924100Z Packets:   ███████████████████████████████████▍                                            88535/200000 [00:00<00:01, 110634.85it/s][A
2025-02-24T15:52:32.5924106Z 
2025-02-24T15:52:32.5924385Z Packets:   ███████████████████████████████████████▊                                        99651/200000 [00:00<00:00, 110796.57it/s][A
2025-02-24T15:52:32.5924394Z 
2025-02-24T15:52:32.5924798Z Packets:   ████████████████████████████████████████████▎                                   110731/200000 [00:01<00:00, 110266.50it/s][A
2025-02-24T15:52:32.5924809Z 
2025-02-24T15:52:32.5925362Z Packets:   ████████████████████████████████████████████████▋                               121759/200000 [00:01<00:00, 109649.38it/s][A
2025-02-24T15:52:32.5925370Z 
2025-02-24T15:52:32.5925860Z Packets:   █████████████████████████████████████████████████████                           132810/200000 [00:01<00:00, 109907.40it/s][A
2025-02-24T15:52:32.5926023Z 
2025-02-24T15:52:32.5926351Z Packets:   █████████████████████████████████████████████████████████▌                      143840/200000 [00:01<00:00, 110022.98it/s][A
2025-02-24T15:52:32.5926370Z 
2025-02-24T15:52:32.5926685Z Packets:   █████████████████████████████████████████████████████████████▉                  154929/200000 [00:01<00:00, 110282.72it/s][A
2025-02-24T15:52:32.5926690Z 
2025-02-24T15:52:32.5927003Z Packets:   ██████████████████████████████████████████████████████████████████▍             165958/200000 [00:01<00:00, 110123.06it/s][A
2025-02-24T15:52:32.5927009Z 
2025-02-24T15:52:32.5927330Z Packets:   ██████████████████████████████████████████████████████████████████████▊         176971/200000 [00:01<00:00, 110002.11it/s][A
2025-02-24T15:52:32.5927335Z 
2025-02-24T15:52:32.5927661Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    187972/200000 [00:01<00:00, 109893.39it/s][A
2025-02-24T15:52:32.5927685Z 
2025-02-24T15:52:32.5928013Z Packets:   ███████████████████████████████████████████████████████████████████████████████▌199004/200000 [00:01<00:00, 110021.13it/s][A
2025-02-24T15:52:32.5928182Z Iterations:                                                                                15/? [05:57<00:00,  7.55s/it]
2025-02-24T15:52:32.5928187Z 
2025-02-24T15:52:32.5928515Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 110021.13it/s][A
2025-02-24T15:52:32.5928521Z 
2025-02-24T15:52:32.5928757Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:52:32.5928762Z 
2025-02-24T15:52:32.5929002Z Packets:   ████▍                                                                           11003/200000 [00:00<00:01, 108408.74it/s][A
2025-02-24T15:52:32.5929007Z 
2025-02-24T15:52:32.5929342Z Packets:   ████████▋                                                                       21844/200000 [00:00<00:01, 107585.50it/s][A
2025-02-24T15:52:32.5929348Z 
2025-02-24T15:52:32.5929679Z Packets:   █████████████                                                                   32673/200000 [00:00<00:01, 107902.15it/s][A
2025-02-24T15:52:32.5929684Z 
2025-02-24T15:52:32.5929939Z Packets:   █████████████████▍                                                              43464/200000 [00:00<00:01, 107768.25it/s][A
2025-02-24T15:52:32.5929945Z 
2025-02-24T15:52:32.5930201Z Packets:   █████████████████████▊                                                          54379/200000 [00:00<00:01, 108263.12it/s][A
2025-02-24T15:52:32.5930207Z 
2025-02-24T15:52:32.5930472Z Packets:   ██████████████████████████                                                      65283/200000 [00:00<00:01, 108524.89it/s][A
2025-02-24T15:52:32.5930477Z 
2025-02-24T15:52:32.5930744Z Packets:   ██████████████████████████████▍                                                 76218/200000 [00:00<00:01, 108791.00it/s][A
2025-02-24T15:52:32.5930765Z 
2025-02-24T15:52:32.5931160Z Packets:   ██████████████████████████████████▊                                             87166/200000 [00:00<00:01, 109009.71it/s][A
2025-02-24T15:52:32.5931179Z 
2025-02-24T15:52:32.5931467Z Packets:   ███████████████████████████████████████▏                                        98081/200000 [00:00<00:00, 109050.56it/s][A
2025-02-24T15:52:32.5931472Z 
2025-02-24T15:52:32.5931760Z Packets:   ███████████████████████████████████████████▌                                    108987/200000 [00:01<00:00, 108823.03it/s][A
2025-02-24T15:52:32.5931766Z 
2025-02-24T15:52:32.5932060Z Packets:   ███████████████████████████████████████████████▉                                119870/200000 [00:01<00:00, 108699.87it/s][A
2025-02-24T15:52:32.5932066Z 
2025-02-24T15:52:32.5932366Z Packets:   ████████████████████████████████████████████████████▎                           130756/200000 [00:01<00:00, 108747.49it/s][A
2025-02-24T15:52:32.5932386Z 
2025-02-24T15:52:32.5932687Z Packets:   ████████████████████████████████████████████████████████▋                       141631/200000 [00:01<00:00, 108675.86it/s][A
2025-02-24T15:52:32.5932706Z 
2025-02-24T15:52:32.5933016Z Packets:   █████████████████████████████████████████████████████████████                   152603/200000 [00:01<00:00, 108990.57it/s][A
2025-02-24T15:52:32.5933021Z 
2025-02-24T15:52:32.5933333Z Packets:   █████████████████████████████████████████████████████████████████▍              163533/200000 [00:01<00:00, 109083.30it/s][A
2025-02-24T15:52:32.5933343Z 
2025-02-24T15:52:32.5933658Z Packets:   █████████████████████████████████████████████████████████████████████▊          174475/200000 [00:01<00:00, 109181.55it/s][A
2025-02-24T15:52:32.5933663Z 
2025-02-24T15:52:32.5933987Z Packets:   ██████████████████████████████████████████████████████████████████████████▏     185394/200000 [00:01<00:00, 109036.30it/s][A
2025-02-24T15:52:32.5934123Z 
2025-02-24T15:52:32.5934455Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 196298/200000 [00:01<00:00, 108889.34it/s][A
2025-02-24T15:52:32.5934719Z Iterations:                                                                                16/? [06:00<00:00,  6.22s/it]
2025-02-24T15:52:32.5934724Z 
2025-02-24T15:52:32.5935055Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108889.34it/s][A
2025-02-24T15:52:32.5935060Z 
2025-02-24T15:52:32.5935292Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-24T15:52:32.5935298Z 
2025-02-24T15:52:32.5935539Z Packets:   █▋                                                                              10890/500000 [00:00<00:13, 35740.98it/s][A
2025-02-24T15:52:32.5935544Z 
2025-02-24T15:52:32.5935777Z Packets:   ██▎                                                                             14465/500000 [00:00<00:13, 35591.94it/s][A
2025-02-24T15:52:32.5935799Z 
2025-02-24T15:52:32.5936030Z Packets:   ██▉                                                                             18012/500000 [00:00<00:13, 35311.72it/s][A
2025-02-24T15:52:32.5936045Z 
2025-02-24T15:52:32.5936281Z Packets:   ███▍                                                                            21525/500000 [00:00<00:13, 34942.55it/s][A
2025-02-24T15:52:32.5936286Z 
2025-02-24T15:52:32.5936520Z Packets:   ████                                                                            25113/500000 [00:00<00:13, 35226.27it/s][A
2025-02-24T15:52:32.5936526Z 
2025-02-24T15:52:32.5936763Z Packets:   ████▌                                                                           28668/500000 [00:00<00:13, 35321.91it/s][A
2025-02-24T15:52:32.5936768Z 
2025-02-24T15:52:32.5937006Z Packets:   █████▏                                                                          32243/500000 [00:00<00:13, 35448.80it/s][A
2025-02-24T15:52:32.5937018Z 
2025-02-24T15:52:32.5937252Z Packets:   █████▋                                                                          35825/500000 [00:01<00:13, 35556.67it/s][A
2025-02-24T15:52:32.5937268Z 
2025-02-24T15:52:32.5937506Z Packets:   ██████▎                                                                         39435/500000 [00:01<00:12, 35718.33it/s][A
2025-02-24T15:52:32.5937511Z 
2025-02-24T15:52:32.5937745Z Packets:   ██████▉                                                                         43041/500000 [00:01<00:12, 35819.51it/s][A
2025-02-24T15:52:32.5937753Z 
2025-02-24T15:52:32.5937988Z Packets:   ███████▍                                                                        46624/500000 [00:01<00:12, 35789.97it/s][A
2025-02-24T15:52:32.5937994Z 
2025-02-24T15:52:32.5938232Z Packets:   ████████                                                                        50228/500000 [00:01<00:12, 35857.33it/s][A
2025-02-24T15:52:32.5938245Z 
2025-02-24T15:52:32.5938483Z Packets:   ████████▌                                                                       53838/500000 [00:01<00:12, 35929.03it/s][A
2025-02-24T15:52:32.5938575Z 
2025-02-24T15:52:32.5938822Z Packets:   █████████▏                                                                      57449/500000 [00:01<00:12, 35982.97it/s][A
2025-02-24T15:52:32.5938827Z 
2025-02-24T15:52:32.5939069Z Packets:   █████████▊                                                                      61048/500000 [00:01<00:12, 35921.50it/s][A
2025-02-24T15:52:32.5939074Z 
2025-02-24T15:52:32.5939315Z Packets:   ██████████▎                                                                     64641/500000 [00:01<00:12, 35575.34it/s][A
2025-02-24T15:52:32.5939320Z 
2025-02-24T15:52:32.5939562Z Packets:   ██████████▉                                                                     68205/500000 [00:01<00:12, 35593.94it/s][A
2025-02-24T15:52:32.5939567Z 
2025-02-24T15:52:32.5939912Z Packets:   ███████████▍                                                                    71765/500000 [00:02<00:12, 35572.20it/s][A
2025-02-24T15:52:32.5939921Z 
2025-02-24T15:52:32.5940174Z Packets:   ████████████                                                                    75357/500000 [00:02<00:11, 35674.84it/s][A
2025-02-24T15:52:32.5940179Z 
2025-02-24T15:52:32.5940425Z Packets:   ████████████▋                                                                   78945/500000 [00:02<00:11, 35735.34it/s][A
2025-02-24T15:52:32.5940431Z 
2025-02-24T15:52:32.5940676Z Packets:   █████████████▏                                                                  82522/500000 [00:02<00:11, 35743.64it/s][A
2025-02-24T15:52:32.5940681Z 
2025-02-24T15:52:32.5941054Z Packets:   █████████████▊                                                                  86097/500000 [00:02<00:11, 35706.21it/s][A
2025-02-24T15:52:32.5941061Z 
2025-02-24T15:52:32.5941316Z Packets:   ██████████████▎                                                                 89672/500000 [00:02<00:11, 35717.34it/s][A
2025-02-24T15:52:32.5941335Z 
2025-02-24T15:52:32.5941581Z Packets:   ██████████████▉                                                                 93244/500000 [00:02<00:11, 35567.39it/s][A
2025-02-24T15:52:32.5941595Z 
2025-02-24T15:52:32.5941846Z Packets:   ███████████████▍                                                                96801/500000 [00:02<00:11, 35518.12it/s][A
2025-02-24T15:52:32.5941851Z 
2025-02-24T15:52:32.5942105Z Packets:   ████████████████                                                                100353/500000 [00:02<00:11, 34700.72it/s][A
2025-02-24T15:52:32.5942110Z 
2025-02-24T15:52:32.5942362Z Packets:   ████████████████▋                                                               103926/500000 [00:02<00:11, 35000.24it/s][A
2025-02-24T15:52:32.5942367Z 
2025-02-24T15:52:32.5942621Z Packets:   █████████████████▏                                                              107545/500000 [00:03<00:11, 35349.51it/s][A
2025-02-24T15:52:32.5942635Z 
2025-02-24T15:52:32.5942887Z Packets:   █████████████████▊                                                              111128/500000 [00:03<00:10, 35491.53it/s][A
2025-02-24T15:52:32.5942905Z 
2025-02-24T15:52:32.5943157Z Packets:   ██████████████████▎                                                             114722/500000 [00:03<00:10, 35622.18it/s][A
2025-02-24T15:52:32.5943163Z 
2025-02-24T15:52:32.5943418Z Packets:   ██████████████████▉                                                             118286/500000 [00:03<00:10, 35553.13it/s][A
2025-02-24T15:52:32.5943424Z 
2025-02-24T15:52:32.5943676Z Packets:   ███████████████████▍                                                            121856/500000 [00:03<00:10, 35595.32it/s][A
2025-02-24T15:52:32.5943681Z 
2025-02-24T15:52:32.5943936Z Packets:   ████████████████████                                                            125428/500000 [00:03<00:10, 35631.51it/s][A
2025-02-24T15:52:32.5944068Z 
2025-02-24T15:52:32.5944332Z Packets:   ████████████████████▋                                                           129018/500000 [00:03<00:10, 35711.37it/s][A
2025-02-24T15:52:32.5944442Z 
2025-02-24T15:52:32.5944704Z Packets:   █████████████████████▏                                                          132590/500000 [00:03<00:10, 35542.00it/s][A
2025-02-24T15:52:32.5944709Z 
2025-02-24T15:52:32.5944970Z Packets:   █████████████████████▊                                                          136145/500000 [00:03<00:10, 35457.47it/s][A
2025-02-24T15:52:32.5944975Z 
2025-02-24T15:52:32.5945232Z Packets:   ██████████████████████▎                                                         139724/500000 [00:03<00:10, 35553.08it/s][A
2025-02-24T15:52:32.5945240Z 
2025-02-24T15:52:32.5945498Z Packets:   ██████████████████████▉                                                         143280/500000 [00:04<00:10, 35543.69it/s][A
2025-02-24T15:52:32.5945503Z 
2025-02-24T15:52:32.5945765Z Packets:   ███████████████████████▍                                                        146835/500000 [00:04<00:09, 35537.63it/s][A
2025-02-24T15:52:32.5945785Z 
2025-02-24T15:52:32.5946056Z Packets:   ████████████████████████                                                        150445/500000 [00:04<00:09, 35702.54it/s][A
2025-02-24T15:52:32.5946062Z 
2025-02-24T15:52:32.5946325Z Packets:   ████████████████████████▋                                                       154046/500000 [00:04<00:09, 35793.32it/s][A
2025-02-24T15:52:32.5946330Z 
2025-02-24T15:52:32.5946599Z Packets:   █████████████████████████▏                                                      157636/500000 [00:04<00:09, 35823.28it/s][A
2025-02-24T15:52:32.5946604Z 
2025-02-24T15:52:32.5946867Z Packets:   █████████████████████████▊                                                      161219/500000 [00:04<00:09, 35806.11it/s][A
2025-02-24T15:52:32.5946872Z 
2025-02-24T15:52:32.5947140Z Packets:   ██████████████████████████▎                                                     164800/500000 [00:04<00:09, 35788.75it/s][A
2025-02-24T15:52:32.5947156Z 
2025-02-24T15:52:32.5947420Z Packets:   ██████████████████████████▉                                                     168379/500000 [00:04<00:09, 35776.66it/s][A
2025-02-24T15:52:32.5947440Z 
2025-02-24T15:52:32.5947705Z Packets:   ███████████████████████████▌                                                    171998/500000 [00:04<00:09, 35899.22it/s][A
2025-02-24T15:52:32.5947710Z 
2025-02-24T15:52:32.5947983Z Packets:   ████████████████████████████                                                    175588/500000 [00:04<00:09, 35880.54it/s][A
2025-02-24T15:52:32.5947988Z 
2025-02-24T15:52:32.5948254Z Packets:   ████████████████████████████▋                                                   179177/500000 [00:05<00:08, 35878.74it/s][A
2025-02-24T15:52:32.5948259Z 
2025-02-24T15:52:32.5948531Z Packets:   █████████████████████████████▏                                                  182765/500000 [00:05<00:08, 35859.34it/s][A
2025-02-24T15:52:32.5948629Z 
2025-02-24T15:52:32.5948905Z Packets:   █████████████████████████████▊                                                  186351/500000 [00:05<00:08, 35745.95it/s][A
2025-02-24T15:52:32.5949010Z 
2025-02-24T15:52:32.5949282Z Packets:   ██████████████████████████████▍                                                 189928/500000 [00:05<00:08, 35751.70it/s][A
2025-02-24T15:52:32.5949287Z 
2025-02-24T15:52:32.5949559Z Packets:   ██████████████████████████████▉                                                 193512/500000 [00:05<00:08, 35774.47it/s][A
2025-02-24T15:52:32.5949564Z 
2025-02-24T15:52:32.5949839Z Packets:   ███████████████████████████████▌                                                197090/500000 [00:05<00:08, 35511.91it/s][A
2025-02-24T15:52:32.5949845Z 
2025-02-24T15:52:32.5950113Z Packets:   ████████████████████████████████                                                200691/500000 [00:05<00:08, 35659.61it/s][A
2025-02-24T15:52:32.5950132Z 
2025-02-24T15:52:32.5950599Z Packets:   ████████████████████████████████▋                                               204258/500000 [00:05<00:08, 35538.71it/s][A
2025-02-24T15:52:32.5950630Z 
2025-02-24T15:52:32.5951253Z Packets:   █████████████████████████████████▎                                              207851/500000 [00:05<00:08, 35655.31it/s][A
2025-02-24T15:52:32.5951269Z 
2025-02-24T15:52:32.5951672Z Packets:   █████████████████████████████████▊                                              211417/500000 [00:05<00:08, 34500.44it/s][A
2025-02-24T15:52:32.5951678Z 
2025-02-24T15:52:32.5951961Z Packets:   ██████████████████████████████████▍                                             214977/500000 [00:06<00:08, 34820.44it/s][A
2025-02-24T15:52:32.5951966Z 
2025-02-24T15:52:32.5952239Z Packets:   ██████████████████████████████████▉                                             218608/500000 [00:06<00:07, 35259.19it/s][A
2025-02-24T15:52:32.5952245Z 
2025-02-24T15:52:32.5952524Z Packets:   ███████████████████████████████████▌                                            222140/500000 [00:06<00:07, 35266.53it/s][A
2025-02-24T15:52:32.5952543Z 
2025-02-24T15:52:32.5952834Z Packets:   ████████████████████████████████████                                            225692/500000 [00:06<00:07, 35339.13it/s][A
2025-02-24T15:52:32.5952839Z 
2025-02-24T15:52:32.5953114Z Packets:   ████████████████████████████████████▋                                           229229/500000 [00:06<00:07, 35284.53it/s][A
2025-02-24T15:52:32.5953119Z 
2025-02-24T15:52:32.5953400Z Packets:   █████████████████████████████████████▏                                          232807/500000 [00:06<00:07, 35431.79it/s][A
2025-02-24T15:52:32.5953405Z 
2025-02-24T15:52:32.5953679Z Packets:   █████████████████████████████████████▊                                          236404/500000 [00:06<00:07, 35592.12it/s][A
2025-02-24T15:52:32.5953689Z 
2025-02-24T15:52:32.5953965Z Packets:   ██████████████████████████████████████▍                                         239965/500000 [00:06<00:07, 35553.00it/s][A
2025-02-24T15:52:32.5954112Z 
2025-02-24T15:52:32.5954400Z Packets:   ██████████████████████████████████████▉                                         243522/500000 [00:06<00:07, 35431.37it/s][A
2025-02-24T15:52:32.5954515Z 
2025-02-24T15:52:32.5954800Z Packets:   ███████████████████████████████████████▌                                        247066/500000 [00:06<00:07, 35198.27it/s][A
2025-02-24T15:52:32.5954805Z 
2025-02-24T15:52:32.5955088Z Packets:   ████████████████████████████████████████                                        250620/500000 [00:07<00:07, 35299.67it/s][A
2025-02-24T15:52:32.5955093Z 
2025-02-24T15:52:32.5955381Z Packets:   ████████████████████████████████████████▋                                       254180/500000 [00:07<00:06, 35387.35it/s][A
2025-02-24T15:52:32.5955385Z 
2025-02-24T15:52:32.5955665Z Packets:   █████████████████████████████████████████▏                                      257720/500000 [00:07<00:06, 35354.41it/s][A
2025-02-24T15:52:32.5955686Z 
2025-02-24T15:52:32.5955971Z Packets:   █████████████████████████████████████████▊                                      261256/500000 [00:07<00:06, 35347.63it/s][A
2025-02-24T15:52:32.5955991Z 
2025-02-24T15:52:32.5956273Z Packets:   ██████████████████████████████████████████▎                                     264795/500000 [00:07<00:06, 35359.13it/s][A
2025-02-24T15:52:32.5956283Z 
2025-02-24T15:52:32.5956565Z Packets:   ██████████████████████████████████████████▉                                     268345/500000 [00:07<00:06, 35399.73it/s][A
2025-02-24T15:52:32.5956570Z 
2025-02-24T15:52:32.5956858Z Packets:   ███████████████████████████████████████████▌                                    271907/500000 [00:07<00:06, 35464.39it/s][A
2025-02-24T15:52:32.5956864Z 
2025-02-24T15:52:32.5957147Z Packets:   ████████████████████████████████████████████                                    275454/500000 [00:07<00:06, 35352.05it/s][A
2025-02-24T15:52:32.5957164Z 
2025-02-24T15:52:32.5957452Z Packets:   ████████████████████████████████████████████▋                                   278990/500000 [00:07<00:06, 35202.48it/s][A
2025-02-24T15:52:32.5957470Z 
2025-02-24T15:52:32.5957760Z Packets:   █████████████████████████████████████████████▏                                  282599/500000 [00:07<00:06, 35466.09it/s][A
2025-02-24T15:52:32.5957765Z 
2025-02-24T15:52:32.5958049Z Packets:   █████████████████████████████████████████████▊                                  286154/500000 [00:08<00:06, 35487.56it/s][A
2025-02-24T15:52:32.5958054Z 
2025-02-24T15:52:32.5958343Z Packets:   ██████████████████████████████████████████████▎                                 289718/500000 [00:08<00:05, 35532.15it/s][A
2025-02-24T15:52:32.5958348Z 
2025-02-24T15:52:32.5958637Z Packets:   ██████████████████████████████████████████████▉                                 293272/500000 [00:08<00:05, 35395.62it/s][A
2025-02-24T15:52:32.5958642Z 
2025-02-24T15:52:32.5958929Z Packets:   ███████████████████████████████████████████████▍                                296845/500000 [00:08<00:05, 35490.66it/s][A
2025-02-24T15:52:32.5959028Z 
2025-02-24T15:52:32.5959426Z Packets:   ████████████████████████████████████████████████                                300418/500000 [00:08<00:05, 35561.45it/s][A
2025-02-24T15:52:32.5959431Z 
2025-02-24T15:52:32.5959721Z Packets:   ████████████████████████████████████████████████▋                               304079/500000 [00:08<00:05, 35869.60it/s][A
2025-02-24T15:52:32.5959726Z 
2025-02-24T15:52:32.5960021Z Packets:   █████████████████████████████████████████████████▏                              307667/500000 [00:08<00:05, 35679.10it/s][A
2025-02-24T15:52:32.5960026Z 
2025-02-24T15:52:32.5960320Z Packets:   █████████████████████████████████████████████████▊                              311236/500000 [00:08<00:05, 35638.25it/s][A
2025-02-24T15:52:32.5960324Z 
2025-02-24T15:52:32.5960615Z Packets:   ██████████████████████████████████████████████████▎                             314821/500000 [00:08<00:05, 35699.66it/s][A
2025-02-24T15:52:32.5960636Z 
2025-02-24T15:52:32.5961057Z Packets:   ██████████████████████████████████████████████████▉                             318423/500000 [00:08<00:05, 35795.43it/s][A
2025-02-24T15:52:32.5961078Z 
2025-02-24T15:52:32.5961382Z Packets:   ███████████████████████████████████████████████████▌                            322015/500000 [00:09<00:04, 35831.17it/s][A
2025-02-24T15:52:32.5961387Z 
2025-02-24T15:52:32.5961680Z Packets:   ████████████████████████████████████████████████████                            325599/500000 [00:09<00:04, 35605.45it/s][A
2025-02-24T15:52:32.5961685Z 
2025-02-24T15:52:32.5962011Z Packets:   ████████████████████████████████████████████████████▋                           329160/500000 [00:09<00:04, 35205.43it/s][A
2025-02-24T15:52:32.5962017Z 
2025-02-24T15:52:32.5962309Z Packets:   █████████████████████████████████████████████████████▏                          332682/500000 [00:09<00:04, 35088.87it/s][A
2025-02-24T15:52:32.5962333Z 
2025-02-24T15:52:32.5962628Z Packets:   █████████████████████████████████████████████████████▊                          336284/500000 [00:09<00:04, 35362.84it/s][A
2025-02-24T15:52:32.5962765Z 
2025-02-24T15:52:32.5963072Z Packets:   ██████████████████████████████████████████████████████▍                         339851/500000 [00:09<00:04, 35453.82it/s][A
2025-02-24T15:52:32.5963078Z 
2025-02-24T15:52:32.5963374Z Packets:   ██████████████████████████████████████████████████████▉                         343463/500000 [00:09<00:04, 35652.07it/s][A
2025-02-24T15:52:32.5963379Z 
2025-02-24T15:52:32.5963679Z Packets:   ███████████████████████████████████████████████████████▌                        347029/500000 [00:09<00:04, 35584.31it/s][A
2025-02-24T15:52:32.5963684Z 
2025-02-24T15:52:32.5963982Z Packets:   ████████████████████████████████████████████████████████                        350613/500000 [00:09<00:04, 35658.64it/s][A
2025-02-24T15:52:32.5964101Z 
2025-02-24T15:52:32.5964405Z Packets:   ████████████████████████████████████████████████████████▋                       354182/500000 [00:09<00:04, 35665.79it/s][A
2025-02-24T15:52:32.5964425Z 
2025-02-24T15:52:32.5964728Z Packets:   █████████████████████████████████████████████████████████▏                      357768/500000 [00:10<00:03, 35723.34it/s][A
2025-02-24T15:52:32.5964734Z 
2025-02-24T15:52:32.5965037Z Packets:   █████████████████████████████████████████████████████████▊                      361349/500000 [00:10<00:03, 35747.98it/s][A
2025-02-24T15:52:32.5965045Z 
2025-02-24T15:52:32.5965349Z Packets:   ██████████████████████████████████████████████████████████▍                     364924/500000 [00:10<00:03, 35655.43it/s][A
2025-02-24T15:52:32.5965355Z 
2025-02-24T15:52:32.5965661Z Packets:   ██████████████████████████████████████████████████████████▉                     368490/500000 [00:10<00:03, 35588.56it/s][A
2025-02-24T15:52:32.5965666Z 
2025-02-24T15:52:32.5965967Z Packets:   ███████████████████████████████████████████████████████████▌                    372086/500000 [00:10<00:03, 35697.51it/s][A
2025-02-24T15:52:32.5965987Z 
2025-02-24T15:52:32.5966291Z Packets:   ████████████████████████████████████████████████████████████                    375666/500000 [00:10<00:03, 35726.52it/s][A
2025-02-24T15:52:32.5966311Z 
2025-02-24T15:52:32.5966618Z Packets:   ████████████████████████████████████████████████████████████▋                   379239/500000 [00:10<00:03, 35573.30it/s][A
2025-02-24T15:52:32.5966624Z 
2025-02-24T15:52:32.5966928Z Packets:   █████████████████████████████████████████████████████████████▏                  382797/500000 [00:10<00:03, 35476.93it/s][A
2025-02-24T15:52:32.5966933Z 
2025-02-24T15:52:32.5967240Z Packets:   █████████████████████████████████████████████████████████████▊                  386345/500000 [00:10<00:03, 35395.95it/s][A
2025-02-24T15:52:32.5967246Z 
2025-02-24T15:52:32.5967550Z Packets:   ██████████████████████████████████████████████████████████████▍                 389916/500000 [00:10<00:03, 35489.33it/s][A
2025-02-24T15:52:32.5967654Z 
2025-02-24T15:52:32.5967962Z Packets:   ██████████████████████████████████████████████████████████████▉                 393466/500000 [00:11<00:03, 35187.38it/s][A
2025-02-24T15:52:32.5968053Z 
2025-02-24T15:52:32.5968364Z Packets:   ███████████████████████████████████████████████████████████████▌                397029/500000 [00:11<00:02, 35315.57it/s][A
2025-02-24T15:52:32.5968369Z 
2025-02-24T15:52:32.5968675Z Packets:   ████████████████████████████████████████████████████████████████                400577/500000 [00:11<00:02, 35361.42it/s][A
2025-02-24T15:52:32.5968681Z 
2025-02-24T15:52:32.5969011Z Packets:   ████████████████████████████████████████████████████████████████▋               404114/500000 [00:11<00:02, 35342.70it/s][A
2025-02-24T15:52:32.5969016Z 
2025-02-24T15:52:32.5969327Z Packets:   █████████████████████████████████████████████████████████████████▏              407657/500000 [00:11<00:02, 35368.68it/s][A
2025-02-24T15:52:32.5969349Z 
2025-02-24T15:52:32.5969657Z Packets:   █████████████████████████████████████████████████████████████████▊              411234/500000 [00:11<00:02, 35481.94it/s][A
2025-02-24T15:52:32.5969678Z 
2025-02-24T15:52:32.5969992Z Packets:   ██████████████████████████████████████████████████████████████████▎             414799/500000 [00:11<00:02, 35530.91it/s][A
2025-02-24T15:52:32.5969997Z 
2025-02-24T15:52:32.5970312Z Packets:   ██████████████████████████████████████████████████████████████████▉             418355/500000 [00:11<00:02, 35537.88it/s][A
2025-02-24T15:52:32.5970317Z 
2025-02-24T15:52:32.5970629Z Packets:   ███████████████████████████████████████████████████████████████████▌            421932/500000 [00:11<00:02, 35598.84it/s][A
2025-02-24T15:52:32.5970634Z 
2025-02-24T15:52:32.5971044Z Packets:   ████████████████████████████████████████████████████████████████████            425552/500000 [00:11<00:02, 35778.36it/s][A
2025-02-24T15:52:32.5971066Z 
2025-02-24T15:52:32.5971380Z Packets:   ████████████████████████████████████████████████████████████████████▋           429130/500000 [00:12<00:01, 35517.63it/s][A
2025-02-24T15:52:32.5971543Z 
2025-02-24T15:52:32.5971863Z Packets:   █████████████████████████████████████████████████████████████████████▏          432683/500000 [00:12<00:01, 35496.03it/s][A
2025-02-24T15:52:32.5971868Z 
2025-02-24T15:52:32.5972188Z Packets:   █████████████████████████████████████████████████████████████████████▊          436234/500000 [00:12<00:01, 35496.93it/s][A
2025-02-24T15:52:32.5972193Z 
2025-02-24T15:52:32.5972510Z Packets:   ██████████████████████████████████████████████████████████████████████▎         439806/500000 [00:12<00:01, 35563.12it/s][A
2025-02-24T15:52:32.5972515Z 
2025-02-24T15:52:32.5972835Z Packets:   ██████████████████████████████████████████████████████████████████████▉         443363/500000 [00:12<00:01, 35549.64it/s][A
2025-02-24T15:52:32.5972840Z 
2025-02-24T15:52:32.5973158Z Packets:   ███████████████████████████████████████████████████████████████████████▌        446919/500000 [00:12<00:01, 35347.71it/s][A
2025-02-24T15:52:32.5973280Z 
2025-02-24T15:52:32.5973600Z Packets:   ████████████████████████████████████████████████████████████████████████        450479/500000 [00:12<00:01, 35421.51it/s][A
2025-02-24T15:52:32.5973623Z 
2025-02-24T15:52:32.5973944Z Packets:   ████████████████████████████████████████████████████████████████████████▋       454027/500000 [00:12<00:01, 35435.67it/s][A
2025-02-24T15:52:32.5973949Z 
2025-02-24T15:52:32.5974269Z Packets:   █████████████████████████████████████████████████████████████████████████▏      457625/500000 [00:12<00:01, 35596.61it/s][A
2025-02-24T15:52:32.5974277Z 
2025-02-24T15:52:32.5974591Z Packets:   █████████████████████████████████████████████████████████████████████████▊      461185/500000 [00:12<00:01, 35453.77it/s][A
2025-02-24T15:52:32.5974596Z 
2025-02-24T15:52:32.5974917Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     464732/500000 [00:13<00:00, 35456.84it/s][A
2025-02-24T15:52:32.5974938Z 
2025-02-24T15:52:32.5975254Z Packets:   ██████████████████████████████████████████████████████████████████████████▉     468279/500000 [00:13<00:00, 35457.35it/s][A
2025-02-24T15:52:32.5975275Z 
2025-02-24T15:52:32.5975597Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    471825/500000 [00:13<00:00, 35328.22it/s][A
2025-02-24T15:52:32.5975602Z 
2025-02-24T15:52:32.5975924Z Packets:   ████████████████████████████████████████████████████████████████████████████    475358/500000 [00:13<00:00, 35296.78it/s][A
2025-02-24T15:52:32.5975929Z 
2025-02-24T15:52:32.5976249Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   478888/500000 [00:13<00:00, 35258.00it/s][A
2025-02-24T15:52:32.5976254Z 
2025-02-24T15:52:32.5976579Z Packets:   █████████████████████████████████████████████████████████████████████████████▏  482472/500000 [00:13<00:00, 35431.61it/s][A
2025-02-24T15:52:32.5976696Z 
2025-02-24T15:52:32.5977028Z Packets:   █████████████████████████████████████████████████████████████████████████████▊  486016/500000 [00:13<00:00, 35251.07it/s][A
2025-02-24T15:52:32.5977124Z 
2025-02-24T15:52:32.5977456Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 489555/500000 [00:13<00:00, 35291.74it/s][A
2025-02-24T15:52:32.5977461Z 
2025-02-24T15:52:32.5977785Z Packets:   ██████████████████████████████████████████████████████████████████████████████▉ 493107/500000 [00:13<00:00, 35355.97it/s][A
2025-02-24T15:52:32.5977790Z 
2025-02-24T15:52:32.5978112Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍496669/500000 [00:13<00:00, 35434.37it/s][A
2025-02-24T15:52:32.5978269Z Iterations:                                                                                17/? [06:16<00:00,  9.18s/it]
2025-02-24T15:52:32.5978274Z 
2025-02-24T15:52:32.5978603Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:14<00:00, 35434.37it/s][A
2025-02-24T15:52:32.5978796Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.5978980Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T15:52:32.5979347Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T15:52:32.5979737Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T15:52:32.5980179Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T15:52:32.5980689Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.5981047Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:52:32.5981165Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5981391Z 	Starting iteration 1 of 5
2025-02-24T15:52:32.5981503Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5981604Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T15:52:32.5981697Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T15:52:32.5981794Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5981798Z 
2025-02-24T15:52:32.5981908Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:52:32.5981997Z 	Plasma stratification:
2025-02-24T15:52:32.5982105Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:52:32.5982218Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T15:52:32.5982309Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T15:52:32.5982393Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T15:52:32.5982606Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T15:52:32.5982692Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T15:52:32.5982703Z 
2025-02-24T15:52:32.5982813Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:52:32.5982902Z 	Current t_inner = 9974.969 K
2025-02-24T15:52:32.5983027Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T15:52:32.5983032Z 
2025-02-24T15:52:32.5983139Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5983225Z 	Starting iteration 2 of 5
2025-02-24T15:52:32.5983331Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5983476Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T15:52:32.5983642Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T15:52:32.5983805Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5983811Z 
2025-02-24T15:52:32.5983992Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:52:32.5984135Z 	Plasma stratification:
2025-02-24T15:52:32.5984330Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:52:32.5984513Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5984635Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T15:52:32.5984732Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T15:52:32.5984819Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T15:52:32.5984908Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T15:52:32.5984913Z 
2025-02-24T15:52:32.5985017Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:52:32.5985107Z 	Current t_inner = 10736.790 K
2025-02-24T15:52:32.5985223Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T15:52:32.5985227Z 
2025-02-24T15:52:32.5985332Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5985418Z 	Starting iteration 3 of 5
2025-02-24T15:52:32.5985525Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5985621Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T15:52:32.5985720Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T15:52:32.5985815Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5985819Z 
2025-02-24T15:52:32.5986036Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T15:52:32.5986153Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:52:32.5986238Z 	Plasma stratification:
2025-02-24T15:52:32.5986348Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:52:32.5986452Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5986543Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T15:52:32.5986628Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T15:52:32.5986718Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T15:52:32.5986805Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T15:52:32.5986810Z 
2025-02-24T15:52:32.5986911Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:52:32.5987002Z 	Current t_inner = 10718.574 K
2025-02-24T15:52:32.5987123Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T15:52:32.5987128Z 
2025-02-24T15:52:32.5987237Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5987421Z 	Starting iteration 4 of 5
2025-02-24T15:52:32.5987531Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5987621Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T15:52:32.5987721Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T15:52:32.5987817Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5987821Z 
2025-02-24T15:52:32.5988035Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T15:52:32.5988144Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:52:32.5988229Z 	Plasma stratification:
2025-02-24T15:52:32.5988339Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:52:32.5988445Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5988535Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T15:52:32.5988698Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T15:52:32.5988788Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T15:52:32.5988873Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T15:52:32.5988887Z 
2025-02-24T15:52:32.5988992Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:52:32.5989081Z 	Current t_inner = 10696.150 K
2025-02-24T15:52:32.5989194Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T15:52:32.5989198Z 
2025-02-24T15:52:32.5989304Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:52:32.5989400Z 	Simulation finished in 4 iterations 
2025-02-24T15:52:32.5989491Z 	Simulation took 12.70 s
2025-02-24T15:52:32.5989496Z 
2025-02-24T15:52:32.5989600Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5989692Z 	Starting iteration 5 of 5
2025-02-24T15:52:32.5989795Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5989891Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T15:52:32.5989994Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T15:52:32.5990088Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5990270Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T15:52:32.5990281Z 
2025-02-24T15:52:32.5990497Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f888bab1610>
2025-02-24T15:52:32.5990701Z simulation = <tardis.simulation.base.Simulation object at 0x7f88602570b0>
2025-02-24T15:52:32.5990707Z 
2025-02-24T15:52:32.5990806Z     def test_spectrum(self, simulation):
2025-02-24T15:52:32.5991101Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:52:32.5991208Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5991285Z     
2025-02-24T15:52:32.5991400Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.5991472Z     
2025-02-24T15:52:32.5991566Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5991736Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T15:52:32.5991825Z             luminosity,
2025-02-24T15:52:32.5991897Z         )
2025-02-24T15:52:32.5991902Z 
2025-02-24T15:52:32.5992005Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T15:52:32.5992123Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5992483Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5992575Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5992691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5992696Z 
2025-02-24T15:52:32.5993183Z args = (<function assert_allclose.<locals>.compare at 0x7f885c4c8540>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T15:52:32.5993293Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5993550Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5993555Z 
2025-02-24T15:52:32.5993633Z     @wraps(func)
2025-02-24T15:52:32.5993855Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5993943Z         with self._recreate_cm():
2025-02-24T15:52:32.5994038Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5994130Z E           AssertionError: 
2025-02-24T15:52:32.5994241Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5994321Z E           
2025-02-24T15:52:32.5994425Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T15:52:32.5994531Z E           Max absolute difference: 1.38672909e+39
2025-02-24T15:52:32.5994629Z E           Max relative difference: 5.25284451
2025-02-24T15:52:32.5994791Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.5994880Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5995139Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.5995224Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5995242Z 
2025-02-24T15:52:32.5995447Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5995637Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T15:52:32.5995641Z 
2025-02-24T15:52:32.5995849Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f888bab1850>
2025-02-24T15:52:32.5996046Z simulation = <tardis.simulation.base.Simulation object at 0x7f88602570b0>
2025-02-24T15:52:32.5996051Z 
2025-02-24T15:52:32.5996162Z     def test_virtual_spectrum(self, simulation):
2025-02-24T15:52:32.5996348Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T15:52:32.5996451Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5996527Z     
2025-02-24T15:52:32.5996638Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.5996715Z     
2025-02-24T15:52:32.5996808Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5996984Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T15:52:32.5997072Z             luminosity,
2025-02-24T15:52:32.5997144Z         )
2025-02-24T15:52:32.5997148Z 
2025-02-24T15:52:32.5997249Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T15:52:32.5997362Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5997710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5997811Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5997932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5997936Z 
2025-02-24T15:52:32.5998408Z args = (<function assert_allclose.<locals>.compare at 0x7f887e7a0ea0>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T15:52:32.5998522Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5998773Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5998778Z 
2025-02-24T15:52:32.5998854Z     @wraps(func)
2025-02-24T15:52:32.5998943Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5999030Z         with self._recreate_cm():
2025-02-24T15:52:32.5999124Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5999215Z E           AssertionError: 
2025-02-24T15:52:32.5999323Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5999399Z E           
2025-02-24T15:52:32.5999499Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T15:52:32.5999605Z E           Max absolute difference: 5.26760031e+38
2025-02-24T15:52:32.5999705Z E           Max relative difference: 35562.41947434
2025-02-24T15:52:32.5999866Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.5999955Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6000216Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6000304Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6000312Z 
2025-02-24T15:52:32.6000514Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6000755Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T15:52:32.6000760Z 
2025-02-24T15:52:32.6001248Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab20f0>
2025-02-24T15:52:32.6001560Z simulation = <tardis.simulation.base.Simulation object at 0x7f8863ad6ab0>
2025-02-24T15:52:32.6001887Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T15:52:32.6002087Z 
2025-02-24T15:52:32.6002342Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:52:32.6002539Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6002689Z         j_blue_estimator = (
2025-02-24T15:52:32.6003069Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:52:32.6003191Z         )
2025-02-24T15:52:32.6003402Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:52:32.6003524Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:52:32.6003529Z 
2025-02-24T15:52:32.6003668Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:52:32.6003782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6003787Z 
2025-02-24T15:52:32.6004064Z args = (<function assert_allclose.<locals>.compare at 0x7f885fffa8e0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6004142Z        [0., 0., .....,
2025-02-24T15:52:32.6004235Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6004316Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6004394Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.6004650Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6004655Z 
2025-02-24T15:52:32.6004729Z     @wraps(func)
2025-02-24T15:52:32.6004816Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6004904Z         with self._recreate_cm():
2025-02-24T15:52:32.6004995Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6005087Z E           AssertionError: 
2025-02-24T15:52:32.6005196Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6005272Z E           
2025-02-24T15:52:32.6005382Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:52:32.6005491Z E           Max absolute difference: 7.03072887e-19
2025-02-24T15:52:32.6005594Z E           Max relative difference: 7.72237896
2025-02-24T15:52:32.6005709Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6005795Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6005892Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6005982Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6006071Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6006157Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6006165Z 
2025-02-24T15:52:32.6006371Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6006596Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T15:52:32.6006600Z 
2025-02-24T15:52:32.6006921Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2720>
2025-02-24T15:52:32.6007118Z simulation = <tardis.simulation.base.Simulation object at 0x7f8863ad6ab0>
2025-02-24T15:52:32.6007300Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T15:52:32.6007305Z 
2025-02-24T15:52:32.6007417Z     def test_spectrum(self, simulation, request):
2025-02-24T15:52:32.6007652Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6007848Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.6008011Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6008116Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6008241Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6008245Z 
2025-02-24T15:52:32.6008379Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:52:32.6008494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6008841Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6009019Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6009134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6009148Z 
2025-02-24T15:52:32.6009623Z args = (<function assert_allclose.<locals>.compare at 0x7f886001f740>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T15:52:32.6009733Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6009984Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6009989Z 
2025-02-24T15:52:32.6010070Z     @wraps(func)
2025-02-24T15:52:32.6010155Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6010246Z         with self._recreate_cm():
2025-02-24T15:52:32.6010338Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6010424Z E           AssertionError: 
2025-02-24T15:52:32.6010535Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6010611Z E           
2025-02-24T15:52:32.6010744Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:52:32.6010851Z E           Max absolute difference: 2.09719426e+39
2025-02-24T15:52:32.6011069Z E           Max relative difference: 4.0036592
2025-02-24T15:52:32.6011239Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6011336Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6011491Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6011581Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6011586Z 
2025-02-24T15:52:32.6011793Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6012023Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T15:52:32.6012028Z 
2025-02-24T15:52:32.6012360Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2e70>
2025-02-24T15:52:32.6012560Z simulation = <tardis.simulation.base.Simulation object at 0x7f8863ad6ab0>
2025-02-24T15:52:32.6012775Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T15:52:32.6012779Z 
2025-02-24T15:52:32.6012921Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:52:32.6013034Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6013229Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:52:32.6013389Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6013497Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6013616Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6013620Z 
2025-02-24T15:52:32.6013761Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:52:32.6013875Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6014218Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6014436Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6014547Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6014552Z 
2025-02-24T15:52:32.6015026Z args = (<function assert_allclose.<locals>.compare at 0x7f885ff42e80>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T15:52:32.6015132Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T15:52:32.6015379Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6015384Z 
2025-02-24T15:52:32.6015459Z     @wraps(func)
2025-02-24T15:52:32.6015553Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6015748Z         with self._recreate_cm():
2025-02-24T15:52:32.6015844Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6015934Z E           AssertionError: 
2025-02-24T15:52:32.6016055Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6016132Z E           
2025-02-24T15:52:32.6016235Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.6016341Z E           Max absolute difference: 5.00661745e+37
2025-02-24T15:52:32.6016440Z E           Max relative difference: 17.51202125
2025-02-24T15:52:32.6016598Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T15:52:32.6016685Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T15:52:32.6016838Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T15:52:32.6016923Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T15:52:32.6016931Z 
2025-02-24T15:52:32.6017131Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6017294Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6017299Z 
2025-02-24T15:52:32.6017307Z 
2025-02-24T15:52:32.6017695Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 110385.34it/s][A
2025-02-24T15:52:32.6017928Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T15:52:32.6017932Z 
2025-02-24T15:52:32.6018250Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2900>
2025-02-24T15:52:32.6018450Z simulation = <tardis.simulation.base.Simulation object at 0x7f885c36df40>
2025-02-24T15:52:32.6018653Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T15:52:32.6018658Z 
2025-02-24T15:52:32.6018787Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:52:32.6018899Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6018992Z         j_blue_estimator = (
2025-02-24T15:52:32.6019216Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:52:32.6019296Z         )
2025-02-24T15:52:32.6019446Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:52:32.6019567Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:52:32.6019574Z 
2025-02-24T15:52:32.6019706Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:52:32.6019824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6019828Z 
2025-02-24T15:52:32.6020100Z args = (<function assert_allclose.<locals>.compare at 0x7f885167d300>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6020182Z        [0., 0., .....,
2025-02-24T15:52:32.6020263Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6020348Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6020516Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.6020764Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6020859Z 
2025-02-24T15:52:32.6021065Z     @wraps(func)
2025-02-24T15:52:32.6021153Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6021246Z         with self._recreate_cm():
2025-02-24T15:52:32.6021336Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6021429Z E           AssertionError: 
2025-02-24T15:52:32.6021537Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6021616Z E           
2025-02-24T15:52:32.6021725Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:52:32.6021836Z E           Max absolute difference: 4.67863561e-19
2025-02-24T15:52:32.6021934Z E           Max relative difference: 3.25828651
2025-02-24T15:52:32.6022031Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6022121Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6022219Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6022314Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6022405Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6022499Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6022503Z 
2025-02-24T15:52:32.6022706Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6022928Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T15:52:32.6022933Z 
2025-02-24T15:52:32.6023250Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab3020>
2025-02-24T15:52:32.6023450Z simulation = <tardis.simulation.base.Simulation object at 0x7f885c36df40>
2025-02-24T15:52:32.6023631Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T15:52:32.6023636Z 
2025-02-24T15:52:32.6023750Z     def test_spectrum(self, simulation, request):
2025-02-24T15:52:32.6023860Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6024054Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.6024225Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6024326Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6024451Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6024455Z 
2025-02-24T15:52:32.6024590Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:52:32.6024699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6025039Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6025129Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6025245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6025253Z 
2025-02-24T15:52:32.6025730Z args = (<function assert_allclose.<locals>.compare at 0x7f885d8cd620>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T15:52:32.6025844Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6026092Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6026097Z 
2025-02-24T15:52:32.6026172Z     @wraps(func)
2025-02-24T15:52:32.6026263Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6026349Z         with self._recreate_cm():
2025-02-24T15:52:32.6026444Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6026531Z E           AssertionError: 
2025-02-24T15:52:32.6026642Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6026714Z E           
2025-02-24T15:52:32.6026819Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:52:32.6027048Z E           Max absolute difference: 8.5486318e+38
2025-02-24T15:52:32.6027148Z E           Max relative difference: 1.86186015
2025-02-24T15:52:32.6027413Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6027501Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6027652Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6027737Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6027741Z 
2025-02-24T15:52:32.6027949Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6028195Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T15:52:32.6028202Z 
2025-02-24T15:52:32.6028805Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab3680>
2025-02-24T15:52:32.6029143Z simulation = <tardis.simulation.base.Simulation object at 0x7f885c36df40>
2025-02-24T15:52:32.6029462Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T15:52:32.6029474Z 
2025-02-24T15:52:32.6029621Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:52:32.6029729Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6029924Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:52:32.6030082Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6030190Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6030307Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6030318Z 
2025-02-24T15:52:32.6030449Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:52:32.6030567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6030998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6031103Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6031214Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6031223Z 
2025-02-24T15:52:32.6031694Z args = (<function assert_allclose.<locals>.compare at 0x7f885d8cd9e0>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T15:52:32.6031800Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T15:52:32.6032049Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6032054Z 
2025-02-24T15:52:32.6032133Z     @wraps(func)
2025-02-24T15:52:32.6032221Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6032314Z         with self._recreate_cm():
2025-02-24T15:52:32.6032404Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6032502Z E           AssertionError: 
2025-02-24T15:52:32.6032609Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6032685Z E           
2025-02-24T15:52:32.6032789Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.6032900Z E           Max absolute difference: 2.90101642e+37
2025-02-24T15:52:32.6032999Z E           Max relative difference: 0.98973757
2025-02-24T15:52:32.6033157Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T15:52:32.6033248Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T15:52:32.6033396Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T15:52:32.6033488Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T15:52:32.6033492Z 
2025-02-24T15:52:32.6033690Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6033923Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T15:52:32.6034073Z 
2025-02-24T15:52:32.6034397Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2b70>
2025-02-24T15:52:32.6034700Z simulation = <tardis.simulation.base.Simulation object at 0x7f88760b9b20>
2025-02-24T15:52:32.6034902Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T15:52:32.6034907Z 
2025-02-24T15:52:32.6035036Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:52:32.6035146Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6035230Z         j_blue_estimator = (
2025-02-24T15:52:32.6035454Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:52:32.6035527Z         )
2025-02-24T15:52:32.6035682Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:52:32.6035805Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:52:32.6035816Z 
2025-02-24T15:52:32.6035954Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:52:32.6036072Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6036083Z 
2025-02-24T15:52:32.6036354Z args = (<function assert_allclose.<locals>.compare at 0x7f885d8cdee0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6036434Z        [0., 0., .....,
2025-02-24T15:52:32.6036516Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6036600Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6036684Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.6036933Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6036938Z 
2025-02-24T15:52:32.6037022Z     @wraps(func)
2025-02-24T15:52:32.6037108Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6037200Z         with self._recreate_cm():
2025-02-24T15:52:32.6037290Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6037384Z E           AssertionError: 
2025-02-24T15:52:32.6037491Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6037569Z E           
2025-02-24T15:52:32.6037683Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:52:32.6037791Z E           Max absolute difference: 4.67863561e-19
2025-02-24T15:52:32.6037888Z E           Max relative difference: 3.25828651
2025-02-24T15:52:32.6037985Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6038068Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6038158Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6038254Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6038338Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6038429Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6038433Z 
2025-02-24T15:52:32.6038633Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6038861Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T15:52:32.6038865Z 
2025-02-24T15:52:32.6039190Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab3290>
2025-02-24T15:52:32.6039388Z simulation = <tardis.simulation.base.Simulation object at 0x7f88760b9b20>
2025-02-24T15:52:32.6039566Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T15:52:32.6039571Z 
2025-02-24T15:52:32.6039681Z     def test_spectrum(self, simulation, request):
2025-02-24T15:52:32.6039789Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6039983Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.6040144Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6040248Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6040369Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6040462Z 
2025-02-24T15:52:32.6040598Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:52:32.6040711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6041228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6041321Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6041436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6041441Z 
2025-02-24T15:52:32.6041919Z args = (<function assert_allclose.<locals>.compare at 0x7f885c4cbec0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T15:52:32.6042032Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6042274Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6042289Z 
2025-02-24T15:52:32.6042364Z     @wraps(func)
2025-02-24T15:52:32.6042453Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6042548Z         with self._recreate_cm():
2025-02-24T15:52:32.6042642Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6042728Z E           AssertionError: 
2025-02-24T15:52:32.6042838Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6042911Z E           
2025-02-24T15:52:32.6043015Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:52:32.6043115Z E           Max absolute difference: 8.5486318e+38
2025-02-24T15:52:32.6043217Z E           Max relative difference: 1.86186015
2025-02-24T15:52:32.6043374Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6043461Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6043612Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6043702Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6043706Z 
2025-02-24T15:52:32.6043912Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6044146Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T15:52:32.6044151Z 
2025-02-24T15:52:32.6044478Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab3890>
2025-02-24T15:52:32.6044679Z simulation = <tardis.simulation.base.Simulation object at 0x7f88760b9b20>
2025-02-24T15:52:32.6044881Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T15:52:32.6044886Z 
2025-02-24T15:52:32.6045029Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:52:32.6045135Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6045328Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:52:32.6045489Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6045599Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6045720Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6045725Z 
2025-02-24T15:52:32.6045861Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:52:32.6045977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6046308Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6046407Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6046519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6046523Z 
2025-02-24T15:52:32.6047322Z args = (<function assert_allclose.<locals>.compare at 0x7f888a99a840>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T15:52:32.6047655Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T15:52:32.6047978Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6048113Z 
2025-02-24T15:52:32.6048197Z     @wraps(func)
2025-02-24T15:52:32.6048282Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6048375Z         with self._recreate_cm():
2025-02-24T15:52:32.6048466Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6048560Z E           AssertionError: 
2025-02-24T15:52:32.6048666Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6048742Z E           
2025-02-24T15:52:32.6048840Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.6048948Z E           Max absolute difference: 2.99183385e+37
2025-02-24T15:52:32.6049045Z E           Max relative difference: 0.98992197
2025-02-24T15:52:32.6049201Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T15:52:32.6049297Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T15:52:32.6049441Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T15:52:32.6049535Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T15:52:32.6049539Z 
2025-02-24T15:52:32.6049738Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6049898Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6049903Z 
2025-02-24T15:52:32.6049906Z 
2025-02-24T15:52:32.6050284Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:11<00:00, 108624.29it/s][A
2025-02-24T15:52:32.6050517Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T15:52:32.6050522Z 
2025-02-24T15:52:32.6050844Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2a50>
2025-02-24T15:52:32.6051159Z simulation = <tardis.simulation.base.Simulation object at 0x7f88778c3410>
2025-02-24T15:52:32.6051364Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T15:52:32.6051379Z 
2025-02-24T15:52:32.6051508Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:52:32.6051619Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6051704Z         j_blue_estimator = (
2025-02-24T15:52:32.6051929Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:52:32.6052009Z         )
2025-02-24T15:52:32.6052156Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:52:32.6052287Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:52:32.6052292Z 
2025-02-24T15:52:32.6052425Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:52:32.6052541Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6052549Z 
2025-02-24T15:52:32.6052816Z args = (<function assert_allclose.<locals>.compare at 0x7f885faada80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6052903Z        [0., 0., .....,
2025-02-24T15:52:32.6052987Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6053065Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6053149Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.6053394Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6053399Z 
2025-02-24T15:52:32.6053478Z     @wraps(func)
2025-02-24T15:52:32.6053561Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6053652Z         with self._recreate_cm():
2025-02-24T15:52:32.6053740Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6053831Z E           AssertionError: 
2025-02-24T15:52:32.6053937Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6054142Z E           
2025-02-24T15:52:32.6054255Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:52:32.6054357Z E           Max absolute difference: 7.03072887e-19
2025-02-24T15:52:32.6054563Z E           Max relative difference: 7.72237896
2025-02-24T15:52:32.6054656Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6054749Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6054837Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6054933Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6055018Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6055109Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6055113Z 
2025-02-24T15:52:32.6055312Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6055535Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T15:52:32.6055544Z 
2025-02-24T15:52:32.6055868Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab31a0>
2025-02-24T15:52:32.6056068Z simulation = <tardis.simulation.base.Simulation object at 0x7f88778c3410>
2025-02-24T15:52:32.6056250Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T15:52:32.6056255Z 
2025-02-24T15:52:32.6056365Z     def test_spectrum(self, simulation, request):
2025-02-24T15:52:32.6056478Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6056673Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.6056835Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6056940Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6057058Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6057063Z 
2025-02-24T15:52:32.6057202Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:52:32.6057318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6057665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6057762Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6057878Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6057883Z 
2025-02-24T15:52:32.6058359Z args = (<function assert_allclose.<locals>.compare at 0x7f885d8cdc60>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T15:52:32.6058466Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6058715Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6058720Z 
2025-02-24T15:52:32.6058796Z     @wraps(func)
2025-02-24T15:52:32.6058896Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6058981Z         with self._recreate_cm():
2025-02-24T15:52:32.6059075Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6059163Z E           AssertionError: 
2025-02-24T15:52:32.6059275Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6059355Z E           
2025-02-24T15:52:32.6059456Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:52:32.6059562Z E           Max absolute difference: 2.09719426e+39
2025-02-24T15:52:32.6059660Z E           Max relative difference: 4.0036592
2025-02-24T15:52:32.6059816Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6059903Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6060053Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6060138Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6060143Z 
2025-02-24T15:52:32.6060345Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6060669Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T15:52:32.6060747Z 
2025-02-24T15:52:32.6061195Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab37d0>
2025-02-24T15:52:32.6061400Z simulation = <tardis.simulation.base.Simulation object at 0x7f88778c3410>
2025-02-24T15:52:32.6061611Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T15:52:32.6061616Z 
2025-02-24T15:52:32.6061792Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:52:32.6062218Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6062413Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:52:32.6062572Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6062674Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6062803Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6062807Z 
2025-02-24T15:52:32.6062938Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:52:32.6063060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6063398Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6063493Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6063609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6063613Z 
2025-02-24T15:52:32.6064081Z args = (<function assert_allclose.<locals>.compare at 0x7f888a999bc0>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T15:52:32.6064186Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T15:52:32.6064434Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6064438Z 
2025-02-24T15:52:32.6064516Z     @wraps(func)
2025-02-24T15:52:32.6064606Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6064791Z         with self._recreate_cm():
2025-02-24T15:52:32.6064936Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6065089Z E           AssertionError: 
2025-02-24T15:52:32.6065247Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6065590Z E           
2025-02-24T15:52:32.6065832Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.6066175Z E           Max absolute difference: 5.0153284e+37
2025-02-24T15:52:32.6066406Z E           Max relative difference: 4.90769503
2025-02-24T15:52:32.6066806Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T15:52:32.6067007Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T15:52:32.6067219Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T15:52:32.6067413Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T15:52:32.6067424Z 
2025-02-24T15:52:32.6067682Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6067891Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T15:52:32.6067896Z 
2025-02-24T15:52:32.6074358Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:52:32.6074705Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8880307b60>
2025-02-24T15:52:32.6075068Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:52:32.6075248Z 
2025-02-24T15:52:32.6075351Z     def test_montecarlo_main_loop(
2025-02-24T15:52:32.6075448Z         montecarlo_main_loop_config,
2025-02-24T15:52:32.6075642Z         regression_data,
2025-02-24T15:52:32.6075728Z         atomic_dataset,
2025-02-24T15:52:32.6075800Z     ):
2025-02-24T15:52:32.6075918Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:52:32.6076078Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T15:52:32.6076175Z             montecarlo_main_loop_config,
2025-02-24T15:52:32.6076270Z             atom_data=atomic_dataset,
2025-02-24T15:52:32.6076366Z             virtual_packet_logging=False,
2025-02-24T15:52:32.6076458Z             legacy_mode_enabled=True,
2025-02-24T15:52:32.6076531Z         )
2025-02-24T15:52:32.6076667Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T15:52:32.6076785Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T15:52:32.6076862Z     
2025-02-24T15:52:32.6077001Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T15:52:32.6077105Z             montecarlo_main_loop_simulation
2025-02-24T15:52:32.6077178Z         )
2025-02-24T15:52:32.6077261Z     
2025-02-24T15:52:32.6077362Z         # Load compare data from refdata
2025-02-24T15:52:32.6077435Z     
2025-02-24T15:52:32.6077540Z         expected_nu = expected_hdf_store[
2025-02-24T15:52:32.6077672Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:52:32.6077747Z         ]
2025-02-24T15:52:32.6077847Z         expected_energy = expected_hdf_store[
2025-02-24T15:52:32.6077987Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:52:32.6078059Z         ]
2025-02-24T15:52:32.6078184Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:52:32.6078331Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:52:32.6078408Z         ]
2025-02-24T15:52:32.6078519Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:52:32.6078660Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:52:32.6078735Z         ]
2025-02-24T15:52:32.6078828Z         expected_hdf_store.close()
2025-02-24T15:52:32.6079051Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T15:52:32.6079226Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:52:32.6079372Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:52:32.6079463Z         actual_nu_bar_estimator = (
2025-02-24T15:52:32.6079616Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T15:52:32.6079686Z         )
2025-02-24T15:52:32.6079876Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T15:52:32.6079950Z     
2025-02-24T15:52:32.6080028Z         # Compare
2025-02-24T15:52:32.6080120Z >       npt.assert_allclose(
2025-02-24T15:52:32.6080282Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T15:52:32.6080363Z         )
2025-02-24T15:52:32.6080368Z 
2025-02-24T15:52:32.6080560Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T15:52:32.6080690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6080695Z 
2025-02-24T15:52:32.6081277Z args = (<function assert_allclose.<locals>.compare at 0x7f885c41a160>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T15:52:32.6081429Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T15:52:32.6081679Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T15:52:32.6081688Z 
2025-02-24T15:52:32.6081766Z     @wraps(func)
2025-02-24T15:52:32.6081855Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6081944Z         with self._recreate_cm():
2025-02-24T15:52:32.6082040Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6082312Z E           AssertionError: 
2025-02-24T15:52:32.6082429Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T15:52:32.6082606Z E           
2025-02-24T15:52:32.6082711Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T15:52:32.6082815Z E           Max absolute difference: 2.25821059e+25
2025-02-24T15:52:32.6082917Z E           Max relative difference: 0.00054426
2025-02-24T15:52:32.6083065Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T15:52:32.6083188Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T15:52:32.6083317Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T15:52:32.6083450Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T15:52:32.6083570Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T15:52:32.6083692Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T15:52:32.6083702Z 
2025-02-24T15:52:32.6083918Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6084081Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:52:32.6084379Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.6084834Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.6085020Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6085241Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:52:32.6085409Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6085485Z 	
2025-02-24T15:52:32.6085585Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6085672Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6085786Z  ([1mbase.py[0m:542)
2025-02-24T15:52:32.6085953Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6086024Z 	
2025-02-24T15:52:32.6086187Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:52:32.6086360Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6086430Z 	
2025-02-24T15:52:32.6086530Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:52:32.6086624Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:52:32.6086720Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6086826Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.6086986Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6086991Z 
2025-02-24T15:52:32.6086994Z 
2025-02-24T15:52:32.6087231Z Packets:                                                                                   11198/? [00:10<00:00, 1025.73it/s][A
2025-02-24T15:52:32.6087240Z 
2025-02-24T15:52:32.6087464Z Packets:                                                                                   21752/? [00:11<00:00, 2375.70it/s][A
2025-02-24T15:52:32.6087472Z 
2025-02-24T15:52:32.6087694Z Packets:                                                                                   32476/? [00:11<00:00, 4275.62it/s][A
2025-02-24T15:52:32.6087702Z 
2025-02-24T15:52:32.6087920Z Packets:                                                                                   43434/? [00:11<00:00, 6932.43it/s][A
2025-02-24T15:52:32.6087925Z 
2025-02-24T15:52:32.6088148Z Packets:                                                                                   54370/? [00:11<00:00, 10495.73it/s][A
2025-02-24T15:52:32.6088153Z 
2025-02-24T15:52:32.6088377Z Packets:                                                                                   65320/? [00:11<00:00, 15183.07it/s][A
2025-02-24T15:52:32.6088382Z 
2025-02-24T15:52:32.6088601Z Packets:                                                                                   76206/? [00:11<00:00, 21107.97it/s][A
2025-02-24T15:52:32.6088692Z 
2025-02-24T15:52:32.6088920Z Packets:                                                                                   87082/? [00:11<00:00, 28379.16it/s][A
2025-02-24T15:52:32.6089000Z 
2025-02-24T15:52:32.6089228Z Packets:                                                                                   98019/? [00:11<00:00, 36960.24it/s][A
2025-02-24T15:52:32.6089386Z Iterations:                                                                                40/? [07:55<00:00,  5.64s/it]
2025-02-24T15:52:32.6089391Z 
2025-02-24T15:52:32.6089622Z Packets:                                                                                   104009/? [00:11<00:00, 36960.24it/s][A
2025-02-24T15:52:32.6089779Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:52:32.6090296Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.6090530Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:52:32.6090646Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:52:32.6090756Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6090841Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6090846Z 
2025-02-24T15:52:32.6091066Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.6091166Z 	Starting iteration 1 of 1
2025-02-24T15:52:32.6091357Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.6091519Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:52:32.6091685Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:52:32.6091843Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6092133Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T15:52:32.6092140Z 
2025-02-24T15:52:32.6092984Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:52:32.6093279Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f887be81640>
2025-02-24T15:52:32.6093639Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:52:32.6093645Z 
2025-02-24T15:52:32.6093753Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T15:52:32.6093848Z         montecarlo_main_loop_config,
2025-02-24T15:52:32.6093931Z         regression_data,
2025-02-24T15:52:32.6094016Z         atomic_dataset,
2025-02-24T15:52:32.6094085Z     ):
2025-02-24T15:52:32.6094197Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:52:32.6094373Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T15:52:32.6094445Z     
2025-02-24T15:52:32.6094602Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T15:52:32.6094696Z             montecarlo_main_loop_config,
2025-02-24T15:52:32.6094789Z             atom_data=atomic_dataset,
2025-02-24T15:52:32.6094884Z             virtual_packet_logging=True,
2025-02-24T15:52:32.6094975Z             legacy_mode_enabled=True,
2025-02-24T15:52:32.6095045Z         )
2025-02-24T15:52:32.6095176Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T15:52:32.6095284Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T15:52:32.6095357Z     
2025-02-24T15:52:32.6095498Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T15:52:32.6095569Z     
2025-02-24T15:52:32.6095775Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T15:52:32.6095845Z     
2025-02-24T15:52:32.6095977Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T15:52:32.6096074Z             montecarlo_main_loop_simulation
2025-02-24T15:52:32.6096289Z         )
2025-02-24T15:52:32.6096357Z     
2025-02-24T15:52:32.6096453Z         expected_nu = expected_hdf_store[
2025-02-24T15:52:32.6096579Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:52:32.6096760Z         ]
2025-02-24T15:52:32.6096860Z         expected_energy = expected_hdf_store[
2025-02-24T15:52:32.6096998Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:52:32.6097071Z         ]
2025-02-24T15:52:32.6097190Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:52:32.6097337Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:52:32.6097408Z         ]
2025-02-24T15:52:32.6097518Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:52:32.6097644Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:52:32.6097719Z         ]
2025-02-24T15:52:32.6097834Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T15:52:32.6097985Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T15:52:32.6098056Z         ]
2025-02-24T15:52:32.6098190Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T15:52:32.6098353Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T15:52:32.6098429Z         ]
2025-02-24T15:52:32.6098502Z     
2025-02-24T15:52:32.6098616Z         transport_state = transport.transport_state
2025-02-24T15:52:32.6098690Z     
2025-02-24T15:52:32.6098857Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:52:32.6099003Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:52:32.6099147Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T15:52:32.6099271Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T15:52:32.6099423Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T15:52:32.6099607Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T15:52:32.6099683Z     
2025-02-24T15:52:32.6099783Z         expected_hdf_store.close()
2025-02-24T15:52:32.6099866Z         # Compare
2025-02-24T15:52:32.6099954Z >       npt.assert_allclose(
2025-02-24T15:52:32.6100046Z             actual_nu_bar_estimator,
2025-02-24T15:52:32.6100138Z             expected_nu_bar_estimator,
2025-02-24T15:52:32.6100224Z             rtol=1e-12,
2025-02-24T15:52:32.6100302Z             atol=1e-15,
2025-02-24T15:52:32.6100376Z         )
2025-02-24T15:52:32.6100381Z 
2025-02-24T15:52:32.6100570Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T15:52:32.6100691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6100696Z 
2025-02-24T15:52:32.6101285Z args = (<function assert_allclose.<locals>.compare at 0x7f886121e340>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T15:52:32.6101440Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T15:52:32.6101708Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T15:52:32.6101718Z 
2025-02-24T15:52:32.6101794Z     @wraps(func)
2025-02-24T15:52:32.6101884Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6101973Z         with self._recreate_cm():
2025-02-24T15:52:32.6102065Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6102151Z E           AssertionError: 
2025-02-24T15:52:32.6102272Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T15:52:32.6102350Z E           
2025-02-24T15:52:32.6102450Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T15:52:32.6102556Z E           Max absolute difference: 1.93283629e+25
2025-02-24T15:52:32.6102653Z E           Max relative difference: 0.00029148
2025-02-24T15:52:32.6102801Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T15:52:32.6103045Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T15:52:32.6103173Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T15:52:32.6103429Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T15:52:32.6103549Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T15:52:32.6103668Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T15:52:32.6103677Z 
2025-02-24T15:52:32.6103880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6104038Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:52:32.6104303Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.6104754Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.6104941Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6105158Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:52:32.6105331Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6105406Z 	
2025-02-24T15:52:32.6105507Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6105589Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6105701Z  ([1mbase.py[0m:542)
2025-02-24T15:52:32.6105862Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6105935Z 	
2025-02-24T15:52:32.6106090Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:52:32.6106253Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6106323Z 	
2025-02-24T15:52:32.6106422Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T15:52:32.6106517Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T15:52:32.6106613Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6106724Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.6106881Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6106894Z 
2025-02-24T15:52:32.6106897Z 
2025-02-24T15:52:32.6107140Z Packets:                                                                                   108907/? [00:14<00:00, 10478.49it/s][A
2025-02-24T15:52:32.6107145Z 
2025-02-24T15:52:32.6107372Z Packets:                                                                                   116517/? [00:14<00:00, 12556.58it/s][A
2025-02-24T15:52:32.6107376Z 
2025-02-24T15:52:32.6107603Z Packets:                                                                                   122867/? [00:14<00:00, 14615.86it/s][A
2025-02-24T15:52:32.6107607Z 
2025-02-24T15:52:32.6107828Z Packets:                                                                                   128350/? [00:14<00:00, 16570.52it/s][A
2025-02-24T15:52:32.6107837Z 
2025-02-24T15:52:32.6108056Z Packets:                                                                                   133163/? [00:15<00:00, 18604.03it/s][A
2025-02-24T15:52:32.6108065Z 
2025-02-24T15:52:32.6108290Z Packets:                                                                                   137562/? [00:15<00:00, 20690.35it/s][A
2025-02-24T15:52:32.6108299Z 
2025-02-24T15:52:32.6108520Z Packets:                                                                                   141687/? [00:15<00:00, 22794.44it/s][A
2025-02-24T15:52:32.6108524Z 
2025-02-24T15:52:32.6108746Z Packets:                                                                                   145629/? [00:15<00:00, 24837.20it/s][A
2025-02-24T15:52:32.6108750Z 
2025-02-24T15:52:32.6108974Z Packets:                                                                                   149442/? [00:15<00:00, 26770.28it/s][A
2025-02-24T15:52:32.6108979Z 
2025-02-24T15:52:32.6109199Z Packets:                                                                                   153168/? [00:15<00:00, 28433.56it/s][A
2025-02-24T15:52:32.6109307Z 
2025-02-24T15:52:32.6109540Z Packets:                                                                                   156819/? [00:15<00:00, 29810.79it/s][A
2025-02-24T15:52:32.6109619Z 
2025-02-24T15:52:32.6109924Z Packets:                                                                                   160410/? [00:15<00:00, 31002.39it/s][A
2025-02-24T15:52:32.6109933Z 
2025-02-24T15:52:32.6110351Z Packets:                                                                                   163967/? [00:16<00:00, 31550.11it/s][A
2025-02-24T15:52:32.6110359Z 
2025-02-24T15:52:32.6110762Z Packets:                                                                                   167492/? [00:16<00:00, 32505.03it/s][A
2025-02-24T15:52:32.6110769Z 
2025-02-24T15:52:32.6111283Z Packets:                                                                                   171007/? [00:16<00:00, 33219.42it/s][A
2025-02-24T15:52:32.6111296Z 
2025-02-24T15:52:32.6111535Z Packets:                                                                                   174508/? [00:16<00:00, 33550.52it/s][A
2025-02-24T15:52:32.6111545Z 
2025-02-24T15:52:32.6111772Z Packets:                                                                                   178026/? [00:16<00:00, 34012.16it/s][A
2025-02-24T15:52:32.6111776Z 
2025-02-24T15:52:32.6111994Z Packets:                                                                                   181534/? [00:16<00:00, 34319.35it/s][A
2025-02-24T15:52:32.6111999Z 
2025-02-24T15:52:32.6112221Z Packets:                                                                                   185055/? [00:16<00:00, 34576.64it/s][A
2025-02-24T15:52:32.6112226Z 
2025-02-24T15:52:32.6112448Z Packets:                                                                                   188567/? [00:16<00:00, 34734.68it/s][A
2025-02-24T15:52:32.6112452Z 
2025-02-24T15:52:32.6112672Z Packets:                                                                                   192096/? [00:16<00:00, 34897.34it/s][A
2025-02-24T15:52:32.6112681Z 
2025-02-24T15:52:32.6112904Z Packets:                                                                                   195609/? [00:16<00:00, 34771.46it/s][A
2025-02-24T15:52:32.6112911Z 
2025-02-24T15:52:32.6113128Z Packets:                                                                                   199103/? [00:17<00:00, 34407.57it/s][A
2025-02-24T15:52:32.6113137Z 
2025-02-24T15:52:32.6113354Z Packets:                                                                                   202632/? [00:17<00:00, 34665.43it/s][A
2025-02-24T15:52:32.6113506Z Iterations:                                                                                41/? [08:00<00:00,  5.58s/it]
2025-02-24T15:52:32.6113511Z 
2025-02-24T15:52:32.6113730Z Packets:                                                                                   204009/? [00:17<00:00, 34665.43it/s][A
2025-02-24T15:52:32.6113886Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:52:32.6114397Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.6114629Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:52:32.6114742Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:52:32.6114840Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6114926Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6114931Z 
2025-02-24T15:52:32.6115037Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.6115129Z 	Starting iteration 1 of 1
2025-02-24T15:52:32.6115233Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.6115329Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T15:52:32.6115419Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T15:52:32.6115514Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6115815Z __________________________ test_boundary_interactions __________________________
2025-02-24T15:52:32.6115822Z 
2025-02-24T15:52:32.6116722Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f889ef34500<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f887d0f9db0>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f888a8c3d60>])
2025-02-24T15:52:32.6117002Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f887d18b1d0>
2025-02-24T15:52:32.6117008Z 
2025-02-24T15:52:32.6117178Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T15:52:32.6117284Z         no_of_packets = len(rpacket_tracker)
2025-02-24T15:52:32.6117354Z     
2025-02-24T15:52:32.6117458Z         # Hard coding the number of columns
2025-02-24T15:52:32.6117611Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T15:52:32.6117723Z         obtained_boundary_interaction = np.full(
2025-02-24T15:52:32.6117821Z             (no_of_packets, 64),
2025-02-24T15:52:32.6117895Z             [-1],
2025-02-24T15:52:32.6118035Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T15:52:32.6118113Z         )
2025-02-24T15:52:32.6118183Z     
2025-02-24T15:52:32.6118298Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T15:52:32.6118400Z             obtained_boundary_interaction[
2025-02-24T15:52:32.6118509Z                 i, : tracker.boundary_interaction.size
2025-02-24T15:52:32.6118613Z             ] = tracker.boundary_interaction
2025-02-24T15:52:32.6118683Z     
2025-02-24T15:52:32.6118843Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T15:52:32.6118939Z             obtained_boundary_interaction
2025-02-24T15:52:32.6119010Z         )
2025-02-24T15:52:32.6119101Z >       npt.assert_array_equal(
2025-02-24T15:52:32.6119262Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T15:52:32.6119342Z         )
2025-02-24T15:52:32.6119346Z 
2025-02-24T15:52:32.6119521Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T15:52:32.6119645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6119651Z 
2025-02-24T15:52:32.6119866Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.6119974Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T15:52:32.6120162Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T15:52:32.6120354Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T15:52:32.6120359Z 
2025-02-24T15:52:32.6120437Z     @wraps(func)
2025-02-24T15:52:32.6120523Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6120620Z         with self._recreate_cm():
2025-02-24T15:52:32.6120711Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6120807Z E           AssertionError: 
2025-02-24T15:52:32.6120891Z E           Arrays are not equal
2025-02-24T15:52:32.6121101Z E           
2025-02-24T15:52:32.6121212Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T15:52:32.6121351Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.6121447Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:52:32.6121557Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:52:32.6121686Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.6121773Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:52:32.6121882Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:52:32.6121887Z 
2025-02-24T15:52:32.6122092Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6122379Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T15:52:32.6122385Z 
2025-02-24T15:52:32.6123072Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:52:32.6123449Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f886ead4a70>
2025-02-24T15:52:32.6123808Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:52:32.6124204Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f88643a93d0>
2025-02-24T15:52:32.6124210Z 
2025-02-24T15:52:32.6124319Z     def test_montecarlo_main_loop_weighted(
2025-02-24T15:52:32.6124415Z         montecarlo_main_loop_config,
2025-02-24T15:52:32.6124505Z         regression_data,
2025-02-24T15:52:32.6124587Z         atomic_dataset,
2025-02-24T15:52:32.6124681Z         simple_weighted_packet_source,
2025-02-24T15:52:32.6124759Z     ):
2025-02-24T15:52:32.6124866Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:52:32.6125046Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T15:52:32.6125140Z             montecarlo_main_loop_config,
2025-02-24T15:52:32.6125236Z             atom_data=atomic_dataset,
2025-02-24T15:52:32.6125330Z             virtual_packet_logging=False,
2025-02-24T15:52:32.6125421Z             legacy_mode_enabled=True,
2025-02-24T15:52:32.6125492Z         )
2025-02-24T15:52:32.6125651Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T15:52:32.6125748Z             simple_weighted_packet_source
2025-02-24T15:52:32.6125823Z         )
2025-02-24T15:52:32.6125975Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T15:52:32.6126115Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T15:52:32.6126189Z     
2025-02-24T15:52:32.6126300Z         # Get the montecarlo simple regression data
2025-02-24T15:52:32.6126396Z         regression_data_dir = (
2025-02-24T15:52:32.6126577Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T15:52:32.6126724Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T15:52:32.6126794Z         )
2025-02-24T15:52:32.6126958Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T15:52:32.6127036Z     
2025-02-24T15:52:32.6127130Z         # Load compare data from refdata
2025-02-24T15:52:32.6127203Z     
2025-02-24T15:52:32.6127298Z         expected_nu = expected_hdf_store[
2025-02-24T15:52:32.6127428Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:52:32.6127498Z         ]
2025-02-24T15:52:32.6127601Z         expected_energy = expected_hdf_store[
2025-02-24T15:52:32.6127737Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:52:32.6127813Z         ]
2025-02-24T15:52:32.6127933Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:52:32.6128086Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:52:32.6128159Z         ]
2025-02-24T15:52:32.6128271Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:52:32.6128402Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:52:32.6128474Z         ]
2025-02-24T15:52:32.6128570Z         expected_hdf_store.close()
2025-02-24T15:52:32.6128656Z         transport_state = (
2025-02-24T15:52:32.6128838Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T15:52:32.6128910Z         )
2025-02-24T15:52:32.6129087Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:52:32.6129229Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:52:32.6129414Z         actual_nu_bar_estimator = (
2025-02-24T15:52:32.6129561Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T15:52:32.6129729Z         )
2025-02-24T15:52:32.6129918Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T15:52:32.6129988Z     
2025-02-24T15:52:32.6130065Z         # Compare
2025-02-24T15:52:32.6130151Z         npt.assert_allclose(
2025-02-24T15:52:32.6130307Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T15:52:32.6130380Z         )
2025-02-24T15:52:32.6130569Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T15:52:32.6130724Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T15:52:32.6130729Z 
2025-02-24T15:52:32.6131064Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T15:52:32.6131179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6131192Z 
2025-02-24T15:52:32.6131660Z args = (<function assert_allclose.<locals>.compare at 0x7f88637fba60>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T15:52:32.6131785Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T15:52:32.6132030Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T15:52:32.6132036Z 
2025-02-24T15:52:32.6132115Z     @wraps(func)
2025-02-24T15:52:32.6132202Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6132296Z         with self._recreate_cm():
2025-02-24T15:52:32.6132385Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6132477Z E           AssertionError: 
2025-02-24T15:52:32.6132588Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T15:52:32.6132661Z E           
2025-02-24T15:52:32.6132770Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T15:52:32.6132878Z E           Max absolute difference: 2.00640487e-05
2025-02-24T15:52:32.6132983Z E           Max relative difference: 2.06329455
2025-02-24T15:52:32.6133194Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:52:32.6133360Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T15:52:32.6133628Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:52:32.6133781Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T15:52:32.6133788Z 
2025-02-24T15:52:32.6134131Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6134372Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:52:32.6134642Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.6135090Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.6135287Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6135508Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:52:32.6135683Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6135761Z 	
2025-02-24T15:52:32.6135869Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6135955Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6136065Z  ([1mbase.py[0m:542)
2025-02-24T15:52:32.6136229Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6136300Z 	
2025-02-24T15:52:32.6136456Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:52:32.6136618Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6136689Z 	
2025-02-24T15:52:32.6136784Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:52:32.6136885Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:52:32.6136977Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6137225Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.6137381Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6137487Z 
2025-02-24T15:52:32.6137496Z 
2025-02-24T15:52:32.6137738Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T15:52:32.6137744Z 
2025-02-24T15:52:32.6137971Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T15:52:32.6137976Z 
2025-02-24T15:52:32.6138241Z Packets:   ████████▍                                                                       10575/100000 [00:00<00:00, 105734.72it/s][A
2025-02-24T15:52:32.6138247Z 
2025-02-24T15:52:32.6138511Z Packets:   █████████████████                                                               21359/100000 [00:00<00:00, 106966.96it/s][A
2025-02-24T15:52:32.6138516Z 
2025-02-24T15:52:32.6138794Z Packets:   █████████████████████████▋                                                      32162/100000 [00:00<00:00, 107450.86it/s][A
2025-02-24T15:52:32.6138808Z 
2025-02-24T15:52:32.6139083Z Packets:   ██████████████████████████████████▍                                             43003/100000 [00:00<00:00, 107828.73it/s][A
2025-02-24T15:52:32.6139089Z 
2025-02-24T15:52:32.6139374Z Packets:   ███████████████████████████████████████████                                     53848/100000 [00:00<00:00, 108052.24it/s][A
2025-02-24T15:52:32.6139379Z 
2025-02-24T15:52:32.6139669Z Packets:   ███████████████████████████████████████████████████▋                            64654/100000 [00:00<00:00, 107761.41it/s][A
2025-02-24T15:52:32.6139679Z 
2025-02-24T15:52:32.6139979Z Packets:   ████████████████████████████████████████████████████████████▎                   75431/100000 [00:00<00:00, 104219.99it/s][A
2025-02-24T15:52:32.6139984Z 
2025-02-24T15:52:32.6140299Z Packets:   ████████████████████████████████████████████████████████████████████▊           86054/100000 [00:00<00:00, 104843.53it/s][A
2025-02-24T15:52:32.6140319Z 
2025-02-24T15:52:32.6140638Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  96875/100000 [00:00<00:00, 105877.30it/s][A
2025-02-24T15:52:32.6140811Z Iterations:                                                                                45/? [08:51<00:00,  8.12s/it]
2025-02-24T15:52:32.6140816Z 
2025-02-24T15:52:32.6141323Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:01<00:00, 105877.30it/s][A
2025-02-24T15:52:32.6141482Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:52:32.6141996Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.6142221Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:52:32.6142477Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:52:32.6142574Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6142774Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6142779Z 
2025-02-24T15:52:32.6142886Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.6142982Z 	Starting iteration 1 of 1
2025-02-24T15:52:32.6143094Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.6143188Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:52:32.6143287Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:52:32.6143381Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6143602Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T15:52:32.6143607Z 
2025-02-24T15:52:32.6143870Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b877bf0>
2025-02-24T15:52:32.6144157Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6144443Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T15:52:32.6144539Z attribute = 'plot_data'
2025-02-24T15:52:32.6144544Z 
2025-02-24T15:52:32.6144643Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6144719Z         "attribute",
2025-02-24T15:52:32.6144795Z         [
2025-02-24T15:52:32.6144874Z             "plot_data",
2025-02-24T15:52:32.6144957Z             "plot_colors",
2025-02-24T15:52:32.6145035Z             "new_bin_edges",
2025-02-24T15:52:32.6145110Z         ],
2025-02-24T15:52:32.6145179Z     )
2025-02-24T15:52:32.6145272Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6145345Z         self,
2025-02-24T15:52:32.6145441Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6145514Z         request,
2025-02-24T15:52:32.6145592Z         attribute,
2025-02-24T15:52:32.6145667Z     ):
2025-02-24T15:52:32.6145738Z         """
2025-02-24T15:52:32.6145885Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6145955Z     
2025-02-24T15:52:32.6146036Z         Parameters:
2025-02-24T15:52:32.6146120Z         -----------
2025-02-24T15:52:32.6146302Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6146401Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6146576Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6146648Z         """
2025-02-24T15:52:32.6146760Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6146901Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6147056Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6147224Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6147377Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6147508Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6147632Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6147759Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6147764Z 
2025-02-24T15:52:32.6147908Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6148030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6148035Z 
2025-02-24T15:52:32.6148521Z args = (<function assert_allclose.<locals>.compare at 0x7f887d11d9e0>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T15:52:32.6148626Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T15:52:32.6148877Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6148883Z 
2025-02-24T15:52:32.6149046Z     @wraps(func)
2025-02-24T15:52:32.6149136Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6149224Z         with self._recreate_cm():
2025-02-24T15:52:32.6149319Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6149479Z E           AssertionError: 
2025-02-24T15:52:32.6149594Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6149670Z E           
2025-02-24T15:52:32.6149762Z E           (shapes (508,), (515,) mismatch)
2025-02-24T15:52:32.6149905Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.6150025Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.6150152Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.6150285Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.6150406Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.6150536Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.6150540Z 
2025-02-24T15:52:32.6150750Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6151014Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6151255Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6151518Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6151670Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6151979Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6152190Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T15:52:32.6152196Z 
2025-02-24T15:52:32.6152461Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94a4e0>
2025-02-24T15:52:32.6152751Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6153028Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T15:52:32.6153120Z attribute = 'plot_data'
2025-02-24T15:52:32.6153125Z 
2025-02-24T15:52:32.6153220Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6153302Z         "attribute",
2025-02-24T15:52:32.6153373Z         [
2025-02-24T15:52:32.6153456Z             "plot_data",
2025-02-24T15:52:32.6153537Z             "plot_colors",
2025-02-24T15:52:32.6153623Z             "new_bin_edges",
2025-02-24T15:52:32.6153694Z         ],
2025-02-24T15:52:32.6153771Z     )
2025-02-24T15:52:32.6153864Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6153936Z         self,
2025-02-24T15:52:32.6154031Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6154104Z         request,
2025-02-24T15:52:32.6154188Z         attribute,
2025-02-24T15:52:32.6154258Z     ):
2025-02-24T15:52:32.6154331Z         """
2025-02-24T15:52:32.6154470Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6154548Z     
2025-02-24T15:52:32.6154626Z         Parameters:
2025-02-24T15:52:32.6154705Z         -----------
2025-02-24T15:52:32.6154881Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6154982Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6155146Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6155220Z         """
2025-02-24T15:52:32.6155332Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6155472Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6155622Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6155783Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6156065Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6156191Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6156442Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6156562Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6156572Z 
2025-02-24T15:52:32.6156716Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6156834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6156838Z 
2025-02-24T15:52:32.6157286Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16b1a0>, array([12955.14169787, 12955.14169787, 12955.14169787,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T15:52:32.6157430Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T15:52:32.6157676Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6157686Z 
2025-02-24T15:52:32.6157766Z     @wraps(func)
2025-02-24T15:52:32.6157852Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6157949Z         with self._recreate_cm():
2025-02-24T15:52:32.6158045Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6158133Z E           AssertionError: 
2025-02-24T15:52:32.6158247Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6158320Z E           
2025-02-24T15:52:32.6158417Z E           (shapes (558,), (560,) mismatch)
2025-02-24T15:52:32.6158554Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.6158676Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.6158797Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.6158932Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.6159055Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.6159176Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.6159186Z 
2025-02-24T15:52:32.6159390Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6159605Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T15:52:32.6159609Z 
2025-02-24T15:52:32.6159875Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948140>
2025-02-24T15:52:32.6160151Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6160424Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T15:52:32.6160512Z attribute = 'plot_data'
2025-02-24T15:52:32.6160516Z 
2025-02-24T15:52:32.6160606Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6160694Z         "attribute",
2025-02-24T15:52:32.6160765Z         [
2025-02-24T15:52:32.6160846Z             "plot_data",
2025-02-24T15:52:32.6161096Z             "plot_colors",
2025-02-24T15:52:32.6161188Z             "new_bin_edges",
2025-02-24T15:52:32.6161262Z         ],
2025-02-24T15:52:32.6161335Z     )
2025-02-24T15:52:32.6161423Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6161500Z         self,
2025-02-24T15:52:32.6161592Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6161670Z         request,
2025-02-24T15:52:32.6161744Z         attribute,
2025-02-24T15:52:32.6161848Z     ):
2025-02-24T15:52:32.6161922Z         """
2025-02-24T15:52:32.6162057Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6162130Z     
2025-02-24T15:52:32.6162207Z         Parameters:
2025-02-24T15:52:32.6162285Z         -----------
2025-02-24T15:52:32.6162466Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6162574Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6162862Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6162937Z         """
2025-02-24T15:52:32.6163145Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6163288Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6163436Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6163598Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6163749Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6163873Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6163997Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6164115Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6164120Z 
2025-02-24T15:52:32.6164265Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6164385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6164390Z 
2025-02-24T15:52:32.6164841Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16a160>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T15:52:32.6164986Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T15:52:32.6165232Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6165237Z 
2025-02-24T15:52:32.6165316Z     @wraps(func)
2025-02-24T15:52:32.6165401Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6165493Z         with self._recreate_cm():
2025-02-24T15:52:32.6165583Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6165673Z E           AssertionError: 
2025-02-24T15:52:32.6165782Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6165863Z E           
2025-02-24T15:52:32.6165958Z E           (shapes (147,), (136,) mismatch)
2025-02-24T15:52:32.6166096Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.6166222Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.6166343Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.6166483Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.6166598Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.6166728Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.6166733Z 
2025-02-24T15:52:32.6166931Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6167088Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6167336Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6167589Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6167753Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6168059Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6168270Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T15:52:32.6168275Z 
2025-02-24T15:52:32.6168533Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948380>
2025-02-24T15:52:32.6168822Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6169097Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T15:52:32.6169187Z attribute = 'plot_data'
2025-02-24T15:52:32.6169280Z 
2025-02-24T15:52:32.6169379Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6169456Z         "attribute",
2025-02-24T15:52:32.6169532Z         [
2025-02-24T15:52:32.6169703Z             "plot_data",
2025-02-24T15:52:32.6169789Z             "plot_colors",
2025-02-24T15:52:32.6169869Z             "new_bin_edges",
2025-02-24T15:52:32.6169944Z         ],
2025-02-24T15:52:32.6170027Z     )
2025-02-24T15:52:32.6170126Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6170202Z         self,
2025-02-24T15:52:32.6170293Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6170370Z         request,
2025-02-24T15:52:32.6170443Z         attribute,
2025-02-24T15:52:32.6170514Z     ):
2025-02-24T15:52:32.6170583Z         """
2025-02-24T15:52:32.6170734Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6170814Z     
2025-02-24T15:52:32.6170894Z         Parameters:
2025-02-24T15:52:32.6171084Z         -----------
2025-02-24T15:52:32.6171269Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6171373Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6171540Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6171622Z         """
2025-02-24T15:52:32.6171729Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6171871Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6172018Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6172181Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6172331Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6172458Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6172579Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6172701Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6172710Z 
2025-02-24T15:52:32.6172856Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6172970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6172980Z 
2025-02-24T15:52:32.6173365Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16afc0>, array([12079.52986884, 11966.99134279, 11263.63770779,...210447, 12126.50399598,
2025-02-24T15:52:32.6173508Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T15:52:32.6173603Z        11042.97481792]))
2025-02-24T15:52:32.6173848Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6173853Z 
2025-02-24T15:52:32.6173933Z     @wraps(func)
2025-02-24T15:52:32.6174017Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6174110Z         with self._recreate_cm():
2025-02-24T15:52:32.6174203Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6174293Z E           AssertionError: 
2025-02-24T15:52:32.6174406Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6174482Z E           
2025-02-24T15:52:32.6174591Z E           (shapes (159,), (153,) mismatch)
2025-02-24T15:52:32.6174729Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.6174854Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.6174976Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.6175113Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.6175231Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.6175353Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.6175357Z 
2025-02-24T15:52:32.6175561Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6175908Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T15:52:32.6175913Z 
2025-02-24T15:52:32.6176175Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b9485f0>
2025-02-24T15:52:32.6176576Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6176851Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T15:52:32.6176965Z attribute = 'plot_data'
2025-02-24T15:52:32.6176970Z 
2025-02-24T15:52:32.6177071Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6177151Z         "attribute",
2025-02-24T15:52:32.6177221Z         [
2025-02-24T15:52:32.6177302Z             "plot_data",
2025-02-24T15:52:32.6177381Z             "plot_colors",
2025-02-24T15:52:32.6177465Z             "new_bin_edges",
2025-02-24T15:52:32.6177536Z         ],
2025-02-24T15:52:32.6177611Z     )
2025-02-24T15:52:32.6177706Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6177782Z         self,
2025-02-24T15:52:32.6177873Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6177950Z         request,
2025-02-24T15:52:32.6178032Z         attribute,
2025-02-24T15:52:32.6178105Z     ):
2025-02-24T15:52:32.6178178Z         """
2025-02-24T15:52:32.6178314Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6178387Z     
2025-02-24T15:52:32.6178467Z         Parameters:
2025-02-24T15:52:32.6178547Z         -----------
2025-02-24T15:52:32.6178723Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6178825Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6178987Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6179063Z         """
2025-02-24T15:52:32.6179235Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6179487Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6179752Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6180029Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6180298Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6180507Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6180712Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6181034Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6181044Z 
2025-02-24T15:52:32.6181298Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6181490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6181502Z 
2025-02-24T15:52:32.6182354Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16a8e0>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T15:52:32.6182538Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T15:52:32.6182962Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6182975Z 
2025-02-24T15:52:32.6183109Z     @wraps(func)
2025-02-24T15:52:32.6183247Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6183405Z         with self._recreate_cm():
2025-02-24T15:52:32.6183554Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6183698Z E           AssertionError: 
2025-02-24T15:52:32.6183881Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6184001Z E           
2025-02-24T15:52:32.6184156Z E           (shapes (508,), (515,) mismatch)
2025-02-24T15:52:32.6184386Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.6184591Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.6184996Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.6185243Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.6185587Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.6185807Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.6185813Z 
2025-02-24T15:52:32.6186163Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6186428Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6186853Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6187291Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6187557Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6188089Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6188483Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T15:52:32.6188497Z 
2025-02-24T15:52:32.6188962Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948830>
2025-02-24T15:52:32.6189461Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6189936Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T15:52:32.6190080Z attribute = 'plot_data'
2025-02-24T15:52:32.6190088Z 
2025-02-24T15:52:32.6190227Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6190308Z         "attribute",
2025-02-24T15:52:32.6190384Z         [
2025-02-24T15:52:32.6190463Z             "plot_data",
2025-02-24T15:52:32.6190547Z             "plot_colors",
2025-02-24T15:52:32.6190633Z             "new_bin_edges",
2025-02-24T15:52:32.6190710Z         ],
2025-02-24T15:52:32.6190784Z     )
2025-02-24T15:52:32.6190873Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6191081Z         self,
2025-02-24T15:52:32.6191181Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6191259Z         request,
2025-02-24T15:52:32.6191334Z         attribute,
2025-02-24T15:52:32.6191410Z     ):
2025-02-24T15:52:32.6191480Z         """
2025-02-24T15:52:32.6191626Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6191698Z     
2025-02-24T15:52:32.6191779Z         Parameters:
2025-02-24T15:52:32.6191855Z         -----------
2025-02-24T15:52:32.6192038Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6192141Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6192313Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6192395Z         """
2025-02-24T15:52:32.6192502Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6192651Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6192912Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6193109Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6193260Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6193391Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6193513Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6193641Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6193646Z 
2025-02-24T15:52:32.6193795Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6193912Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6193917Z 
2025-02-24T15:52:32.6194399Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16a2a0>, array([13692.75973672, 11362.93720064, 12466.53861691,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T15:52:32.6194736Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T15:52:32.6194991Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6194997Z 
2025-02-24T15:52:32.6195077Z     @wraps(func)
2025-02-24T15:52:32.6195164Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6195255Z         with self._recreate_cm():
2025-02-24T15:52:32.6195347Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6195471Z E           AssertionError: 
2025-02-24T15:52:32.6195659Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6195785Z E           
2025-02-24T15:52:32.6195945Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T15:52:32.6196116Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T15:52:32.6196214Z E                  11152.962595, 11172.044815])
2025-02-24T15:52:32.6196368Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T15:52:32.6196464Z E                  11398.237865, 11111.204868])
2025-02-24T15:52:32.6196468Z 
2025-02-24T15:52:32.6196676Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6196833Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6197086Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6197422Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6197574Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6198033Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6198420Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T15:52:32.6198433Z 
2025-02-24T15:52:32.6198890Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948a70>
2025-02-24T15:52:32.6199182Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6199455Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T15:52:32.6199545Z attribute = 'plot_data'
2025-02-24T15:52:32.6199550Z 
2025-02-24T15:52:32.6199643Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6199723Z         "attribute",
2025-02-24T15:52:32.6199795Z         [
2025-02-24T15:52:32.6199878Z             "plot_data",
2025-02-24T15:52:32.6199962Z             "plot_colors",
2025-02-24T15:52:32.6200042Z             "new_bin_edges",
2025-02-24T15:52:32.6200117Z         ],
2025-02-24T15:52:32.6200192Z     )
2025-02-24T15:52:32.6200285Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6200357Z         self,
2025-02-24T15:52:32.6200453Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6200532Z         request,
2025-02-24T15:52:32.6200610Z         attribute,
2025-02-24T15:52:32.6200682Z     ):
2025-02-24T15:52:32.6200758Z         """
2025-02-24T15:52:32.6200896Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6201109Z     
2025-02-24T15:52:32.6201189Z         Parameters:
2025-02-24T15:52:32.6201273Z         -----------
2025-02-24T15:52:32.6201458Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6201556Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6201729Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6201802Z         """
2025-02-24T15:52:32.6201914Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6202054Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6202360Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6202625Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6202781Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6202908Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6203035Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6203159Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6203163Z 
2025-02-24T15:52:32.6203306Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6203423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6203428Z 
2025-02-24T15:52:32.6203871Z args = (<function assert_allclose.<locals>.compare at 0x7f887d11dee0>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T15:52:32.6204021Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T15:52:32.6204349Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6204364Z 
2025-02-24T15:52:32.6204501Z     @wraps(func)
2025-02-24T15:52:32.6204638Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6204730Z         with self._recreate_cm():
2025-02-24T15:52:32.6204824Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6204911Z E           AssertionError: 
2025-02-24T15:52:32.6205026Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6205100Z E           
2025-02-24T15:52:32.6205199Z E           (shapes (147,), (136,) mismatch)
2025-02-24T15:52:32.6205337Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.6205461Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.6205594Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.6205727Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.6205854Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.6205977Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.6205981Z 
2025-02-24T15:52:32.6206187Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6206340Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6206594Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6206846Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6207003Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6207314Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6207525Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T15:52:32.6207533Z 
2025-02-24T15:52:32.6207799Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948c50>
2025-02-24T15:52:32.6208076Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6208352Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T15:52:32.6208439Z attribute = 'plot_data'
2025-02-24T15:52:32.6208445Z 
2025-02-24T15:52:32.6208538Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6208620Z         "attribute",
2025-02-24T15:52:32.6208692Z         [
2025-02-24T15:52:32.6208775Z             "plot_data",
2025-02-24T15:52:32.6208854Z             "plot_colors",
2025-02-24T15:52:32.6209035Z             "new_bin_edges",
2025-02-24T15:52:32.6209108Z         ],
2025-02-24T15:52:32.6209182Z     )
2025-02-24T15:52:32.6209271Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6209424Z         self,
2025-02-24T15:52:32.6209516Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6209594Z         request,
2025-02-24T15:52:32.6209671Z         attribute,
2025-02-24T15:52:32.6209748Z     ):
2025-02-24T15:52:32.6209822Z         """
2025-02-24T15:52:32.6209959Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6210033Z     
2025-02-24T15:52:32.6210109Z         Parameters:
2025-02-24T15:52:32.6210189Z         -----------
2025-02-24T15:52:32.6210368Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6210472Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6210635Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6210711Z         """
2025-02-24T15:52:32.6210826Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6211086Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6211245Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6211455Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6211712Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6211843Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6211968Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6212089Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6212094Z 
2025-02-24T15:52:32.6212242Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6212367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6212373Z 
2025-02-24T15:52:32.6212760Z args = (<function assert_allclose.<locals>.compare at 0x7f887d11c7c0>, array([12466.53861691, 14269.7609746 , 11910.79400472,...210447, 12126.50399598,
2025-02-24T15:52:32.6212910Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T15:52:32.6212986Z        11042.97481792]))
2025-02-24T15:52:32.6213237Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6213242Z 
2025-02-24T15:52:32.6213321Z     @wraps(func)
2025-02-24T15:52:32.6213405Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6213499Z         with self._recreate_cm():
2025-02-24T15:52:32.6213588Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6213678Z E           AssertionError: 
2025-02-24T15:52:32.6213790Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6213866Z E           
2025-02-24T15:52:32.6213960Z E           (shapes (379,), (381,) mismatch)
2025-02-24T15:52:32.6214102Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T15:52:32.6214225Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T15:52:32.6214356Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T15:52:32.6214491Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T15:52:32.6214606Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T15:52:32.6214732Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T15:52:32.6214738Z 
2025-02-24T15:52:32.6214937Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6215097Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6215334Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6215613Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6215920Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6216244Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6216695Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T15:52:32.6216706Z 
2025-02-24T15:52:32.6216988Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b9490d0>
2025-02-24T15:52:32.6217302Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f88778b61b0>
2025-02-24T15:52:32.6217796Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6218045Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T15:52:32.6218057Z 
2025-02-24T15:52:32.6218154Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6218317Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:52:32.6218400Z     ):
2025-02-24T15:52:32.6218474Z         """
2025-02-24T15:52:32.6218611Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6218682Z     
2025-02-24T15:52:32.6218816Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6218886Z     
2025-02-24T15:52:32.6218968Z         Parameters:
2025-02-24T15:52:32.6219044Z         -----------
2025-02-24T15:52:32.6219209Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:52:32.6219359Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:52:32.6219461Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6219538Z         """
2025-02-24T15:52:32.6219634Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:52:32.6219750Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6219918Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:52:32.6220078Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6220176Z             expected_values = expected.get(
2025-02-24T15:52:32.6220268Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6220357Z             ).values.flatten()
2025-02-24T15:52:32.6220497Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:52:32.6220566Z     
2025-02-24T15:52:32.6220700Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6220798Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6220884Z                     expected_values,
2025-02-24T15:52:32.6221109Z                     actual_values,
2025-02-24T15:52:32.6221190Z                     rtol=0.3,
2025-02-24T15:52:32.6221271Z                     atol=3,
2025-02-24T15:52:32.6221349Z                 )
2025-02-24T15:52:32.6221428Z             else:
2025-02-24T15:52:32.6221563Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6221644Z     
2025-02-24T15:52:32.6221754Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:52:32.6221882Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:52:32.6221983Z             if isinstance(data.get_label(), str):
2025-02-24T15:52:32.6222065Z                 assert (
2025-02-24T15:52:32.6222190Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:52:32.6222277Z                     == data.get_label()
2025-02-24T15:52:32.6222354Z                 )
2025-02-24T15:52:32.6222447Z             if isinstance(data, Line2D):
2025-02-24T15:52:32.6222546Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6222695Z                     data.get_xydata(),
2025-02-24T15:52:32.6222923Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:52:32.6223138Z                     rtol=0.3,
2025-02-24T15:52:32.6223219Z                     atol=3,
2025-02-24T15:52:32.6223292Z                 )
2025-02-24T15:52:32.6223403Z 
2025-02-24T15:52:32.6223557Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:52:32.6223678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6223682Z 
2025-02-24T15:52:32.6223929Z args = (<function assert_allclose.<locals>.compare at 0x7f88706462a0>, array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.6224014Z        [1.19e+04, 1.67e+0...,
2025-02-24T15:52:32.6224091Z        [1.82e+04, 0.00e+00],
2025-02-24T15:52:32.6224170Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6224243Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6224324Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:52:32.6224564Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6224579Z 
2025-02-24T15:52:32.6224657Z     @wraps(func)
2025-02-24T15:52:32.6224744Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6224833Z         with self._recreate_cm():
2025-02-24T15:52:32.6224932Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6225017Z E           AssertionError: 
2025-02-24T15:52:32.6225126Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6225200Z E           
2025-02-24T15:52:32.6225302Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.6225397Z E           Max absolute difference: 22.
2025-02-24T15:52:32.6225496Z E           Max relative difference: 0.8
2025-02-24T15:52:32.6225588Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.6225674Z E                  [1.19e+04, 1.67e+02],
2025-02-24T15:52:32.6225761Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T15:52:32.6225849Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:52:32.6225934Z E                  [1.19e+04, 1.89e+02],
2025-02-24T15:52:32.6226021Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T15:52:32.6226026Z 
2025-02-24T15:52:32.6226236Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6226398Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6226646Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6227079Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T15:52:32.6227239Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6227679Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T15:52:32.6227882Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T15:52:32.6227886Z 
2025-02-24T15:52:32.6228152Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b949190>
2025-02-24T15:52:32.6228609Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f887705b4a0>
2025-02-24T15:52:32.6229117Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6229367Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T15:52:32.6229375Z 
2025-02-24T15:52:32.6229463Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6229629Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:52:32.6229701Z     ):
2025-02-24T15:52:32.6229777Z         """
2025-02-24T15:52:32.6229908Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6229983Z     
2025-02-24T15:52:32.6230111Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6230282Z     
2025-02-24T15:52:32.6230362Z         Parameters:
2025-02-24T15:52:32.6230444Z         -----------
2025-02-24T15:52:32.6230603Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:52:32.6230834Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:52:32.6231064Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6231140Z         """
2025-02-24T15:52:32.6231239Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:52:32.6231346Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6231515Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:52:32.6231664Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6231764Z             expected_values = expected.get(
2025-02-24T15:52:32.6231851Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6231941Z             ).values.flatten()
2025-02-24T15:52:32.6232080Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:52:32.6232156Z     
2025-02-24T15:52:32.6232289Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6232390Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6232482Z                     expected_values,
2025-02-24T15:52:32.6232566Z                     actual_values,
2025-02-24T15:52:32.6232648Z                     rtol=0.3,
2025-02-24T15:52:32.6232725Z                     atol=3,
2025-02-24T15:52:32.6232802Z                 )
2025-02-24T15:52:32.6232876Z             else:
2025-02-24T15:52:32.6233014Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6233084Z     
2025-02-24T15:52:32.6233198Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:52:32.6233321Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:52:32.6233426Z             if isinstance(data.get_label(), str):
2025-02-24T15:52:32.6233512Z                 assert (
2025-02-24T15:52:32.6233633Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:52:32.6233722Z                     == data.get_label()
2025-02-24T15:52:32.6233798Z                 )
2025-02-24T15:52:32.6233893Z             if isinstance(data, Line2D):
2025-02-24T15:52:32.6233987Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6234078Z                     data.get_xydata(),
2025-02-24T15:52:32.6234213Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:52:32.6234296Z                     rtol=0.3,
2025-02-24T15:52:32.6234372Z                     atol=3,
2025-02-24T15:52:32.6234447Z                 )
2025-02-24T15:52:32.6234451Z 
2025-02-24T15:52:32.6234602Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:52:32.6234718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6234723Z 
2025-02-24T15:52:32.6234974Z args = (<function assert_allclose.<locals>.compare at 0x7f8853e65580>, array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.6235057Z        [1.19e+04, 1.67e+0...,
2025-02-24T15:52:32.6235139Z        [1.82e+04, 0.00e+00],
2025-02-24T15:52:32.6235221Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6235306Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6235384Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:52:32.6235631Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6235636Z 
2025-02-24T15:52:32.6235717Z     @wraps(func)
2025-02-24T15:52:32.6235800Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6235893Z         with self._recreate_cm():
2025-02-24T15:52:32.6236053Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6236212Z E           AssertionError: 
2025-02-24T15:52:32.6236326Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6236403Z E           
2025-02-24T15:52:32.6236502Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.6236732Z E           Max absolute difference: 22.
2025-02-24T15:52:32.6236825Z E           Max relative difference: 0.8
2025-02-24T15:52:32.6237043Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.6237127Z E                  [1.19e+04, 1.67e+02],
2025-02-24T15:52:32.6237219Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T15:52:32.6237308Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:52:32.6237390Z E                  [1.19e+04, 1.89e+02],
2025-02-24T15:52:32.6237475Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T15:52:32.6237480Z 
2025-02-24T15:52:32.6237687Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6237897Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T15:52:32.6237902Z 
2025-02-24T15:52:32.6238165Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b949580>
2025-02-24T15:52:32.6238477Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f88632d9d00>
2025-02-24T15:52:32.6238986Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6239237Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T15:52:32.6239242Z 
2025-02-24T15:52:32.6239337Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6239498Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:52:32.6239575Z     ):
2025-02-24T15:52:32.6239649Z         """
2025-02-24T15:52:32.6239784Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6239855Z     
2025-02-24T15:52:32.6239989Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6240064Z     
2025-02-24T15:52:32.6240143Z         Parameters:
2025-02-24T15:52:32.6240227Z         -----------
2025-02-24T15:52:32.6240385Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:52:32.6240538Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:52:32.6240641Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6240717Z         """
2025-02-24T15:52:32.6240812Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:52:32.6241033Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6241203Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:52:32.6241357Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6241456Z             expected_values = expected.get(
2025-02-24T15:52:32.6241547Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6241698Z             ).values.flatten()
2025-02-24T15:52:32.6241918Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:52:32.6241994Z     
2025-02-24T15:52:32.6242137Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6242240Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6242332Z                     expected_values,
2025-02-24T15:52:32.6242421Z                     actual_values,
2025-02-24T15:52:32.6242501Z                     rtol=0.3,
2025-02-24T15:52:32.6242583Z                     atol=3,
2025-02-24T15:52:32.6242656Z                 )
2025-02-24T15:52:32.6242661Z 
2025-02-24T15:52:32.6242815Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T15:52:32.6242935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6242940Z 
2025-02-24T15:52:32.6243370Z args = (<function assert_allclose.<locals>.compare at 0x7f887151fd80>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6243459Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:52:32.6243849Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6243854Z 
2025-02-24T15:52:32.6244042Z     @wraps(func)
2025-02-24T15:52:32.6244128Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6244222Z         with self._recreate_cm():
2025-02-24T15:52:32.6244315Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6244402Z E           AssertionError: 
2025-02-24T15:52:32.6244516Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6244589Z E           
2025-02-24T15:52:32.6244691Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6244784Z E           Max absolute difference: 34
2025-02-24T15:52:32.6244889Z E           Max relative difference: 0.71428571
2025-02-24T15:52:32.6245034Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.6245132Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6245277Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6245371Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6245382Z 
2025-02-24T15:52:32.6245594Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6245750Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6246152Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6246417Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6246573Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6246878Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6247085Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T15:52:32.6247095Z 
2025-02-24T15:52:32.6247357Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b949640>
2025-02-24T15:52:32.6247659Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f885181c9b0>
2025-02-24T15:52:32.6248156Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6248398Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T15:52:32.6248403Z 
2025-02-24T15:52:32.6248497Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6248657Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:52:32.6248735Z     ):
2025-02-24T15:52:32.6248812Z         """
2025-02-24T15:52:32.6248942Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6249021Z     
2025-02-24T15:52:32.6249154Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6249230Z     
2025-02-24T15:52:32.6249307Z         Parameters:
2025-02-24T15:52:32.6249389Z         -----------
2025-02-24T15:52:32.6249553Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:52:32.6249707Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:52:32.6249805Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6249883Z         """
2025-02-24T15:52:32.6249979Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:52:32.6250091Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6250261Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:52:32.6250407Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6250511Z             expected_values = expected.get(
2025-02-24T15:52:32.6250599Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6250789Z             ).values.flatten()
2025-02-24T15:52:32.6251039Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:52:32.6251117Z     
2025-02-24T15:52:32.6251367Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6251470Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6251556Z                     expected_values,
2025-02-24T15:52:32.6251645Z                     actual_values,
2025-02-24T15:52:32.6251726Z                     rtol=0.3,
2025-02-24T15:52:32.6251852Z                     atol=3,
2025-02-24T15:52:32.6251982Z                 )
2025-02-24T15:52:32.6252119Z             else:
2025-02-24T15:52:32.6252282Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6252353Z     
2025-02-24T15:52:32.6252468Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:52:32.6252594Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:52:32.6252702Z             if isinstance(data.get_label(), str):
2025-02-24T15:52:32.6252785Z                 assert (
2025-02-24T15:52:32.6252913Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:52:32.6253007Z                     == data.get_label()
2025-02-24T15:52:32.6253082Z                 )
2025-02-24T15:52:32.6253177Z             if isinstance(data, Line2D):
2025-02-24T15:52:32.6253271Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6253362Z                     data.get_xydata(),
2025-02-24T15:52:32.6253501Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:52:32.6253583Z                     rtol=0.3,
2025-02-24T15:52:32.6253659Z                     atol=3,
2025-02-24T15:52:32.6253737Z                 )
2025-02-24T15:52:32.6253742Z 
2025-02-24T15:52:32.6253886Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:52:32.6254005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6254014Z 
2025-02-24T15:52:32.6254262Z args = (<function assert_allclose.<locals>.compare at 0x7f887669db20>, array([[1.10e+04, 2.72e+02],
2025-02-24T15:52:32.6254344Z        [1.19e+04, 2.72e+0...,
2025-02-24T15:52:32.6254434Z        [1.82e+04, 5.00e+00],
2025-02-24T15:52:32.6254512Z        [1.91e+04, 5.00e+00],
2025-02-24T15:52:32.6254593Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6254672Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:52:32.6254919Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6254924Z 
2025-02-24T15:52:32.6255000Z     @wraps(func)
2025-02-24T15:52:32.6255089Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6255177Z         with self._recreate_cm():
2025-02-24T15:52:32.6255271Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6255355Z E           AssertionError: 
2025-02-24T15:52:32.6255465Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6255545Z E           
2025-02-24T15:52:32.6255646Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.6255744Z E           Max absolute difference: 34.
2025-02-24T15:52:32.6255843Z E           Max relative difference: 0.65
2025-02-24T15:52:32.6255940Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T15:52:32.6256023Z E                  [1.19e+04, 2.72e+02],
2025-02-24T15:52:32.6256109Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T15:52:32.6256195Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T15:52:32.6256281Z E                  [1.19e+04, 3.06e+02],
2025-02-24T15:52:32.6256362Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T15:52:32.6256371Z 
2025-02-24T15:52:32.6256575Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6256734Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6256977Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6257395Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6257751Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6258214Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6258434Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T15:52:32.6258446Z 
2025-02-24T15:52:32.6258711Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94a4b0>
2025-02-24T15:52:32.6259029Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f887d007650>
2025-02-24T15:52:32.6259141Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6259313Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:52:32.6259456Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:52:32.6259664Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6259926Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T15:52:32.6259930Z 
2025-02-24T15:52:32.6260037Z     def test_generate_plot_ply(
2025-02-24T15:52:32.6260211Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6260283Z     ):
2025-02-24T15:52:32.6260361Z         """
2025-02-24T15:52:32.6260495Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6260573Z     
2025-02-24T15:52:32.6260702Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6260779Z     
2025-02-24T15:52:32.6260859Z         Parameters:
2025-02-24T15:52:32.6261058Z         ----------
2025-02-24T15:52:32.6261224Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:52:32.6261376Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:52:32.6261544Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6261696Z         """
2025-02-24T15:52:32.6261846Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6261963Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6262149Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6262220Z     
2025-02-24T15:52:32.6262375Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6262474Z             expected_values = expected.get(
2025-02-24T15:52:32.6262570Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6262657Z             ).values.flatten()
2025-02-24T15:52:32.6262804Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:52:32.6262878Z     
2025-02-24T15:52:32.6263017Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6272210Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6272428Z                     expected_values,
2025-02-24T15:52:32.6272550Z                     actual_values,
2025-02-24T15:52:32.6272646Z                     rtol=0.3,
2025-02-24T15:52:32.6272733Z                     atol=3,
2025-02-24T15:52:32.6272808Z                 )
2025-02-24T15:52:32.6272886Z             else:
2025-02-24T15:52:32.6273043Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6273163Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6273276Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6273374Z             if data.stackgroup:
2025-02-24T15:52:32.6273453Z                 assert (
2025-02-24T15:52:32.6273546Z                     data.stackgroup
2025-02-24T15:52:32.6273625Z                     == getattr(
2025-02-24T15:52:32.6273751Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6274037Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6274121Z                     ).decode()
2025-02-24T15:52:32.6274198Z                 )
2025-02-24T15:52:32.6274421Z             if data.name:
2025-02-24T15:52:32.6274503Z                 assert (
2025-02-24T15:52:32.6274584Z                     data.name
2025-02-24T15:52:32.6274668Z                     == getattr(
2025-02-24T15:52:32.6274783Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6274884Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6274966Z                     ).decode()
2025-02-24T15:52:32.6275043Z                 )
2025-02-24T15:52:32.6275142Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6275224Z                 data.x,
2025-02-24T15:52:32.6275347Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:52:32.6275425Z                 rtol=0.3,
2025-02-24T15:52:32.6275506Z                 atol=3,
2025-02-24T15:52:32.6275584Z             )
2025-02-24T15:52:32.6275683Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6275758Z                 data.y,
2025-02-24T15:52:32.6275894Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:52:32.6276046Z                 rtol=0.3,
2025-02-24T15:52:32.6276190Z                 atol=3,
2025-02-24T15:52:32.6276269Z             )
2025-02-24T15:52:32.6276275Z 
2025-02-24T15:52:32.6276442Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:52:32.6276573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6276578Z 
2025-02-24T15:52:32.6276987Z args = (<function assert_allclose.<locals>.compare at 0x7f885af602c0>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.6277080Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T15:52:32.6277330Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6277341Z 
2025-02-24T15:52:32.6277421Z     @wraps(func)
2025-02-24T15:52:32.6277507Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6277604Z         with self._recreate_cm():
2025-02-24T15:52:32.6277699Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6277791Z E           AssertionError: 
2025-02-24T15:52:32.6277905Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6277977Z E           
2025-02-24T15:52:32.6278082Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6278177Z E           Max absolute difference: 22
2025-02-24T15:52:32.6278277Z E           Max relative difference: 0.8
2025-02-24T15:52:32.6278423Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:52:32.6278522Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.6278655Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.6278752Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.6278757Z 
2025-02-24T15:52:32.6278975Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6279141Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6279422Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6279855Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T15:52:32.6280017Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6280458Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T15:52:32.6280662Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T15:52:32.6280762Z 
2025-02-24T15:52:32.6281159Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94a5a0>
2025-02-24T15:52:32.6281485Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f887cf97a70>
2025-02-24T15:52:32.6281714Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6281983Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:52:32.6282167Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:52:32.6282372Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6282625Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T15:52:32.6282630Z 
2025-02-24T15:52:32.6282728Z     def test_generate_plot_ply(
2025-02-24T15:52:32.6282901Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6282977Z     ):
2025-02-24T15:52:32.6283058Z         """
2025-02-24T15:52:32.6283195Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6283267Z     
2025-02-24T15:52:32.6283409Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6283479Z     
2025-02-24T15:52:32.6283565Z         Parameters:
2025-02-24T15:52:32.6283642Z         ----------
2025-02-24T15:52:32.6283809Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:52:32.6283951Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:52:32.6284055Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6284133Z         """
2025-02-24T15:52:32.6284229Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6284344Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6284520Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6284599Z     
2025-02-24T15:52:32.6284748Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6284861Z             expected_values = expected.get(
2025-02-24T15:52:32.6284952Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6285053Z             ).values.flatten()
2025-02-24T15:52:32.6285197Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:52:32.6285273Z     
2025-02-24T15:52:32.6285405Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6285508Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6285600Z                     expected_values,
2025-02-24T15:52:32.6285685Z                     actual_values,
2025-02-24T15:52:32.6285773Z                     rtol=0.3,
2025-02-24T15:52:32.6285850Z                     atol=3,
2025-02-24T15:52:32.6285928Z                 )
2025-02-24T15:52:32.6286002Z             else:
2025-02-24T15:52:32.6286143Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6286248Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6286366Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6286456Z             if data.stackgroup:
2025-02-24T15:52:32.6286543Z                 assert (
2025-02-24T15:52:32.6286633Z                     data.stackgroup
2025-02-24T15:52:32.6286713Z                     == getattr(
2025-02-24T15:52:32.6286828Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6286931Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6287014Z                     ).decode()
2025-02-24T15:52:32.6287087Z                 )
2025-02-24T15:52:32.6287171Z             if data.name:
2025-02-24T15:52:32.6287248Z                 assert (
2025-02-24T15:52:32.6287332Z                     data.name
2025-02-24T15:52:32.6287409Z                     == getattr(
2025-02-24T15:52:32.6287521Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6287616Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6287832Z                     ).decode()
2025-02-24T15:52:32.6287911Z                 )
2025-02-24T15:52:32.6288006Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6288164Z                 data.x,
2025-02-24T15:52:32.6288274Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:52:32.6288357Z                 rtol=0.3,
2025-02-24T15:52:32.6288433Z                 atol=3,
2025-02-24T15:52:32.6288513Z             )
2025-02-24T15:52:32.6288605Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6288686Z                 data.y,
2025-02-24T15:52:32.6288818Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:52:32.6288968Z                 rtol=0.3,
2025-02-24T15:52:32.6289099Z                 atol=3,
2025-02-24T15:52:32.6289195Z             )
2025-02-24T15:52:32.6289200Z 
2025-02-24T15:52:32.6289355Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:52:32.6289473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6289484Z 
2025-02-24T15:52:32.6289896Z args = (<function assert_allclose.<locals>.compare at 0x7f885af63a60>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.6289988Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T15:52:32.6290238Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6290243Z 
2025-02-24T15:52:32.6290320Z     @wraps(func)
2025-02-24T15:52:32.6290416Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6290511Z         with self._recreate_cm():
2025-02-24T15:52:32.6290602Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6290698Z E           AssertionError: 
2025-02-24T15:52:32.6290803Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6290890Z E           
2025-02-24T15:52:32.6291170Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6291275Z E           Max absolute difference: 22
2025-02-24T15:52:32.6291372Z E           Max relative difference: 0.8
2025-02-24T15:52:32.6291522Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:52:32.6291620Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.6291760Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.6291855Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.6291860Z 
2025-02-24T15:52:32.6292069Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6292278Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T15:52:32.6292283Z 
2025-02-24T15:52:32.6292546Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94a9c0>
2025-02-24T15:52:32.6292869Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f88518ac4d0>
2025-02-24T15:52:32.6292970Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6293147Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:52:32.6293387Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:52:32.6293724Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6293988Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T15:52:32.6293993Z 
2025-02-24T15:52:32.6294084Z     def test_generate_plot_ply(
2025-02-24T15:52:32.6294258Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6294330Z     ):
2025-02-24T15:52:32.6294407Z         """
2025-02-24T15:52:32.6294538Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6294614Z     
2025-02-24T15:52:32.6294882Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6294959Z     
2025-02-24T15:52:32.6295043Z         Parameters:
2025-02-24T15:52:32.6295122Z         ----------
2025-02-24T15:52:32.6295389Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:52:32.6295532Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:52:32.6295638Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6295710Z         """
2025-02-24T15:52:32.6295811Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6295919Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6296099Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6296170Z     
2025-02-24T15:52:32.6296326Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6296429Z             expected_values = expected.get(
2025-02-24T15:52:32.6296520Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6296618Z             ).values.flatten()
2025-02-24T15:52:32.6296759Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:52:32.6296843Z     
2025-02-24T15:52:32.6297052Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6297216Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6297308Z                     expected_values,
2025-02-24T15:52:32.6297399Z                     actual_values,
2025-02-24T15:52:32.6297478Z                     rtol=0.3,
2025-02-24T15:52:32.6297559Z                     atol=3,
2025-02-24T15:52:32.6297629Z                 )
2025-02-24T15:52:32.6297633Z 
2025-02-24T15:52:32.6297784Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T15:52:32.6297907Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6297912Z 
2025-02-24T15:52:32.6298339Z args = (<function assert_allclose.<locals>.compare at 0x7f885af63920>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6298437Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:52:32.6298687Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6298691Z 
2025-02-24T15:52:32.6298773Z     @wraps(func)
2025-02-24T15:52:32.6298858Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6298954Z         with self._recreate_cm():
2025-02-24T15:52:32.6299051Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6299138Z E           AssertionError: 
2025-02-24T15:52:32.6299247Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6299319Z E           
2025-02-24T15:52:32.6299423Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6299516Z E           Max absolute difference: 34
2025-02-24T15:52:32.6299619Z E           Max relative difference: 0.71428571
2025-02-24T15:52:32.6299768Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.6299867Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6300009Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6300101Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6300106Z 
2025-02-24T15:52:32.6300321Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6300479Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6300735Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6301127Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6301289Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6301596Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6301961Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T15:52:32.6302067Z 
2025-02-24T15:52:32.6302336Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94aab0>
2025-02-24T15:52:32.6302802Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f887993a1e0>
2025-02-24T15:52:32.6302914Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6303064Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:52:32.6303204Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:52:32.6303407Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6303655Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T15:52:32.6303660Z 
2025-02-24T15:52:32.6303764Z     def test_generate_plot_ply(
2025-02-24T15:52:32.6303933Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6304018Z     ):
2025-02-24T15:52:32.6304092Z         """
2025-02-24T15:52:32.6304228Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6304299Z     
2025-02-24T15:52:32.6304430Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6304500Z     
2025-02-24T15:52:32.6304582Z         Parameters:
2025-02-24T15:52:32.6304660Z         ----------
2025-02-24T15:52:32.6304825Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:52:32.6304966Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:52:32.6305067Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6305144Z         """
2025-02-24T15:52:32.6305239Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6305356Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6305539Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6305614Z     
2025-02-24T15:52:32.6305761Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6305870Z             expected_values = expected.get(
2025-02-24T15:52:32.6305959Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6306051Z             ).values.flatten()
2025-02-24T15:52:32.6306191Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:52:32.6306271Z     
2025-02-24T15:52:32.6306402Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6306504Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6306590Z                     expected_values,
2025-02-24T15:52:32.6306677Z                     actual_values,
2025-02-24T15:52:32.6306756Z                     rtol=0.3,
2025-02-24T15:52:32.6306837Z                     atol=3,
2025-02-24T15:52:32.6306916Z                 )
2025-02-24T15:52:32.6306993Z             else:
2025-02-24T15:52:32.6307131Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6307239Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6307350Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6307438Z             if data.stackgroup:
2025-02-24T15:52:32.6307519Z                 assert (
2025-02-24T15:52:32.6307606Z                     data.stackgroup
2025-02-24T15:52:32.6307689Z                     == getattr(
2025-02-24T15:52:32.6307868Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6308036Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6308118Z                     ).decode()
2025-02-24T15:52:32.6308194Z                 )
2025-02-24T15:52:32.6308279Z             if data.name:
2025-02-24T15:52:32.6308356Z                 assert (
2025-02-24T15:52:32.6308439Z                     data.name
2025-02-24T15:52:32.6308610Z                     == getattr(
2025-02-24T15:52:32.6308721Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6308814Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6308974Z                     ).decode()
2025-02-24T15:52:32.6309046Z                 )
2025-02-24T15:52:32.6309141Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6309217Z                 data.x,
2025-02-24T15:52:32.6309331Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:52:32.6309409Z                 rtol=0.3,
2025-02-24T15:52:32.6309489Z                 atol=3,
2025-02-24T15:52:32.6309561Z             )
2025-02-24T15:52:32.6309657Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6309736Z                 data.y,
2025-02-24T15:52:32.6309844Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:52:32.6309924Z                 rtol=0.3,
2025-02-24T15:52:32.6309999Z                 atol=3,
2025-02-24T15:52:32.6310080Z             )
2025-02-24T15:52:32.6310084Z 
2025-02-24T15:52:32.6310227Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:52:32.6310349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6310360Z 
2025-02-24T15:52:32.6310786Z args = (<function assert_allclose.<locals>.compare at 0x7f885af62d40>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.6310879Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:52:32.6311264Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6311270Z 
2025-02-24T15:52:32.6311348Z     @wraps(func)
2025-02-24T15:52:32.6311439Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6311527Z         with self._recreate_cm():
2025-02-24T15:52:32.6311663Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6311824Z E           AssertionError: 
2025-02-24T15:52:32.6311969Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6312042Z E           
2025-02-24T15:52:32.6312153Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6312255Z E           Max absolute difference: 34
2025-02-24T15:52:32.6312357Z E           Max relative difference: 0.65
2025-02-24T15:52:32.6312505Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6312597Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6312739Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.6312827Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6312832Z 
2025-02-24T15:52:32.6313049Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6313207Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6313503Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6313837Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6313997Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6314352Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6314581Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T15:52:32.6314585Z 
2025-02-24T15:52:32.6314863Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9523c0>
2025-02-24T15:52:32.6315185Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6315517Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8883852090>
2025-02-24T15:52:32.6316110Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T15:52:32.6316240Z 
2025-02-24T15:52:32.6316345Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6316424Z         self,
2025-02-24T15:52:32.6316522Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6316618Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6316693Z         request,
2025-02-24T15:52:32.6316767Z     ):
2025-02-24T15:52:32.6316878Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6317070Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6317163Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6317340Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6317434Z             plot_object = getattr(
2025-02-24T15:52:32.6317568Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6317644Z             )
2025-02-24T15:52:32.6317745Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6317918Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6318027Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6318129Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6318259Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6318339Z                 )
2025-02-24T15:52:32.6318344Z 
2025-02-24T15:52:32.6318495Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6318609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6318613Z 
2025-02-24T15:52:32.6319090Z args = (<function assert_allclose.<locals>.compare at 0x7f885954b1a0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:52:32.6319199Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6319566Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6319587Z 
2025-02-24T15:52:32.6319684Z     @wraps(func)
2025-02-24T15:52:32.6319772Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6319867Z         with self._recreate_cm():
2025-02-24T15:52:32.6319958Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6320051Z E           AssertionError: 
2025-02-24T15:52:32.6320161Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6320237Z E           
2025-02-24T15:52:32.6320338Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6320445Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.6320546Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6320705Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6320797Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6321061Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6321161Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6321165Z 
2025-02-24T15:52:32.6321373Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6321600Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T15:52:32.6321605Z 
2025-02-24T15:52:32.6321876Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b952ae0>
2025-02-24T15:52:32.6322193Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6322522Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870641d90>
2025-02-24T15:52:32.6322968Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T15:52:32.6322974Z 
2025-02-24T15:52:32.6323177Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6323267Z         self,
2025-02-24T15:52:32.6323373Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6323464Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6323541Z         request,
2025-02-24T15:52:32.6323611Z     ):
2025-02-24T15:52:32.6323726Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6323910Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6324014Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6324190Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6324282Z             plot_object = getattr(
2025-02-24T15:52:32.6324414Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6324491Z             )
2025-02-24T15:52:32.6324597Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6324759Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6324876Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6324973Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6325121Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6325250Z                 )
2025-02-24T15:52:32.6325257Z 
2025-02-24T15:52:32.6325503Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6325628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6325633Z 
2025-02-24T15:52:32.6326099Z args = (<function assert_allclose.<locals>.compare at 0x7f88595711c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:52:32.6326206Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6326457Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6326468Z 
2025-02-24T15:52:32.6326548Z     @wraps(func)
2025-02-24T15:52:32.6326638Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6326741Z         with self._recreate_cm():
2025-02-24T15:52:32.6326839Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6326927Z E           AssertionError: 
2025-02-24T15:52:32.6327044Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6327117Z E           
2025-02-24T15:52:32.6327222Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6327324Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.6327428Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6327578Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6327669Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6327818Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6327906Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6327915Z 
2025-02-24T15:52:32.6328122Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6328344Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T15:52:32.6328349Z 
2025-02-24T15:52:32.6328624Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b952f90>
2025-02-24T15:52:32.6328933Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6329261Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870640470>
2025-02-24T15:52:32.6329540Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T15:52:32.6329661Z 
2025-02-24T15:52:32.6329759Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6329835Z         self,
2025-02-24T15:52:32.6330007Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6330104Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6330177Z         request,
2025-02-24T15:52:32.6330252Z     ):
2025-02-24T15:52:32.6330365Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6330600Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6330743Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6331251Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6331514Z             plot_object = getattr(
2025-02-24T15:52:32.6331652Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6331728Z             )
2025-02-24T15:52:32.6331828Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6332006Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6332114Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6332222Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6332351Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6332429Z                 )
2025-02-24T15:52:32.6332434Z 
2025-02-24T15:52:32.6332581Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6332703Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6332707Z 
2025-02-24T15:52:32.6333175Z args = (<function assert_allclose.<locals>.compare at 0x7f8859537b00>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:52:32.6333280Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6333528Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6333536Z 
2025-02-24T15:52:32.6333612Z     @wraps(func)
2025-02-24T15:52:32.6333712Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6333800Z         with self._recreate_cm():
2025-02-24T15:52:32.6333896Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6333984Z E           AssertionError: 
2025-02-24T15:52:32.6334097Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6334176Z E           
2025-02-24T15:52:32.6334278Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6334383Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.6334483Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6334737Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6334872Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6335027Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6335118Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6335122Z 
2025-02-24T15:52:32.6335332Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6335560Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T15:52:32.6335565Z 
2025-02-24T15:52:32.6335835Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953080>
2025-02-24T15:52:32.6336148Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6336476Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887f815430>
2025-02-24T15:52:32.6336760Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T15:52:32.6336765Z 
2025-02-24T15:52:32.6336864Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6337081Z         self,
2025-02-24T15:52:32.6337184Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6337275Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6337457Z         request,
2025-02-24T15:52:32.6337529Z     ):
2025-02-24T15:52:32.6337640Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6337824Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6337917Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6338091Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6338186Z             plot_object = getattr(
2025-02-24T15:52:32.6338313Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6338391Z             )
2025-02-24T15:52:32.6338496Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6338655Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6338772Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6338869Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6339007Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6339079Z                 )
2025-02-24T15:52:32.6339084Z 
2025-02-24T15:52:32.6339234Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6339349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6339353Z 
2025-02-24T15:52:32.6339851Z args = (<function assert_allclose.<locals>.compare at 0x7f88595374c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:52:32.6340042Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6340323Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6340337Z 
2025-02-24T15:52:32.6340424Z     @wraps(func)
2025-02-24T15:52:32.6340510Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6340603Z         with self._recreate_cm():
2025-02-24T15:52:32.6340700Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6340792Z E           AssertionError: 
2025-02-24T15:52:32.6340900Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6341152Z E           
2025-02-24T15:52:32.6341262Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6341365Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.6341468Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6341619Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6341709Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6341854Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6341943Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6341952Z 
2025-02-24T15:52:32.6342151Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6342380Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T15:52:32.6342384Z 
2025-02-24T15:52:32.6342660Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953140>
2025-02-24T15:52:32.6342967Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6343295Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8861b3e720>
2025-02-24T15:52:32.6343571Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T15:52:32.6343575Z 
2025-02-24T15:52:32.6343674Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6343748Z         self,
2025-02-24T15:52:32.6344098Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6344230Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6344306Z         request,
2025-02-24T15:52:32.6344503Z     ):
2025-02-24T15:52:32.6344613Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6344799Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6344885Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6345061Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6345149Z             plot_object = getattr(
2025-02-24T15:52:32.6345277Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6345348Z             )
2025-02-24T15:52:32.6345452Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6345611Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6345721Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6345830Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6345958Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6346041Z                 )
2025-02-24T15:52:32.6346046Z 
2025-02-24T15:52:32.6346192Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6346311Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6346315Z 
2025-02-24T15:52:32.6346776Z args = (<function assert_allclose.<locals>.compare at 0x7f8848d11da0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:52:32.6346883Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6347135Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6347141Z 
2025-02-24T15:52:32.6347216Z     @wraps(func)
2025-02-24T15:52:32.6347311Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6347401Z         with self._recreate_cm():
2025-02-24T15:52:32.6347495Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6347586Z E           AssertionError: 
2025-02-24T15:52:32.6347732Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6347867Z E           
2025-02-24T15:52:32.6348028Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6348138Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.6348237Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6348392Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6348481Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6348628Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6348713Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6348718Z 
2025-02-24T15:52:32.6348928Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6349151Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T15:52:32.6349159Z 
2025-02-24T15:52:32.6349431Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953200>
2025-02-24T15:52:32.6349739Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6350066Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887d0e7bf0>
2025-02-24T15:52:32.6350349Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T15:52:32.6350354Z 
2025-02-24T15:52:32.6350448Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6350526Z         self,
2025-02-24T15:52:32.6350624Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6350720Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6350888Z         request,
2025-02-24T15:52:32.6351087Z     ):
2025-02-24T15:52:32.6351200Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6351520Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6351612Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6351786Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6351879Z             plot_object = getattr(
2025-02-24T15:52:32.6352006Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6352084Z             )
2025-02-24T15:52:32.6352187Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6352351Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6352457Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6352563Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6352702Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6352807Z                 )
2025-02-24T15:52:32.6352815Z 
2025-02-24T15:52:32.6353080Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6353200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6353205Z 
2025-02-24T15:52:32.6353678Z args = (<function assert_allclose.<locals>.compare at 0x7f8859570720>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:52:32.6353782Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6354027Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6354032Z 
2025-02-24T15:52:32.6354112Z     @wraps(func)
2025-02-24T15:52:32.6354198Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6354290Z         with self._recreate_cm():
2025-02-24T15:52:32.6354384Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6354474Z E           AssertionError: 
2025-02-24T15:52:32.6354582Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6354665Z E           
2025-02-24T15:52:32.6354767Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6354872Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.6354971Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6355125Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6355217Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6355361Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6355461Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6355466Z 
2025-02-24T15:52:32.6355668Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6355899Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T15:52:32.6355903Z 
2025-02-24T15:52:32.6356174Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9532c0>
2025-02-24T15:52:32.6356493Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6356967Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870130b00>
2025-02-24T15:52:32.6357252Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T15:52:32.6357258Z 
2025-02-24T15:52:32.6357359Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6357433Z         self,
2025-02-24T15:52:32.6357536Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6357628Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6357707Z         request,
2025-02-24T15:52:32.6357908Z     ):
2025-02-24T15:52:32.6358020Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6358204Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6358366Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6358548Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6358638Z             plot_object = getattr(
2025-02-24T15:52:32.6358769Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6358843Z             )
2025-02-24T15:52:32.6358951Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6359117Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6359232Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6359331Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6359466Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6359551Z                 )
2025-02-24T15:52:32.6359555Z 
2025-02-24T15:52:32.6359704Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6359827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6359838Z 
2025-02-24T15:52:32.6360447Z args = (<function assert_allclose.<locals>.compare at 0x7f8859571120>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:52:32.6360564Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6360816Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6360826Z 
2025-02-24T15:52:32.6360998Z     @wraps(func)
2025-02-24T15:52:32.6361094Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6361185Z         with self._recreate_cm():
2025-02-24T15:52:32.6361281Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6361377Z E           AssertionError: 
2025-02-24T15:52:32.6361492Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6361566Z E           
2025-02-24T15:52:32.6361677Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6361778Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.6361916Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6362073Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6362169Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6362319Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6362406Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6362410Z 
2025-02-24T15:52:32.6362620Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6362844Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T15:52:32.6362854Z 
2025-02-24T15:52:32.6363129Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953380>
2025-02-24T15:52:32.6363445Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6363778Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870131340>
2025-02-24T15:52:32.6364067Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T15:52:32.6364072Z 
2025-02-24T15:52:32.6364169Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6364251Z         self,
2025-02-24T15:52:32.6364352Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6364450Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6364524Z         request,
2025-02-24T15:52:32.6364602Z     ):
2025-02-24T15:52:32.6364709Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6365028Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6365123Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6365406Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6365500Z             plot_object = getattr(
2025-02-24T15:52:32.6365628Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6365705Z             )
2025-02-24T15:52:32.6365806Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6365975Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6366081Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6366183Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6366390Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6366536Z                 )
2025-02-24T15:52:32.6366543Z 
2025-02-24T15:52:32.6366717Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6366864Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6366882Z 
2025-02-24T15:52:32.6367471Z args = (<function assert_allclose.<locals>.compare at 0x7f8859573240>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:52:32.6367580Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6367832Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6367837Z 
2025-02-24T15:52:32.6367911Z     @wraps(func)
2025-02-24T15:52:32.6368003Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6368095Z         with self._recreate_cm():
2025-02-24T15:52:32.6368185Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6368277Z E           AssertionError: 
2025-02-24T15:52:32.6368386Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6368467Z E           
2025-02-24T15:52:32.6368566Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6368673Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.6368774Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6368927Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6369015Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6369162Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6369252Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6369257Z 
2025-02-24T15:52:32.6369460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6369686Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T15:52:32.6369691Z 
2025-02-24T15:52:32.6369959Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953440>
2025-02-24T15:52:32.6370273Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6370601Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f886171f680>
2025-02-24T15:52:32.6370884Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T15:52:32.6370888Z 
2025-02-24T15:52:32.6371117Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6371192Z         self,
2025-02-24T15:52:32.6371293Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6371384Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6371462Z         request,
2025-02-24T15:52:32.6371531Z     ):
2025-02-24T15:52:32.6371640Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6371823Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6372050Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6372225Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6372419Z             plot_object = getattr(
2025-02-24T15:52:32.6372548Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6372618Z             )
2025-02-24T15:52:32.6372722Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6372886Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6372996Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6373093Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6373327Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6373458Z                 )
2025-02-24T15:52:32.6373464Z 
2025-02-24T15:52:32.6373621Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6373738Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6373749Z 
2025-02-24T15:52:32.6374219Z args = (<function assert_allclose.<locals>.compare at 0x7f88595360c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:52:32.6374332Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6374576Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6374581Z 
2025-02-24T15:52:32.6374662Z     @wraps(func)
2025-02-24T15:52:32.6374748Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6374841Z         with self._recreate_cm():
2025-02-24T15:52:32.6374935Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6375021Z E           AssertionError: 
2025-02-24T15:52:32.6375133Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6375205Z E           
2025-02-24T15:52:32.6375315Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6375417Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.6375517Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6375672Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6375761Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6375907Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6375995Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6375999Z 
2025-02-24T15:52:32.6376205Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6376425Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T15:52:32.6376430Z 
2025-02-24T15:52:32.6376700Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953500>
2025-02-24T15:52:32.6377163Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6377503Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f888362aab0>
2025-02-24T15:52:32.6377789Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T15:52:32.6377798Z 
2025-02-24T15:52:32.6377891Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6377966Z         self,
2025-02-24T15:52:32.6378063Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6378157Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6378231Z         request,
2025-02-24T15:52:32.6378304Z     ):
2025-02-24T15:52:32.6378409Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6378592Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6378677Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6378952Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6379037Z             plot_object = getattr(
2025-02-24T15:52:32.6379259Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6379335Z             )
2025-02-24T15:52:32.6379434Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6379596Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6379701Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6379801Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6379928Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6380005Z                 )
2025-02-24T15:52:32.6380010Z 
2025-02-24T15:52:32.6380154Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6380268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6380278Z 
2025-02-24T15:52:32.6380747Z args = (<function assert_allclose.<locals>.compare at 0x7f88598d9bc0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:52:32.6380863Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6381343Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6381352Z 
2025-02-24T15:52:32.6381429Z     @wraps(func)
2025-02-24T15:52:32.6381518Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6381604Z         with self._recreate_cm():
2025-02-24T15:52:32.6381695Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6381787Z E           AssertionError: 
2025-02-24T15:52:32.6381895Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6381969Z E           
2025-02-24T15:52:32.6382069Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6382175Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.6382278Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6382433Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6382525Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6382677Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6382764Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6382768Z 
2025-02-24T15:52:32.6382972Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6383200Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T15:52:32.6383205Z 
2025-02-24T15:52:32.6383470Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9535c0>
2025-02-24T15:52:32.6383782Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6384110Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887f883e60>
2025-02-24T15:52:32.6384403Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T15:52:32.6384408Z 
2025-02-24T15:52:32.6384507Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6384581Z         self,
2025-02-24T15:52:32.6384682Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6384772Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6384849Z         request,
2025-02-24T15:52:32.6384919Z     ):
2025-02-24T15:52:32.6385029Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6385213Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6385303Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6385479Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6385702Z             plot_object = getattr(
2025-02-24T15:52:32.6385830Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6386027Z             )
2025-02-24T15:52:32.6386134Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6386293Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6386413Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6386583Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6386778Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6386853Z                 )
2025-02-24T15:52:32.6386857Z 
2025-02-24T15:52:32.6387008Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6387122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6387127Z 
2025-02-24T15:52:32.6387603Z args = (<function assert_allclose.<locals>.compare at 0x7f8859573ba0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:52:32.6387717Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6387964Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6387969Z 
2025-02-24T15:52:32.6388049Z     @wraps(func)
2025-02-24T15:52:32.6388134Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6388227Z         with self._recreate_cm():
2025-02-24T15:52:32.6388316Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6388407Z E           AssertionError: 
2025-02-24T15:52:32.6388514Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6388592Z E           
2025-02-24T15:52:32.6388696Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6388799Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.6388903Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6389057Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6389147Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6389294Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6389387Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6389391Z 
2025-02-24T15:52:32.6389589Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6389814Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T15:52:32.6389819Z 
2025-02-24T15:52:32.6390086Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9536b0>
2025-02-24T15:52:32.6390396Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6390726Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887f881610>
2025-02-24T15:52:32.6391133Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T15:52:32.6391143Z 
2025-02-24T15:52:32.6391242Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6391315Z         self,
2025-02-24T15:52:32.6391415Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6391510Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6391582Z         request,
2025-02-24T15:52:32.6391657Z     ):
2025-02-24T15:52:32.6391764Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6392046Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6392174Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6392357Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6392443Z             plot_object = getattr(
2025-02-24T15:52:32.6392703Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6392775Z             )
2025-02-24T15:52:32.6392878Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6393144Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6393252Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6393350Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6393477Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6393554Z                 )
2025-02-24T15:52:32.6393558Z 
2025-02-24T15:52:32.6393702Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6393817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6393821Z 
2025-02-24T15:52:32.6394283Z args = (<function assert_allclose.<locals>.compare at 0x7f88595713a0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:52:32.6394396Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6394640Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6394651Z 
2025-02-24T15:52:32.6394726Z     @wraps(func)
2025-02-24T15:52:32.6394822Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6394908Z         with self._recreate_cm():
2025-02-24T15:52:32.6395001Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6395085Z E           AssertionError: 
2025-02-24T15:52:32.6395198Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6395270Z E           
2025-02-24T15:52:32.6395378Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6395485Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.6395585Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6395740Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6395831Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6395979Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6396068Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6396072Z 
2025-02-24T15:52:32.6396274Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6396496Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T15:52:32.6396505Z 
2025-02-24T15:52:32.6396769Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953770>
2025-02-24T15:52:32.6397082Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6397402Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870601640>
2025-02-24T15:52:32.6397692Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T15:52:32.6397697Z 
2025-02-24T15:52:32.6397795Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6397875Z         self,
2025-02-24T15:52:32.6397973Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6398068Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6398144Z         request,
2025-02-24T15:52:32.6398214Z     ):
2025-02-24T15:52:32.6398379Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6398655Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6398747Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6398919Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6399010Z             plot_object = getattr(
2025-02-24T15:52:32.6399134Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6399298Z             )
2025-02-24T15:52:32.6399398Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6399559Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6399739Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6399840Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6399972Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6400043Z                 )
2025-02-24T15:52:32.6400047Z 
2025-02-24T15:52:32.6400196Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6400310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6400314Z 
2025-02-24T15:52:32.6400781Z args = (<function assert_allclose.<locals>.compare at 0x7f8870885300>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:52:32.6400883Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6401244Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6401257Z 
2025-02-24T15:52:32.6401336Z     @wraps(func)
2025-02-24T15:52:32.6401420Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6401510Z         with self._recreate_cm():
2025-02-24T15:52:32.6401598Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6401689Z E           AssertionError: 
2025-02-24T15:52:32.6401799Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6401875Z E           
2025-02-24T15:52:32.6401975Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6402105Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.6402281Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6402478Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6402570Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6402721Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6402811Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6402821Z 
2025-02-24T15:52:32.6403021Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6403243Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T15:52:32.6403248Z 
2025-02-24T15:52:32.6403510Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953860>
2025-02-24T15:52:32.6403822Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6404151Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8882dd0410>
2025-02-24T15:52:32.6404432Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T15:52:32.6404440Z 
2025-02-24T15:52:32.6404537Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6404608Z         self,
2025-02-24T15:52:32.6404712Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6404802Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6404879Z         request,
2025-02-24T15:52:32.6404949Z     ):
2025-02-24T15:52:32.6405058Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6405242Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6405327Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6405503Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6405590Z             plot_object = getattr(
2025-02-24T15:52:32.6405724Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6405796Z             )
2025-02-24T15:52:32.6405902Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6406368Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6406490Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6406709Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6406847Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6406927Z                 )
2025-02-24T15:52:32.6406931Z 
2025-02-24T15:52:32.6407079Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6407202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6407207Z 
2025-02-24T15:52:32.6407675Z args = (<function assert_allclose.<locals>.compare at 0x7f8870886f20>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:52:32.6407783Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6408025Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6408042Z 
2025-02-24T15:52:32.6408117Z     @wraps(func)
2025-02-24T15:52:32.6408215Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6408303Z         with self._recreate_cm():
2025-02-24T15:52:32.6408399Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6408485Z E           AssertionError: 
2025-02-24T15:52:32.6408602Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6408674Z E           
2025-02-24T15:52:32.6408779Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6408879Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.6408981Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6409133Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6409228Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6409380Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6409470Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6409474Z 
2025-02-24T15:52:32.6409681Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6409898Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T15:52:32.6409903Z 
2025-02-24T15:52:32.6410172Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953980>
2025-02-24T15:52:32.6410481Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6410815Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f88805244d0>
2025-02-24T15:52:32.6411213Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T15:52:32.6411219Z 
2025-02-24T15:52:32.6411318Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6411395Z         self,
2025-02-24T15:52:32.6411491Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6411593Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6411666Z         request,
2025-02-24T15:52:32.6411742Z     ):
2025-02-24T15:52:32.6411847Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6412034Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6412125Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6412300Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6412391Z             plot_object = getattr(
2025-02-24T15:52:32.6412517Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6412594Z             )
2025-02-24T15:52:32.6412691Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6412853Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6413077Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6413178Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6413410Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6413491Z                 )
2025-02-24T15:52:32.6413495Z 
2025-02-24T15:52:32.6413646Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6413760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6413764Z 
2025-02-24T15:52:32.6414234Z args = (<function assert_allclose.<locals>.compare at 0x7f8848d11da0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:52:32.6414339Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6414585Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6414595Z 
2025-02-24T15:52:32.6414682Z     @wraps(func)
2025-02-24T15:52:32.6414768Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6414863Z         with self._recreate_cm():
2025-02-24T15:52:32.6414957Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6415048Z E           AssertionError: 
2025-02-24T15:52:32.6415155Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6415235Z E           
2025-02-24T15:52:32.6415336Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6415442Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.6415539Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6415694Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6415781Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6415934Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6416031Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6416036Z 
2025-02-24T15:52:32.6416235Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6416468Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T15:52:32.6416474Z 
2025-02-24T15:52:32.6416736Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953aa0>
2025-02-24T15:52:32.6417047Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6417374Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8862e7dfa0>
2025-02-24T15:52:32.6417660Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T15:52:32.6417665Z 
2025-02-24T15:52:32.6417765Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6417839Z         self,
2025-02-24T15:52:32.6417949Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6418039Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6418117Z         request,
2025-02-24T15:52:32.6418191Z     ):
2025-02-24T15:52:32.6418304Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6418488Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6418585Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6418757Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6418850Z             plot_object = getattr(
2025-02-24T15:52:32.6418982Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6419054Z             )
2025-02-24T15:52:32.6419158Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6419317Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6419429Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6419616Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6419753Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6419899Z                 )
2025-02-24T15:52:32.6419903Z 
2025-02-24T15:52:32.6420050Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6420167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6420171Z 
2025-02-24T15:52:32.6420633Z args = (<function assert_allclose.<locals>.compare at 0x7f8859573ba0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:52:32.6420745Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6421084Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6421090Z 
2025-02-24T15:52:32.6421173Z     @wraps(func)
2025-02-24T15:52:32.6421265Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6421359Z         with self._recreate_cm():
2025-02-24T15:52:32.6421453Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6421544Z E           AssertionError: 
2025-02-24T15:52:32.6421656Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6421728Z E           
2025-02-24T15:52:32.6421835Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6421936Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.6422039Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6422187Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6422280Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6422424Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6422514Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6422518Z 
2025-02-24T15:52:32.6422729Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6422936Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T15:52:32.6422945Z 
2025-02-24T15:52:32.6423216Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b952a20>
2025-02-24T15:52:32.6423529Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887e721c40>
2025-02-24T15:52:32.6423632Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6423722Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6423830Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6423967Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6424176Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6424430Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T15:52:32.6424440Z 
2025-02-24T15:52:32.6424528Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6424704Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6424779Z     ):
2025-02-24T15:52:32.6424881Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6424988Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6425167Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6425240Z     
2025-02-24T15:52:32.6425354Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6425457Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6425603Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6425716Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6425788Z             )
2025-02-24T15:52:32.6425862Z     
2025-02-24T15:52:32.6425965Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6426203Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6426292Z             if data.stackgroup:
2025-02-24T15:52:32.6426477Z                 assert (
2025-02-24T15:52:32.6426567Z                     data.stackgroup
2025-02-24T15:52:32.6426652Z                     == getattr(
2025-02-24T15:52:32.6426768Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6426870Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6426958Z                     ).decode()
2025-02-24T15:52:32.6427031Z                 )
2025-02-24T15:52:32.6427117Z             if data.name:
2025-02-24T15:52:32.6427194Z                 assert (
2025-02-24T15:52:32.6427279Z                     data.name
2025-02-24T15:52:32.6427358Z                     == getattr(
2025-02-24T15:52:32.6427471Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6427566Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6427655Z                     ).decode()
2025-02-24T15:52:32.6427728Z                 )
2025-02-24T15:52:32.6427829Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6427974Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6428047Z             )
2025-02-24T15:52:32.6428144Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6428267Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6428344Z             )
2025-02-24T15:52:32.6428348Z 
2025-02-24T15:52:32.6428499Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6428619Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6428623Z 
2025-02-24T15:52:32.6429093Z args = (<function assert_allclose.<locals>.compare at 0x7f88708bdf80>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:52:32.6429210Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6429465Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6429476Z 
2025-02-24T15:52:32.6429552Z     @wraps(func)
2025-02-24T15:52:32.6429648Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6429739Z         with self._recreate_cm():
2025-02-24T15:52:32.6429836Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6429924Z E           AssertionError: 
2025-02-24T15:52:32.6430044Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6430118Z E           
2025-02-24T15:52:32.6430228Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6430332Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.6430440Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6430597Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6430689Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6430841Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6431057Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6431062Z 
2025-02-24T15:52:32.6431276Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6431479Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T15:52:32.6431484Z 
2025-02-24T15:52:32.6431759Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953ec0>
2025-02-24T15:52:32.6432080Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885fa73950>
2025-02-24T15:52:32.6432178Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6432273Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6432376Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6432624Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6432828Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6433181Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T15:52:32.6433186Z 
2025-02-24T15:52:32.6433273Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6433448Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6433524Z     ):
2025-02-24T15:52:32.6433621Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6433730Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6433909Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6433987Z     
2025-02-24T15:52:32.6434096Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6434199Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6434342Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6434466Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6434539Z             )
2025-02-24T15:52:32.6434620Z     
2025-02-24T15:52:32.6434728Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6434839Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6434930Z             if data.stackgroup:
2025-02-24T15:52:32.6435007Z                 assert (
2025-02-24T15:52:32.6435102Z                     data.stackgroup
2025-02-24T15:52:32.6435180Z                     == getattr(
2025-02-24T15:52:32.6435295Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6435392Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6435476Z                     ).decode()
2025-02-24T15:52:32.6435550Z                 )
2025-02-24T15:52:32.6435634Z             if data.name:
2025-02-24T15:52:32.6435712Z                 assert (
2025-02-24T15:52:32.6435804Z                     data.name
2025-02-24T15:52:32.6435888Z                     == getattr(
2025-02-24T15:52:32.6435994Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6436100Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6436179Z                     ).decode()
2025-02-24T15:52:32.6436258Z                 )
2025-02-24T15:52:32.6436354Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6436488Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6436563Z             )
2025-02-24T15:52:32.6436660Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6436783Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6436861Z             )
2025-02-24T15:52:32.6436865Z 
2025-02-24T15:52:32.6437019Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6437134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6437143Z 
2025-02-24T15:52:32.6437618Z args = (<function assert_allclose.<locals>.compare at 0x7f88708beb60>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:52:32.6437725Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6437978Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6437984Z 
2025-02-24T15:52:32.6438060Z     @wraps(func)
2025-02-24T15:52:32.6438155Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6438251Z         with self._recreate_cm():
2025-02-24T15:52:32.6438341Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6438433Z E           AssertionError: 
2025-02-24T15:52:32.6438540Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6438621Z E           
2025-02-24T15:52:32.6438720Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6438933Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.6439032Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6439187Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6439348Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6439505Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6439597Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6439601Z 
2025-02-24T15:52:32.6439802Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6440012Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T15:52:32.6440016Z 
2025-02-24T15:52:32.6440281Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b933c50>
2025-02-24T15:52:32.6440601Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885fa6bcb0>
2025-02-24T15:52:32.6440704Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6440801Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6441035Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6441147Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6441360Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6441605Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T15:52:32.6441610Z 
2025-02-24T15:52:32.6441704Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6441872Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6441950Z     ):
2025-02-24T15:52:32.6442047Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6442161Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6442334Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6442419Z     
2025-02-24T15:52:32.6442536Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6442638Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6442787Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6442898Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6442975Z             )
2025-02-24T15:52:32.6443049Z     
2025-02-24T15:52:32.6443156Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6443261Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6443351Z             if data.stackgroup:
2025-02-24T15:52:32.6443426Z                 assert (
2025-02-24T15:52:32.6443515Z                     data.stackgroup
2025-02-24T15:52:32.6443590Z                     == getattr(
2025-02-24T15:52:32.6443701Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6443804Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6443888Z                     ).decode()
2025-02-24T15:52:32.6443966Z                 )
2025-02-24T15:52:32.6444050Z             if data.name:
2025-02-24T15:52:32.6444132Z                 assert (
2025-02-24T15:52:32.6444211Z                     data.name
2025-02-24T15:52:32.6444293Z                     == getattr(
2025-02-24T15:52:32.6444397Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6444496Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6444574Z                     ).decode()
2025-02-24T15:52:32.6444651Z                 )
2025-02-24T15:52:32.6444750Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6444879Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6444957Z             )
2025-02-24T15:52:32.6445049Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6445176Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6445370Z             )
2025-02-24T15:52:32.6445375Z 
2025-02-24T15:52:32.6445527Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6445742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6445747Z 
2025-02-24T15:52:32.6446219Z args = (<function assert_allclose.<locals>.compare at 0x7f88708be8e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:52:32.6446327Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6446572Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6446577Z 
2025-02-24T15:52:32.6446663Z     @wraps(func)
2025-02-24T15:52:32.6446747Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6446841Z         with self._recreate_cm():
2025-02-24T15:52:32.6446930Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6447026Z E           AssertionError: 
2025-02-24T15:52:32.6447135Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6447214Z E           
2025-02-24T15:52:32.6447321Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6447430Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.6447535Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6447720Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6447813Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6447980Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6448071Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6448075Z 
2025-02-24T15:52:32.6448284Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6448491Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T15:52:32.6448500Z 
2025-02-24T15:52:32.6448772Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b933ce0>
2025-02-24T15:52:32.6449094Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887548c1d0>
2025-02-24T15:52:32.6449206Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6449303Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6449415Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6449514Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6449725Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6449968Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T15:52:32.6449979Z 
2025-02-24T15:52:32.6450069Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6450241Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6450316Z     ):
2025-02-24T15:52:32.6450419Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6450526Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6450710Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6450792Z     
2025-02-24T15:52:32.6451020Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6451122Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6451273Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6451385Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6451462Z             )
2025-02-24T15:52:32.6451539Z     
2025-02-24T15:52:32.6451639Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6451752Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6451837Z             if data.stackgroup:
2025-02-24T15:52:32.6452039Z                 assert (
2025-02-24T15:52:32.6452124Z                     data.stackgroup
2025-02-24T15:52:32.6452207Z                     == getattr(
2025-02-24T15:52:32.6452455Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6452557Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6452634Z                     ).decode()
2025-02-24T15:52:32.6452711Z                 )
2025-02-24T15:52:32.6452789Z             if data.name:
2025-02-24T15:52:32.6452869Z                 assert (
2025-02-24T15:52:32.6452951Z                     data.name
2025-02-24T15:52:32.6453027Z                     == getattr(
2025-02-24T15:52:32.6453136Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6453227Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6453309Z                     ).decode()
2025-02-24T15:52:32.6453379Z                 )
2025-02-24T15:52:32.6453479Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6453614Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6453692Z             )
2025-02-24T15:52:32.6453784Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6453918Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6453988Z             )
2025-02-24T15:52:32.6453999Z 
2025-02-24T15:52:32.6454145Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6454266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6454270Z 
2025-02-24T15:52:32.6454736Z args = (<function assert_allclose.<locals>.compare at 0x7f885954b100>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:52:32.6454844Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6455092Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6455101Z 
2025-02-24T15:52:32.6455184Z     @wraps(func)
2025-02-24T15:52:32.6455273Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6455370Z         with self._recreate_cm():
2025-02-24T15:52:32.6455584Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6455701Z E           AssertionError: 
2025-02-24T15:52:32.6455843Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6456143Z E           
2025-02-24T15:52:32.6456329Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6456463Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.6456627Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6456795Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6457011Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6457205Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6457362Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6457367Z 
2025-02-24T15:52:32.6457601Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6457858Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T15:52:32.6457863Z 
2025-02-24T15:52:32.6458342Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b952840>
2025-02-24T15:52:32.6458691Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f888a8829c0>
2025-02-24T15:52:32.6458855Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6458975Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6459128Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6459303Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6459606Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6460006Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T15:52:32.6460011Z 
2025-02-24T15:52:32.6460203Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6460439Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6460591Z     ):
2025-02-24T15:52:32.6460774Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6461020Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6461268Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6461387Z     
2025-02-24T15:52:32.6461596Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6461776Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6461980Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6462169Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6462273Z             )
2025-02-24T15:52:32.6462451Z     
2025-02-24T15:52:32.6462597Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6462770Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6462895Z             if data.stackgroup:
2025-02-24T15:52:32.6463054Z                 assert (
2025-02-24T15:52:32.6463155Z                     data.stackgroup
2025-02-24T15:52:32.6463369Z                     == getattr(
2025-02-24T15:52:32.6463527Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6471220Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6471349Z                     ).decode()
2025-02-24T15:52:32.6471427Z                 )
2025-02-24T15:52:32.6471515Z             if data.name:
2025-02-24T15:52:32.6471598Z                 assert (
2025-02-24T15:52:32.6471680Z                     data.name
2025-02-24T15:52:32.6471764Z                     == getattr(
2025-02-24T15:52:32.6471886Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6471998Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6472081Z                     ).decode()
2025-02-24T15:52:32.6472166Z                 )
2025-02-24T15:52:32.6472266Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6472413Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6472487Z             )
2025-02-24T15:52:32.6472592Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6472716Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6472795Z             )
2025-02-24T15:52:32.6472800Z 
2025-02-24T15:52:32.6472970Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6473094Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6473099Z 
2025-02-24T15:52:32.6473589Z args = (<function assert_allclose.<locals>.compare at 0x7f88708dc720>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:52:32.6473704Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6473965Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6473970Z 
2025-02-24T15:52:32.6474048Z     @wraps(func)
2025-02-24T15:52:32.6474141Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6474237Z         with self._recreate_cm():
2025-02-24T15:52:32.6474331Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6474427Z E           AssertionError: 
2025-02-24T15:52:32.6474540Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6474619Z E           
2025-02-24T15:52:32.6474722Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6474833Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.6474936Z E           Max relative difference: 15766.1580412
2025-02-24T15:52:32.6475272Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6475366Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6475645Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6475740Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6475744Z 
2025-02-24T15:52:32.6475960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6476179Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T15:52:32.6476183Z 
2025-02-24T15:52:32.6476454Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9508c0>
2025-02-24T15:52:32.6476777Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885eef4c50>
2025-02-24T15:52:32.6476876Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6476972Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6477091Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6477195Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6477415Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6477667Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T15:52:32.6477672Z 
2025-02-24T15:52:32.6477769Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6477939Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6478018Z     ):
2025-02-24T15:52:32.6478118Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6478235Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6478417Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6478489Z     
2025-02-24T15:52:32.6478608Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6478713Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6478867Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6478987Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6479065Z             )
2025-02-24T15:52:32.6479135Z     
2025-02-24T15:52:32.6479244Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6479353Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6479450Z             if data.stackgroup:
2025-02-24T15:52:32.6479529Z                 assert (
2025-02-24T15:52:32.6479623Z                     data.stackgroup
2025-02-24T15:52:32.6479711Z                     == getattr(
2025-02-24T15:52:32.6479824Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6479930Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6480012Z                     ).decode()
2025-02-24T15:52:32.6480092Z                 )
2025-02-24T15:52:32.6480179Z             if data.name:
2025-02-24T15:52:32.6480266Z                 assert (
2025-02-24T15:52:32.6480348Z                     data.name
2025-02-24T15:52:32.6480437Z                     == getattr(
2025-02-24T15:52:32.6480544Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6480645Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6480723Z                     ).decode()
2025-02-24T15:52:32.6480802Z                 )
2025-02-24T15:52:32.6481089Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6481234Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6481313Z             )
2025-02-24T15:52:32.6481411Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6481542Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6481619Z             )
2025-02-24T15:52:32.6481623Z 
2025-02-24T15:52:32.6481797Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6482081Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6482086Z 
2025-02-24T15:52:32.6482598Z args = (<function assert_allclose.<locals>.compare at 0x7f88708de700>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:52:32.6482823Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6483074Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6483079Z 
2025-02-24T15:52:32.6483161Z     @wraps(func)
2025-02-24T15:52:32.6483248Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6483344Z         with self._recreate_cm():
2025-02-24T15:52:32.6483438Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6483532Z E           AssertionError: 
2025-02-24T15:52:32.6483643Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6483728Z E           
2025-02-24T15:52:32.6483836Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6483940Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.6484053Z E           Max relative difference: 15766.1580412
2025-02-24T15:52:32.6484211Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6484309Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6484459Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6484553Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6484558Z 
2025-02-24T15:52:32.6484771Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6484983Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T15:52:32.6484988Z 
2025-02-24T15:52:32.6485276Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930110>
2025-02-24T15:52:32.6485600Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8851821a90>
2025-02-24T15:52:32.6485714Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6485805Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6485916Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6486018Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6486247Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6486496Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T15:52:32.6486506Z 
2025-02-24T15:52:32.6486598Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6486774Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6486847Z     ):
2025-02-24T15:52:32.6486952Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6487066Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6487248Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6487324Z     
2025-02-24T15:52:32.6487442Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6487542Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6487692Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6487802Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6487880Z             )
2025-02-24T15:52:32.6487956Z     
2025-02-24T15:52:32.6488060Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6488173Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6488262Z             if data.stackgroup:
2025-02-24T15:52:32.6488344Z                 assert (
2025-02-24T15:52:32.6488434Z                     data.stackgroup
2025-02-24T15:52:32.6488518Z                     == getattr(
2025-02-24T15:52:32.6488718Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6488822Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6488979Z                     ).decode()
2025-02-24T15:52:32.6489059Z                 )
2025-02-24T15:52:32.6489144Z             if data.name:
2025-02-24T15:52:32.6489221Z                 assert (
2025-02-24T15:52:32.6489306Z                     data.name
2025-02-24T15:52:32.6489384Z                     == getattr(
2025-02-24T15:52:32.6489492Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6489586Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6489670Z                     ).decode()
2025-02-24T15:52:32.6489744Z                 )
2025-02-24T15:52:32.6489844Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6489973Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6490052Z             )
2025-02-24T15:52:32.6490145Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6490279Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6490359Z             )
2025-02-24T15:52:32.6490372Z 
2025-02-24T15:52:32.6490522Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6490647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6490652Z 
2025-02-24T15:52:32.6491237Z args = (<function assert_allclose.<locals>.compare at 0x7f8870886480>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:52:32.6491349Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6491596Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6491607Z 
2025-02-24T15:52:32.6491684Z     @wraps(func)
2025-02-24T15:52:32.6491776Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6491872Z         with self._recreate_cm():
2025-02-24T15:52:32.6491980Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6492069Z E           AssertionError: 
2025-02-24T15:52:32.6492188Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6492262Z E           
2025-02-24T15:52:32.6492371Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6492472Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.6492578Z E           Max relative difference: 15766.1580412
2025-02-24T15:52:32.6492733Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6492828Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6492978Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6493066Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6493071Z 
2025-02-24T15:52:32.6493280Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6493490Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T15:52:32.6493495Z 
2025-02-24T15:52:32.6493771Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9301d0>
2025-02-24T15:52:32.6494095Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887e881a60>
2025-02-24T15:52:32.6494200Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6494296Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6494401Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6494507Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6494714Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6494967Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T15:52:32.6494972Z 
2025-02-24T15:52:32.6495260Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6495435Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6495610Z     ):
2025-02-24T15:52:32.6495715Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6495824Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6496004Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6496081Z     
2025-02-24T15:52:32.6496190Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6496294Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6496437Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6496553Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6496624Z             )
2025-02-24T15:52:32.6496699Z     
2025-02-24T15:52:32.6496800Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6496911Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6497004Z             if data.stackgroup:
2025-02-24T15:52:32.6497089Z                 assert (
2025-02-24T15:52:32.6497189Z                     data.stackgroup
2025-02-24T15:52:32.6497268Z                     == getattr(
2025-02-24T15:52:32.6497384Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6497484Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6497570Z                     ).decode()
2025-02-24T15:52:32.6497644Z                 )
2025-02-24T15:52:32.6497729Z             if data.name:
2025-02-24T15:52:32.6497807Z                 assert (
2025-02-24T15:52:32.6498551Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6498558Z 
2025-02-24T15:52:32.6499239Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T15:52:32.6499250Z 
2025-02-24T15:52:32.6499576Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6499587Z 
2025-02-24T15:52:32.6500288Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T15:52:32.6500294Z 
2025-02-24T15:52:32.6500616Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6500620Z 
2025-02-24T15:52:32.6501469Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T15:52:32.6501475Z 
2025-02-24T15:52:32.6501786Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6501795Z 
2025-02-24T15:52:32.6502456Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T15:52:32.6502465Z 
2025-02-24T15:52:32.6502780Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6502785Z 
2025-02-24T15:52:32.6503430Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T15:52:32.6503435Z 
2025-02-24T15:52:32.6503749Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6503754Z 
2025-02-24T15:52:32.6504398Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T15:52:32.6504825Z 
2025-02-24T15:52:32.6505139Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6505144Z 
2025-02-24T15:52:32.6505799Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T15:52:32.6505805Z 
2025-02-24T15:52:32.6506117Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6506122Z 
2025-02-24T15:52:32.6506779Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T15:52:32.6506790Z 
2025-02-24T15:52:32.6507105Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6507115Z 
2025-02-24T15:52:32.6507769Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T15:52:32.6507774Z 
2025-02-24T15:52:32.6508103Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6508108Z 
2025-02-24T15:52:32.6508811Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T15:52:32.6508817Z 
2025-02-24T15:52:32.6509127Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6509135Z 
2025-02-24T15:52:32.6509799Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T15:52:32.6509809Z 
2025-02-24T15:52:32.6510118Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6510127Z 
2025-02-24T15:52:32.6510820Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T15:52:32.6510825Z 
2025-02-24T15:52:32.6511257Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6511263Z 
2025-02-24T15:52:32.6511923Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T15:52:32.6511939Z 
2025-02-24T15:52:32.6512256Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6512265Z 
2025-02-24T15:52:32.6512926Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T15:52:32.6512931Z 
2025-02-24T15:52:32.6513246Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6513251Z 
2025-02-24T15:52:32.6513909Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T15:52:32.6513915Z 
2025-02-24T15:52:32.6514348Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6514353Z 
2025-02-24T15:52:32.6515066Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T15:52:32.6515173Z 
2025-02-24T15:52:32.6515493Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6515498Z 
2025-02-24T15:52:32.6516200Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T15:52:32.6516205Z 
2025-02-24T15:52:32.6516513Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6516525Z 
2025-02-24T15:52:32.6517191Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T15:52:32.6517202Z 
2025-02-24T15:52:32.6517508Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6517516Z 
2025-02-24T15:52:32.6518179Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T15:52:32.6518185Z 
2025-02-24T15:52:32.6518493Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6518498Z 
2025-02-24T15:52:32.6519208Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T15:52:32.6519218Z 
2025-02-24T15:52:32.6519533Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6519542Z 
2025-02-24T15:52:32.6520240Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T15:52:32.6520245Z 
2025-02-24T15:52:32.6520555Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6520559Z 
2025-02-24T15:52:32.6521351Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T15:52:32.6521364Z 
2025-02-24T15:52:32.6521680Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6521684Z 
2025-02-24T15:52:32.6522345Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T15:52:32.6522355Z 
2025-02-24T15:52:32.6522664Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6522674Z 
2025-02-24T15:52:32.6523328Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T15:52:32.6523334Z 
2025-02-24T15:52:32.6523652Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6523657Z 
2025-02-24T15:52:32.6524483Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T15:52:32.6524587Z 
2025-02-24T15:52:32.6524902Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6524906Z 
2025-02-24T15:52:32.6525571Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T15:52:32.6525577Z 
2025-02-24T15:52:32.6525885Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6525890Z 
2025-02-24T15:52:32.6526607Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T15:52:32.6526617Z 
2025-02-24T15:52:32.6526934Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6526944Z 
2025-02-24T15:52:32.6527637Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T15:52:32.6527642Z 
2025-02-24T15:52:32.6527959Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6527963Z 
2025-02-24T15:52:32.6528612Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T15:52:32.6528622Z 
2025-02-24T15:52:32.6528931Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6528939Z 
2025-02-24T15:52:32.6529634Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T15:52:32.6529644Z 
2025-02-24T15:52:32.6529954Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6529963Z 
2025-02-24T15:52:32.6530670Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T15:52:32.6530676Z 
2025-02-24T15:52:32.6531155Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6531161Z 
2025-02-24T15:52:32.6531822Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T15:52:32.6531832Z 
2025-02-24T15:52:32.6532144Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6532149Z 
2025-02-24T15:52:32.6532800Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T15:52:32.6532805Z 
2025-02-24T15:52:32.6533116Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6533120Z 
2025-02-24T15:52:32.6533836Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T15:52:32.6533955Z 
2025-02-24T15:52:32.6534274Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6534381Z 
2025-02-24T15:52:32.6535060Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T15:52:32.6535065Z 
2025-02-24T15:52:32.6535384Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6535388Z 
2025-02-24T15:52:32.6536057Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T15:52:32.6536068Z 
2025-02-24T15:52:32.6536377Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6536386Z 
2025-02-24T15:52:32.6537048Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T15:52:32.6537058Z 
2025-02-24T15:52:32.6537365Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6537369Z 
2025-02-24T15:52:32.6538025Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T15:52:32.6538030Z 
2025-02-24T15:52:32.6538342Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6538347Z 
2025-02-24T15:52:32.6539038Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T15:52:32.6539052Z 
2025-02-24T15:52:32.6539365Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6539369Z 
2025-02-24T15:52:32.6540074Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T15:52:32.6540082Z 
2025-02-24T15:52:32.6540392Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6540397Z 
2025-02-24T15:52:32.6541161Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T15:52:32.6541171Z 
2025-02-24T15:52:32.6541259Z                     data.name
2025-02-24T15:52:32.6541340Z                     == getattr(
2025-02-24T15:52:32.6541464Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6541562Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6541649Z                     ).decode()
2025-02-24T15:52:32.6541722Z                 )
2025-02-24T15:52:32.6541824Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6541956Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6542035Z             )
2025-02-24T15:52:32.6542131Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6542268Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6542344Z             )
2025-02-24T15:52:32.6542353Z 
2025-02-24T15:52:32.6542505Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6542632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6542857Z 
2025-02-24T15:52:32.6543383Z args = (<function assert_allclose.<locals>.compare at 0x7f88708bf7e0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:52:32.6543604Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6543875Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6543880Z 
2025-02-24T15:52:32.6543993Z     @wraps(func)
2025-02-24T15:52:32.6544088Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6544177Z         with self._recreate_cm():
2025-02-24T15:52:32.6544276Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6544366Z E           AssertionError: 
2025-02-24T15:52:32.6544484Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6544558Z E           
2025-02-24T15:52:32.6544674Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6544778Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.6544887Z E           Max relative difference: 15766.1580412
2025-02-24T15:52:32.6545048Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6545147Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6545296Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6545389Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6545393Z 
2025-02-24T15:52:32.6545609Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6545816Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T15:52:32.6545821Z 
2025-02-24T15:52:32.6546094Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930290>
2025-02-24T15:52:32.6546421Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885a8fda60>
2025-02-24T15:52:32.6546530Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6546628Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6546743Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6546857Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6547069Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6547325Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T15:52:32.6547331Z 
2025-02-24T15:52:32.6547420Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6547597Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6547670Z     ):
2025-02-24T15:52:32.6547777Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6547887Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6548075Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6548166Z     
2025-02-24T15:52:32.6548308Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6548414Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6548560Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6548678Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6548752Z             )
2025-02-24T15:52:32.6548831Z     
2025-02-24T15:52:32.6548935Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6549051Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6549140Z             if data.stackgroup:
2025-02-24T15:52:32.6549226Z                 assert (
2025-02-24T15:52:32.6549314Z                     data.stackgroup
2025-02-24T15:52:32.6549399Z                     == getattr(
2025-02-24T15:52:32.6549513Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6549705Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6549791Z                     ).decode()
2025-02-24T15:52:32.6549944Z                 )
2025-02-24T15:52:32.6550030Z             if data.name:
2025-02-24T15:52:32.6550108Z                 assert (
2025-02-24T15:52:32.6550193Z                     data.name
2025-02-24T15:52:32.6550272Z                     == getattr(
2025-02-24T15:52:32.6550388Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6550482Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6550567Z                     ).decode()
2025-02-24T15:52:32.6550644Z                 )
2025-02-24T15:52:32.6550746Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6550880Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6551053Z             )
2025-02-24T15:52:32.6551154Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6551283Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6551365Z             )
2025-02-24T15:52:32.6551369Z 
2025-02-24T15:52:32.6551520Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6551639Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6551644Z 
2025-02-24T15:52:32.6552121Z args = (<function assert_allclose.<locals>.compare at 0x7f88708df7e0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:52:32.6552231Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6552486Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6552491Z 
2025-02-24T15:52:32.6552568Z     @wraps(func)
2025-02-24T15:52:32.6552660Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6552750Z         with self._recreate_cm():
2025-02-24T15:52:32.6552853Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6552940Z E           AssertionError: 
2025-02-24T15:52:32.6553058Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6553137Z E           
2025-02-24T15:52:32.6553245Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6553355Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.6553453Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6553613Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6553703Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6553857Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6553942Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6553946Z 
2025-02-24T15:52:32.6554158Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6554368Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T15:52:32.6554379Z 
2025-02-24T15:52:32.6554645Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930380>
2025-02-24T15:52:32.6554974Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8862727bf0>
2025-02-24T15:52:32.6555075Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6555173Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6555279Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6555391Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6555599Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6555854Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T15:52:32.6555859Z 
2025-02-24T15:52:32.6555956Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6556250Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6556329Z     ):
2025-02-24T15:52:32.6556426Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6556645Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6556822Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6556899Z     
2025-02-24T15:52:32.6557011Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6557115Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6557259Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6557375Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6557456Z             )
2025-02-24T15:52:32.6557527Z     
2025-02-24T15:52:32.6557636Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6557744Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6557846Z             if data.stackgroup:
2025-02-24T15:52:32.6557926Z                 assert (
2025-02-24T15:52:32.6558021Z                     data.stackgroup
2025-02-24T15:52:32.6558111Z                     == getattr(
2025-02-24T15:52:32.6558226Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6558325Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6558412Z                     ).decode()
2025-02-24T15:52:32.6558487Z                 )
2025-02-24T15:52:32.6558578Z             if data.name:
2025-02-24T15:52:32.6558662Z                 assert (
2025-02-24T15:52:32.6558743Z                     data.name
2025-02-24T15:52:32.6558829Z                     == getattr(
2025-02-24T15:52:32.6558935Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6559037Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6559116Z                     ).decode()
2025-02-24T15:52:32.6559196Z                 )
2025-02-24T15:52:32.6559295Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6559432Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6559511Z             )
2025-02-24T15:52:32.6559610Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6559740Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6559832Z             )
2025-02-24T15:52:32.6559836Z 
2025-02-24T15:52:32.6559988Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6560103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6560107Z 
2025-02-24T15:52:32.6560582Z args = (<function assert_allclose.<locals>.compare at 0x7f88708dcc20>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:52:32.6560685Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6561037Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6561047Z 
2025-02-24T15:52:32.6561132Z     @wraps(func)
2025-02-24T15:52:32.6561222Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6561318Z         with self._recreate_cm():
2025-02-24T15:52:32.6561412Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6561507Z E           AssertionError: 
2025-02-24T15:52:32.6561618Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6561698Z E           
2025-02-24T15:52:32.6561797Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6561938Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.6562037Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6562198Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6562290Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6562443Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6562657Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6562661Z 
2025-02-24T15:52:32.6562987Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6563199Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T15:52:32.6563204Z 
2025-02-24T15:52:32.6563471Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930440>
2025-02-24T15:52:32.6563790Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f886272f050>
2025-02-24T15:52:32.6563891Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6563985Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6564095Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6564197Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6564418Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6564667Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T15:52:32.6564677Z 
2025-02-24T15:52:32.6564773Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6564947Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6565025Z     ):
2025-02-24T15:52:32.6565125Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6565239Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6565418Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6565491Z     
2025-02-24T15:52:32.6565609Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6565707Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6565855Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6565964Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6566051Z             )
2025-02-24T15:52:32.6566122Z     
2025-02-24T15:52:32.6566230Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6566343Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6566437Z             if data.stackgroup:
2025-02-24T15:52:32.6566516Z                 assert (
2025-02-24T15:52:32.6566611Z                     data.stackgroup
2025-02-24T15:52:32.6566698Z                     == getattr(
2025-02-24T15:52:32.6566807Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6566912Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6566992Z                     ).decode()
2025-02-24T15:52:32.6567072Z                 )
2025-02-24T15:52:32.6567154Z             if data.name:
2025-02-24T15:52:32.6567236Z                 assert (
2025-02-24T15:52:32.6567317Z                     data.name
2025-02-24T15:52:32.6567405Z                     == getattr(
2025-02-24T15:52:32.6567515Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6567619Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6567703Z                     ).decode()
2025-02-24T15:52:32.6567785Z                 )
2025-02-24T15:52:32.6567888Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6568016Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6568096Z             )
2025-02-24T15:52:32.6568190Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6568320Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6568395Z             )
2025-02-24T15:52:32.6568399Z 
2025-02-24T15:52:32.6568552Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6568669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6568674Z 
2025-02-24T15:52:32.6569153Z args = (<function assert_allclose.<locals>.compare at 0x7f88708df2e0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:52:32.6569424Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6569671Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6569677Z 
2025-02-24T15:52:32.6569762Z     @wraps(func)
2025-02-24T15:52:32.6569848Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6569946Z         with self._recreate_cm():
2025-02-24T15:52:32.6570037Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6570130Z E           AssertionError: 
2025-02-24T15:52:32.6570239Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6570319Z E           
2025-02-24T15:52:32.6570427Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6570529Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.6570630Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6570786Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6570885Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6571136Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6571229Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6571233Z 
2025-02-24T15:52:32.6571436Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6571648Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T15:52:32.6571653Z 
2025-02-24T15:52:32.6571925Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930500>
2025-02-24T15:52:32.6572242Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f88627240e0>
2025-02-24T15:52:32.6572346Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6572441Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6572550Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6572656Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6572871Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6573123Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T15:52:32.6573133Z 
2025-02-24T15:52:32.6573222Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6573402Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6573475Z     ):
2025-02-24T15:52:32.6573579Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6573691Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6573870Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6573942Z     
2025-02-24T15:52:32.6574062Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6574163Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6574310Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6574428Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6574502Z             )
2025-02-24T15:52:32.6574580Z     
2025-02-24T15:52:32.6574680Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6574794Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6574881Z             if data.stackgroup:
2025-02-24T15:52:32.6574965Z                 assert (
2025-02-24T15:52:32.6575053Z                     data.stackgroup
2025-02-24T15:52:32.6575137Z                     == getattr(
2025-02-24T15:52:32.6575246Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6575351Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6575431Z                     ).decode()
2025-02-24T15:52:32.6575633Z                 )
2025-02-24T15:52:32.6575720Z             if data.name:
2025-02-24T15:52:32.6575799Z                 assert (
2025-02-24T15:52:32.6575986Z                     data.name
2025-02-24T15:52:32.6576067Z                     == getattr(
2025-02-24T15:52:32.6576178Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6576272Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6576358Z                     ).decode()
2025-02-24T15:52:32.6576432Z                 )
2025-02-24T15:52:32.6576532Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6576660Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6576739Z             )
2025-02-24T15:52:32.6576832Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6576965Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6577045Z             )
2025-02-24T15:52:32.6577050Z 
2025-02-24T15:52:32.6577204Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6577325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6577338Z 
2025-02-24T15:52:32.6577811Z args = (<function assert_allclose.<locals>.compare at 0x7f88708beac0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:52:32.6577922Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6578168Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6578179Z 
2025-02-24T15:52:32.6578262Z     @wraps(func)
2025-02-24T15:52:32.6578354Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6578445Z         with self._recreate_cm():
2025-02-24T15:52:32.6578540Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6578626Z E           AssertionError: 
2025-02-24T15:52:32.6578741Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6578823Z E           
2025-02-24T15:52:32.6578928Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6579036Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.6579141Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6579291Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6579383Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6579535Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6579621Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6579625Z 
2025-02-24T15:52:32.6579834Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6580038Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T15:52:32.6580043Z 
2025-02-24T15:52:32.6580313Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9305c0>
2025-02-24T15:52:32.6580630Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887d02c830>
2025-02-24T15:52:32.6580738Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6580833Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6581041Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6581147Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6581350Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6581603Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T15:52:32.6581607Z 
2025-02-24T15:52:32.6581695Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6581871Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6581944Z     ):
2025-02-24T15:52:32.6582168Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6582283Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6582459Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6582637Z     
2025-02-24T15:52:32.6582750Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6582852Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6582997Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6583110Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6583183Z             )
2025-02-24T15:52:32.6583262Z     
2025-02-24T15:52:32.6583366Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6583479Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6583566Z             if data.stackgroup:
2025-02-24T15:52:32.6583648Z                 assert (
2025-02-24T15:52:32.6583740Z                     data.stackgroup
2025-02-24T15:52:32.6583823Z                     == getattr(
2025-02-24T15:52:32.6583936Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6584038Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6584121Z                     ).decode()
2025-02-24T15:52:32.6584195Z                 )
2025-02-24T15:52:32.6584280Z             if data.name:
2025-02-24T15:52:32.6584357Z                 assert (
2025-02-24T15:52:32.6584441Z                     data.name
2025-02-24T15:52:32.6584517Z                     == getattr(
2025-02-24T15:52:32.6584628Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6584722Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6584807Z                     ).decode()
2025-02-24T15:52:32.6584885Z                 )
2025-02-24T15:52:32.6584979Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6585111Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6585190Z             )
2025-02-24T15:52:32.6585300Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6585428Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6585511Z             )
2025-02-24T15:52:32.6585515Z 
2025-02-24T15:52:32.6585661Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6585782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6585786Z 
2025-02-24T15:52:32.6586256Z args = (<function assert_allclose.<locals>.compare at 0x7f8870887420>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:52:32.6586360Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6586610Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6586615Z 
2025-02-24T15:52:32.6586692Z     @wraps(func)
2025-02-24T15:52:32.6586787Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6586881Z         with self._recreate_cm():
2025-02-24T15:52:32.6586978Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6587068Z E           AssertionError: 
2025-02-24T15:52:32.6587186Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6587266Z E           
2025-02-24T15:52:32.6587370Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6587477Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.6587576Z E           Max relative difference: 15766.15804934
2025-02-24T15:52:32.6587731Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6587820Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6587972Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6588059Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6588151Z 
2025-02-24T15:52:32.6588395Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6588612Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T15:52:32.6588708Z 
2025-02-24T15:52:32.6588974Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930680>
2025-02-24T15:52:32.6589295Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8885091b20>
2025-02-24T15:52:32.6589395Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6589493Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6589596Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6589702Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6589907Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6590157Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T15:52:32.6590167Z 
2025-02-24T15:52:32.6590260Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6590432Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6590516Z     ):
2025-02-24T15:52:32.6590613Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6590727Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6590900Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6591083Z     
2025-02-24T15:52:32.6591193Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6591297Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6591447Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6591556Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6591635Z             )
2025-02-24T15:52:32.6591706Z     
2025-02-24T15:52:32.6591811Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6591923Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6592015Z             if data.stackgroup:
2025-02-24T15:52:32.6592098Z                 assert (
2025-02-24T15:52:32.6592191Z                     data.stackgroup
2025-02-24T15:52:32.6592269Z                     == getattr(
2025-02-24T15:52:32.6592382Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6592479Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6592566Z                     ).decode()
2025-02-24T15:52:32.6592648Z                 )
2025-02-24T15:52:32.6592729Z             if data.name:
2025-02-24T15:52:32.6592810Z                 assert (
2025-02-24T15:52:32.6592889Z                     data.name
2025-02-24T15:52:32.6592971Z                     == getattr(
2025-02-24T15:52:32.6593074Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6593173Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6593256Z                     ).decode()
2025-02-24T15:52:32.6593336Z                 )
2025-02-24T15:52:32.6593429Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6593564Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6593638Z             )
2025-02-24T15:52:32.6593737Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6593868Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6593941Z             )
2025-02-24T15:52:32.6593945Z 
2025-02-24T15:52:32.6594097Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6594211Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6594217Z 
2025-02-24T15:52:32.6594691Z args = (<function assert_allclose.<locals>.compare at 0x7f88708de3e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:52:32.6594922Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6595176Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6595282Z 
2025-02-24T15:52:32.6595367Z     @wraps(func)
2025-02-24T15:52:32.6595453Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6595549Z         with self._recreate_cm():
2025-02-24T15:52:32.6595644Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6595735Z E           AssertionError: 
2025-02-24T15:52:32.6595843Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6595922Z E           
2025-02-24T15:52:32.6596025Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6596133Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.6596232Z E           Max relative difference: 15766.15804934
2025-02-24T15:52:32.6596389Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6596492Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6596639Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6596739Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6596744Z 
2025-02-24T15:52:32.6596946Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6597160Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T15:52:32.6597164Z 
2025-02-24T15:52:32.6597428Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930740>
2025-02-24T15:52:32.6597749Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f88638ed430>
2025-02-24T15:52:32.6597853Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6597942Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6598051Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6598156Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6598365Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6598622Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T15:52:32.6598627Z 
2025-02-24T15:52:32.6598721Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6598891Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6598971Z     ):
2025-02-24T15:52:32.6599074Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6599182Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6599364Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6599436Z     
2025-02-24T15:52:32.6599552Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6599648Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6599802Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6599912Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6599994Z             )
2025-02-24T15:52:32.6600066Z     
2025-02-24T15:52:32.6600171Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6600281Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6600374Z             if data.stackgroup:
2025-02-24T15:52:32.6600458Z                 assert (
2025-02-24T15:52:32.6600546Z                     data.stackgroup
2025-02-24T15:52:32.6600629Z                     == getattr(
2025-02-24T15:52:32.6600735Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6600841Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6601022Z                     ).decode()
2025-02-24T15:52:32.6601102Z                 )
2025-02-24T15:52:32.6601181Z             if data.name:
2025-02-24T15:52:32.6601261Z                 assert (
2025-02-24T15:52:32.6601460Z                     data.name
2025-02-24T15:52:32.6601546Z                     == getattr(
2025-02-24T15:52:32.6601655Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6601857Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6601941Z                     ).decode()
2025-02-24T15:52:32.6602014Z                 )
2025-02-24T15:52:32.6602113Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6602240Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6602318Z             )
2025-02-24T15:52:32.6602410Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6602539Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6602612Z             )
2025-02-24T15:52:32.6602616Z 
2025-02-24T15:52:32.6602771Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6602889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6602906Z 
2025-02-24T15:52:32.6603377Z args = (<function assert_allclose.<locals>.compare at 0x7f885954b100>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:52:32.6603491Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6603736Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6603740Z 
2025-02-24T15:52:32.6603823Z     @wraps(func)
2025-02-24T15:52:32.6603910Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6604005Z         with self._recreate_cm():
2025-02-24T15:52:32.6604096Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6604187Z E           AssertionError: 
2025-02-24T15:52:32.6604303Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6604377Z E           
2025-02-24T15:52:32.6604483Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6604590Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.6604695Z E           Max relative difference: 15766.15804934
2025-02-24T15:52:32.6604853Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6604946Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6605094Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6605187Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6605192Z 
2025-02-24T15:52:32.6605402Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6605611Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T15:52:32.6605615Z 
2025-02-24T15:52:32.6605886Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930800>
2025-02-24T15:52:32.6606201Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885eed6a50>
2025-02-24T15:52:32.6606310Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6606403Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6606517Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6606619Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6606832Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6607085Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T15:52:32.6607090Z 
2025-02-24T15:52:32.6607180Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6607353Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6607429Z     ):
2025-02-24T15:52:32.6607533Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6607641Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6607927Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6607998Z     
2025-02-24T15:52:32.6608126Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6608366Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6608510Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6608624Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6608698Z             )
2025-02-24T15:52:32.6608773Z     
2025-02-24T15:52:32.6608876Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6608989Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6609078Z             if data.stackgroup:
2025-02-24T15:52:32.6609161Z                 assert (
2025-02-24T15:52:32.6609246Z                     data.stackgroup
2025-02-24T15:52:32.6609330Z                     == getattr(
2025-02-24T15:52:32.6609435Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6609550Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6609634Z                     ).decode()
2025-02-24T15:52:32.6609708Z                 )
2025-02-24T15:52:32.6609801Z             if data.name:
2025-02-24T15:52:32.6609878Z                 assert (
2025-02-24T15:52:32.6609965Z                     data.name
2025-02-24T15:52:32.6610043Z                     == getattr(
2025-02-24T15:52:32.6610153Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6610246Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6610333Z                     ).decode()
2025-02-24T15:52:32.6610404Z                 )
2025-02-24T15:52:32.6610504Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6610634Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6610715Z             )
2025-02-24T15:52:32.6610817Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6611040Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6611129Z             )
2025-02-24T15:52:32.6611133Z 
2025-02-24T15:52:32.6611281Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6611412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6611416Z 
2025-02-24T15:52:32.6611884Z args = (<function assert_allclose.<locals>.compare at 0x7f88708df060>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:52:32.6611990Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6612238Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6612243Z 
2025-02-24T15:52:32.6612320Z     @wraps(func)
2025-02-24T15:52:32.6612411Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6612500Z         with self._recreate_cm():
2025-02-24T15:52:32.6612596Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6612687Z E           AssertionError: 
2025-02-24T15:52:32.6612804Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6612882Z E           
2025-02-24T15:52:32.6612989Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6613090Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.6613194Z E           Max relative difference: 15766.15804934
2025-02-24T15:52:32.6613353Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6613442Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6613595Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6613681Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6613686Z 
2025-02-24T15:52:32.6613895Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6614015Z =============================== warnings summary ===============================
2025-02-24T15:52:32.6614275Z tardis/io/configuration/config_validator.py:6
2025-02-24T15:52:32.6614386Z tardis/io/configuration/config_validator.py:6
2025-02-24T15:52:32.6614803Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T15:52:32.6614889Z   
2025-02-24T15:52:32.6616012Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T15:52:32.6616019Z 
2025-02-24T15:52:32.6616264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T15:52:32.6616628Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T15:52:32.6616710Z   
2025-02-24T15:52:32.6616866Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T15:52:32.6617034Z   given by the platformdirs library.  To remove this warning and
2025-02-24T15:52:32.6617207Z   see the appropriate new directories, set the environment variable
2025-02-24T15:52:32.6617356Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T15:52:32.6617517Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T15:52:32.6617522Z 
2025-02-24T15:52:32.6621980Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T15:52:32.6622292Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:52:32.6622520Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T15:52:32.6622598Z   
2025-02-24T15:52:32.6622669Z   
2025-02-24T15:52:32.6622891Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:52:32.6623172Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T15:52:32.6623183Z 
2025-02-24T15:52:32.6623391Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T15:52:32.6623621Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T15:52:32.6623860Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T15:52:32.6624045Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T15:52:32.6624364Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T15:52:32.6624443Z   
2025-02-24T15:52:32.6624563Z   The current CMFGEN model parser is deprecated
2025-02-24T15:52:32.6624568Z 
2025-02-24T15:52:32.6624681Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T15:52:32.6624864Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T15:52:32.6625181Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T15:52:32.6625262Z   
2025-02-24T15:52:32.6625371Z   The current CMFGEN model parser is deprecated
2025-02-24T15:52:32.6625376Z 
2025-02-24T15:52:32.6625587Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T15:52:32.6625957Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T15:52:32.6626034Z   
2025-02-24T15:52:32.6626487Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T15:52:32.6626493Z 
2025-02-24T15:52:32.6626599Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T15:52:32.6626723Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T15:52:32.6626909Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T15:52:32.6627386Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T15:52:32.6627459Z   
2025-02-24T15:52:32.6627576Z   v_inner_boundary < 0, assuming default value
2025-02-24T15:52:32.6627686Z 
2025-02-24T15:52:32.6627794Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T15:52:32.6627919Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T15:52:32.6628099Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T15:52:32.6628365Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T15:52:32.6628441Z   
2025-02-24T15:52:32.6628545Z   v_outer_boundary < 0, assuming default value
2025-02-24T15:52:32.6628550Z 
2025-02-24T15:52:32.6629020Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T15:52:32.6629332Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T15:52:32.6629414Z   
2025-02-24T15:52:32.6629691Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T15:52:32.6630150Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T15:52:32.6630225Z   
2025-02-24T15:52:32.6630746Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T15:52:32.6630752Z 
2025-02-24T15:52:32.6631097Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T15:52:32.6631309Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T15:52:32.6631521Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T15:52:32.6631776Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T15:52:32.6631849Z   
2025-02-24T15:52:32.6632055Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T15:52:32.6632060Z 
2025-02-24T15:52:32.6632271Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T15:52:32.6632475Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T15:52:32.6632545Z   
2025-02-24T15:52:32.6632881Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T15:52:32.6632888Z 
2025-02-24T15:52:32.6633096Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T15:52:32.6633303Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T15:52:32.6633379Z   
2025-02-24T15:52:32.6633727Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T15:52:32.6633737Z 
2025-02-24T15:52:32.6633953Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T15:52:32.6634077Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T15:52:32.6634151Z   
2025-02-24T15:52:32.6635197Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T15:52:32.6635287Z   Exception origin:
2025-02-24T15:52:32.6635550Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T15:52:32.6635643Z       raise TypeError(msg) from None
2025-02-24T15:52:32.6635741Z   [0m[0m
2025-02-24T15:52:32.6635746Z 
2025-02-24T15:52:32.6636094Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T15:52:32.6636516Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T15:52:32.6636692Z   
2025-02-24T15:52:32.6637575Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T15:52:32.6637581Z 
2025-02-24T15:52:32.6637942Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6638295Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6638643Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6638991Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6639337Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6639687Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6640039Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:52:32.6640115Z   
2025-02-24T15:52:32.6640308Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T15:52:32.6640499Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:52:32.6640738Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:52:32.6640743Z 
2025-02-24T15:52:32.6641207Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6641560Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6641917Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:52:32.6641992Z   
2025-02-24T15:52:32.6642173Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T15:52:32.6642350Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:52:32.6642591Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:52:32.6642596Z 
2025-02-24T15:52:32.6642953Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6643298Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:52:32.6643377Z   
2025-02-24T15:52:32.6643563Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T15:52:32.6643736Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:52:32.6643972Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:52:32.6643977Z 
2025-02-24T15:52:32.6644401Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T15:52:32.6644731Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:814: DeprecationWarning:
2025-02-24T15:52:32.6644803Z   
2025-02-24T15:52:32.6645045Z   QgridWidget._df_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T15:52:32.6645050Z 
2025-02-24T15:52:32.6645315Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:52:32.6645648Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T15:52:32.6645726Z   
2025-02-24T15:52:32.6645899Z   
2025-02-24T15:52:32.6646108Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:52:32.6646370Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T15:52:32.6646376Z 
2025-02-24T15:52:32.6646638Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:52:32.6646851Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T15:52:32.6646923Z   
2025-02-24T15:52:32.6646996Z   
2025-02-24T15:52:32.6647194Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:52:32.6647376Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T15:52:32.6647381Z 
2025-02-24T15:52:32.6647636Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:52:32.6647884Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T15:52:32.6647961Z   
2025-02-24T15:52:32.6648155Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T15:52:32.6648160Z 
2025-02-24T15:52:32.6648358Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T15:52:32.6648363Z 
2025-02-24T15:52:32.6648528Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-02-24T15:52:32.6648657Z Coverage HTML written to dir coverage_html_report
2025-02-24T15:52:32.6648760Z Coverage XML written to file coverage.xml
2025-02-24T15:52:32.6648765Z 
2025-02-24T15:52:32.6648896Z =========================== short test summary info ============================
2025-02-24T15:52:32.6649306Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T15:52:32.6649317Z 
2025-02-24T15:52:32.6649452Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T15:52:32.6649576Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:52:32.6649648Z        ...
2025-02-24T15:52:32.6649741Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:52:32.6649868Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:52:32.6649989Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:52:32.6650060Z        ...
2025-02-24T15:52:32.6650149Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:52:32.6650266Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:52:32.6650377Z At positional index 54, first diff: 14 != 12
2025-02-24T15:52:32.6650654Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T15:52:32.6650761Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6650770Z 
2025-02-24T15:52:32.6650874Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:52:32.6651101Z Max absolute difference: 0.99984222
2025-02-24T15:52:32.6651209Z Max relative difference: 6337.12154973
2025-02-24T15:52:32.6651295Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.6651384Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.6651463Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.6651551Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.6651630Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.6651714Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.6652319Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T15:52:32.6652821Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6652967Z 
2025-02-24T15:52:32.6653106Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6653320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6653397Z        ...
2025-02-24T15:52:32.6653482Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6653616Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6653728Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6653803Z        ...
2025-02-24T15:52:32.6653890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6654013Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6654120Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6654639Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6654650Z 
2025-02-24T15:52:32.6654748Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6655114Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6655453Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6655791Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6656301Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6656312Z 
2025-02-24T15:52:32.6656406Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6656770Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6657142Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6657522Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6658004Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6658088Z 
2025-02-24T15:52:32.6658216Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6658406Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6658482Z        ...
2025-02-24T15:52:32.6658563Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6658692Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6658801Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6658876Z        ...
2025-02-24T15:52:32.6658958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6659083Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6659183Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6659709Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6659720Z 
2025-02-24T15:52:32.6659849Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6659954Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6660040Z        ...
2025-02-24T15:52:32.6660123Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6660249Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6660357Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6660436Z        ...
2025-02-24T15:52:32.6660517Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6660642Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6660743Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6661340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6661347Z 
2025-02-24T15:52:32.6661476Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6661587Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6661663Z        ...
2025-02-24T15:52:32.6661751Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6661906Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6662014Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6662088Z        ...
2025-02-24T15:52:32.6662169Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6662295Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6662395Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6662913Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6662919Z 
2025-02-24T15:52:32.6663049Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6663160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6663235Z        ...
2025-02-24T15:52:32.6663316Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6663447Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6663554Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6663633Z        ...
2025-02-24T15:52:32.6663715Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6663843Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6663947Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6664457Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6664462Z 
2025-02-24T15:52:32.6664589Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6664697Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6664905Z        ...
2025-02-24T15:52:32.6664987Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6665114Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6665329Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6665406Z        ...
2025-02-24T15:52:32.6665493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6665616Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6665720Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6666213Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6666219Z 
2025-02-24T15:52:32.6666348Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6666454Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6666529Z        ...
2025-02-24T15:52:32.6666618Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6666742Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6666865Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6666935Z        ...
2025-02-24T15:52:32.6667022Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6667142Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6667246Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6667716Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6667722Z 
2025-02-24T15:52:32.6667849Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6667956Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6668032Z        ...
2025-02-24T15:52:32.6668119Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6668243Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6668356Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6668432Z        ...
2025-02-24T15:52:32.6668519Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6668637Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6668739Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6669226Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6669231Z 
2025-02-24T15:52:32.6669330Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6669699Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6670031Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6670361Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6670850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6671067Z 
2025-02-24T15:52:32.6671284Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6671657Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6672031Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6672409Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6672899Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6672905Z 
2025-02-24T15:52:32.6673034Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6673142Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6673218Z        ...
2025-02-24T15:52:32.6673301Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6673434Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6673546Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6673630Z        ...
2025-02-24T15:52:32.6673712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6673840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6673945Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6674447Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6674452Z 
2025-02-24T15:52:32.6674582Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6674687Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6674762Z        ...
2025-02-24T15:52:32.6674845Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6674971Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6675083Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6675159Z        ...
2025-02-24T15:52:32.6675251Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6675377Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6675482Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6675947Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6675952Z 
2025-02-24T15:52:32.6676086Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6676195Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6676271Z        ...
2025-02-24T15:52:32.6676354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6676482Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6676700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6676776Z        ...
2025-02-24T15:52:32.6676862Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6677082Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6677190Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6677692Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6677697Z 
2025-02-24T15:52:32.6677826Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6677931Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6678007Z        ...
2025-02-24T15:52:32.6678089Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6678215Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6678330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6678407Z        ...
2025-02-24T15:52:32.6678493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6678612Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6678721Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6679212Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6679218Z 
2025-02-24T15:52:32.6679344Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6679449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6679524Z        ...
2025-02-24T15:52:32.6679612Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6679733Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6679850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6679920Z        ...
2025-02-24T15:52:32.6680014Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6680133Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6680236Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6680715Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6680720Z 
2025-02-24T15:52:32.6680846Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6681062Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6681135Z        ...
2025-02-24T15:52:32.6681222Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6681341Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6681458Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6681530Z        ...
2025-02-24T15:52:32.6681617Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6681738Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6681842Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6682322Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6682332Z 
2025-02-24T15:52:32.6682454Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6682565Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6682635Z        ...
2025-02-24T15:52:32.6682721Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6682842Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6682956Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6683025Z        ...
2025-02-24T15:52:32.6683110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6683230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6683457Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6683945Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6684050Z 
2025-02-24T15:52:32.6684144Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6684512Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6684835Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6685179Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6685668Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6685673Z 
2025-02-24T15:52:32.6685766Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6686129Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6686509Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6686876Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6687347Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6687357Z 
2025-02-24T15:52:32.6687486Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6687594Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6687670Z        ...
2025-02-24T15:52:32.6687753Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6687879Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6687994Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6688066Z        ...
2025-02-24T15:52:32.6688154Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6688274Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6688460Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6688965Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6689047Z 
2025-02-24T15:52:32.6689176Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6689283Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6689362Z        ...
2025-02-24T15:52:32.6689446Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6689579Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6689694Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6689765Z        ...
2025-02-24T15:52:32.6689852Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6689971Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6690076Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6690541Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6690552Z 
2025-02-24T15:52:32.6690680Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6690785Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6690863Z        ...
2025-02-24T15:52:32.6691062Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6691187Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6691303Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6691374Z        ...
2025-02-24T15:52:32.6691466Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6691586Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6691693Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6692189Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6692209Z 
2025-02-24T15:52:32.6692332Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6692444Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6692516Z        ...
2025-02-24T15:52:32.6692602Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6692723Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6692838Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6692909Z        ...
2025-02-24T15:52:32.6692998Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6693117Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6693222Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6693718Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6693732Z 
2025-02-24T15:52:32.6693854Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6693975Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6694048Z        ...
2025-02-24T15:52:32.6694135Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6694258Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6694372Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6694442Z        ...
2025-02-24T15:52:32.6694530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6694649Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6694755Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6695239Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6695363Z 
2025-02-24T15:52:32.6695490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6695602Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6695795Z        ...
2025-02-24T15:52:32.6695884Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6696004Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6696118Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6696188Z        ...
2025-02-24T15:52:32.6696277Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6696402Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6696501Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6697009Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6697020Z 
2025-02-24T15:52:32.6697144Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6697256Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6697334Z        ...
2025-02-24T15:52:32.6697423Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6697545Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6697661Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6697738Z        ...
2025-02-24T15:52:32.6697820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6697945Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6698045Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6698568Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6698573Z 
2025-02-24T15:52:32.6698668Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6699042Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6699381Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6699707Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6700248Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6700253Z 
2025-02-24T15:52:32.6700352Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6700714Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6701195Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6701787Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6702280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6702291Z 
2025-02-24T15:52:32.6702421Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6702533Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6702610Z        ...
2025-02-24T15:52:32.6702700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6702823Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6702939Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6703010Z        ...
2025-02-24T15:52:32.6703104Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6703224Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6703331Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6703856Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6703867Z 
2025-02-24T15:52:32.6703991Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6704108Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6704180Z        ...
2025-02-24T15:52:32.6704272Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6704394Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6704513Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6704584Z        ...
2025-02-24T15:52:32.6704796Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6711368Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6711522Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6712068Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6712075Z 
2025-02-24T15:52:32.6712213Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6712336Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6712411Z        ...
2025-02-24T15:52:32.6712502Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6712641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6712756Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6712829Z        ...
2025-02-24T15:52:32.6712915Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6713044Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6713152Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6713690Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6713696Z 
2025-02-24T15:52:32.6713825Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6713934Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6714175Z        ...
2025-02-24T15:52:32.6714260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6714386Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6714626Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6714700Z        ...
2025-02-24T15:52:32.6714786Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6714914Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6715019Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6715541Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6715546Z 
2025-02-24T15:52:32.6715676Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6715787Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6715866Z        ...
2025-02-24T15:52:32.6715948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6716075Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6716193Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6716268Z        ...
2025-02-24T15:52:32.6716357Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6716479Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6716587Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6717094Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6717099Z 
2025-02-24T15:52:32.6717231Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6717342Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6717420Z        ...
2025-02-24T15:52:32.6717505Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6717639Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6717754Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6717835Z        ...
2025-02-24T15:52:32.6717924Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6718045Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6718150Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6718721Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6718727Z 
2025-02-24T15:52:32.6718856Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6718966Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6719044Z        ...
2025-02-24T15:52:32.6719127Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6719265Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6719382Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6719459Z        ...
2025-02-24T15:52:32.6719548Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6719670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6719778Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6720368Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6720373Z 
2025-02-24T15:52:32.6720475Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6720849Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6721504Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6721839Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6722431Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6722449Z 
2025-02-24T15:52:32.6722542Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6722915Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6723288Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6723663Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6724224Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6724230Z 
2025-02-24T15:52:32.6724360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6724470Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6724548Z        ...
2025-02-24T15:52:32.6724637Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6724766Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6724881Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6724958Z        ...
2025-02-24T15:52:32.6725044Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6725172Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6725283Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6725877Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6725882Z 
2025-02-24T15:52:32.6726012Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6726120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6726197Z        ...
2025-02-24T15:52:32.6726385Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6726514Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6726632Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6726784Z        ...
2025-02-24T15:52:32.6726874Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6726995Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6727102Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6727667Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6727672Z 
2025-02-24T15:52:32.6727815Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6727937Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6728016Z        ...
2025-02-24T15:52:32.6728109Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6728253Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6728376Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6728456Z        ...
2025-02-24T15:52:32.6728553Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6728676Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6728782Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6729373Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6729378Z 
2025-02-24T15:52:32.6729510Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6729619Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6729697Z        ...
2025-02-24T15:52:32.6729785Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6729913Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6730030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6730107Z        ...
2025-02-24T15:52:32.6730196Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6730317Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6730424Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6731118Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6731124Z 
2025-02-24T15:52:32.6731254Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6731369Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6731441Z        ...
2025-02-24T15:52:32.6731529Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6731654Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6731774Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6731847Z        ...
2025-02-24T15:52:32.6731940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6732061Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6732168Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6732741Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6732752Z 
2025-02-24T15:52:32.6732877Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6732990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6733063Z        ...
2025-02-24T15:52:32.6733153Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6733277Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6733519Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6733592Z        ...
2025-02-24T15:52:32.6733682Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6733905Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6734012Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6734544Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6734549Z 
2025-02-24T15:52:32.6734676Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6734789Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6734861Z        ...
2025-02-24T15:52:32.6734950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6735071Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6735192Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6735264Z        ...
2025-02-24T15:52:32.6735352Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6735486Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6735587Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6736127Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6736133Z 
2025-02-24T15:52:32.6736229Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6736601Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6736941Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6737279Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6737823Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6737833Z 
2025-02-24T15:52:32.6737933Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6738295Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6738673Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6739144Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6739760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6739765Z 
2025-02-24T15:52:32.6739897Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6740006Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6740085Z        ...
2025-02-24T15:52:32.6740176Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6740301Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6740425Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6740498Z        ...
2025-02-24T15:52:32.6740589Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6740720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6740827Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6741489Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6741495Z 
2025-02-24T15:52:32.6741624Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6741739Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6741813Z        ...
2025-02-24T15:52:32.6741903Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6742027Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6742143Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6742220Z        ...
2025-02-24T15:52:32.6742310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6742439Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6742544Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6743063Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6743073Z 
2025-02-24T15:52:32.6743200Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6743317Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6743391Z        ...
2025-02-24T15:52:32.6743482Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6743614Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6743729Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6743805Z        ...
2025-02-24T15:52:32.6743895Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6744019Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6744129Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6744678Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6744684Z 
2025-02-24T15:52:32.6744807Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6744920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6744993Z        ...
2025-02-24T15:52:32.6745082Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6745203Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6745318Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6745391Z        ...
2025-02-24T15:52:32.6745606Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6745733Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6745957Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6746504Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6746510Z 
2025-02-24T15:52:32.6746634Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6746746Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6746819Z        ...
2025-02-24T15:52:32.6746907Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6747030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6747148Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6747225Z        ...
2025-02-24T15:52:32.6747310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6747443Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6747542Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6748077Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6748082Z 
2025-02-24T15:52:32.6748205Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6748318Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6748392Z        ...
2025-02-24T15:52:32.6748481Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6748603Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6748719Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6748798Z        ...
2025-02-24T15:52:32.6748881Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6749015Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6749116Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6749648Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6749658Z 
2025-02-24T15:52:32.6749782Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6749895Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6749971Z        ...
2025-02-24T15:52:32.6750055Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6750182Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6750293Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6750371Z        ...
2025-02-24T15:52:32.6750455Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6750582Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6750685Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6751342Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6751352Z 
2025-02-24T15:52:32.6751449Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6751818Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6752150Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6752698Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6753239Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6753244Z 
2025-02-24T15:52:32.6753339Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6753699Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6754082Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6754459Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6754994Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6754999Z 
2025-02-24T15:52:32.6755126Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6755242Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6755315Z        ...
2025-02-24T15:52:32.6755407Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6755532Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6755656Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6755728Z        ...
2025-02-24T15:52:32.6755818Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6755939Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6756050Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6756612Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6756623Z 
2025-02-24T15:52:32.6756747Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6756863Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6756936Z        ...
2025-02-24T15:52:32.6757025Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6757145Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6757261Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6757338Z        ...
2025-02-24T15:52:32.6757421Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6757547Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6757742Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6758262Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6758340Z 
2025-02-24T15:52:32.6758466Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6758579Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6758652Z        ...
2025-02-24T15:52:32.6758741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6758862Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6758978Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6759055Z        ...
2025-02-24T15:52:32.6759139Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6759265Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6759367Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6759926Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6759937Z 
2025-02-24T15:52:32.6760062Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6760182Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6760263Z        ...
2025-02-24T15:52:32.6760357Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6760488Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6760627Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6760699Z        ...
2025-02-24T15:52:32.6760787Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6761019Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6761126Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6761679Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6761694Z 
2025-02-24T15:52:32.6761818Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6761962Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6762051Z        ...
2025-02-24T15:52:32.6762139Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6762260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6762375Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6762446Z        ...
2025-02-24T15:52:32.6762535Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6762656Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6762761Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6763296Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6763308Z 
2025-02-24T15:52:32.6763431Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6763542Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6763615Z        ...
2025-02-24T15:52:32.6763702Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6763824Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6763939Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6764011Z        ...
2025-02-24T15:52:32.6764098Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6764224Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6764322Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6764878Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6765021Z 
2025-02-24T15:52:32.6765148Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6765358Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6765430Z        ...
2025-02-24T15:52:32.6765520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6765642Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6765756Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6765829Z        ...
2025-02-24T15:52:32.6765914Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6766037Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6766137Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6766706Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6766717Z 
2025-02-24T15:52:32.6766813Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6767186Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6767522Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6767856Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6768444Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6768450Z 
2025-02-24T15:52:32.6768554Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6768915Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6769290Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6769669Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6770208Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6770369Z 
2025-02-24T15:52:32.6770495Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6770610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6770683Z        ...
2025-02-24T15:52:32.6770776Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6770899Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6771148Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6771220Z        ...
2025-02-24T15:52:32.6771308Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6771431Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6771536Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6772115Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6772131Z 
2025-02-24T15:52:32.6772260Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6772372Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6772444Z        ...
2025-02-24T15:52:32.6772531Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6772652Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6772766Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6772839Z        ...
2025-02-24T15:52:32.6772927Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6773049Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6773154Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6773701Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6773710Z 
2025-02-24T15:52:32.6773834Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6773954Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6774025Z        ...
2025-02-24T15:52:32.6774114Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6774235Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6774352Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6774425Z        ...
2025-02-24T15:52:32.6774512Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6774637Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6774735Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6775311Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6775320Z 
2025-02-24T15:52:32.6775442Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6775556Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6775656Z        ...
2025-02-24T15:52:32.6775809Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6776011Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6776205Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6776284Z        ...
2025-02-24T15:52:32.6776368Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6776497Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6776600Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6777181Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6777322Z 
2025-02-24T15:52:32.6777450Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6777564Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6777747Z        ...
2025-02-24T15:52:32.6777832Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6777958Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6778067Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6778143Z        ...
2025-02-24T15:52:32.6778227Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6778350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6778448Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6779011Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6779022Z 
2025-02-24T15:52:32.6779145Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6779255Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6779336Z        ...
2025-02-24T15:52:32.6779418Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6779544Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6779652Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6779728Z        ...
2025-02-24T15:52:32.6779809Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6779933Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6780032Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6780553Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6780559Z 
2025-02-24T15:52:32.6780691Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6780797Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6780874Z        ...
2025-02-24T15:52:32.6781078Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6781206Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6781316Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6781392Z        ...
2025-02-24T15:52:32.6781474Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6781600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6781698Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6782243Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6782248Z 
2025-02-24T15:52:32.6782346Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6782712Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6783047Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6783379Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6784128Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6784133Z 
2025-02-24T15:52:32.6784231Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6784600Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6784968Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6785354Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6785863Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6785872Z 
2025-02-24T15:52:32.6785997Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6786109Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6786186Z        ...
2025-02-24T15:52:32.6786276Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6786397Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6786514Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6786590Z        ...
2025-02-24T15:52:32.6786676Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6786800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6786899Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6787465Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6787470Z 
2025-02-24T15:52:32.6787593Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6787709Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6787785Z        ...
2025-02-24T15:52:32.6787871Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6787994Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6788103Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6788182Z        ...
2025-02-24T15:52:32.6788265Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6788390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6788489Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6789008Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6789013Z 
2025-02-24T15:52:32.6789137Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6789356Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6789432Z        ...
2025-02-24T15:52:32.6789515Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6789715Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6789824Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6789901Z        ...
2025-02-24T15:52:32.6789983Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6790107Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6790206Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6790749Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6790754Z 
2025-02-24T15:52:32.6790882Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6791107Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6791193Z        ...
2025-02-24T15:52:32.6791276Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6791404Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6791523Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6791601Z        ...
2025-02-24T15:52:32.6791685Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6791811Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6791909Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6792449Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6792454Z 
2025-02-24T15:52:32.6792581Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6792691Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6792790Z        ...
2025-02-24T15:52:32.6792884Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6793010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6793124Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6793201Z        ...
2025-02-24T15:52:32.6793283Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6793409Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6793511Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6794045Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6794051Z 
2025-02-24T15:52:32.6794179Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6794286Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6794362Z        ...
2025-02-24T15:52:32.6794449Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6794575Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6794684Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6794765Z        ...
2025-02-24T15:52:32.6794851Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6794971Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6795073Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6795620Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6795625Z 
2025-02-24T15:52:32.6795723Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6796087Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6796640Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6796976Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6797525Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6797541Z 
2025-02-24T15:52:32.6797635Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6798000Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6798370Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6798754Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6799275Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6799280Z 
2025-02-24T15:52:32.6799406Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6799521Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6799604Z        ...
2025-02-24T15:52:32.6799688Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6799816Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6799929Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6800005Z        ...
2025-02-24T15:52:32.6800088Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6800212Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6800311Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6800871Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6800876Z 
2025-02-24T15:52:32.6801108Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6801217Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6801292Z        ...
2025-02-24T15:52:32.6801493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6801618Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6801726Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6801905Z        ...
2025-02-24T15:52:32.6801989Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6802115Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6802216Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6802750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6802756Z 
2025-02-24T15:52:32.6802886Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6802993Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6803068Z        ...
2025-02-24T15:52:32.6803152Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6803285Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6803395Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6803478Z        ...
2025-02-24T15:52:32.6803563Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6803686Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6803788Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6804334Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6804339Z 
2025-02-24T15:52:32.6804466Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6804572Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6804644Z        ...
2025-02-24T15:52:32.6804729Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6804855Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6804972Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6805047Z        ...
2025-02-24T15:52:32.6805139Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6805259Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6805362Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6805910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6805915Z 
2025-02-24T15:52:32.6806042Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6806149Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6806227Z        ...
2025-02-24T15:52:32.6806312Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6806439Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6806558Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6806629Z        ...
2025-02-24T15:52:32.6806716Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6806839Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6806944Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6807472Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6807478Z 
2025-02-24T15:52:32.6807606Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6807713Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6807789Z        ...
2025-02-24T15:52:32.6807876Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6807998Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6808111Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6808291Z        ...
2025-02-24T15:52:32.6808377Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6808589Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6808695Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6809233Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6809239Z 
2025-02-24T15:52:32.6809365Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6809476Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6809548Z        ...
2025-02-24T15:52:32.6809634Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6809755Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6809868Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6809944Z        ...
2025-02-24T15:52:32.6810033Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6810152Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6810261Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6810813Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6810824Z 
2025-02-24T15:52:32.6811014Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6811387Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6811722Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6812057Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6812606Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6812614Z 
2025-02-24T15:52:32.6812706Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6813073Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6813449Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6813819Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6814554Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6814559Z 
2025-02-24T15:52:32.6814687Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6814795Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6814871Z        ...
2025-02-24T15:52:32.6814956Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6815083Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6815191Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6815273Z        ...
2025-02-24T15:52:32.6815362Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6815488Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6815592Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6816147Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6816152Z 
2025-02-24T15:52:32.6816281Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6816389Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6816464Z        ...
2025-02-24T15:52:32.6816551Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6816681Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6816800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6816879Z        ...
2025-02-24T15:52:32.6816971Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6817094Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6817210Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6817743Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6817748Z 
2025-02-24T15:52:32.6817882Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6818000Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6818077Z        ...
2025-02-24T15:52:32.6818168Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6818292Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6818410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6818483Z        ...
2025-02-24T15:52:32.6818577Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6818700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6818811Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6819373Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6819379Z 
2025-02-24T15:52:32.6819510Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6819625Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6819701Z        ...
2025-02-24T15:52:32.6819788Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6819909Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6820025Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6820099Z        ...
2025-02-24T15:52:32.6820188Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6820398Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6820503Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6821236Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6821248Z 
2025-02-24T15:52:32.6821373Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6821485Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6821557Z        ...
2025-02-24T15:52:32.6821645Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6821765Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6821882Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6821954Z        ...
2025-02-24T15:52:32.6822043Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6822169Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6822277Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6822821Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6822831Z 
2025-02-24T15:52:32.6822956Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6823068Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6823143Z        ...
2025-02-24T15:52:32.6823231Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6823351Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6823467Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6823542Z        ...
2025-02-24T15:52:32.6823631Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6823753Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6823864Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6824413Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6824422Z 
2025-02-24T15:52:32.6824546Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6824661Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6824732Z        ...
2025-02-24T15:52:32.6824821Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6824944Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6825061Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6825133Z        ...
2025-02-24T15:52:32.6825222Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6825350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6825456Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6826019Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6826031Z 
2025-02-24T15:52:32.6826129Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6826508Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6826842Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6827395Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6827947Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6827953Z 
2025-02-24T15:52:32.6828052Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6828415Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6828796Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6829174Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6829702Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6829708Z 
2025-02-24T15:52:32.6829837Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6829952Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6830025Z        ...
2025-02-24T15:52:32.6830114Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6830238Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6830354Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6830425Z        ...
2025-02-24T15:52:32.6830513Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6830636Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6830746Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6831411Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6831427Z 
2025-02-24T15:52:32.6831552Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6831666Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6831739Z        ...
2025-02-24T15:52:32.6831827Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6831950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6832065Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6832138Z        ...
2025-02-24T15:52:32.6832227Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6832348Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6832577Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6833103Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6833232Z 
2025-02-24T15:52:32.6833360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6833472Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6833545Z        ...
2025-02-24T15:52:32.6833633Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6833754Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6833870Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6833942Z        ...
2025-02-24T15:52:32.6834032Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6834153Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6834259Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6834823Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6834834Z 
2025-02-24T15:52:32.6834958Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6835072Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6835144Z        ...
2025-02-24T15:52:32.6835234Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6835356Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6835472Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6835543Z        ...
2025-02-24T15:52:32.6835631Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6835755Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6835856Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6836419Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6836429Z 
2025-02-24T15:52:32.6836553Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6836664Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6836737Z        ...
2025-02-24T15:52:32.6836829Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6836951Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6837069Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6837147Z        ...
2025-02-24T15:52:32.6837230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6837354Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6837453Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6837996Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6838005Z 
2025-02-24T15:52:32.6838134Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6838247Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6838321Z        ...
2025-02-24T15:52:32.6838410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6838535Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6838646Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6838722Z        ...
2025-02-24T15:52:32.6838806Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6838932Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6839029Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6839570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6839663Z 
2025-02-24T15:52:32.6839789Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6839975Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6840053Z        ...
2025-02-24T15:52:32.6840137Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6840263Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6840373Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6840449Z        ...
2025-02-24T15:52:32.6840531Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6840657Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6840758Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6841419Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6841431Z 
2025-02-24T15:52:32.6841531Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6841903Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6842233Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6842573Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6843128Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6843134Z 
2025-02-24T15:52:32.6843233Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6843593Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6843974Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6844358Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6844896Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6845016Z 
2025-02-24T15:52:32.6845240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6845355Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6845428Z        ...
2025-02-24T15:52:32.6845517Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6845641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6845757Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6845831Z        ...
2025-02-24T15:52:32.6845920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6846046Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6846149Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6846715Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6846726Z 
2025-02-24T15:52:32.6846851Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6846971Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6847045Z        ...
2025-02-24T15:52:32.6847133Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6847256Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6847375Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6847453Z        ...
2025-02-24T15:52:32.6847538Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6847663Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6847763Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6848290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6848300Z 
2025-02-24T15:52:32.6848424Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6848542Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6848615Z        ...
2025-02-24T15:52:32.6848703Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6848830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6848941Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6849017Z        ...
2025-02-24T15:52:32.6849100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6849225Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6849326Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6849894Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6849904Z 
2025-02-24T15:52:32.6850028Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6850140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6850221Z        ...
2025-02-24T15:52:32.6850303Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6850428Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6850538Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6850615Z        ...
2025-02-24T15:52:32.6850698Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6850822Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6851026Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6851598Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6851723Z 
2025-02-24T15:52:32.6851854Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6851963Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6852151Z        ...
2025-02-24T15:52:32.6852234Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6852359Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6852469Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6852548Z        ...
2025-02-24T15:52:32.6852632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6852760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6852860Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6853402Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6853407Z 
2025-02-24T15:52:32.6853540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6853649Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6853727Z        ...
2025-02-24T15:52:32.6853816Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6853943Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6854053Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6854130Z        ...
2025-02-24T15:52:32.6854215Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6854341Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6854446Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6855025Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6855031Z 
2025-02-24T15:52:32.6855163Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6855280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6855357Z        ...
2025-02-24T15:52:32.6855445Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6855573Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6855683Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6855761Z        ...
2025-02-24T15:52:32.6855850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6855972Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6856077Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6856655Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6856660Z 
2025-02-24T15:52:32.6856759Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6857128Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6857465Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6857797Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6858560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6858571Z 
2025-02-24T15:52:32.6858665Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6859032Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6859401Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6859787Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6860345Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6860354Z 
2025-02-24T15:52:32.6860487Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6860595Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6860677Z        ...
2025-02-24T15:52:32.6860762Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6860891Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6861102Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6861181Z        ...
2025-02-24T15:52:32.6861265Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6861391Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6861492Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6862125Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6862136Z 
2025-02-24T15:52:32.6862265Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6862371Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6862453Z        ...
2025-02-24T15:52:32.6862539Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6862666Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6862776Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6862853Z        ...
2025-02-24T15:52:32.6862936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6863063Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6863169Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6863724Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6863848Z 
2025-02-24T15:52:32.6863980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6864089Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6864267Z        ...
2025-02-24T15:52:32.6864350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6864480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6864590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6864668Z        ...
2025-02-24T15:52:32.6864756Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6864878Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6864986Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6865692Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.6865705Z 
2025-02-24T15:52:32.6865882Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T15:52:32.6866248Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6870858Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:52:32.6875645Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:52:32.6876080Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T15:52:32.6876716Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6876728Z 
2025-02-24T15:52:32.6876855Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6876970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6877043Z        ...
2025-02-24T15:52:32.6877138Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6877266Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6877383Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6877455Z        ...
2025-02-24T15:52:32.6877549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6877672Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6877780Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6878382Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6878389Z 
2025-02-24T15:52:32.6878511Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6878625Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6878698Z        ...
2025-02-24T15:52:32.6878787Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6878910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6879026Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6879098Z        ...
2025-02-24T15:52:32.6879192Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6879320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6879420Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6880014Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6880020Z 
2025-02-24T15:52:32.6880144Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6880257Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6880329Z        ...
2025-02-24T15:52:32.6880418Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6880540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6880657Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6880735Z        ...
2025-02-24T15:52:32.6880817Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6881135Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6881237Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6881922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6881929Z 
2025-02-24T15:52:32.6882054Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6882168Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6882247Z        ...
2025-02-24T15:52:32.6882331Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6882461Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6882572Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6882650Z        ...
2025-02-24T15:52:32.6882733Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6882865Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6882965Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6883532Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6883538Z 
2025-02-24T15:52:32.6883667Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6883777Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6883855Z        ...
2025-02-24T15:52:32.6883938Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6884070Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6884181Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6884261Z        ...
2025-02-24T15:52:32.6884350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6884483Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6884587Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6885158Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6885169Z 
2025-02-24T15:52:32.6885271Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6885637Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6885976Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6886322Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6886898Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6886903Z 
2025-02-24T15:52:32.6887006Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6887504Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6887957Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6888337Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6888896Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6888902Z 
2025-02-24T15:52:32.6889029Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6889147Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6889221Z        ...
2025-02-24T15:52:32.6889313Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6889437Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6889555Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6889637Z        ...
2025-02-24T15:52:32.6889721Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6889850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6889959Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6890542Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6890548Z 
2025-02-24T15:52:32.6890673Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6890789Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6890866Z        ...
2025-02-24T15:52:32.6891059Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6891195Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6891308Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6891386Z        ...
2025-02-24T15:52:32.6891474Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6891601Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6891709Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6892255Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6892261Z 
2025-02-24T15:52:32.6892384Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6892497Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6892576Z        ...
2025-02-24T15:52:32.6892661Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6892788Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6892901Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6892979Z        ...
2025-02-24T15:52:32.6893063Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6893329Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6893430Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6894229Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.6894235Z 
2025-02-24T15:52:32.6894409Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:52:32.6894774Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6899709Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.6904856Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.6905270Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:52:32.6905878Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6905890Z 
2025-02-24T15:52:32.6906023Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6906145Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6906220Z        ...
2025-02-24T15:52:32.6906313Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6906440Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6906560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6906644Z        ...
2025-02-24T15:52:32.6906758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6906882Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6906990Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6907566Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6907585Z 
2025-02-24T15:52:32.6907710Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6907831Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6907905Z        ...
2025-02-24T15:52:32.6908000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6908125Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6908242Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6908315Z        ...
2025-02-24T15:52:32.6908406Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6908528Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6908637Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6909210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6909225Z 
2025-02-24T15:52:32.6909350Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6909469Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6909544Z        ...
2025-02-24T15:52:32.6909639Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6909763Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6909881Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6909956Z        ...
2025-02-24T15:52:32.6910049Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6910173Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6910284Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6910846Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6911063Z 
2025-02-24T15:52:32.6911196Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6911314Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6911516Z        ...
2025-02-24T15:52:32.6911608Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6911732Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6911851Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6911932Z        ...
2025-02-24T15:52:32.6912018Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6912148Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6912252Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6912746Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6912762Z 
2025-02-24T15:52:32.6912889Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6913009Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6913086Z        ...
2025-02-24T15:52:32.6913177Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6913299Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6913416Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6913493Z        ...
2025-02-24T15:52:32.6913577Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6913702Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6913804Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6914311Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6914317Z 
2025-02-24T15:52:32.6914413Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6914790Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6915132Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6915460Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6915975Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6915981Z 
2025-02-24T15:52:32.6916082Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6916450Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6916830Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6917415Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6917893Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6917909Z 
2025-02-24T15:52:32.6918039Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6918155Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6918233Z        ...
2025-02-24T15:52:32.6918326Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6918452Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6918570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6918643Z        ...
2025-02-24T15:52:32.6918733Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6918855Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6918964Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6919469Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6919480Z 
2025-02-24T15:52:32.6919613Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6919727Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6919804Z        ...
2025-02-24T15:52:32.6919896Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6920018Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6920135Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6920210Z        ...
2025-02-24T15:52:32.6920302Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6920424Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6920530Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6921120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6921127Z 
2025-02-24T15:52:32.6921254Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6921374Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6921448Z        ...
2025-02-24T15:52:32.6921538Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6921665Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6921786Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6921859Z        ...
2025-02-24T15:52:32.6921950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6922078Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6922180Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6922799Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.6922805Z 
2025-02-24T15:52:32.6922974Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:52:32.6923469Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6928506Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.6933744Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.6934144Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:52:32.6934686Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6934692Z 
2025-02-24T15:52:32.6934828Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6934940Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6935020Z        ...
2025-02-24T15:52:32.6935106Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6935240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6935353Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6935441Z        ...
2025-02-24T15:52:32.6935533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6935664Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6935780Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6936284Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6936290Z 
2025-02-24T15:52:32.6936422Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6936531Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6936613Z        ...
2025-02-24T15:52:32.6936699Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6936828Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6936940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6937020Z        ...
2025-02-24T15:52:32.6937117Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6937240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6937346Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6937855Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6937860Z 
2025-02-24T15:52:32.6937990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6938099Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6938178Z        ...
2025-02-24T15:52:32.6938260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6938386Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6938504Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6938577Z        ...
2025-02-24T15:52:32.6938666Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6938791Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6938899Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6939392Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6939397Z 
2025-02-24T15:52:32.6939526Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6939634Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6939713Z        ...
2025-02-24T15:52:32.6939805Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6939927Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6940046Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6940119Z        ...
2025-02-24T15:52:32.6940210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6940331Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6940526Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6941135Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6941286Z 
2025-02-24T15:52:32.6941422Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6941539Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6941611Z        ...
2025-02-24T15:52:32.6941701Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6941824Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6941941Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6942015Z        ...
2025-02-24T15:52:32.6942108Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6942229Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6942348Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6942861Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6942877Z 
2025-02-24T15:52:32.6942979Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6943351Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6943684Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6944027Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6944540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6944545Z 
2025-02-24T15:52:32.6944640Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6945012Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6945400Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6945773Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6946369Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6946450Z 
2025-02-24T15:52:32.6946583Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6946693Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6946772Z        ...
2025-02-24T15:52:32.6946859Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6946990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6947102Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6947183Z        ...
2025-02-24T15:52:32.6947272Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6947396Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6947508Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6948036Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6948047Z 
2025-02-24T15:52:32.6948182Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6948289Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6948368Z        ...
2025-02-24T15:52:32.6948453Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6948583Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6948702Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6948775Z        ...
2025-02-24T15:52:32.6948864Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6948984Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6949090Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6949576Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6949585Z 
2025-02-24T15:52:32.6949718Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6949826Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6949933Z        ...
2025-02-24T15:52:32.6950025Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6950149Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6950268Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6950341Z        ...
2025-02-24T15:52:32.6950431Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6950552Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6950662Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6951293Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6951310Z 
2025-02-24T15:52:32.6951444Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6951561Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6951636Z        ...
2025-02-24T15:52:32.6951740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6951872Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6951989Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6952062Z        ...
2025-02-24T15:52:32.6952151Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6952273Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6952380Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6952897Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6953028Z 
2025-02-24T15:52:32.6953256Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6953371Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6953444Z        ...
2025-02-24T15:52:32.6953532Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6953654Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6953770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6953843Z        ...
2025-02-24T15:52:32.6953930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6954052Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6954158Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6954665Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6954675Z 
2025-02-24T15:52:32.6954804Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6954923Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6954996Z        ...
2025-02-24T15:52:32.6955089Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6955211Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6955328Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6955401Z        ...
2025-02-24T15:52:32.6955493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6955615Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6955721Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6956212Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6956223Z 
2025-02-24T15:52:32.6956349Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6956463Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6956542Z        ...
2025-02-24T15:52:32.6956632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6956754Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6956871Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6956944Z        ...
2025-02-24T15:52:32.6957034Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6957163Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6957263Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6957768Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6957773Z 
2025-02-24T15:52:32.6957874Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6958244Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6958582Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6958911Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6959571Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6959576Z 
2025-02-24T15:52:32.6959681Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6960046Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6960425Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6960810Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6961603Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6961618Z 
2025-02-24T15:52:32.6961754Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6961872Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6961979Z        ...
2025-02-24T15:52:32.6962071Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6962198Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6962316Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6962390Z        ...
2025-02-24T15:52:32.6962482Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6962605Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6962715Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6963230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6963250Z 
2025-02-24T15:52:32.6963377Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6963492Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6963570Z        ...
2025-02-24T15:52:32.6963662Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6963786Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6963903Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6963976Z        ...
2025-02-24T15:52:32.6964068Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6964189Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6964297Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6964779Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6964784Z 
2025-02-24T15:52:32.6964910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6965182Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6965256Z        ...
2025-02-24T15:52:32.6965348Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6965575Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6965693Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6965766Z        ...
2025-02-24T15:52:32.6965857Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6965980Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6966085Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6966598Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6966604Z 
2025-02-24T15:52:32.6966728Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6966857Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6966936Z        ...
2025-02-24T15:52:32.6967031Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6967159Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6967278Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6967351Z        ...
2025-02-24T15:52:32.6967442Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6967616Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6967792Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6968593Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6968602Z 
2025-02-24T15:52:32.6968738Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6968856Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6968937Z        ...
2025-02-24T15:52:32.6969032Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6969156Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6969283Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6969362Z        ...
2025-02-24T15:52:32.6969447Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6969577Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6969679Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6970188Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6970193Z 
2025-02-24T15:52:32.6970320Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6970440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6970513Z        ...
2025-02-24T15:52:32.6970606Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6970735Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6970848Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6975939Z        ...
2025-02-24T15:52:32.6976060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6976211Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6976324Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6976877Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6976883Z 
2025-02-24T15:52:32.6977022Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6977140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6977216Z        ...
2025-02-24T15:52:32.6977304Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6977617Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6977733Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6977918Z        ...
2025-02-24T15:52:32.6978012Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6978138Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6978251Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6978807Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6978812Z 
2025-02-24T15:52:32.6978912Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6979278Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6979622Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6979955Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6980500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6980514Z 
2025-02-24T15:52:32.6980607Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6981124Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6981496Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6981874Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6982400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6982406Z 
2025-02-24T15:52:32.6982537Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6982649Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6982724Z        ...
2025-02-24T15:52:32.6982931Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6983063Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6983173Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6983352Z        ...
2025-02-24T15:52:32.6983436Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6983562Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6983665Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6984219Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6984224Z 
2025-02-24T15:52:32.6984354Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6984460Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6984536Z        ...
2025-02-24T15:52:32.6984618Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6984749Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6984858Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6984940Z        ...
2025-02-24T15:52:32.6985021Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6985145Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6985246Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6985769Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6985774Z 
2025-02-24T15:52:32.6985901Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6986006Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6986082Z        ...
2025-02-24T15:52:32.6986164Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6986287Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6986399Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6986474Z        ...
2025-02-24T15:52:32.6986560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6986682Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6986788Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6987330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6987336Z 
2025-02-24T15:52:32.6987465Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6987569Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6987643Z        ...
2025-02-24T15:52:32.6987726Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6987852Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6987965Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6988040Z        ...
2025-02-24T15:52:32.6988126Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6988250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6988355Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6988901Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6988907Z 
2025-02-24T15:52:32.6989032Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6989138Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6989213Z        ...
2025-02-24T15:52:32.6989295Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6989419Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6989532Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6989694Z        ...
2025-02-24T15:52:32.6989780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6989976Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6990082Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6990616Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6990621Z 
2025-02-24T15:52:32.6990749Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6990854Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6991030Z        ...
2025-02-24T15:52:32.6991118Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6991238Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6991351Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6991428Z        ...
2025-02-24T15:52:32.6991514Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6991633Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6991742Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6992343Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6992349Z 
2025-02-24T15:52:32.6992477Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6992586Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6992657Z        ...
2025-02-24T15:52:32.6992746Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6992870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6992982Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6993052Z        ...
2025-02-24T15:52:32.6993143Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6993260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6993369Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6993964Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6993975Z 
2025-02-24T15:52:32.6994069Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6994440Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6994771Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6995106Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6995704Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6995848Z 
2025-02-24T15:52:32.6995942Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6996313Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6996790Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6997161Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6997750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6997757Z 
2025-02-24T15:52:32.6997885Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6997993Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6998070Z        ...
2025-02-24T15:52:32.6998153Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6998282Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6998398Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6998473Z        ...
2025-02-24T15:52:32.6998560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6998689Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6998793Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6999401Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6999407Z 
2025-02-24T15:52:32.6999536Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6999644Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6999720Z        ...
2025-02-24T15:52:32.6999806Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6999925Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7000038Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7000113Z        ...
2025-02-24T15:52:32.7000199Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7000315Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7000424Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7001104Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.7001111Z 
2025-02-24T15:52:32.7001239Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.7001348Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7001417Z        ...
2025-02-24T15:52:32.7001503Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7001622Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7001738Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7001929Z        ...
2025-02-24T15:52:32.7002019Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7002140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7002347Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7002952Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.7002963Z 
2025-02-24T15:52:32.7003086Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.7003198Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7003267Z        ...
2025-02-24T15:52:32.7003354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7003477Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7003591Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7003668Z        ...
2025-02-24T15:52:32.7003753Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7003874Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7003987Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7004593Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.7004603Z 
2025-02-24T15:52:32.7004727Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.7004839Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7004909Z        ...
2025-02-24T15:52:32.7004994Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7005113Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7005226Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7005295Z        ...
2025-02-24T15:52:32.7005386Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7005504Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7005614Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7006210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.7006216Z 
2025-02-24T15:52:32.7006338Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.7006447Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7006518Z        ...
2025-02-24T15:52:32.7006604Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7006724Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7006838Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7006913Z        ...
2025-02-24T15:52:32.7006996Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7007126Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7007226Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7007549Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T15:52:32.7007650Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7007655Z 
2025-02-24T15:52:32.7007757Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T15:52:32.7007848Z Max absolute difference: 1.
2025-02-24T15:52:32.7007940Z Max relative difference: 1.
2025-02-24T15:52:32.7008066Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.7008174Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.7008279Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:52:32.7008395Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.7008585Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.7008682Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:52:32.7009078Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T15:52:32.7009176Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7009181Z 
2025-02-24T15:52:32.7009281Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T15:52:32.7009377Z Max absolute difference: 4005
2025-02-24T15:52:32.7009470Z Max relative difference: 26.00649351
2025-02-24T15:52:32.7009580Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:52:32.7009680Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:52:32.7009969Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T15:52:32.7010067Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7010076Z 
2025-02-24T15:52:32.7010176Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T15:52:32.7010264Z Max absolute difference: 4046
2025-02-24T15:52:32.7010363Z Max relative difference: 24.82208589
2025-02-24T15:52:32.7010463Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:52:32.7010565Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:52:32.7010831Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T15:52:32.7011035Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7011040Z 
2025-02-24T15:52:32.7011140Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:52:32.7011236Z Max absolute difference: 0.99984222
2025-02-24T15:52:32.7011339Z Max relative difference: 6337.12154973
2025-02-24T15:52:32.7011423Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.7011509Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.7011588Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.7011680Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.7011757Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.7011849Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.7012093Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T15:52:32.7012188Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7012192Z 
2025-02-24T15:52:32.7012293Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T15:52:32.7012386Z Max absolute difference: 4.25260542e+12
2025-02-24T15:52:32.7012483Z Max relative difference: 18196.0085861
2025-02-24T15:52:32.7012633Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:52:32.7012719Z         4.043917e+10, 6.677200e-07],
2025-02-24T15:52:32.7012857Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:52:32.7013005Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:52:32.7013092Z         4.043917e+10, 6.677200e-07],
2025-02-24T15:52:32.7013222Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:52:32.7013467Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T15:52:32.7013565Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7013569Z 
2025-02-24T15:52:32.7013663Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T15:52:32.7013754Z Max absolute difference: 2.92713618
2025-02-24T15:52:32.7013853Z Max relative difference: 18196.0085861
2025-02-24T15:52:32.7013995Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:52:32.7014081Z        1.126883e+00, 4.414472e-04])
2025-02-24T15:52:32.7014221Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:52:32.7014304Z        1.126883e+00, 4.414472e-04])
2025-02-24T15:52:32.7014566Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T15:52:32.7014785Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7014789Z 
2025-02-24T15:52:32.7014885Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T15:52:32.7015098Z Max absolute difference: 282815.33818472
2025-02-24T15:52:32.7015195Z Max relative difference: 4.12352828e+47
2025-02-24T15:52:32.7015338Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:52:32.7015424Z         0.000000e+00, 0.000000e+00],
2025-02-24T15:52:32.7015553Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:52:32.7015696Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:52:32.7015782Z         0.000000e+00, 0.000000e+00],
2025-02-24T15:52:32.7015908Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:52:32.7016408Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.7016420Z 
2025-02-24T15:52:32.7016583Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.7016671Z [index]: [0, 1]
2025-02-24T15:52:32.7016772Z [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T15:52:32.7016879Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T15:52:32.7017056Z At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T15:52:32.7017560Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.7017565Z 
2025-02-24T15:52:32.7017729Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.7017804Z [index]: [0, 1]
2025-02-24T15:52:32.7017907Z [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T15:52:32.7018004Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T15:52:32.7018186Z At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T15:52:32.7018725Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.7018741Z 
2025-02-24T15:52:32.7018899Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.7018980Z [index]: [0, 1]
2025-02-24T15:52:32.7019076Z [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T15:52:32.7019180Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T15:52:32.7019343Z At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T15:52:32.7019730Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T15:52:32.7019736Z 
2025-02-24T15:52:32.7019840Z Series values are different (100.0 %)
2025-02-24T15:52:32.7019980Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.7021318Z [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T15:52:32.7022527Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T15:52:32.7022845Z At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T15:52:32.7023323Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T15:52:32.7023329Z 
2025-02-24T15:52:32.7023423Z Series values are different (100.0 %)
2025-02-24T15:52:32.7023548Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.7024531Z [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T15:52:32.7025507Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T15:52:32.7025692Z At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T15:52:32.7026046Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T15:52:32.7026051Z 
2025-02-24T15:52:32.7026156Z Series values are different (90.0 %)
2025-02-24T15:52:32.7026275Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.7027297Z [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T15:52:32.7028322Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T15:52:32.7028500Z At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T15:52:32.7028880Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T15:52:32.7028886Z 
2025-02-24T15:52:32.7028976Z Series values are different (95.0 %)
2025-02-24T15:52:32.7029105Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.7030223Z [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T15:52:32.7031433Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T15:52:32.7031730Z At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T15:52:32.7032090Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T15:52:32.7032203Z 
2025-02-24T15:52:32.7032299Z Series values are different (5.1125 %)
2025-02-24T15:52:32.7032672Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.7037900Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T15:52:32.7043220Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T15:52:32.7043618Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T15:52:32.7044009Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T15:52:32.7044014Z 
2025-02-24T15:52:32.7044109Z Series values are different (1.3025 %)
2025-02-24T15:52:32.7044481Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.7050717Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:52:32.7057110Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:52:32.7057580Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T15:52:32.7057965Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T15:52:32.7058072Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7058076Z 
2025-02-24T15:52:32.7058171Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:52:32.7058265Z Max absolute difference: 4.30543741e+37
2025-02-24T15:52:32.7058360Z Max relative difference: 1.
2025-02-24T15:52:32.7058516Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7058606Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7058753Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7058837Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7059232Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T15:52:32.7059335Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7059340Z 
2025-02-24T15:52:32.7059438Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T15:52:32.7059531Z Max absolute difference: 4.15247374e+37
2025-02-24T15:52:32.7059623Z Max relative difference: 1.
2025-02-24T15:52:32.7059764Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7059847Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7059984Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7060066Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7060371Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T15:52:32.7060469Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7060558Z 
2025-02-24T15:52:32.7060654Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:52:32.7060744Z Max absolute difference: 4.30543741e+37
2025-02-24T15:52:32.7061017Z Max relative difference: 1.
2025-02-24T15:52:32.7061159Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7061243Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7061380Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7061464Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7061761Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T15:52:32.7061860Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7061865Z 
2025-02-24T15:52:32.7062000Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T15:52:32.7062094Z Max absolute difference: 5.32418652e-19
2025-02-24T15:52:32.7062190Z Max relative difference: 12.23359055
2025-02-24T15:52:32.7062280Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7062367Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7062446Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7062544Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7062623Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7062707Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7062974Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T15:52:32.7063070Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7063074Z 
2025-02-24T15:52:32.7063170Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T15:52:32.7063263Z Max absolute difference: 1.38672909e+39
2025-02-24T15:52:32.7063361Z Max relative difference: 5.25284451
2025-02-24T15:52:32.7063501Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7063589Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7063735Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7063818Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7064115Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T15:52:32.7064212Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7064216Z 
2025-02-24T15:52:32.7064312Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T15:52:32.7064404Z Max absolute difference: 5.26760031e+38
2025-02-24T15:52:32.7064499Z Max relative difference: 35562.41947434
2025-02-24T15:52:32.7064637Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7064722Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7064858Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7064943Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7065398Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T15:52:32.7065504Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7065512Z 
2025-02-24T15:52:32.7065617Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:52:32.7065708Z Max absolute difference: 7.03072887e-19
2025-02-24T15:52:32.7065807Z Max relative difference: 7.72237896
2025-02-24T15:52:32.7065890Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7065974Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7066059Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7066155Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7066233Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7066316Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7066746Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T15:52:32.7066842Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7066964Z 
2025-02-24T15:52:32.7067064Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:52:32.7067159Z Max absolute difference: 2.09719426e+39
2025-02-24T15:52:32.7067360Z Max relative difference: 4.0036592
2025-02-24T15:52:32.7067503Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7067589Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7067730Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7067815Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7068269Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T15:52:32.7068365Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7068369Z 
2025-02-24T15:52:32.7068465Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.7068560Z Max absolute difference: 5.00661745e+37
2025-02-24T15:52:32.7068659Z Max relative difference: 17.51202125
2025-02-24T15:52:32.7068797Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T15:52:32.7068886Z        2.279436e+31, 2.243943e+31])
2025-02-24T15:52:32.7069023Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T15:52:32.7069106Z        2.292907e+31, 2.257206e+31])
2025-02-24T15:52:32.7069551Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T15:52:32.7069647Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7069651Z 
2025-02-24T15:52:32.7069755Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:52:32.7069846Z Max absolute difference: 4.67863561e-19
2025-02-24T15:52:32.7069942Z Max relative difference: 3.25828651
2025-02-24T15:52:32.7070024Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7070109Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7070195Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7070282Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7070358Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7070446Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7070860Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T15:52:32.7071064Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7071069Z 
2025-02-24T15:52:32.7071168Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:52:32.7071262Z Max absolute difference: 8.5486318e+38
2025-02-24T15:52:32.7071359Z Max relative difference: 1.86186015
2025-02-24T15:52:32.7071498Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7071583Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7071720Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7071810Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7072263Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T15:52:32.7072364Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7072368Z 
2025-02-24T15:52:32.7072465Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.7072556Z Max absolute difference: 2.90101642e+37
2025-02-24T15:52:32.7072651Z Max relative difference: 0.98973757
2025-02-24T15:52:32.7072790Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T15:52:32.7072876Z        1.330497e+31, 1.294462e+31])
2025-02-24T15:52:32.7073010Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T15:52:32.7073094Z        1.375141e+31, 1.337928e+31])
2025-02-24T15:52:32.7073531Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T15:52:32.7073752Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7073756Z 
2025-02-24T15:52:32.7073862Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:52:32.7074058Z Max absolute difference: 4.67863561e-19
2025-02-24T15:52:32.7074154Z Max relative difference: 3.25828651
2025-02-24T15:52:32.7074239Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7074326Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7074406Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7074495Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7074579Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7074657Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7075077Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T15:52:32.7075175Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7075179Z 
2025-02-24T15:52:32.7075284Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:52:32.7075377Z Max absolute difference: 8.5486318e+38
2025-02-24T15:52:32.7075474Z Max relative difference: 1.86186015
2025-02-24T15:52:32.7075622Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7075705Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7075844Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7075926Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7076374Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T15:52:32.7076470Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7076474Z 
2025-02-24T15:52:32.7076572Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.7076664Z Max absolute difference: 2.99183385e+37
2025-02-24T15:52:32.7076758Z Max relative difference: 0.98992197
2025-02-24T15:52:32.7076902Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T15:52:32.7076987Z        1.260980e+31, 1.222587e+31])
2025-02-24T15:52:32.7077123Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T15:52:32.7077211Z        1.193005e+31, 1.164854e+31])
2025-02-24T15:52:32.7077654Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T15:52:32.7077751Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7077755Z 
2025-02-24T15:52:32.7077862Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:52:32.7077953Z Max absolute difference: 7.03072887e-19
2025-02-24T15:52:32.7078048Z Max relative difference: 7.72237896
2025-02-24T15:52:32.7078131Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7078218Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7078298Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7078391Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7078474Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7078552Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7078975Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T15:52:32.7079071Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7079075Z 
2025-02-24T15:52:32.7079172Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:52:32.7079266Z Max absolute difference: 2.09719426e+39
2025-02-24T15:52:32.7079364Z Max relative difference: 4.0036592
2025-02-24T15:52:32.7079502Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7079584Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7079729Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7079808Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7080360Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T15:52:32.7080538Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7080543Z 
2025-02-24T15:52:32.7080637Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.7080729Z Max absolute difference: 5.0153284e+37
2025-02-24T15:52:32.7080821Z Max relative difference: 4.90769503
2025-02-24T15:52:32.7081067Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T15:52:32.7081151Z        2.088676e+31, 2.060278e+31])
2025-02-24T15:52:32.7081288Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T15:52:32.7081370Z        2.124305e+31, 2.101081e+31])
2025-02-24T15:52:32.7081726Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T15:52:32.7081823Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T15:52:32.7081833Z 
2025-02-24T15:52:32.7081928Z Mismatched elements: 20 / 20 (100%)
2025-02-24T15:52:32.7082023Z Max absolute difference: 2.25821059e+25
2025-02-24T15:52:32.7082115Z Max relative difference: 0.00054426
2025-02-24T15:52:32.7082257Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T15:52:32.7082384Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T15:52:32.7082506Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T15:52:32.7082640Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T15:52:32.7082759Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T15:52:32.7082879Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T15:52:32.7083269Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T15:52:32.7083378Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T15:52:32.7083387Z 
2025-02-24T15:52:32.7083478Z Mismatched elements: 20 / 20 (100%)
2025-02-24T15:52:32.7083570Z Max absolute difference: 1.93283629e+25
2025-02-24T15:52:32.7083665Z Max relative difference: 0.00029148
2025-02-24T15:52:32.7083801Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T15:52:32.7083917Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T15:52:32.7084043Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T15:52:32.7084169Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T15:52:32.7084286Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T15:52:32.7084402Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T15:52:32.7084745Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T15:52:32.7084826Z Arrays are not equal
2025-02-24T15:52:32.7084831Z 
2025-02-24T15:52:32.7084929Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T15:52:32.7085060Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.7085150Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:52:32.7085262Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:52:32.7085384Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.7085471Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:52:32.7085569Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:52:32.7085997Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T15:52:32.7086093Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T15:52:32.7086098Z 
2025-02-24T15:52:32.7086195Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T15:52:32.7086295Z Max absolute difference: 2.00640487e-05
2025-02-24T15:52:32.7086528Z Max relative difference: 2.06329455
2025-02-24T15:52:32.7086696Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:52:32.7086782Z        -9.757136e-06,  1.019764e-05])
2025-02-24T15:52:32.7087040Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:52:32.7087121Z        -9.757136e-06,  1.019764e-05])
2025-02-24T15:52:32.7087591Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T15:52:32.7087693Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7087697Z 
2025-02-24T15:52:32.7087790Z (shapes (508,), (515,) mismatch)
2025-02-24T15:52:32.7087921Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.7088043Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.7088167Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.7088300Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.7088420Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.7088542Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.7089004Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T15:52:32.7089104Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7089108Z 
2025-02-24T15:52:32.7089203Z (shapes (558,), (560,) mismatch)
2025-02-24T15:52:32.7089339Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.7089451Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.7089572Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.7089697Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.7089822Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.7089937Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.7090401Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T15:52:32.7090497Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7090512Z 
2025-02-24T15:52:32.7090596Z (shapes (147,), (136,) mismatch)
2025-02-24T15:52:32.7090728Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.7090838Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.7091070Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.7091196Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.7091309Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.7091424Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.7091881Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T15:52:32.7091983Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7091995Z 
2025-02-24T15:52:32.7092075Z (shapes (159,), (153,) mismatch)
2025-02-24T15:52:32.7092206Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.7092314Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.7092433Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.7092557Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.7092671Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.7092785Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.7093241Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T15:52:32.7093465Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7093568Z 
2025-02-24T15:52:32.7093652Z (shapes (508,), (515,) mismatch)
2025-02-24T15:52:32.7093785Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.7093896Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.7094018Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.7094144Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.7094258Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.7094371Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.7094830Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T15:52:32.7094938Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7094942Z 
2025-02-24T15:52:32.7095027Z (shapes (1466,), (1481,) mismatch)
2025-02-24T15:52:32.7095185Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T15:52:32.7095263Z        11152.962595, 11172.044815])
2025-02-24T15:52:32.7095408Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T15:52:32.7095484Z        11398.237865, 11111.204868])
2025-02-24T15:52:32.7095936Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T15:52:32.7096031Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7096041Z 
2025-02-24T15:52:32.7096121Z (shapes (147,), (136,) mismatch)
2025-02-24T15:52:32.7096252Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.7096363Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.7096488Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.7096614Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.7096732Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.7096848Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.7097305Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T15:52:32.7097407Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7097411Z 
2025-02-24T15:52:32.7097493Z (shapes (379,), (381,) mismatch)
2025-02-24T15:52:32.7097626Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T15:52:32.7097734Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T15:52:32.7097855Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T15:52:32.7097985Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T15:52:32.7098103Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T15:52:32.7098221Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T15:52:32.7098648Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T15:52:32.7098749Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7098753Z 
2025-02-24T15:52:32.7098842Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.7098938Z Max absolute difference: 22.
2025-02-24T15:52:32.7099025Z Max relative difference: 0.8
2025-02-24T15:52:32.7099114Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.7099190Z        [1.19e+04, 1.67e+02],
2025-02-24T15:52:32.7099274Z        [1.19e+04, 7.60e+01],...
2025-02-24T15:52:32.7099353Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:52:32.7099437Z        [1.19e+04, 1.89e+02],
2025-02-24T15:52:32.7099601Z        [1.19e+04, 8.20e+01],...
2025-02-24T15:52:32.7100027Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T15:52:32.7100202Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7100208Z 
2025-02-24T15:52:32.7100294Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.7100387Z Max absolute difference: 22.
2025-02-24T15:52:32.7100473Z Max relative difference: 0.8
2025-02-24T15:52:32.7100560Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.7100637Z        [1.19e+04, 1.67e+02],
2025-02-24T15:52:32.7100722Z        [1.19e+04, 7.60e+01],...
2025-02-24T15:52:32.7100801Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:52:32.7100887Z        [1.19e+04, 1.89e+02],
2025-02-24T15:52:32.7101075Z        [1.19e+04, 8.20e+01],...
2025-02-24T15:52:32.7101493Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T15:52:32.7101597Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7101601Z 
2025-02-24T15:52:32.7101687Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7101787Z Max absolute difference: 34
2025-02-24T15:52:32.7101875Z Max relative difference: 0.71428571
2025-02-24T15:52:32.7102018Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.7102100Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7102234Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.7102314Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7102734Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T15:52:32.7102830Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7102834Z 
2025-02-24T15:52:32.7102919Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.7103014Z Max absolute difference: 34.
2025-02-24T15:52:32.7103101Z Max relative difference: 0.65
2025-02-24T15:52:32.7103186Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T15:52:32.7103267Z        [1.19e+04, 2.72e+02],
2025-02-24T15:52:32.7103347Z        [1.19e+04, 1.10e+02],...
2025-02-24T15:52:32.7103424Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T15:52:32.7103502Z        [1.19e+04, 3.06e+02],
2025-02-24T15:52:32.7103576Z        [1.19e+04, 1.18e+02],...
2025-02-24T15:52:32.7103989Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T15:52:32.7104086Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7104090Z 
2025-02-24T15:52:32.7104174Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7104265Z Max absolute difference: 22
2025-02-24T15:52:32.7104350Z Max relative difference: 0.8
2025-02-24T15:52:32.7104485Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:52:32.7104571Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.7104704Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.7104788Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.7105206Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T15:52:32.7105303Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7105307Z 
2025-02-24T15:52:32.7105392Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7105483Z Max absolute difference: 22
2025-02-24T15:52:32.7105569Z Max relative difference: 0.8
2025-02-24T15:52:32.7105702Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:52:32.7105782Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.7105909Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.7105987Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.7106561Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T15:52:32.7106763Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7106768Z 
2025-02-24T15:52:32.7106867Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7106956Z Max absolute difference: 34
2025-02-24T15:52:32.7107044Z Max relative difference: 0.71428571
2025-02-24T15:52:32.7107181Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.7107259Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7107389Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.7107466Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7107881Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T15:52:32.7107980Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7107989Z 
2025-02-24T15:52:32.7108074Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7108165Z Max absolute difference: 34
2025-02-24T15:52:32.7108258Z Max relative difference: 0.65
2025-02-24T15:52:32.7108392Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.7108470Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7108600Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.7108677Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7109152Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T15:52:32.7109249Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7109258Z 
2025-02-24T15:52:32.7109347Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7109447Z Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.7109540Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7109693Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7109776Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7109921Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7109998Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7110470Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T15:52:32.7110566Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7110575Z 
2025-02-24T15:52:32.7110668Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7110764Z Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.7110852Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7111098Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7111181Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7111323Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7111399Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7111872Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T15:52:32.7111968Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7111978Z 
2025-02-24T15:52:32.7112068Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7112164Z Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.7112252Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7112393Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7112468Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7112606Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7112684Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7113273Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T15:52:32.7113474Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7113484Z 
2025-02-24T15:52:32.7113572Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7113667Z Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.7113754Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7113896Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7113975Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7114116Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7114192Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7114657Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T15:52:32.7114760Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7114770Z 
2025-02-24T15:52:32.7114856Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7114957Z Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.7115049Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7115192Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7115267Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7115413Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7115490Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7115956Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T15:52:32.7116053Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7116063Z 
2025-02-24T15:52:32.7116151Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7116248Z Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.7116345Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7116486Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7116567Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7116708Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7116784Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7117250Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T15:52:32.7117346Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7117354Z 
2025-02-24T15:52:32.7117441Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7117537Z Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.7117628Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7117769Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7117849Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7117989Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7118070Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7118535Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T15:52:32.7118632Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7118636Z 
2025-02-24T15:52:32.7118730Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7118826Z Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.7118916Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7119062Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7119137Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7119276Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7119354Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7119918Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T15:52:32.7120086Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7120091Z 
2025-02-24T15:52:32.7120183Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7120281Z Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.7120367Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7120511Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7120586Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7120727Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7120802Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7121386Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T15:52:32.7121488Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7121492Z 
2025-02-24T15:52:32.7121585Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7121687Z Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.7121774Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7121916Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7121992Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7122134Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7122210Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7122682Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T15:52:32.7122776Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7122780Z 
2025-02-24T15:52:32.7122874Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7122977Z Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.7123065Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7123206Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7123287Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7123429Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7123509Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7123988Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T15:52:32.7124083Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7124088Z 
2025-02-24T15:52:32.7124182Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7124276Z Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.7124365Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7124508Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7124587Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7124729Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7124809Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7125280Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T15:52:32.7125375Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7125379Z 
2025-02-24T15:52:32.7125472Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7125573Z Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.7125664Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7125809Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7125884Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7126025Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7126225Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7126696Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T15:52:32.7126912Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7126917Z 
2025-02-24T15:52:32.7127011Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7127107Z Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.7127196Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7127339Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7127415Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7127556Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7127631Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7128106Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T15:52:32.7128206Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7128210Z 
2025-02-24T15:52:32.7128303Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7128404Z Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.7128493Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7128634Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7128710Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7128850Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7128926Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7129397Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T15:52:32.7129494Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7129499Z 
2025-02-24T15:52:32.7129590Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7129687Z Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.7129777Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7129917Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7129997Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7130138Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7130213Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7130642Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T15:52:32.7130738Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7130742Z 
2025-02-24T15:52:32.7130835Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7131025Z Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.7131122Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7131265Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7131346Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7131487Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7131567Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7131994Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T15:52:32.7132089Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7132093Z 
2025-02-24T15:52:32.7132186Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7132275Z Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.7132368Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7132510Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7132585Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7132725Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7132925Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7133350Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T15:52:32.7133547Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7133551Z 
2025-02-24T15:52:32.7133642Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7133731Z Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.7133823Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7133965Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7134040Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7134181Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7134257Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7134681Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T15:52:32.7134782Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7134787Z 
2025-02-24T15:52:32.7134878Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7134976Z Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.7135066Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7135206Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7135282Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7135421Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7135498Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7135921Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T15:52:32.7136018Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7136023Z 
2025-02-24T15:52:32.7136117Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7136208Z Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.7136309Z Max relative difference: 15766.1580412
2025-02-24T15:52:32.7136453Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7136533Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7136674Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7136748Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7137171Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T15:52:32.7137266Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7137270Z 
2025-02-24T15:52:32.7137361Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7137450Z Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.7137546Z Max relative difference: 15766.1580412
2025-02-24T15:52:32.7137687Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7137768Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7137912Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7137993Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7138414Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T15:52:32.7138511Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7138515Z 
2025-02-24T15:52:32.7138605Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7138693Z Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.7138785Z Max relative difference: 15766.1580412
2025-02-24T15:52:32.7138920Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7139000Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7139143Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7139220Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7139742Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T15:52:32.7139910Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7139915Z 
2025-02-24T15:52:32.7140008Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7140098Z Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.7140193Z Max relative difference: 15766.1580412
2025-02-24T15:52:32.7140328Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7140410Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7140551Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7140627Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7141156Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T15:52:32.7141260Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7141264Z 
2025-02-24T15:52:32.7141356Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7141447Z Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.7141546Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7141683Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7141764Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7141904Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7141980Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7142402Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T15:52:32.7142498Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7142502Z 
2025-02-24T15:52:32.7142594Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7142684Z Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.7142781Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7142918Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7143007Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7143147Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7143223Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7143654Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T15:52:32.7143751Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7143755Z 
2025-02-24T15:52:32.7143845Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7143935Z Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.7144028Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7144164Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7144247Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7144391Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7144466Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7144897Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T15:52:32.7144997Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7145001Z 
2025-02-24T15:52:32.7145091Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7145181Z Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.7145274Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7145409Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7145491Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7145631Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7145706Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7146131Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T15:52:32.7146351Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7146453Z 
2025-02-24T15:52:32.7146548Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7146638Z Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.7146732Z Max relative difference: 15766.15804934
2025-02-24T15:52:32.7146868Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7146950Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7147091Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7147167Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7147596Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T15:52:32.7147692Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7147706Z 
2025-02-24T15:52:32.7147798Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7147889Z Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.7147989Z Max relative difference: 15766.15804934
2025-02-24T15:52:32.7148126Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7148207Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7148344Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7148426Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7148861Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T15:52:32.7148958Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7148963Z 
2025-02-24T15:52:32.7149055Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7149145Z Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.7149238Z Max relative difference: 15766.15804934
2025-02-24T15:52:32.7149383Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7149466Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7149606Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7149687Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7150112Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T15:52:32.7150211Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7150216Z 
2025-02-24T15:52:32.7150311Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7150402Z Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.7150497Z Max relative difference: 15766.15804934
2025-02-24T15:52:32.7150635Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7150720Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7150862Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7151069Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7151359Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 752.79s (0:12:32) =
2025-02-24T15:52:34.9385540Z ##[error]Process completed with exit code 1.
